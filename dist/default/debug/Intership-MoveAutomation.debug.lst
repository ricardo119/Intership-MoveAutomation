

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jun 18 10:43:00 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F15Q41
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,inline
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1,inline
    88                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1,inline
    89                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1,inline
   109                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,group=2
   113                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1,group=1
   122                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1,group=2
   123                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1,group=1
   124                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1,group=1
   125                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1,group=1
   126                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1,group=1
   127                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1,group=1
   128                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1,group=1
   139                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text136,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   155                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   156                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   157                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   158   000000                     
   159                           ; Generated 23/02/2024 GMT
   160                           ; 
   161                           ; Copyright © 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
   162                           ; All rights reserved.
   163                           ; 
   164                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   165                           ; 
   166                           ; Redistribution and use in source and binary forms, with or without modification, are
   167                           ; permitted provided that the following conditions are met:
   168                           ; 
   169                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   170                           ;        conditions and the following disclaimer.
   171                           ; 
   172                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   173                           ;        of conditions and the following disclaimer in the documentation and/or other
   174                           ;        materials provided with the distribution. Publication is not required when
   175                           ;        this file is used in an embedded application.
   176                           ; 
   177                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   178                           ;        software without specific prior written permission.
   179                           ; 
   180                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   181                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   182                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   183                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   184                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   185                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   186                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   187                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   188                           ; 
   189                           ; 
   190                           ; Code-generator required, PIC18F15Q41 Definitions
   191                           ; 
   192                           ; SFR Addresses
   193   0004E0                     bsr             equ	1248
   194   0004E9                     fsr0            equ	1257
   195   0004EA                     fsr0h           equ	1258
   196   0004E9                     fsr0l           equ	1257
   197   0004E1                     fsr1            equ	1249
   198   0004E2                     fsr1h           equ	1250
   199   0004E1                     fsr1l           equ	1249
   200   0004D9                     fsr2            equ	1241
   201   0004DA                     fsr2h           equ	1242
   202   0004D9                     fsr2l           equ	1241
   203   0004EF                     indf0           equ	1263
   204   0004E7                     indf1           equ	1255
   205   0004DF                     indf2           equ	1247
   206   0004D6                     intcon          equ	1238
   207   000041                     nvmcon          equ	65
   208   0004F9                     pcl             equ	1273
   209   0004FA                     pclath          equ	1274
   210   0004FB                     pclatu          equ	1275
   211   0004EB                     plusw0          equ	1259
   212   0004E3                     plusw1          equ	1251
   213   0004DB                     plusw2          equ	1243
   214   0004ED                     postdec0        equ	1261
   215   0004E5                     postdec1        equ	1253
   216   0004DD                     postdec2        equ	1245
   217   0004EE                     postinc0        equ	1262
   218   0004E6                     postinc1        equ	1254
   219   0004DE                     postinc2        equ	1246
   220   0004EC                     preinc0         equ	1260
   221   0004E4                     preinc1         equ	1252
   222   0004DC                     preinc2         equ	1244
   223   0004F3                     prod            equ	1267
   224   0004F4                     prodh           equ	1268
   225   0004F3                     prodl           equ	1267
   226   0004D8                     status          equ	1240
   227   0004F5                     tablat          equ	1269
   228   0004F6                     tblptr          equ	1270
   229   0004F7                     tblptrh         equ	1271
   230   0004F6                     tblptrl         equ	1270
   231   0004F8                     tblptru         equ	1272
   232   0004FD                     tosl            equ	1277
   233   0004E8                     wreg            equ	1256
   234   000039                     CLKRCON         equ	57	;# 
   235   00003A                     CLKRCLK         equ	58	;# 
   236   000040                     NVMCON0         equ	64	;# 
   237   000041                     NVMCON1         equ	65	;# 
   238   000042                     NVMLOCK         equ	66	;# 
   239   000043                     NVMADR          equ	67	;# 
   240   000043                     NVMADRL         equ	67	;# 
   241   000044                     NVMADRH         equ	68	;# 
   242   000045                     NVMADRU         equ	69	;# 
   243   000046                     NVMDAT          equ	70	;# 
   244   000046                     NVMDATL         equ	70	;# 
   245   000047                     NVMDATH         equ	71	;# 
   246   000048                     VREGCON         equ	72	;# 
   247   000049                     BORCON          equ	73	;# 
   248   00004A                     HLVDCON0        equ	74	;# 
   249   00004B                     HLVDCON1        equ	75	;# 
   250   00004C                     ZCDCON          equ	76	;# 
   251   000063                     PMD0            equ	99	;# 
   252   000064                     PMD1            equ	100	;# 
   253   000065                     PMD2            equ	101	;# 
   254   000066                     PMD3            equ	102	;# 
   255   000067                     PMD4            equ	103	;# 
   256   000068                     PMD5            equ	104	;# 
   257   00006A                     MD1CON0         equ	106	;# 
   258   00006B                     MD1CON1         equ	107	;# 
   259   00006C                     MD1SRC          equ	108	;# 
   260   00006D                     MD1CARL         equ	109	;# 
   261   00006E                     MD1CARH         equ	110	;# 
   262   00006F                     CMOUT           equ	111	;# 
   263   000070                     CM1CON0         equ	112	;# 
   264   000071                     CM1CON1         equ	113	;# 
   265   000072                     CM1NCH          equ	114	;# 
   266   000073                     CM1PCH          equ	115	;# 
   267   000074                     CM2CON0         equ	116	;# 
   268   000075                     CM2CON1         equ	117	;# 
   269   000076                     CM2NCH          equ	118	;# 
   270   000077                     CM2PCH          equ	119	;# 
   271   000078                     WDTCON0         equ	120	;# 
   272   000079                     WDTCON1         equ	121	;# 
   273   00007A                     WDTPS           equ	122	;# 
   274   00007A                     WDTPSL          equ	122	;# 
   275   00007B                     WDTPSH          equ	123	;# 
   276   00007C                     WDTTMR          equ	124	;# 
   277   00007D                     DAC1DAT         equ	125	;# 
   278   00007D                     DAC1DATL        equ	125	;# 
   279   00007F                     DAC1CON         equ	127	;# 
   280   000080                     SPI1RXB         equ	128	;# 
   281   000081                     SPI1TXB         equ	129	;# 
   282   000082                     SPI1TCNT        equ	130	;# 
   283   000082                     SPI1TCNTL       equ	130	;# 
   284   000083                     SPI1TCNTH       equ	131	;# 
   285   000084                     SPI1CON0        equ	132	;# 
   286   000085                     SPI1CON1        equ	133	;# 
   287   000086                     SPI1CON2        equ	134	;# 
   288   000087                     SPI1STATUS      equ	135	;# 
   289   000088                     SPI1TWIDTH      equ	136	;# 
   290   000089                     SPI1BAUD        equ	137	;# 
   291   00008A                     SPI1INTF        equ	138	;# 
   292   00008B                     SPI1INTE        equ	139	;# 
   293   00008C                     SPI1CLK         equ	140	;# 
   294   00008D                     SPI2RXB         equ	141	;# 
   295   00008E                     SPI2TXB         equ	142	;# 
   296   00008F                     SPI2TCNT        equ	143	;# 
   297   00008F                     SPI2TCNTL       equ	143	;# 
   298   000090                     SPI2TCNTH       equ	144	;# 
   299   000091                     SPI2CON0        equ	145	;# 
   300   000092                     SPI2CON1        equ	146	;# 
   301   000093                     SPI2CON2        equ	147	;# 
   302   000094                     SPI2STATUS      equ	148	;# 
   303   000095                     SPI2TWIDTH      equ	149	;# 
   304   000096                     SPI2BAUD        equ	150	;# 
   305   000097                     SPI2INTF        equ	151	;# 
   306   000098                     SPI2INTE        equ	152	;# 
   307   000099                     SPI2CLK         equ	153	;# 
   308   0000A0                     DAC2DAT         equ	160	;# 
   309   0000A0                     DAC2DATL        equ	160	;# 
   310   0000A2                     DAC2CON         equ	162	;# 
   311   0000A3                     OPA1CON0        equ	163	;# 
   312   0000A4                     OPA1CON1        equ	164	;# 
   313   0000A5                     OPA1CON2        equ	165	;# 
   314   0000A6                     OPA1CON3        equ	166	;# 
   315   0000A7                     OPA1HWC         equ	167	;# 
   316   0000A8                     OPA1OFFSET      equ	168	;# 
   317   0000A9                     OPA1ORS         equ	169	;# 
   318   0000AC                     ACTCON          equ	172	;# 
   319   0000AD                     OSCCON1         equ	173	;# 
   320   0000AE                     OSCCON2         equ	174	;# 
   321   0000AF                     OSCCON3         equ	175	;# 
   322   0000B0                     OSCTUNE         equ	176	;# 
   323   0000B1                     OSCFRQ          equ	177	;# 
   324   0000B1                     OSCFREQ         equ	177	;# 
   325   0000B2                     OSCSTAT         equ	178	;# 
   326   0000B2                     OSCSTAT1        equ	178	;# 
   327   0000B3                     OSCEN           equ	179	;# 
   328   0000B4                     PRLOCK          equ	180	;# 
   329   0000B5                     SCANPR          equ	181	;# 
   330   0000B6                     DMA1PR          equ	182	;# 
   331   0000B7                     DMA2PR          equ	183	;# 
   332   0000B8                     DMA3PR          equ	184	;# 
   333   0000B9                     DMA4PR          equ	185	;# 
   334   0000BE                     MAINPR          equ	190	;# 
   335   0000BF                     ISRPR           equ	191	;# 
   336   0000D4                     CLCDATA         equ	212	;# 
   337   0000D5                     CLCSELECT       equ	213	;# 
   338   0000D6                     CLCnCON         equ	214	;# 
   339   0000D7                     CLCnPOL         equ	215	;# 
   340   0000D8                     CLCnSEL0        equ	216	;# 
   341   0000D9                     CLCnSEL1        equ	217	;# 
   342   0000DA                     CLCnSEL2        equ	218	;# 
   343   0000DB                     CLCnSEL3        equ	219	;# 
   344   0000DC                     CLCnGLS0        equ	220	;# 
   345   0000DD                     CLCnGLS1        equ	221	;# 
   346   0000DE                     CLCnGLS2        equ	222	;# 
   347   0000DF                     CLCnGLS3        equ	223	;# 
   348   0000E8                     DMASELECT       equ	232	;# 
   349   0000E9                     DMAnBUF         equ	233	;# 
   350   0000EA                     DMAnDCNT        equ	234	;# 
   351   0000EA                     DMAnDCNTL       equ	234	;# 
   352   0000EB                     DMAnDCNTH       equ	235	;# 
   353   0000EC                     DMAnDPTR        equ	236	;# 
   354   0000EC                     DMAnDPTRL       equ	236	;# 
   355   0000ED                     DMAnDPTRH       equ	237	;# 
   356   0000EE                     DMAnDSZ         equ	238	;# 
   357   0000EE                     DMAnDSZL        equ	238	;# 
   358   0000EF                     DMAnDSZH        equ	239	;# 
   359   0000F0                     DMAnDSA         equ	240	;# 
   360   0000F0                     DMAnDSAL        equ	240	;# 
   361   0000F1                     DMAnDSAH        equ	241	;# 
   362   0000F2                     DMAnSCNT        equ	242	;# 
   363   0000F2                     DMAnSCNTL       equ	242	;# 
   364   0000F3                     DMAnSCNTH       equ	243	;# 
   365   0000F4                     DMAnSPTR        equ	244	;# 
   366   0000F4                     DMAnSPTRL       equ	244	;# 
   367   0000F5                     DMAnSPTRH       equ	245	;# 
   368   0000F6                     DMAnSPTRU       equ	246	;# 
   369   0000F7                     DMAnSSZ         equ	247	;# 
   370   0000F7                     DMAnSSZL        equ	247	;# 
   371   0000F8                     DMAnSSZH        equ	248	;# 
   372   0000F9                     DMAnSSA         equ	249	;# 
   373   0000F9                     DMAnSSAL        equ	249	;# 
   374   0000FA                     DMAnSSAH        equ	250	;# 
   375   0000FB                     DMAnSSAU        equ	251	;# 
   376   0000FC                     DMAnCON0        equ	252	;# 
   377   0000FD                     DMAnCON1        equ	253	;# 
   378   0000FE                     DMAnAIRQ        equ	254	;# 
   379   0000FF                     DMAnSIRQ        equ	255	;# 
   380   000200                     PPSLOCK         equ	512	;# 
   381   000201                     RA0PPS          equ	513	;# 
   382   000202                     RA1PPS          equ	514	;# 
   383   000203                     RA2PPS          equ	515	;# 
   384   000205                     RA4PPS          equ	517	;# 
   385   000206                     RA5PPS          equ	518	;# 
   386   00020D                     RB4PPS          equ	525	;# 
   387   00020E                     RB5PPS          equ	526	;# 
   388   00020F                     RB6PPS          equ	527	;# 
   389   000210                     RB7PPS          equ	528	;# 
   390   000211                     RC0PPS          equ	529	;# 
   391   000212                     RC1PPS          equ	530	;# 
   392   000213                     RC2PPS          equ	531	;# 
   393   000214                     RC3PPS          equ	532	;# 
   394   000215                     RC4PPS          equ	533	;# 
   395   000216                     RC5PPS          equ	534	;# 
   396   000217                     RC6PPS          equ	535	;# 
   397   000218                     RC7PPS          equ	536	;# 
   398   00023E                     INT0PPS         equ	574	;# 
   399   00023F                     INT1PPS         equ	575	;# 
   400   000240                     INT2PPS         equ	576	;# 
   401   000241                     T0CKIPPS        equ	577	;# 
   402   000242                     T1CKIPPS        equ	578	;# 
   403   000243                     T1GPPS          equ	579	;# 
   404   000244                     T3CKIPPS        equ	580	;# 
   405   000245                     T3GPPS          equ	581	;# 
   406   000248                     T2INPPS         equ	584	;# 
   407   000249                     T4INPPS         equ	585	;# 
   408   00024F                     CCP1PPS         equ	591	;# 
   409   000251                     PWM1ERSPPS      equ	593	;# 
   410   000252                     PWM2ERSPPS      equ	594	;# 
   411   000253                     PWM3ERSPPS      equ	595	;# 
   412   000257                     PWMIN0PPS       equ	599	;# 
   413   000258                     PWMIN1PPS       equ	600	;# 
   414   000259                     SMT1WINPPS      equ	601	;# 
   415   00025A                     SMT1SIGPPS      equ	602	;# 
   416   00025B                     CWG1PPS         equ	603	;# 
   417   00025B                     CWG1INPPS       equ	603	;# 
   418   00025E                     MD1CARLPPS      equ	606	;# 
   419   00025E                     MDCARLPPS       equ	606	;# 
   420   00025F                     MD1CARHPPS      equ	607	;# 
   421   00025F                     MDCARHPPS       equ	607	;# 
   422   000260                     MD1SRCPPS       equ	608	;# 
   423   000260                     MDSRCPPS        equ	608	;# 
   424   000261                     CLCIN0PPS       equ	609	;# 
   425   000262                     CLCIN1PPS       equ	610	;# 
   426   000263                     CLCIN2PPS       equ	611	;# 
   427   000264                     CLCIN3PPS       equ	612	;# 
   428   000269                     ADACTPPS        equ	617	;# 
   429   00026A                     SPI1SCKPPS      equ	618	;# 
   430   00026B                     SPI1SDIPPS      equ	619	;# 
   431   00026C                     SPI1SSPPS       equ	620	;# 
   432   00026D                     SPI2SCKPPS      equ	621	;# 
   433   00026E                     SPI2SDIPPS      equ	622	;# 
   434   00026F                     SPI2SSPPS       equ	623	;# 
   435   000270                     I2C1SDAPPS      equ	624	;# 
   436   000271                     I2C1SCLPPS      equ	625	;# 
   437   000272                     U1RXPPS         equ	626	;# 
   438   000273                     U1CTSPPS        equ	627	;# 
   439   000274                     U2RXPPS         equ	628	;# 
   440   000275                     U2CTSPPS        equ	629	;# 
   441   000276                     U3RXPPS         equ	630	;# 
   442   000277                     U3CTSPPS        equ	631	;# 
   443   000286                     RB6I2C          equ	646	;# 
   444   000287                     RB4I2C          equ	647	;# 
   445   00028A                     I2C1RXB         equ	650	;# 
   446   00028B                     I2C1TXB         equ	651	;# 
   447   00028C                     I2C1CNTL        equ	652	;# 
   448   00028D                     I2C1CNTH        equ	653	;# 
   449   00028E                     I2C1ADB0        equ	654	;# 
   450   00028F                     I2C1ADB1        equ	655	;# 
   451   000290                     I2C1ADR0        equ	656	;# 
   452   000291                     I2C1ADR1        equ	657	;# 
   453   000292                     I2C1ADR2        equ	658	;# 
   454   000293                     I2C1ADR3        equ	659	;# 
   455   000294                     I2C1CON0        equ	660	;# 
   456   000295                     I2C1CON1        equ	661	;# 
   457   000296                     I2C1CON2        equ	662	;# 
   458   000297                     I2C1ERR         equ	663	;# 
   459   000298                     I2C1STAT0       equ	664	;# 
   460   000299                     I2C1STAT1       equ	665	;# 
   461   00029A                     I2C1PIR         equ	666	;# 
   462   00029B                     I2C1PIE         equ	667	;# 
   463   00029C                     I2C1BTO         equ	668	;# 
   464   00029D                     I2C1BAUD        equ	669	;# 
   465   00029E                     I2C1CLK         equ	670	;# 
   466   00029F                     I2C1BTOC        equ	671	;# 
   467   0002A1                     U1RXB           equ	673	;# 
   468   0002A1                     U1RXBL          equ	673	;# 
   469   0002A2                     U1RXCHK         equ	674	;# 
   470   0002A3                     U1TXB           equ	675	;# 
   471   0002A3                     U1TXBL          equ	675	;# 
   472   0002A4                     U1TXCHK         equ	676	;# 
   473   0002A5                     U1P1            equ	677	;# 
   474   0002A5                     U1P1L           equ	677	;# 
   475   0002A6                     U1P1H           equ	678	;# 
   476   0002A7                     U1P2            equ	679	;# 
   477   0002A7                     U1P2L           equ	679	;# 
   478   0002A8                     U1P2H           equ	680	;# 
   479   0002A9                     U1P3            equ	681	;# 
   480   0002A9                     U1P3L           equ	681	;# 
   481   0002AA                     U1P3H           equ	682	;# 
   482   0002AB                     U1CON0          equ	683	;# 
   483   0002AC                     U1CON1          equ	684	;# 
   484   0002AD                     U1CON2          equ	685	;# 
   485   0002AE                     U1BRG           equ	686	;# 
   486   0002AE                     U1BRGL          equ	686	;# 
   487   0002AF                     U1BRGH          equ	687	;# 
   488   0002B0                     U1FIFO          equ	688	;# 
   489   0002B1                     U1UIR           equ	689	;# 
   490   0002B2                     U1ERRIR         equ	690	;# 
   491   0002B3                     U1ERRIE         equ	691	;# 
   492   0002B4                     U2RXB           equ	692	;# 
   493   0002B4                     U2RXBL          equ	692	;# 
   494   0002B6                     U2TXB           equ	694	;# 
   495   0002B6                     U2TXBL          equ	694	;# 
   496   0002B8                     U2P1            equ	696	;# 
   497   0002B8                     U2P1L           equ	696	;# 
   498   0002BA                     U2P2            equ	698	;# 
   499   0002BA                     U2P2L           equ	698	;# 
   500   0002BC                     U2P3            equ	700	;# 
   501   0002BC                     U2P3L           equ	700	;# 
   502   0002BE                     U2CON0          equ	702	;# 
   503   0002BF                     U2CON1          equ	703	;# 
   504   0002C0                     U2CON2          equ	704	;# 
   505   0002C1                     U2BRG           equ	705	;# 
   506   0002C1                     U2BRGL          equ	705	;# 
   507   0002C2                     U2BRGH          equ	706	;# 
   508   0002C3                     U2FIFO          equ	707	;# 
   509   0002C4                     U2UIR           equ	708	;# 
   510   0002C5                     U2ERRIR         equ	709	;# 
   511   0002C6                     U2ERRIE         equ	710	;# 
   512   0002C7                     U3RXB           equ	711	;# 
   513   0002C7                     U3RXBL          equ	711	;# 
   514   0002C9                     U3TXB           equ	713	;# 
   515   0002C9                     U3TXBL          equ	713	;# 
   516   0002CB                     U3P1            equ	715	;# 
   517   0002CB                     U3P1L           equ	715	;# 
   518   0002CD                     U3P2            equ	717	;# 
   519   0002CD                     U3P2L           equ	717	;# 
   520   0002CF                     U3P3            equ	719	;# 
   521   0002CF                     U3P3L           equ	719	;# 
   522   0002D1                     U3CON0          equ	721	;# 
   523   0002D2                     U3CON1          equ	722	;# 
   524   0002D3                     U3CON2          equ	723	;# 
   525   0002D4                     U3BRG           equ	724	;# 
   526   0002D4                     U3BRGL          equ	724	;# 
   527   0002D5                     U3BRGH          equ	725	;# 
   528   0002D6                     U3FIFO          equ	726	;# 
   529   0002D7                     U3UIR           equ	727	;# 
   530   0002D8                     U3ERRIR         equ	728	;# 
   531   0002D9                     U3ERRIE         equ	729	;# 
   532   000300                     SMT1TMR         equ	768	;# 
   533   000300                     SMT1TMRL        equ	768	;# 
   534   000301                     SMT1TMRH        equ	769	;# 
   535   000302                     SMT1TMRU        equ	770	;# 
   536   000303                     SMT1CPR         equ	771	;# 
   537   000303                     SMT1CPRL        equ	771	;# 
   538   000304                     SMT1CPRH        equ	772	;# 
   539   000305                     SMT1CPRU        equ	773	;# 
   540   000306                     SMT1CPW         equ	774	;# 
   541   000306                     SMT1CPWL        equ	774	;# 
   542   000307                     SMT1CPWH        equ	775	;# 
   543   000308                     SMT1CPWU        equ	776	;# 
   544   000309                     SMT1PR          equ	777	;# 
   545   000309                     SMT1PRL         equ	777	;# 
   546   00030A                     SMT1PRH         equ	778	;# 
   547   00030B                     SMT1PRU         equ	779	;# 
   548   00030C                     SMT1CON0        equ	780	;# 
   549   00030D                     SMT1CON1        equ	781	;# 
   550   00030E                     SMT1STAT        equ	782	;# 
   551   00030F                     SMT1CLK         equ	783	;# 
   552   000310                     SMT1SIG         equ	784	;# 
   553   000311                     SMT1WIN         equ	785	;# 
   554   000312                     TMR1            equ	786	;# 
   555   000312                     TMR1L           equ	786	;# 
   556   000313                     TMR1H           equ	787	;# 
   557   000314                     T1CON           equ	788	;# 
   558   000314                     TMR1CON         equ	788	;# 
   559   000315                     T1GCON          equ	789	;# 
   560   000315                     TMR1GCON        equ	789	;# 
   561   000316                     T1GATE          equ	790	;# 
   562   000316                     TMR1GATE        equ	790	;# 
   563   000317                     T1CLK           equ	791	;# 
   564   000317                     TMR1CLK         equ	791	;# 
   565   000317                     PR1             equ	791	;# 
   566   000318                     TMR0L           equ	792	;# 
   567   000318                     TMR0            equ	792	;# 
   568   000319                     TMR0H           equ	793	;# 
   569   000319                     PR0             equ	793	;# 
   570   00031A                     T0CON0          equ	794	;# 
   571   00031B                     T0CON1          equ	795	;# 
   572   00031C                     T2TMR           equ	796	;# 
   573   00031C                     TMR2            equ	796	;# 
   574   00031D                     T2PR            equ	797	;# 
   575   00031D                     PR2             equ	797	;# 
   576   00031E                     T2CON           equ	798	;# 
   577   00031F                     T2HLT           equ	799	;# 
   578   000320                     T2CLKCON        equ	800	;# 
   579   000320                     T2CLK           equ	800	;# 
   580   000321                     T2RST           equ	801	;# 
   581   000323                     TMR3            equ	803	;# 
   582   000323                     TMR3L           equ	803	;# 
   583   000324                     TMR3H           equ	804	;# 
   584   000325                     T3CON           equ	805	;# 
   585   000325                     TMR3CON         equ	805	;# 
   586   000326                     T3GCON          equ	806	;# 
   587   000326                     TMR3GCON        equ	806	;# 
   588   000327                     T3GATE          equ	807	;# 
   589   000327                     TMR3GATE        equ	807	;# 
   590   000328                     T3CLK           equ	808	;# 
   591   000328                     TMR3CLK         equ	808	;# 
   592   000328                     PR3             equ	808	;# 
   593   000329                     T4TMR           equ	809	;# 
   594   000329                     TMR4            equ	809	;# 
   595   00032A                     T4PR            equ	810	;# 
   596   00032A                     PR4             equ	810	;# 
   597   00032B                     T4CON           equ	811	;# 
   598   00032C                     T4HLT           equ	812	;# 
   599   00032D                     T4CLKCON        equ	813	;# 
   600   00032D                     T4CLK           equ	813	;# 
   601   00032E                     T4RST           equ	814	;# 
   602   000340                     CCPR1           equ	832	;# 
   603   000340                     CCPR1L          equ	832	;# 
   604   000341                     CCPR1H          equ	833	;# 
   605   000342                     CCP1CON         equ	834	;# 
   606   000343                     CCP1CAP         equ	835	;# 
   607   00034C                     CCPTMRS0        equ	844	;# 
   608   00034E                     CRCDATA         equ	846	;# 
   609   00034E                     CRCDATAL        equ	846	;# 
   610   00034F                     CRCDATAH        equ	847	;# 
   611   000350                     CRCDATAU        equ	848	;# 
   612   000351                     CRCDATAT        equ	849	;# 
   613   000352                     CRCOUT          equ	850	;# 
   614   000352                     CRCSHFT         equ	850	;# 
   615   000352                     CRCXOR          equ	850	;# 
   616   000352                     CRCOUTL         equ	850	;# 
   617   000352                     CRCSHFTL        equ	850	;# 
   618   000352                     CRCSHIFTL       equ	850	;# 
   619   000352                     CRCXORL         equ	850	;# 
   620   000353                     CRCOUTH         equ	851	;# 
   621   000353                     CRCSHFTH        equ	851	;# 
   622   000353                     CRCSHIFTH       equ	851	;# 
   623   000353                     CRCXORH         equ	851	;# 
   624   000354                     CRCOUTU         equ	852	;# 
   625   000354                     CRCSHFTU        equ	852	;# 
   626   000354                     CRCSHIFTU       equ	852	;# 
   627   000354                     CRCXORU         equ	852	;# 
   628   000355                     CRCOUTT         equ	853	;# 
   629   000355                     CRCSHFTT        equ	853	;# 
   630   000355                     CRCSHIFTT       equ	853	;# 
   631   000355                     CRCXORT         equ	853	;# 
   632   000356                     CRCCON0         equ	854	;# 
   633   000357                     CRCCON1         equ	855	;# 
   634   000358                     CRCCON2         equ	856	;# 
   635   00035A                     SCANLADR        equ	858	;# 
   636   00035A                     SCANLADRL       equ	858	;# 
   637   00035B                     SCANLADRH       equ	859	;# 
   638   00035C                     SCANLADRU       equ	860	;# 
   639   00035D                     SCANHADR        equ	861	;# 
   640   00035D                     SCANHADRL       equ	861	;# 
   641   00035E                     SCANHADRH       equ	862	;# 
   642   00035F                     SCANHADRU       equ	863	;# 
   643   000360                     SCANCON0        equ	864	;# 
   644   000361                     SCANTRIG        equ	865	;# 
   645   000367                     IPR0            equ	871	;# 
   646   000368                     IPR1            equ	872	;# 
   647   000369                     IPR2            equ	873	;# 
   648   00036A                     IPR3            equ	874	;# 
   649   00036B                     IPR4            equ	875	;# 
   650   00036C                     IPR5            equ	876	;# 
   651   00036D                     IPR6            equ	877	;# 
   652   00036E                     IPR7            equ	878	;# 
   653   00036F                     IPR8            equ	879	;# 
   654   000370                     IPR9            equ	880	;# 
   655   000371                     IPR10           equ	881	;# 
   656   000373                     STATUS_CSHAD    equ	883	;# 
   657   000374                     WREG_CSHAD      equ	884	;# 
   658   000375                     BSR_CSHAD       equ	885	;# 
   659   000376                     SHADCON         equ	886	;# 
   660   000377                     STATUS_SHAD     equ	887	;# 
   661   000378                     WREG_SHAD       equ	888	;# 
   662   000379                     BSR_SHAD        equ	889	;# 
   663   00037A                     PCLATH_SHAD     equ	890	;# 
   664   00037B                     PCLATU_SHAD     equ	891	;# 
   665   00037C                     FSR0SH          equ	892	;# 
   666   00037C                     FSR0L_SHAD      equ	892	;# 
   667   00037D                     FSR0H_SHAD      equ	893	;# 
   668   00037E                     FSR1SH          equ	894	;# 
   669   00037E                     FSR1L_SHAD      equ	894	;# 
   670   00037F                     FSR1H_SHAD      equ	895	;# 
   671   000380                     FSR2SH          equ	896	;# 
   672   000380                     FSR2L_SHAD      equ	896	;# 
   673   000381                     FSR2H_SHAD      equ	897	;# 
   674   000382                     PRODSH          equ	898	;# 
   675   000382                     PRODL_SHAD      equ	898	;# 
   676   000383                     PRODH_SHAD      equ	899	;# 
   677   0003BC                     CWG1CLK         equ	956	;# 
   678   0003BC                     CWG1CLKCON      equ	956	;# 
   679   0003BD                     CWG1ISM         equ	957	;# 
   680   0003BD                     CWG1DAT         equ	957	;# 
   681   0003BE                     CWG1DBR         equ	958	;# 
   682   0003BF                     CWG1DBF         equ	959	;# 
   683   0003C0                     CWG1CON0        equ	960	;# 
   684   0003C1                     CWG1CON1        equ	961	;# 
   685   0003C2                     CWG1AS0         equ	962	;# 
   686   0003C3                     CWG1AS1         equ	963	;# 
   687   0003C4                     CWG1STR         equ	964	;# 
   688   0003D7                     FVRCON          equ	983	;# 
   689   0003D8                     ADCPCON         equ	984	;# 
   690   0003D8                     ADCP            equ	984	;# 
   691   0003D9                     ADLTH           equ	985	;# 
   692   0003D9                     ADLTHL          equ	985	;# 
   693   0003DA                     ADLTHH          equ	986	;# 
   694   0003DB                     ADUTH           equ	987	;# 
   695   0003DB                     ADUTHL          equ	987	;# 
   696   0003DC                     ADUTHH          equ	988	;# 
   697   0003DD                     ADERR           equ	989	;# 
   698   0003DD                     ADERRL          equ	989	;# 
   699   0003DE                     ADERRH          equ	990	;# 
   700   0003DF                     ADSTPT          equ	991	;# 
   701   0003DF                     ADSTPTL         equ	991	;# 
   702   0003E0                     ADSTPTH         equ	992	;# 
   703   0003E1                     ADFLTR          equ	993	;# 
   704   0003E1                     ADFLTRL         equ	993	;# 
   705   0003E2                     ADFLTRH         equ	994	;# 
   706   0003E3                     ADACC           equ	995	;# 
   707   0003E3                     ADACCL          equ	995	;# 
   708   0003E4                     ADACCH          equ	996	;# 
   709   0003E5                     ADACCU          equ	997	;# 
   710   0003E6                     ADCNT           equ	998	;# 
   711   0003E7                     ADRPT           equ	999	;# 
   712   0003E8                     ADPREV          equ	1000	;# 
   713   0003E8                     ADPREVL         equ	1000	;# 
   714   0003E9                     ADPREVH         equ	1001	;# 
   715   0003EA                     ADRES           equ	1002	;# 
   716   0003EA                     ADRESL          equ	1002	;# 
   717   0003EB                     ADRESH          equ	1003	;# 
   718   0003EC                     ADPCH           equ	1004	;# 
   719   0003EE                     ADACQ           equ	1006	;# 
   720   0003EE                     ADACQL          equ	1006	;# 
   721   0003EF                     ADACQH          equ	1007	;# 
   722   0003F0                     ADCAP           equ	1008	;# 
   723   0003F1                     ADPRE           equ	1009	;# 
   724   0003F1                     ADPREL          equ	1009	;# 
   725   0003F2                     ADPREH          equ	1010	;# 
   726   0003F3                     ADCON0          equ	1011	;# 
   727   0003F4                     ADCON1          equ	1012	;# 
   728   0003F5                     ADCON2          equ	1013	;# 
   729   0003F6                     ADCON3          equ	1014	;# 
   730   0003F7                     ADSTAT          equ	1015	;# 
   731   0003F8                     ADREF           equ	1016	;# 
   732   0003F9                     ADACT           equ	1017	;# 
   733   0003FA                     ADCLK           equ	1018	;# 
   734   000400                     ANSELA          equ	1024	;# 
   735   000401                     WPUA            equ	1025	;# 
   736   000402                     ODCONA          equ	1026	;# 
   737   000403                     SLRCONA         equ	1027	;# 
   738   000404                     INLVLA          equ	1028	;# 
   739   000405                     IOCAP           equ	1029	;# 
   740   000406                     IOCAN           equ	1030	;# 
   741   000407                     IOCAF           equ	1031	;# 
   742   000408                     ANSELB          equ	1032	;# 
   743   000409                     WPUB            equ	1033	;# 
   744   00040A                     ODCONB          equ	1034	;# 
   745   00040B                     SLRCONB         equ	1035	;# 
   746   00040C                     INLVLB          equ	1036	;# 
   747   00040D                     IOCBP           equ	1037	;# 
   748   00040E                     IOCBN           equ	1038	;# 
   749   00040F                     IOCBF           equ	1039	;# 
   750   000410                     ANSELC          equ	1040	;# 
   751   000411                     WPUC            equ	1041	;# 
   752   000412                     ODCONC          equ	1042	;# 
   753   000413                     SLRCONC         equ	1043	;# 
   754   000414                     INLVLC          equ	1044	;# 
   755   000415                     IOCCP           equ	1045	;# 
   756   000416                     IOCCN           equ	1046	;# 
   757   000417                     IOCCF           equ	1047	;# 
   758   000440                     NCO1ACC         equ	1088	;# 
   759   000440                     NCO1ACCL        equ	1088	;# 
   760   000441                     NCO1ACCH        equ	1089	;# 
   761   000442                     NCO1ACCU        equ	1090	;# 
   762   000443                     NCO1INC         equ	1091	;# 
   763   000443                     NCO1INCL        equ	1091	;# 
   764   000444                     NCO1INCH        equ	1092	;# 
   765   000445                     NCO1INCU        equ	1093	;# 
   766   000446                     NCO1CON         equ	1094	;# 
   767   000447                     NCO1CLK         equ	1095	;# 
   768   000458                     FSCMCON         equ	1112	;# 
   769   000459                     IVTLOCK         equ	1113	;# 
   770   00045A                     IVTAD           equ	1114	;# 
   771   00045A                     IVTADL          equ	1114	;# 
   772   00045B                     IVTADH          equ	1115	;# 
   773   00045C                     IVTADU          equ	1116	;# 
   774   00045D                     IVTBASE         equ	1117	;# 
   775   00045D                     IVTBASEL        equ	1117	;# 
   776   00045E                     IVTBASEH        equ	1118	;# 
   777   00045F                     IVTBASEU        equ	1119	;# 
   778   000460                     PWM1ERS         equ	1120	;# 
   779   000461                     PWM1CLK         equ	1121	;# 
   780   000462                     PWM1LDS         equ	1122	;# 
   781   000463                     PWM1PR          equ	1123	;# 
   782   000463                     PWM1PRL         equ	1123	;# 
   783   000464                     PWM1PRH         equ	1124	;# 
   784   000465                     PWM1CPRE        equ	1125	;# 
   785   000466                     PWM1PIPOS       equ	1126	;# 
   786   000467                     PWM1GIR         equ	1127	;# 
   787   000468                     PWM1GIE         equ	1128	;# 
   788   000469                     PWM1CON         equ	1129	;# 
   789   00046A                     PWM1S1CFG       equ	1130	;# 
   790   00046B                     PWM1S1P1        equ	1131	;# 
   791   00046B                     PWM1S1P1L       equ	1131	;# 
   792   00046C                     PWM1S1P1H       equ	1132	;# 
   793   00046D                     PWM1S1P2        equ	1133	;# 
   794   00046D                     PWM1S1P2L       equ	1133	;# 
   795   00046E                     PWM1S1P2H       equ	1134	;# 
   796   00046F                     PWM2ERS         equ	1135	;# 
   797   000470                     PWM2CLK         equ	1136	;# 
   798   000471                     PWM2LDS         equ	1137	;# 
   799   000472                     PWM2PR          equ	1138	;# 
   800   000472                     PWM2PRL         equ	1138	;# 
   801   000473                     PWM2PRH         equ	1139	;# 
   802   000474                     PWM2CPRE        equ	1140	;# 
   803   000475                     PWM2PIPOS       equ	1141	;# 
   804   000476                     PWM2GIR         equ	1142	;# 
   805   000477                     PWM2GIE         equ	1143	;# 
   806   000478                     PWM2CON         equ	1144	;# 
   807   000479                     PWM2S1CFG       equ	1145	;# 
   808   00047A                     PWM2S1P1        equ	1146	;# 
   809   00047A                     PWM2S1P1L       equ	1146	;# 
   810   00047B                     PWM2S1P1H       equ	1147	;# 
   811   00047C                     PWM2S1P2        equ	1148	;# 
   812   00047C                     PWM2S1P2L       equ	1148	;# 
   813   00047D                     PWM2S1P2H       equ	1149	;# 
   814   00047E                     PWM3ERS         equ	1150	;# 
   815   00047F                     PWM3CLK         equ	1151	;# 
   816   000480                     PWM3LDS         equ	1152	;# 
   817   000481                     PWM3PR          equ	1153	;# 
   818   000481                     PWM3PRL         equ	1153	;# 
   819   000482                     PWM3PRH         equ	1154	;# 
   820   000483                     PWM3CPRE        equ	1155	;# 
   821   000484                     PWM3PIPOS       equ	1156	;# 
   822   000485                     PWM3GIR         equ	1157	;# 
   823   000486                     PWM3GIE         equ	1158	;# 
   824   000487                     PWM3CON         equ	1159	;# 
   825   000488                     PWM3S1CFG       equ	1160	;# 
   826   000489                     PWM3S1P1        equ	1161	;# 
   827   000489                     PWM3S1P1L       equ	1161	;# 
   828   00048A                     PWM3S1P1H       equ	1162	;# 
   829   00048B                     PWM3S1P2        equ	1163	;# 
   830   00048B                     PWM3S1P2L       equ	1163	;# 
   831   00048C                     PWM3S1P2H       equ	1164	;# 
   832   00049C                     PWMLOAD         equ	1180	;# 
   833   00049D                     PWMEN           equ	1181	;# 
   834   0004A8                     PIE0            equ	1192	;# 
   835   0004A9                     PIE1            equ	1193	;# 
   836   0004AA                     PIE2            equ	1194	;# 
   837   0004AB                     PIE3            equ	1195	;# 
   838   0004AC                     PIE4            equ	1196	;# 
   839   0004AD                     PIE5            equ	1197	;# 
   840   0004AE                     PIE6            equ	1198	;# 
   841   0004AF                     PIE7            equ	1199	;# 
   842   0004B0                     PIE8            equ	1200	;# 
   843   0004B1                     PIE9            equ	1201	;# 
   844   0004B2                     PIE10           equ	1202	;# 
   845   0004B3                     PIR0            equ	1203	;# 
   846   0004B4                     PIR1            equ	1204	;# 
   847   0004B5                     PIR2            equ	1205	;# 
   848   0004B6                     PIR3            equ	1206	;# 
   849   0004B7                     PIR4            equ	1207	;# 
   850   0004B8                     PIR5            equ	1208	;# 
   851   0004B9                     PIR6            equ	1209	;# 
   852   0004BA                     PIR7            equ	1210	;# 
   853   0004BB                     PIR8            equ	1211	;# 
   854   0004BC                     PIR9            equ	1212	;# 
   855   0004BD                     PIR10           equ	1213	;# 
   856   0004BE                     LATA            equ	1214	;# 
   857   0004BF                     LATB            equ	1215	;# 
   858   0004C0                     LATC            equ	1216	;# 
   859   0004C6                     TRISA           equ	1222	;# 
   860   0004C7                     TRISB           equ	1223	;# 
   861   0004C8                     TRISC           equ	1224	;# 
   862   0004CE                     PORTA           equ	1230	;# 
   863   0004CF                     PORTB           equ	1231	;# 
   864   0004D0                     PORTC           equ	1232	;# 
   865   0004D6                     INTCON0         equ	1238	;# 
   866   0004D7                     INTCON1         equ	1239	;# 
   867   0004D8                     STATUS          equ	1240	;# 
   868   0004D9                     FSR2            equ	1241	;# 
   869   0004D9                     FSR2L           equ	1241	;# 
   870   0004DA                     FSR2H           equ	1242	;# 
   871   0004DB                     PLUSW2          equ	1243	;# 
   872   0004DC                     PREINC2         equ	1244	;# 
   873   0004DD                     POSTDEC2        equ	1245	;# 
   874   0004DE                     POSTINC2        equ	1246	;# 
   875   0004DF                     INDF2           equ	1247	;# 
   876   0004E0                     BSR             equ	1248	;# 
   877   0004E1                     FSR1            equ	1249	;# 
   878   0004E1                     FSR1L           equ	1249	;# 
   879   0004E2                     FSR1H           equ	1250	;# 
   880   0004E3                     PLUSW1          equ	1251	;# 
   881   0004E4                     PREINC1         equ	1252	;# 
   882   0004E5                     POSTDEC1        equ	1253	;# 
   883   0004E6                     POSTINC1        equ	1254	;# 
   884   0004E7                     INDF1           equ	1255	;# 
   885   0004E8                     WREG            equ	1256	;# 
   886   0004E9                     FSR0            equ	1257	;# 
   887   0004E9                     FSR0L           equ	1257	;# 
   888   0004EA                     FSR0H           equ	1258	;# 
   889   0004EB                     PLUSW0          equ	1259	;# 
   890   0004EC                     PREINC0         equ	1260	;# 
   891   0004ED                     POSTDEC0        equ	1261	;# 
   892   0004EE                     POSTINC0        equ	1262	;# 
   893   0004EF                     INDF0           equ	1263	;# 
   894   0004F0                     PCON0           equ	1264	;# 
   895   0004F1                     PCON1           equ	1265	;# 
   896   0004F2                     CPUDOZE         equ	1266	;# 
   897   0004F3                     PROD            equ	1267	;# 
   898   0004F3                     PRODL           equ	1267	;# 
   899   0004F4                     PRODH           equ	1268	;# 
   900   0004F5                     TABLAT          equ	1269	;# 
   901   0004F6                     TBLPTR          equ	1270	;# 
   902   0004F6                     TBLPTRL         equ	1270	;# 
   903   0004F7                     TBLPTRH         equ	1271	;# 
   904   0004F8                     TBLPTRU         equ	1272	;# 
   905   0004F9                     PCLAT           equ	1273	;# 
   906   0004F9                     PCL             equ	1273	;# 
   907   0004FA                     PCLATH          equ	1274	;# 
   908   0004FB                     PCLATU          equ	1275	;# 
   909   0004FC                     STKPTR          equ	1276	;# 
   910   0004FD                     TOS             equ	1277	;# 
   911   0004FD                     TOSL            equ	1277	;# 
   912   0004FE                     TOSH            equ	1278	;# 
   913   0004FF                     TOSU            equ	1279	;# 
   914   000039                     CLKRCON         equ	57	;# 
   915   00003A                     CLKRCLK         equ	58	;# 
   916   000040                     NVMCON0         equ	64	;# 
   917   000041                     NVMCON1         equ	65	;# 
   918   000042                     NVMLOCK         equ	66	;# 
   919   000043                     NVMADR          equ	67	;# 
   920   000043                     NVMADRL         equ	67	;# 
   921   000044                     NVMADRH         equ	68	;# 
   922   000045                     NVMADRU         equ	69	;# 
   923   000046                     NVMDAT          equ	70	;# 
   924   000046                     NVMDATL         equ	70	;# 
   925   000047                     NVMDATH         equ	71	;# 
   926   000048                     VREGCON         equ	72	;# 
   927   000049                     BORCON          equ	73	;# 
   928   00004A                     HLVDCON0        equ	74	;# 
   929   00004B                     HLVDCON1        equ	75	;# 
   930   00004C                     ZCDCON          equ	76	;# 
   931   000063                     PMD0            equ	99	;# 
   932   000064                     PMD1            equ	100	;# 
   933   000065                     PMD2            equ	101	;# 
   934   000066                     PMD3            equ	102	;# 
   935   000067                     PMD4            equ	103	;# 
   936   000068                     PMD5            equ	104	;# 
   937   00006A                     MD1CON0         equ	106	;# 
   938   00006B                     MD1CON1         equ	107	;# 
   939   00006C                     MD1SRC          equ	108	;# 
   940   00006D                     MD1CARL         equ	109	;# 
   941   00006E                     MD1CARH         equ	110	;# 
   942   00006F                     CMOUT           equ	111	;# 
   943   000070                     CM1CON0         equ	112	;# 
   944   000071                     CM1CON1         equ	113	;# 
   945   000072                     CM1NCH          equ	114	;# 
   946   000073                     CM1PCH          equ	115	;# 
   947   000074                     CM2CON0         equ	116	;# 
   948   000075                     CM2CON1         equ	117	;# 
   949   000076                     CM2NCH          equ	118	;# 
   950   000077                     CM2PCH          equ	119	;# 
   951   000078                     WDTCON0         equ	120	;# 
   952   000079                     WDTCON1         equ	121	;# 
   953   00007A                     WDTPS           equ	122	;# 
   954   00007A                     WDTPSL          equ	122	;# 
   955   00007B                     WDTPSH          equ	123	;# 
   956   00007C                     WDTTMR          equ	124	;# 
   957   00007D                     DAC1DAT         equ	125	;# 
   958   00007D                     DAC1DATL        equ	125	;# 
   959   00007F                     DAC1CON         equ	127	;# 
   960   000080                     SPI1RXB         equ	128	;# 
   961   000081                     SPI1TXB         equ	129	;# 
   962   000082                     SPI1TCNT        equ	130	;# 
   963   000082                     SPI1TCNTL       equ	130	;# 
   964   000083                     SPI1TCNTH       equ	131	;# 
   965   000084                     SPI1CON0        equ	132	;# 
   966   000085                     SPI1CON1        equ	133	;# 
   967   000086                     SPI1CON2        equ	134	;# 
   968   000087                     SPI1STATUS      equ	135	;# 
   969   000088                     SPI1TWIDTH      equ	136	;# 
   970   000089                     SPI1BAUD        equ	137	;# 
   971   00008A                     SPI1INTF        equ	138	;# 
   972   00008B                     SPI1INTE        equ	139	;# 
   973   00008C                     SPI1CLK         equ	140	;# 
   974   00008D                     SPI2RXB         equ	141	;# 
   975   00008E                     SPI2TXB         equ	142	;# 
   976   00008F                     SPI2TCNT        equ	143	;# 
   977   00008F                     SPI2TCNTL       equ	143	;# 
   978   000090                     SPI2TCNTH       equ	144	;# 
   979   000091                     SPI2CON0        equ	145	;# 
   980   000092                     SPI2CON1        equ	146	;# 
   981   000093                     SPI2CON2        equ	147	;# 
   982   000094                     SPI2STATUS      equ	148	;# 
   983   000095                     SPI2TWIDTH      equ	149	;# 
   984   000096                     SPI2BAUD        equ	150	;# 
   985   000097                     SPI2INTF        equ	151	;# 
   986   000098                     SPI2INTE        equ	152	;# 
   987   000099                     SPI2CLK         equ	153	;# 
   988   0000A0                     DAC2DAT         equ	160	;# 
   989   0000A0                     DAC2DATL        equ	160	;# 
   990   0000A2                     DAC2CON         equ	162	;# 
   991   0000A3                     OPA1CON0        equ	163	;# 
   992   0000A4                     OPA1CON1        equ	164	;# 
   993   0000A5                     OPA1CON2        equ	165	;# 
   994   0000A6                     OPA1CON3        equ	166	;# 
   995   0000A7                     OPA1HWC         equ	167	;# 
   996   0000A8                     OPA1OFFSET      equ	168	;# 
   997   0000A9                     OPA1ORS         equ	169	;# 
   998   0000AC                     ACTCON          equ	172	;# 
   999   0000AD                     OSCCON1         equ	173	;# 
  1000   0000AE                     OSCCON2         equ	174	;# 
  1001   0000AF                     OSCCON3         equ	175	;# 
  1002   0000B0                     OSCTUNE         equ	176	;# 
  1003   0000B1                     OSCFRQ          equ	177	;# 
  1004   0000B1                     OSCFREQ         equ	177	;# 
  1005   0000B2                     OSCSTAT         equ	178	;# 
  1006   0000B2                     OSCSTAT1        equ	178	;# 
  1007   0000B3                     OSCEN           equ	179	;# 
  1008   0000B4                     PRLOCK          equ	180	;# 
  1009   0000B5                     SCANPR          equ	181	;# 
  1010   0000B6                     DMA1PR          equ	182	;# 
  1011   0000B7                     DMA2PR          equ	183	;# 
  1012   0000B8                     DMA3PR          equ	184	;# 
  1013   0000B9                     DMA4PR          equ	185	;# 
  1014   0000BE                     MAINPR          equ	190	;# 
  1015   0000BF                     ISRPR           equ	191	;# 
  1016   0000D4                     CLCDATA         equ	212	;# 
  1017   0000D5                     CLCSELECT       equ	213	;# 
  1018   0000D6                     CLCnCON         equ	214	;# 
  1019   0000D7                     CLCnPOL         equ	215	;# 
  1020   0000D8                     CLCnSEL0        equ	216	;# 
  1021   0000D9                     CLCnSEL1        equ	217	;# 
  1022   0000DA                     CLCnSEL2        equ	218	;# 
  1023   0000DB                     CLCnSEL3        equ	219	;# 
  1024   0000DC                     CLCnGLS0        equ	220	;# 
  1025   0000DD                     CLCnGLS1        equ	221	;# 
  1026   0000DE                     CLCnGLS2        equ	222	;# 
  1027   0000DF                     CLCnGLS3        equ	223	;# 
  1028   0000E8                     DMASELECT       equ	232	;# 
  1029   0000E9                     DMAnBUF         equ	233	;# 
  1030   0000EA                     DMAnDCNT        equ	234	;# 
  1031   0000EA                     DMAnDCNTL       equ	234	;# 
  1032   0000EB                     DMAnDCNTH       equ	235	;# 
  1033   0000EC                     DMAnDPTR        equ	236	;# 
  1034   0000EC                     DMAnDPTRL       equ	236	;# 
  1035   0000ED                     DMAnDPTRH       equ	237	;# 
  1036   0000EE                     DMAnDSZ         equ	238	;# 
  1037   0000EE                     DMAnDSZL        equ	238	;# 
  1038   0000EF                     DMAnDSZH        equ	239	;# 
  1039   0000F0                     DMAnDSA         equ	240	;# 
  1040   0000F0                     DMAnDSAL        equ	240	;# 
  1041   0000F1                     DMAnDSAH        equ	241	;# 
  1042   0000F2                     DMAnSCNT        equ	242	;# 
  1043   0000F2                     DMAnSCNTL       equ	242	;# 
  1044   0000F3                     DMAnSCNTH       equ	243	;# 
  1045   0000F4                     DMAnSPTR        equ	244	;# 
  1046   0000F4                     DMAnSPTRL       equ	244	;# 
  1047   0000F5                     DMAnSPTRH       equ	245	;# 
  1048   0000F6                     DMAnSPTRU       equ	246	;# 
  1049   0000F7                     DMAnSSZ         equ	247	;# 
  1050   0000F7                     DMAnSSZL        equ	247	;# 
  1051   0000F8                     DMAnSSZH        equ	248	;# 
  1052   0000F9                     DMAnSSA         equ	249	;# 
  1053   0000F9                     DMAnSSAL        equ	249	;# 
  1054   0000FA                     DMAnSSAH        equ	250	;# 
  1055   0000FB                     DMAnSSAU        equ	251	;# 
  1056   0000FC                     DMAnCON0        equ	252	;# 
  1057   0000FD                     DMAnCON1        equ	253	;# 
  1058   0000FE                     DMAnAIRQ        equ	254	;# 
  1059   0000FF                     DMAnSIRQ        equ	255	;# 
  1060   000200                     PPSLOCK         equ	512	;# 
  1061   000201                     RA0PPS          equ	513	;# 
  1062   000202                     RA1PPS          equ	514	;# 
  1063   000203                     RA2PPS          equ	515	;# 
  1064   000205                     RA4PPS          equ	517	;# 
  1065   000206                     RA5PPS          equ	518	;# 
  1066   00020D                     RB4PPS          equ	525	;# 
  1067   00020E                     RB5PPS          equ	526	;# 
  1068   00020F                     RB6PPS          equ	527	;# 
  1069   000210                     RB7PPS          equ	528	;# 
  1070   000211                     RC0PPS          equ	529	;# 
  1071   000212                     RC1PPS          equ	530	;# 
  1072   000213                     RC2PPS          equ	531	;# 
  1073   000214                     RC3PPS          equ	532	;# 
  1074   000215                     RC4PPS          equ	533	;# 
  1075   000216                     RC5PPS          equ	534	;# 
  1076   000217                     RC6PPS          equ	535	;# 
  1077   000218                     RC7PPS          equ	536	;# 
  1078   00023E                     INT0PPS         equ	574	;# 
  1079   00023F                     INT1PPS         equ	575	;# 
  1080   000240                     INT2PPS         equ	576	;# 
  1081   000241                     T0CKIPPS        equ	577	;# 
  1082   000242                     T1CKIPPS        equ	578	;# 
  1083   000243                     T1GPPS          equ	579	;# 
  1084   000244                     T3CKIPPS        equ	580	;# 
  1085   000245                     T3GPPS          equ	581	;# 
  1086   000248                     T2INPPS         equ	584	;# 
  1087   000249                     T4INPPS         equ	585	;# 
  1088   00024F                     CCP1PPS         equ	591	;# 
  1089   000251                     PWM1ERSPPS      equ	593	;# 
  1090   000252                     PWM2ERSPPS      equ	594	;# 
  1091   000253                     PWM3ERSPPS      equ	595	;# 
  1092   000257                     PWMIN0PPS       equ	599	;# 
  1093   000258                     PWMIN1PPS       equ	600	;# 
  1094   000259                     SMT1WINPPS      equ	601	;# 
  1095   00025A                     SMT1SIGPPS      equ	602	;# 
  1096   00025B                     CWG1PPS         equ	603	;# 
  1097   00025B                     CWG1INPPS       equ	603	;# 
  1098   00025E                     MD1CARLPPS      equ	606	;# 
  1099   00025E                     MDCARLPPS       equ	606	;# 
  1100   00025F                     MD1CARHPPS      equ	607	;# 
  1101   00025F                     MDCARHPPS       equ	607	;# 
  1102   000260                     MD1SRCPPS       equ	608	;# 
  1103   000260                     MDSRCPPS        equ	608	;# 
  1104   000261                     CLCIN0PPS       equ	609	;# 
  1105   000262                     CLCIN1PPS       equ	610	;# 
  1106   000263                     CLCIN2PPS       equ	611	;# 
  1107   000264                     CLCIN3PPS       equ	612	;# 
  1108   000269                     ADACTPPS        equ	617	;# 
  1109   00026A                     SPI1SCKPPS      equ	618	;# 
  1110   00026B                     SPI1SDIPPS      equ	619	;# 
  1111   00026C                     SPI1SSPPS       equ	620	;# 
  1112   00026D                     SPI2SCKPPS      equ	621	;# 
  1113   00026E                     SPI2SDIPPS      equ	622	;# 
  1114   00026F                     SPI2SSPPS       equ	623	;# 
  1115   000270                     I2C1SDAPPS      equ	624	;# 
  1116   000271                     I2C1SCLPPS      equ	625	;# 
  1117   000272                     U1RXPPS         equ	626	;# 
  1118   000273                     U1CTSPPS        equ	627	;# 
  1119   000274                     U2RXPPS         equ	628	;# 
  1120   000275                     U2CTSPPS        equ	629	;# 
  1121   000276                     U3RXPPS         equ	630	;# 
  1122   000277                     U3CTSPPS        equ	631	;# 
  1123   000286                     RB6I2C          equ	646	;# 
  1124   000287                     RB4I2C          equ	647	;# 
  1125   00028A                     I2C1RXB         equ	650	;# 
  1126   00028B                     I2C1TXB         equ	651	;# 
  1127   00028C                     I2C1CNTL        equ	652	;# 
  1128   00028D                     I2C1CNTH        equ	653	;# 
  1129   00028E                     I2C1ADB0        equ	654	;# 
  1130   00028F                     I2C1ADB1        equ	655	;# 
  1131   000290                     I2C1ADR0        equ	656	;# 
  1132   000291                     I2C1ADR1        equ	657	;# 
  1133   000292                     I2C1ADR2        equ	658	;# 
  1134   000293                     I2C1ADR3        equ	659	;# 
  1135   000294                     I2C1CON0        equ	660	;# 
  1136   000295                     I2C1CON1        equ	661	;# 
  1137   000296                     I2C1CON2        equ	662	;# 
  1138   000297                     I2C1ERR         equ	663	;# 
  1139   000298                     I2C1STAT0       equ	664	;# 
  1140   000299                     I2C1STAT1       equ	665	;# 
  1141   00029A                     I2C1PIR         equ	666	;# 
  1142   00029B                     I2C1PIE         equ	667	;# 
  1143   00029C                     I2C1BTO         equ	668	;# 
  1144   00029D                     I2C1BAUD        equ	669	;# 
  1145   00029E                     I2C1CLK         equ	670	;# 
  1146   00029F                     I2C1BTOC        equ	671	;# 
  1147   0002A1                     U1RXB           equ	673	;# 
  1148   0002A1                     U1RXBL          equ	673	;# 
  1149   0002A2                     U1RXCHK         equ	674	;# 
  1150   0002A3                     U1TXB           equ	675	;# 
  1151   0002A3                     U1TXBL          equ	675	;# 
  1152   0002A4                     U1TXCHK         equ	676	;# 
  1153   0002A5                     U1P1            equ	677	;# 
  1154   0002A5                     U1P1L           equ	677	;# 
  1155   0002A6                     U1P1H           equ	678	;# 
  1156   0002A7                     U1P2            equ	679	;# 
  1157   0002A7                     U1P2L           equ	679	;# 
  1158   0002A8                     U1P2H           equ	680	;# 
  1159   0002A9                     U1P3            equ	681	;# 
  1160   0002A9                     U1P3L           equ	681	;# 
  1161   0002AA                     U1P3H           equ	682	;# 
  1162   0002AB                     U1CON0          equ	683	;# 
  1163   0002AC                     U1CON1          equ	684	;# 
  1164   0002AD                     U1CON2          equ	685	;# 
  1165   0002AE                     U1BRG           equ	686	;# 
  1166   0002AE                     U1BRGL          equ	686	;# 
  1167   0002AF                     U1BRGH          equ	687	;# 
  1168   0002B0                     U1FIFO          equ	688	;# 
  1169   0002B1                     U1UIR           equ	689	;# 
  1170   0002B2                     U1ERRIR         equ	690	;# 
  1171   0002B3                     U1ERRIE         equ	691	;# 
  1172   0002B4                     U2RXB           equ	692	;# 
  1173   0002B4                     U2RXBL          equ	692	;# 
  1174   0002B6                     U2TXB           equ	694	;# 
  1175   0002B6                     U2TXBL          equ	694	;# 
  1176   0002B8                     U2P1            equ	696	;# 
  1177   0002B8                     U2P1L           equ	696	;# 
  1178   0002BA                     U2P2            equ	698	;# 
  1179   0002BA                     U2P2L           equ	698	;# 
  1180   0002BC                     U2P3            equ	700	;# 
  1181   0002BC                     U2P3L           equ	700	;# 
  1182   0002BE                     U2CON0          equ	702	;# 
  1183   0002BF                     U2CON1          equ	703	;# 
  1184   0002C0                     U2CON2          equ	704	;# 
  1185   0002C1                     U2BRG           equ	705	;# 
  1186   0002C1                     U2BRGL          equ	705	;# 
  1187   0002C2                     U2BRGH          equ	706	;# 
  1188   0002C3                     U2FIFO          equ	707	;# 
  1189   0002C4                     U2UIR           equ	708	;# 
  1190   0002C5                     U2ERRIR         equ	709	;# 
  1191   0002C6                     U2ERRIE         equ	710	;# 
  1192   0002C7                     U3RXB           equ	711	;# 
  1193   0002C7                     U3RXBL          equ	711	;# 
  1194   0002C9                     U3TXB           equ	713	;# 
  1195   0002C9                     U3TXBL          equ	713	;# 
  1196   0002CB                     U3P1            equ	715	;# 
  1197   0002CB                     U3P1L           equ	715	;# 
  1198   0002CD                     U3P2            equ	717	;# 
  1199   0002CD                     U3P2L           equ	717	;# 
  1200   0002CF                     U3P3            equ	719	;# 
  1201   0002CF                     U3P3L           equ	719	;# 
  1202   0002D1                     U3CON0          equ	721	;# 
  1203   0002D2                     U3CON1          equ	722	;# 
  1204   0002D3                     U3CON2          equ	723	;# 
  1205   0002D4                     U3BRG           equ	724	;# 
  1206   0002D4                     U3BRGL          equ	724	;# 
  1207   0002D5                     U3BRGH          equ	725	;# 
  1208   0002D6                     U3FIFO          equ	726	;# 
  1209   0002D7                     U3UIR           equ	727	;# 
  1210   0002D8                     U3ERRIR         equ	728	;# 
  1211   0002D9                     U3ERRIE         equ	729	;# 
  1212   000300                     SMT1TMR         equ	768	;# 
  1213   000300                     SMT1TMRL        equ	768	;# 
  1214   000301                     SMT1TMRH        equ	769	;# 
  1215   000302                     SMT1TMRU        equ	770	;# 
  1216   000303                     SMT1CPR         equ	771	;# 
  1217   000303                     SMT1CPRL        equ	771	;# 
  1218   000304                     SMT1CPRH        equ	772	;# 
  1219   000305                     SMT1CPRU        equ	773	;# 
  1220   000306                     SMT1CPW         equ	774	;# 
  1221   000306                     SMT1CPWL        equ	774	;# 
  1222   000307                     SMT1CPWH        equ	775	;# 
  1223   000308                     SMT1CPWU        equ	776	;# 
  1224   000309                     SMT1PR          equ	777	;# 
  1225   000309                     SMT1PRL         equ	777	;# 
  1226   00030A                     SMT1PRH         equ	778	;# 
  1227   00030B                     SMT1PRU         equ	779	;# 
  1228   00030C                     SMT1CON0        equ	780	;# 
  1229   00030D                     SMT1CON1        equ	781	;# 
  1230   00030E                     SMT1STAT        equ	782	;# 
  1231   00030F                     SMT1CLK         equ	783	;# 
  1232   000310                     SMT1SIG         equ	784	;# 
  1233   000311                     SMT1WIN         equ	785	;# 
  1234   000312                     TMR1            equ	786	;# 
  1235   000312                     TMR1L           equ	786	;# 
  1236   000313                     TMR1H           equ	787	;# 
  1237   000314                     T1CON           equ	788	;# 
  1238   000314                     TMR1CON         equ	788	;# 
  1239   000315                     T1GCON          equ	789	;# 
  1240   000315                     TMR1GCON        equ	789	;# 
  1241   000316                     T1GATE          equ	790	;# 
  1242   000316                     TMR1GATE        equ	790	;# 
  1243   000317                     T1CLK           equ	791	;# 
  1244   000317                     TMR1CLK         equ	791	;# 
  1245   000317                     PR1             equ	791	;# 
  1246   000318                     TMR0L           equ	792	;# 
  1247   000318                     TMR0            equ	792	;# 
  1248   000319                     TMR0H           equ	793	;# 
  1249   000319                     PR0             equ	793	;# 
  1250   00031A                     T0CON0          equ	794	;# 
  1251   00031B                     T0CON1          equ	795	;# 
  1252   00031C                     T2TMR           equ	796	;# 
  1253   00031C                     TMR2            equ	796	;# 
  1254   00031D                     T2PR            equ	797	;# 
  1255   00031D                     PR2             equ	797	;# 
  1256   00031E                     T2CON           equ	798	;# 
  1257   00031F                     T2HLT           equ	799	;# 
  1258   000320                     T2CLKCON        equ	800	;# 
  1259   000320                     T2CLK           equ	800	;# 
  1260   000321                     T2RST           equ	801	;# 
  1261   000323                     TMR3            equ	803	;# 
  1262   000323                     TMR3L           equ	803	;# 
  1263   000324                     TMR3H           equ	804	;# 
  1264   000325                     T3CON           equ	805	;# 
  1265   000325                     TMR3CON         equ	805	;# 
  1266   000326                     T3GCON          equ	806	;# 
  1267   000326                     TMR3GCON        equ	806	;# 
  1268   000327                     T3GATE          equ	807	;# 
  1269   000327                     TMR3GATE        equ	807	;# 
  1270   000328                     T3CLK           equ	808	;# 
  1271   000328                     TMR3CLK         equ	808	;# 
  1272   000328                     PR3             equ	808	;# 
  1273   000329                     T4TMR           equ	809	;# 
  1274   000329                     TMR4            equ	809	;# 
  1275   00032A                     T4PR            equ	810	;# 
  1276   00032A                     PR4             equ	810	;# 
  1277   00032B                     T4CON           equ	811	;# 
  1278   00032C                     T4HLT           equ	812	;# 
  1279   00032D                     T4CLKCON        equ	813	;# 
  1280   00032D                     T4CLK           equ	813	;# 
  1281   00032E                     T4RST           equ	814	;# 
  1282   000340                     CCPR1           equ	832	;# 
  1283   000340                     CCPR1L          equ	832	;# 
  1284   000341                     CCPR1H          equ	833	;# 
  1285   000342                     CCP1CON         equ	834	;# 
  1286   000343                     CCP1CAP         equ	835	;# 
  1287   00034C                     CCPTMRS0        equ	844	;# 
  1288   00034E                     CRCDATA         equ	846	;# 
  1289   00034E                     CRCDATAL        equ	846	;# 
  1290   00034F                     CRCDATAH        equ	847	;# 
  1291   000350                     CRCDATAU        equ	848	;# 
  1292   000351                     CRCDATAT        equ	849	;# 
  1293   000352                     CRCOUT          equ	850	;# 
  1294   000352                     CRCSHFT         equ	850	;# 
  1295   000352                     CRCXOR          equ	850	;# 
  1296   000352                     CRCOUTL         equ	850	;# 
  1297   000352                     CRCSHFTL        equ	850	;# 
  1298   000352                     CRCSHIFTL       equ	850	;# 
  1299   000352                     CRCXORL         equ	850	;# 
  1300   000353                     CRCOUTH         equ	851	;# 
  1301   000353                     CRCSHFTH        equ	851	;# 
  1302   000353                     CRCSHIFTH       equ	851	;# 
  1303   000353                     CRCXORH         equ	851	;# 
  1304   000354                     CRCOUTU         equ	852	;# 
  1305   000354                     CRCSHFTU        equ	852	;# 
  1306   000354                     CRCSHIFTU       equ	852	;# 
  1307   000354                     CRCXORU         equ	852	;# 
  1308   000355                     CRCOUTT         equ	853	;# 
  1309   000355                     CRCSHFTT        equ	853	;# 
  1310   000355                     CRCSHIFTT       equ	853	;# 
  1311   000355                     CRCXORT         equ	853	;# 
  1312   000356                     CRCCON0         equ	854	;# 
  1313   000357                     CRCCON1         equ	855	;# 
  1314   000358                     CRCCON2         equ	856	;# 
  1315   00035A                     SCANLADR        equ	858	;# 
  1316   00035A                     SCANLADRL       equ	858	;# 
  1317   00035B                     SCANLADRH       equ	859	;# 
  1318   00035C                     SCANLADRU       equ	860	;# 
  1319   00035D                     SCANHADR        equ	861	;# 
  1320   00035D                     SCANHADRL       equ	861	;# 
  1321   00035E                     SCANHADRH       equ	862	;# 
  1322   00035F                     SCANHADRU       equ	863	;# 
  1323   000360                     SCANCON0        equ	864	;# 
  1324   000361                     SCANTRIG        equ	865	;# 
  1325   000367                     IPR0            equ	871	;# 
  1326   000368                     IPR1            equ	872	;# 
  1327   000369                     IPR2            equ	873	;# 
  1328   00036A                     IPR3            equ	874	;# 
  1329   00036B                     IPR4            equ	875	;# 
  1330   00036C                     IPR5            equ	876	;# 
  1331   00036D                     IPR6            equ	877	;# 
  1332   00036E                     IPR7            equ	878	;# 
  1333   00036F                     IPR8            equ	879	;# 
  1334   000370                     IPR9            equ	880	;# 
  1335   000371                     IPR10           equ	881	;# 
  1336   000373                     STATUS_CSHAD    equ	883	;# 
  1337   000374                     WREG_CSHAD      equ	884	;# 
  1338   000375                     BSR_CSHAD       equ	885	;# 
  1339   000376                     SHADCON         equ	886	;# 
  1340   000377                     STATUS_SHAD     equ	887	;# 
  1341   000378                     WREG_SHAD       equ	888	;# 
  1342   000379                     BSR_SHAD        equ	889	;# 
  1343   00037A                     PCLATH_SHAD     equ	890	;# 
  1344   00037B                     PCLATU_SHAD     equ	891	;# 
  1345   00037C                     FSR0SH          equ	892	;# 
  1346   00037C                     FSR0L_SHAD      equ	892	;# 
  1347   00037D                     FSR0H_SHAD      equ	893	;# 
  1348   00037E                     FSR1SH          equ	894	;# 
  1349   00037E                     FSR1L_SHAD      equ	894	;# 
  1350   00037F                     FSR1H_SHAD      equ	895	;# 
  1351   000380                     FSR2SH          equ	896	;# 
  1352   000380                     FSR2L_SHAD      equ	896	;# 
  1353   000381                     FSR2H_SHAD      equ	897	;# 
  1354   000382                     PRODSH          equ	898	;# 
  1355   000382                     PRODL_SHAD      equ	898	;# 
  1356   000383                     PRODH_SHAD      equ	899	;# 
  1357   0003BC                     CWG1CLK         equ	956	;# 
  1358   0003BC                     CWG1CLKCON      equ	956	;# 
  1359   0003BD                     CWG1ISM         equ	957	;# 
  1360   0003BD                     CWG1DAT         equ	957	;# 
  1361   0003BE                     CWG1DBR         equ	958	;# 
  1362   0003BF                     CWG1DBF         equ	959	;# 
  1363   0003C0                     CWG1CON0        equ	960	;# 
  1364   0003C1                     CWG1CON1        equ	961	;# 
  1365   0003C2                     CWG1AS0         equ	962	;# 
  1366   0003C3                     CWG1AS1         equ	963	;# 
  1367   0003C4                     CWG1STR         equ	964	;# 
  1368   0003D7                     FVRCON          equ	983	;# 
  1369   0003D8                     ADCPCON         equ	984	;# 
  1370   0003D8                     ADCP            equ	984	;# 
  1371   0003D9                     ADLTH           equ	985	;# 
  1372   0003D9                     ADLTHL          equ	985	;# 
  1373   0003DA                     ADLTHH          equ	986	;# 
  1374   0003DB                     ADUTH           equ	987	;# 
  1375   0003DB                     ADUTHL          equ	987	;# 
  1376   0003DC                     ADUTHH          equ	988	;# 
  1377   0003DD                     ADERR           equ	989	;# 
  1378   0003DD                     ADERRL          equ	989	;# 
  1379   0003DE                     ADERRH          equ	990	;# 
  1380   0003DF                     ADSTPT          equ	991	;# 
  1381   0003DF                     ADSTPTL         equ	991	;# 
  1382   0003E0                     ADSTPTH         equ	992	;# 
  1383   0003E1                     ADFLTR          equ	993	;# 
  1384   0003E1                     ADFLTRL         equ	993	;# 
  1385   0003E2                     ADFLTRH         equ	994	;# 
  1386   0003E3                     ADACC           equ	995	;# 
  1387   0003E3                     ADACCL          equ	995	;# 
  1388   0003E4                     ADACCH          equ	996	;# 
  1389   0003E5                     ADACCU          equ	997	;# 
  1390   0003E6                     ADCNT           equ	998	;# 
  1391   0003E7                     ADRPT           equ	999	;# 
  1392   0003E8                     ADPREV          equ	1000	;# 
  1393   0003E8                     ADPREVL         equ	1000	;# 
  1394   0003E9                     ADPREVH         equ	1001	;# 
  1395   0003EA                     ADRES           equ	1002	;# 
  1396   0003EA                     ADRESL          equ	1002	;# 
  1397   0003EB                     ADRESH          equ	1003	;# 
  1398   0003EC                     ADPCH           equ	1004	;# 
  1399   0003EE                     ADACQ           equ	1006	;# 
  1400   0003EE                     ADACQL          equ	1006	;# 
  1401   0003EF                     ADACQH          equ	1007	;# 
  1402   0003F0                     ADCAP           equ	1008	;# 
  1403   0003F1                     ADPRE           equ	1009	;# 
  1404   0003F1                     ADPREL          equ	1009	;# 
  1405   0003F2                     ADPREH          equ	1010	;# 
  1406   0003F3                     ADCON0          equ	1011	;# 
  1407   0003F4                     ADCON1          equ	1012	;# 
  1408   0003F5                     ADCON2          equ	1013	;# 
  1409   0003F6                     ADCON3          equ	1014	;# 
  1410   0003F7                     ADSTAT          equ	1015	;# 
  1411   0003F8                     ADREF           equ	1016	;# 
  1412   0003F9                     ADACT           equ	1017	;# 
  1413   0003FA                     ADCLK           equ	1018	;# 
  1414   000400                     ANSELA          equ	1024	;# 
  1415   000401                     WPUA            equ	1025	;# 
  1416   000402                     ODCONA          equ	1026	;# 
  1417   000403                     SLRCONA         equ	1027	;# 
  1418   000404                     INLVLA          equ	1028	;# 
  1419   000405                     IOCAP           equ	1029	;# 
  1420   000406                     IOCAN           equ	1030	;# 
  1421   000407                     IOCAF           equ	1031	;# 
  1422   000408                     ANSELB          equ	1032	;# 
  1423   000409                     WPUB            equ	1033	;# 
  1424   00040A                     ODCONB          equ	1034	;# 
  1425   00040B                     SLRCONB         equ	1035	;# 
  1426   00040C                     INLVLB          equ	1036	;# 
  1427   00040D                     IOCBP           equ	1037	;# 
  1428   00040E                     IOCBN           equ	1038	;# 
  1429   00040F                     IOCBF           equ	1039	;# 
  1430   000410                     ANSELC          equ	1040	;# 
  1431   000411                     WPUC            equ	1041	;# 
  1432   000412                     ODCONC          equ	1042	;# 
  1433   000413                     SLRCONC         equ	1043	;# 
  1434   000414                     INLVLC          equ	1044	;# 
  1435   000415                     IOCCP           equ	1045	;# 
  1436   000416                     IOCCN           equ	1046	;# 
  1437   000417                     IOCCF           equ	1047	;# 
  1438   000440                     NCO1ACC         equ	1088	;# 
  1439   000440                     NCO1ACCL        equ	1088	;# 
  1440   000441                     NCO1ACCH        equ	1089	;# 
  1441   000442                     NCO1ACCU        equ	1090	;# 
  1442   000443                     NCO1INC         equ	1091	;# 
  1443   000443                     NCO1INCL        equ	1091	;# 
  1444   000444                     NCO1INCH        equ	1092	;# 
  1445   000445                     NCO1INCU        equ	1093	;# 
  1446   000446                     NCO1CON         equ	1094	;# 
  1447   000447                     NCO1CLK         equ	1095	;# 
  1448   000458                     FSCMCON         equ	1112	;# 
  1449   000459                     IVTLOCK         equ	1113	;# 
  1450   00045A                     IVTAD           equ	1114	;# 
  1451   00045A                     IVTADL          equ	1114	;# 
  1452   00045B                     IVTADH          equ	1115	;# 
  1453   00045C                     IVTADU          equ	1116	;# 
  1454   00045D                     IVTBASE         equ	1117	;# 
  1455   00045D                     IVTBASEL        equ	1117	;# 
  1456   00045E                     IVTBASEH        equ	1118	;# 
  1457   00045F                     IVTBASEU        equ	1119	;# 
  1458   000460                     PWM1ERS         equ	1120	;# 
  1459   000461                     PWM1CLK         equ	1121	;# 
  1460   000462                     PWM1LDS         equ	1122	;# 
  1461   000463                     PWM1PR          equ	1123	;# 
  1462   000463                     PWM1PRL         equ	1123	;# 
  1463   000464                     PWM1PRH         equ	1124	;# 
  1464   000465                     PWM1CPRE        equ	1125	;# 
  1465   000466                     PWM1PIPOS       equ	1126	;# 
  1466   000467                     PWM1GIR         equ	1127	;# 
  1467   000468                     PWM1GIE         equ	1128	;# 
  1468   000469                     PWM1CON         equ	1129	;# 
  1469   00046A                     PWM1S1CFG       equ	1130	;# 
  1470   00046B                     PWM1S1P1        equ	1131	;# 
  1471   00046B                     PWM1S1P1L       equ	1131	;# 
  1472   00046C                     PWM1S1P1H       equ	1132	;# 
  1473   00046D                     PWM1S1P2        equ	1133	;# 
  1474   00046D                     PWM1S1P2L       equ	1133	;# 
  1475   00046E                     PWM1S1P2H       equ	1134	;# 
  1476   00046F                     PWM2ERS         equ	1135	;# 
  1477   000470                     PWM2CLK         equ	1136	;# 
  1478   000471                     PWM2LDS         equ	1137	;# 
  1479   000472                     PWM2PR          equ	1138	;# 
  1480   000472                     PWM2PRL         equ	1138	;# 
  1481   000473                     PWM2PRH         equ	1139	;# 
  1482   000474                     PWM2CPRE        equ	1140	;# 
  1483   000475                     PWM2PIPOS       equ	1141	;# 
  1484   000476                     PWM2GIR         equ	1142	;# 
  1485   000477                     PWM2GIE         equ	1143	;# 
  1486   000478                     PWM2CON         equ	1144	;# 
  1487   000479                     PWM2S1CFG       equ	1145	;# 
  1488   00047A                     PWM2S1P1        equ	1146	;# 
  1489   00047A                     PWM2S1P1L       equ	1146	;# 
  1490   00047B                     PWM2S1P1H       equ	1147	;# 
  1491   00047C                     PWM2S1P2        equ	1148	;# 
  1492   00047C                     PWM2S1P2L       equ	1148	;# 
  1493   00047D                     PWM2S1P2H       equ	1149	;# 
  1494   00047E                     PWM3ERS         equ	1150	;# 
  1495   00047F                     PWM3CLK         equ	1151	;# 
  1496   000480                     PWM3LDS         equ	1152	;# 
  1497   000481                     PWM3PR          equ	1153	;# 
  1498   000481                     PWM3PRL         equ	1153	;# 
  1499   000482                     PWM3PRH         equ	1154	;# 
  1500   000483                     PWM3CPRE        equ	1155	;# 
  1501   000484                     PWM3PIPOS       equ	1156	;# 
  1502   000485                     PWM3GIR         equ	1157	;# 
  1503   000486                     PWM3GIE         equ	1158	;# 
  1504   000487                     PWM3CON         equ	1159	;# 
  1505   000488                     PWM3S1CFG       equ	1160	;# 
  1506   000489                     PWM3S1P1        equ	1161	;# 
  1507   000489                     PWM3S1P1L       equ	1161	;# 
  1508   00048A                     PWM3S1P1H       equ	1162	;# 
  1509   00048B                     PWM3S1P2        equ	1163	;# 
  1510   00048B                     PWM3S1P2L       equ	1163	;# 
  1511   00048C                     PWM3S1P2H       equ	1164	;# 
  1512   00049C                     PWMLOAD         equ	1180	;# 
  1513   00049D                     PWMEN           equ	1181	;# 
  1514   0004A8                     PIE0            equ	1192	;# 
  1515   0004A9                     PIE1            equ	1193	;# 
  1516   0004AA                     PIE2            equ	1194	;# 
  1517   0004AB                     PIE3            equ	1195	;# 
  1518   0004AC                     PIE4            equ	1196	;# 
  1519   0004AD                     PIE5            equ	1197	;# 
  1520   0004AE                     PIE6            equ	1198	;# 
  1521   0004AF                     PIE7            equ	1199	;# 
  1522   0004B0                     PIE8            equ	1200	;# 
  1523   0004B1                     PIE9            equ	1201	;# 
  1524   0004B2                     PIE10           equ	1202	;# 
  1525   0004B3                     PIR0            equ	1203	;# 
  1526   0004B4                     PIR1            equ	1204	;# 
  1527   0004B5                     PIR2            equ	1205	;# 
  1528   0004B6                     PIR3            equ	1206	;# 
  1529   0004B7                     PIR4            equ	1207	;# 
  1530   0004B8                     PIR5            equ	1208	;# 
  1531   0004B9                     PIR6            equ	1209	;# 
  1532   0004BA                     PIR7            equ	1210	;# 
  1533   0004BB                     PIR8            equ	1211	;# 
  1534   0004BC                     PIR9            equ	1212	;# 
  1535   0004BD                     PIR10           equ	1213	;# 
  1536   0004BE                     LATA            equ	1214	;# 
  1537   0004BF                     LATB            equ	1215	;# 
  1538   0004C0                     LATC            equ	1216	;# 
  1539   0004C6                     TRISA           equ	1222	;# 
  1540   0004C7                     TRISB           equ	1223	;# 
  1541   0004C8                     TRISC           equ	1224	;# 
  1542   0004CE                     PORTA           equ	1230	;# 
  1543   0004CF                     PORTB           equ	1231	;# 
  1544   0004D0                     PORTC           equ	1232	;# 
  1545   0004D6                     INTCON0         equ	1238	;# 
  1546   0004D7                     INTCON1         equ	1239	;# 
  1547   0004D8                     STATUS          equ	1240	;# 
  1548   0004D9                     FSR2            equ	1241	;# 
  1549   0004D9                     FSR2L           equ	1241	;# 
  1550   0004DA                     FSR2H           equ	1242	;# 
  1551   0004DB                     PLUSW2          equ	1243	;# 
  1552   0004DC                     PREINC2         equ	1244	;# 
  1553   0004DD                     POSTDEC2        equ	1245	;# 
  1554   0004DE                     POSTINC2        equ	1246	;# 
  1555   0004DF                     INDF2           equ	1247	;# 
  1556   0004E0                     BSR             equ	1248	;# 
  1557   0004E1                     FSR1            equ	1249	;# 
  1558   0004E1                     FSR1L           equ	1249	;# 
  1559   0004E2                     FSR1H           equ	1250	;# 
  1560   0004E3                     PLUSW1          equ	1251	;# 
  1561   0004E4                     PREINC1         equ	1252	;# 
  1562   0004E5                     POSTDEC1        equ	1253	;# 
  1563   0004E6                     POSTINC1        equ	1254	;# 
  1564   0004E7                     INDF1           equ	1255	;# 
  1565   0004E8                     WREG            equ	1256	;# 
  1566   0004E9                     FSR0            equ	1257	;# 
  1567   0004E9                     FSR0L           equ	1257	;# 
  1568   0004EA                     FSR0H           equ	1258	;# 
  1569   0004EB                     PLUSW0          equ	1259	;# 
  1570   0004EC                     PREINC0         equ	1260	;# 
  1571   0004ED                     POSTDEC0        equ	1261	;# 
  1572   0004EE                     POSTINC0        equ	1262	;# 
  1573   0004EF                     INDF0           equ	1263	;# 
  1574   0004F0                     PCON0           equ	1264	;# 
  1575   0004F1                     PCON1           equ	1265	;# 
  1576   0004F2                     CPUDOZE         equ	1266	;# 
  1577   0004F3                     PROD            equ	1267	;# 
  1578   0004F3                     PRODL           equ	1267	;# 
  1579   0004F4                     PRODH           equ	1268	;# 
  1580   0004F5                     TABLAT          equ	1269	;# 
  1581   0004F6                     TBLPTR          equ	1270	;# 
  1582   0004F6                     TBLPTRL         equ	1270	;# 
  1583   0004F7                     TBLPTRH         equ	1271	;# 
  1584   0004F8                     TBLPTRU         equ	1272	;# 
  1585   0004F9                     PCLAT           equ	1273	;# 
  1586   0004F9                     PCL             equ	1273	;# 
  1587   0004FA                     PCLATH          equ	1274	;# 
  1588   0004FB                     PCLATU          equ	1275	;# 
  1589   0004FC                     STKPTR          equ	1276	;# 
  1590   0004FD                     TOS             equ	1277	;# 
  1591   0004FD                     TOSL            equ	1277	;# 
  1592   0004FE                     TOSH            equ	1278	;# 
  1593   0004FF                     TOSU            equ	1279	;# 
  1594   000039                     CLKRCON         equ	57	;# 
  1595   00003A                     CLKRCLK         equ	58	;# 
  1596   000040                     NVMCON0         equ	64	;# 
  1597   000041                     NVMCON1         equ	65	;# 
  1598   000042                     NVMLOCK         equ	66	;# 
  1599   000043                     NVMADR          equ	67	;# 
  1600   000043                     NVMADRL         equ	67	;# 
  1601   000044                     NVMADRH         equ	68	;# 
  1602   000045                     NVMADRU         equ	69	;# 
  1603   000046                     NVMDAT          equ	70	;# 
  1604   000046                     NVMDATL         equ	70	;# 
  1605   000047                     NVMDATH         equ	71	;# 
  1606   000048                     VREGCON         equ	72	;# 
  1607   000049                     BORCON          equ	73	;# 
  1608   00004A                     HLVDCON0        equ	74	;# 
  1609   00004B                     HLVDCON1        equ	75	;# 
  1610   00004C                     ZCDCON          equ	76	;# 
  1611   000063                     PMD0            equ	99	;# 
  1612   000064                     PMD1            equ	100	;# 
  1613   000065                     PMD2            equ	101	;# 
  1614   000066                     PMD3            equ	102	;# 
  1615   000067                     PMD4            equ	103	;# 
  1616   000068                     PMD5            equ	104	;# 
  1617   00006A                     MD1CON0         equ	106	;# 
  1618   00006B                     MD1CON1         equ	107	;# 
  1619   00006C                     MD1SRC          equ	108	;# 
  1620   00006D                     MD1CARL         equ	109	;# 
  1621   00006E                     MD1CARH         equ	110	;# 
  1622   00006F                     CMOUT           equ	111	;# 
  1623   000070                     CM1CON0         equ	112	;# 
  1624   000071                     CM1CON1         equ	113	;# 
  1625   000072                     CM1NCH          equ	114	;# 
  1626   000073                     CM1PCH          equ	115	;# 
  1627   000074                     CM2CON0         equ	116	;# 
  1628   000075                     CM2CON1         equ	117	;# 
  1629   000076                     CM2NCH          equ	118	;# 
  1630   000077                     CM2PCH          equ	119	;# 
  1631   000078                     WDTCON0         equ	120	;# 
  1632   000079                     WDTCON1         equ	121	;# 
  1633   00007A                     WDTPS           equ	122	;# 
  1634   00007A                     WDTPSL          equ	122	;# 
  1635   00007B                     WDTPSH          equ	123	;# 
  1636   00007C                     WDTTMR          equ	124	;# 
  1637   00007D                     DAC1DAT         equ	125	;# 
  1638   00007D                     DAC1DATL        equ	125	;# 
  1639   00007F                     DAC1CON         equ	127	;# 
  1640   000080                     SPI1RXB         equ	128	;# 
  1641   000081                     SPI1TXB         equ	129	;# 
  1642   000082                     SPI1TCNT        equ	130	;# 
  1643   000082                     SPI1TCNTL       equ	130	;# 
  1644   000083                     SPI1TCNTH       equ	131	;# 
  1645   000084                     SPI1CON0        equ	132	;# 
  1646   000085                     SPI1CON1        equ	133	;# 
  1647   000086                     SPI1CON2        equ	134	;# 
  1648   000087                     SPI1STATUS      equ	135	;# 
  1649   000088                     SPI1TWIDTH      equ	136	;# 
  1650   000089                     SPI1BAUD        equ	137	;# 
  1651   00008A                     SPI1INTF        equ	138	;# 
  1652   00008B                     SPI1INTE        equ	139	;# 
  1653   00008C                     SPI1CLK         equ	140	;# 
  1654   00008D                     SPI2RXB         equ	141	;# 
  1655   00008E                     SPI2TXB         equ	142	;# 
  1656   00008F                     SPI2TCNT        equ	143	;# 
  1657   00008F                     SPI2TCNTL       equ	143	;# 
  1658   000090                     SPI2TCNTH       equ	144	;# 
  1659   000091                     SPI2CON0        equ	145	;# 
  1660   000092                     SPI2CON1        equ	146	;# 
  1661   000093                     SPI2CON2        equ	147	;# 
  1662   000094                     SPI2STATUS      equ	148	;# 
  1663   000095                     SPI2TWIDTH      equ	149	;# 
  1664   000096                     SPI2BAUD        equ	150	;# 
  1665   000097                     SPI2INTF        equ	151	;# 
  1666   000098                     SPI2INTE        equ	152	;# 
  1667   000099                     SPI2CLK         equ	153	;# 
  1668   0000A0                     DAC2DAT         equ	160	;# 
  1669   0000A0                     DAC2DATL        equ	160	;# 
  1670   0000A2                     DAC2CON         equ	162	;# 
  1671   0000A3                     OPA1CON0        equ	163	;# 
  1672   0000A4                     OPA1CON1        equ	164	;# 
  1673   0000A5                     OPA1CON2        equ	165	;# 
  1674   0000A6                     OPA1CON3        equ	166	;# 
  1675   0000A7                     OPA1HWC         equ	167	;# 
  1676   0000A8                     OPA1OFFSET      equ	168	;# 
  1677   0000A9                     OPA1ORS         equ	169	;# 
  1678   0000AC                     ACTCON          equ	172	;# 
  1679   0000AD                     OSCCON1         equ	173	;# 
  1680   0000AE                     OSCCON2         equ	174	;# 
  1681   0000AF                     OSCCON3         equ	175	;# 
  1682   0000B0                     OSCTUNE         equ	176	;# 
  1683   0000B1                     OSCFRQ          equ	177	;# 
  1684   0000B1                     OSCFREQ         equ	177	;# 
  1685   0000B2                     OSCSTAT         equ	178	;# 
  1686   0000B2                     OSCSTAT1        equ	178	;# 
  1687   0000B3                     OSCEN           equ	179	;# 
  1688   0000B4                     PRLOCK          equ	180	;# 
  1689   0000B5                     SCANPR          equ	181	;# 
  1690   0000B6                     DMA1PR          equ	182	;# 
  1691   0000B7                     DMA2PR          equ	183	;# 
  1692   0000B8                     DMA3PR          equ	184	;# 
  1693   0000B9                     DMA4PR          equ	185	;# 
  1694   0000BE                     MAINPR          equ	190	;# 
  1695   0000BF                     ISRPR           equ	191	;# 
  1696   0000D4                     CLCDATA         equ	212	;# 
  1697   0000D5                     CLCSELECT       equ	213	;# 
  1698   0000D6                     CLCnCON         equ	214	;# 
  1699   0000D7                     CLCnPOL         equ	215	;# 
  1700   0000D8                     CLCnSEL0        equ	216	;# 
  1701   0000D9                     CLCnSEL1        equ	217	;# 
  1702   0000DA                     CLCnSEL2        equ	218	;# 
  1703   0000DB                     CLCnSEL3        equ	219	;# 
  1704   0000DC                     CLCnGLS0        equ	220	;# 
  1705   0000DD                     CLCnGLS1        equ	221	;# 
  1706   0000DE                     CLCnGLS2        equ	222	;# 
  1707   0000DF                     CLCnGLS3        equ	223	;# 
  1708   0000E8                     DMASELECT       equ	232	;# 
  1709   0000E9                     DMAnBUF         equ	233	;# 
  1710   0000EA                     DMAnDCNT        equ	234	;# 
  1711   0000EA                     DMAnDCNTL       equ	234	;# 
  1712   0000EB                     DMAnDCNTH       equ	235	;# 
  1713   0000EC                     DMAnDPTR        equ	236	;# 
  1714   0000EC                     DMAnDPTRL       equ	236	;# 
  1715   0000ED                     DMAnDPTRH       equ	237	;# 
  1716   0000EE                     DMAnDSZ         equ	238	;# 
  1717   0000EE                     DMAnDSZL        equ	238	;# 
  1718   0000EF                     DMAnDSZH        equ	239	;# 
  1719   0000F0                     DMAnDSA         equ	240	;# 
  1720   0000F0                     DMAnDSAL        equ	240	;# 
  1721   0000F1                     DMAnDSAH        equ	241	;# 
  1722   0000F2                     DMAnSCNT        equ	242	;# 
  1723   0000F2                     DMAnSCNTL       equ	242	;# 
  1724   0000F3                     DMAnSCNTH       equ	243	;# 
  1725   0000F4                     DMAnSPTR        equ	244	;# 
  1726   0000F4                     DMAnSPTRL       equ	244	;# 
  1727   0000F5                     DMAnSPTRH       equ	245	;# 
  1728   0000F6                     DMAnSPTRU       equ	246	;# 
  1729   0000F7                     DMAnSSZ         equ	247	;# 
  1730   0000F7                     DMAnSSZL        equ	247	;# 
  1731   0000F8                     DMAnSSZH        equ	248	;# 
  1732   0000F9                     DMAnSSA         equ	249	;# 
  1733   0000F9                     DMAnSSAL        equ	249	;# 
  1734   0000FA                     DMAnSSAH        equ	250	;# 
  1735   0000FB                     DMAnSSAU        equ	251	;# 
  1736   0000FC                     DMAnCON0        equ	252	;# 
  1737   0000FD                     DMAnCON1        equ	253	;# 
  1738   0000FE                     DMAnAIRQ        equ	254	;# 
  1739   0000FF                     DMAnSIRQ        equ	255	;# 
  1740   000200                     PPSLOCK         equ	512	;# 
  1741   000201                     RA0PPS          equ	513	;# 
  1742   000202                     RA1PPS          equ	514	;# 
  1743   000203                     RA2PPS          equ	515	;# 
  1744   000205                     RA4PPS          equ	517	;# 
  1745   000206                     RA5PPS          equ	518	;# 
  1746   00020D                     RB4PPS          equ	525	;# 
  1747   00020E                     RB5PPS          equ	526	;# 
  1748   00020F                     RB6PPS          equ	527	;# 
  1749   000210                     RB7PPS          equ	528	;# 
  1750   000211                     RC0PPS          equ	529	;# 
  1751   000212                     RC1PPS          equ	530	;# 
  1752   000213                     RC2PPS          equ	531	;# 
  1753   000214                     RC3PPS          equ	532	;# 
  1754   000215                     RC4PPS          equ	533	;# 
  1755   000216                     RC5PPS          equ	534	;# 
  1756   000217                     RC6PPS          equ	535	;# 
  1757   000218                     RC7PPS          equ	536	;# 
  1758   00023E                     INT0PPS         equ	574	;# 
  1759   00023F                     INT1PPS         equ	575	;# 
  1760   000240                     INT2PPS         equ	576	;# 
  1761   000241                     T0CKIPPS        equ	577	;# 
  1762   000242                     T1CKIPPS        equ	578	;# 
  1763   000243                     T1GPPS          equ	579	;# 
  1764   000244                     T3CKIPPS        equ	580	;# 
  1765   000245                     T3GPPS          equ	581	;# 
  1766   000248                     T2INPPS         equ	584	;# 
  1767   000249                     T4INPPS         equ	585	;# 
  1768   00024F                     CCP1PPS         equ	591	;# 
  1769   000251                     PWM1ERSPPS      equ	593	;# 
  1770   000252                     PWM2ERSPPS      equ	594	;# 
  1771   000253                     PWM3ERSPPS      equ	595	;# 
  1772   000257                     PWMIN0PPS       equ	599	;# 
  1773   000258                     PWMIN1PPS       equ	600	;# 
  1774   000259                     SMT1WINPPS      equ	601	;# 
  1775   00025A                     SMT1SIGPPS      equ	602	;# 
  1776   00025B                     CWG1PPS         equ	603	;# 
  1777   00025B                     CWG1INPPS       equ	603	;# 
  1778   00025E                     MD1CARLPPS      equ	606	;# 
  1779   00025E                     MDCARLPPS       equ	606	;# 
  1780   00025F                     MD1CARHPPS      equ	607	;# 
  1781   00025F                     MDCARHPPS       equ	607	;# 
  1782   000260                     MD1SRCPPS       equ	608	;# 
  1783   000260                     MDSRCPPS        equ	608	;# 
  1784   000261                     CLCIN0PPS       equ	609	;# 
  1785   000262                     CLCIN1PPS       equ	610	;# 
  1786   000263                     CLCIN2PPS       equ	611	;# 
  1787   000264                     CLCIN3PPS       equ	612	;# 
  1788   000269                     ADACTPPS        equ	617	;# 
  1789   00026A                     SPI1SCKPPS      equ	618	;# 
  1790   00026B                     SPI1SDIPPS      equ	619	;# 
  1791   00026C                     SPI1SSPPS       equ	620	;# 
  1792   00026D                     SPI2SCKPPS      equ	621	;# 
  1793   00026E                     SPI2SDIPPS      equ	622	;# 
  1794   00026F                     SPI2SSPPS       equ	623	;# 
  1795   000270                     I2C1SDAPPS      equ	624	;# 
  1796   000271                     I2C1SCLPPS      equ	625	;# 
  1797   000272                     U1RXPPS         equ	626	;# 
  1798   000273                     U1CTSPPS        equ	627	;# 
  1799   000274                     U2RXPPS         equ	628	;# 
  1800   000275                     U2CTSPPS        equ	629	;# 
  1801   000276                     U3RXPPS         equ	630	;# 
  1802   000277                     U3CTSPPS        equ	631	;# 
  1803   000286                     RB6I2C          equ	646	;# 
  1804   000287                     RB4I2C          equ	647	;# 
  1805   00028A                     I2C1RXB         equ	650	;# 
  1806   00028B                     I2C1TXB         equ	651	;# 
  1807   00028C                     I2C1CNTL        equ	652	;# 
  1808   00028D                     I2C1CNTH        equ	653	;# 
  1809   00028E                     I2C1ADB0        equ	654	;# 
  1810   00028F                     I2C1ADB1        equ	655	;# 
  1811   000290                     I2C1ADR0        equ	656	;# 
  1812   000291                     I2C1ADR1        equ	657	;# 
  1813   000292                     I2C1ADR2        equ	658	;# 
  1814   000293                     I2C1ADR3        equ	659	;# 
  1815   000294                     I2C1CON0        equ	660	;# 
  1816   000295                     I2C1CON1        equ	661	;# 
  1817   000296                     I2C1CON2        equ	662	;# 
  1818   000297                     I2C1ERR         equ	663	;# 
  1819   000298                     I2C1STAT0       equ	664	;# 
  1820   000299                     I2C1STAT1       equ	665	;# 
  1821   00029A                     I2C1PIR         equ	666	;# 
  1822   00029B                     I2C1PIE         equ	667	;# 
  1823   00029C                     I2C1BTO         equ	668	;# 
  1824   00029D                     I2C1BAUD        equ	669	;# 
  1825   00029E                     I2C1CLK         equ	670	;# 
  1826   00029F                     I2C1BTOC        equ	671	;# 
  1827   0002A1                     U1RXB           equ	673	;# 
  1828   0002A1                     U1RXBL          equ	673	;# 
  1829   0002A2                     U1RXCHK         equ	674	;# 
  1830   0002A3                     U1TXB           equ	675	;# 
  1831   0002A3                     U1TXBL          equ	675	;# 
  1832   0002A4                     U1TXCHK         equ	676	;# 
  1833   0002A5                     U1P1            equ	677	;# 
  1834   0002A5                     U1P1L           equ	677	;# 
  1835   0002A6                     U1P1H           equ	678	;# 
  1836   0002A7                     U1P2            equ	679	;# 
  1837   0002A7                     U1P2L           equ	679	;# 
  1838   0002A8                     U1P2H           equ	680	;# 
  1839   0002A9                     U1P3            equ	681	;# 
  1840   0002A9                     U1P3L           equ	681	;# 
  1841   0002AA                     U1P3H           equ	682	;# 
  1842   0002AB                     U1CON0          equ	683	;# 
  1843   0002AC                     U1CON1          equ	684	;# 
  1844   0002AD                     U1CON2          equ	685	;# 
  1845   0002AE                     U1BRG           equ	686	;# 
  1846   0002AE                     U1BRGL          equ	686	;# 
  1847   0002AF                     U1BRGH          equ	687	;# 
  1848   0002B0                     U1FIFO          equ	688	;# 
  1849   0002B1                     U1UIR           equ	689	;# 
  1850   0002B2                     U1ERRIR         equ	690	;# 
  1851   0002B3                     U1ERRIE         equ	691	;# 
  1852   0002B4                     U2RXB           equ	692	;# 
  1853   0002B4                     U2RXBL          equ	692	;# 
  1854   0002B6                     U2TXB           equ	694	;# 
  1855   0002B6                     U2TXBL          equ	694	;# 
  1856   0002B8                     U2P1            equ	696	;# 
  1857   0002B8                     U2P1L           equ	696	;# 
  1858   0002BA                     U2P2            equ	698	;# 
  1859   0002BA                     U2P2L           equ	698	;# 
  1860   0002BC                     U2P3            equ	700	;# 
  1861   0002BC                     U2P3L           equ	700	;# 
  1862   0002BE                     U2CON0          equ	702	;# 
  1863   0002BF                     U2CON1          equ	703	;# 
  1864   0002C0                     U2CON2          equ	704	;# 
  1865   0002C1                     U2BRG           equ	705	;# 
  1866   0002C1                     U2BRGL          equ	705	;# 
  1867   0002C2                     U2BRGH          equ	706	;# 
  1868   0002C3                     U2FIFO          equ	707	;# 
  1869   0002C4                     U2UIR           equ	708	;# 
  1870   0002C5                     U2ERRIR         equ	709	;# 
  1871   0002C6                     U2ERRIE         equ	710	;# 
  1872   0002C7                     U3RXB           equ	711	;# 
  1873   0002C7                     U3RXBL          equ	711	;# 
  1874   0002C9                     U3TXB           equ	713	;# 
  1875   0002C9                     U3TXBL          equ	713	;# 
  1876   0002CB                     U3P1            equ	715	;# 
  1877   0002CB                     U3P1L           equ	715	;# 
  1878   0002CD                     U3P2            equ	717	;# 
  1879   0002CD                     U3P2L           equ	717	;# 
  1880   0002CF                     U3P3            equ	719	;# 
  1881   0002CF                     U3P3L           equ	719	;# 
  1882   0002D1                     U3CON0          equ	721	;# 
  1883   0002D2                     U3CON1          equ	722	;# 
  1884   0002D3                     U3CON2          equ	723	;# 
  1885   0002D4                     U3BRG           equ	724	;# 
  1886   0002D4                     U3BRGL          equ	724	;# 
  1887   0002D5                     U3BRGH          equ	725	;# 
  1888   0002D6                     U3FIFO          equ	726	;# 
  1889   0002D7                     U3UIR           equ	727	;# 
  1890   0002D8                     U3ERRIR         equ	728	;# 
  1891   0002D9                     U3ERRIE         equ	729	;# 
  1892   000300                     SMT1TMR         equ	768	;# 
  1893   000300                     SMT1TMRL        equ	768	;# 
  1894   000301                     SMT1TMRH        equ	769	;# 
  1895   000302                     SMT1TMRU        equ	770	;# 
  1896   000303                     SMT1CPR         equ	771	;# 
  1897   000303                     SMT1CPRL        equ	771	;# 
  1898   000304                     SMT1CPRH        equ	772	;# 
  1899   000305                     SMT1CPRU        equ	773	;# 
  1900   000306                     SMT1CPW         equ	774	;# 
  1901   000306                     SMT1CPWL        equ	774	;# 
  1902   000307                     SMT1CPWH        equ	775	;# 
  1903   000308                     SMT1CPWU        equ	776	;# 
  1904   000309                     SMT1PR          equ	777	;# 
  1905   000309                     SMT1PRL         equ	777	;# 
  1906   00030A                     SMT1PRH         equ	778	;# 
  1907   00030B                     SMT1PRU         equ	779	;# 
  1908   00030C                     SMT1CON0        equ	780	;# 
  1909   00030D                     SMT1CON1        equ	781	;# 
  1910   00030E                     SMT1STAT        equ	782	;# 
  1911   00030F                     SMT1CLK         equ	783	;# 
  1912   000310                     SMT1SIG         equ	784	;# 
  1913   000311                     SMT1WIN         equ	785	;# 
  1914   000312                     TMR1            equ	786	;# 
  1915   000312                     TMR1L           equ	786	;# 
  1916   000313                     TMR1H           equ	787	;# 
  1917   000314                     T1CON           equ	788	;# 
  1918   000314                     TMR1CON         equ	788	;# 
  1919   000315                     T1GCON          equ	789	;# 
  1920   000315                     TMR1GCON        equ	789	;# 
  1921   000316                     T1GATE          equ	790	;# 
  1922   000316                     TMR1GATE        equ	790	;# 
  1923   000317                     T1CLK           equ	791	;# 
  1924   000317                     TMR1CLK         equ	791	;# 
  1925   000317                     PR1             equ	791	;# 
  1926   000318                     TMR0L           equ	792	;# 
  1927   000318                     TMR0            equ	792	;# 
  1928   000319                     TMR0H           equ	793	;# 
  1929   000319                     PR0             equ	793	;# 
  1930   00031A                     T0CON0          equ	794	;# 
  1931   00031B                     T0CON1          equ	795	;# 
  1932   00031C                     T2TMR           equ	796	;# 
  1933   00031C                     TMR2            equ	796	;# 
  1934   00031D                     T2PR            equ	797	;# 
  1935   00031D                     PR2             equ	797	;# 
  1936   00031E                     T2CON           equ	798	;# 
  1937   00031F                     T2HLT           equ	799	;# 
  1938   000320                     T2CLKCON        equ	800	;# 
  1939   000320                     T2CLK           equ	800	;# 
  1940   000321                     T2RST           equ	801	;# 
  1941   000323                     TMR3            equ	803	;# 
  1942   000323                     TMR3L           equ	803	;# 
  1943   000324                     TMR3H           equ	804	;# 
  1944   000325                     T3CON           equ	805	;# 
  1945   000325                     TMR3CON         equ	805	;# 
  1946   000326                     T3GCON          equ	806	;# 
  1947   000326                     TMR3GCON        equ	806	;# 
  1948   000327                     T3GATE          equ	807	;# 
  1949   000327                     TMR3GATE        equ	807	;# 
  1950   000328                     T3CLK           equ	808	;# 
  1951   000328                     TMR3CLK         equ	808	;# 
  1952   000328                     PR3             equ	808	;# 
  1953   000329                     T4TMR           equ	809	;# 
  1954   000329                     TMR4            equ	809	;# 
  1955   00032A                     T4PR            equ	810	;# 
  1956   00032A                     PR4             equ	810	;# 
  1957   00032B                     T4CON           equ	811	;# 
  1958   00032C                     T4HLT           equ	812	;# 
  1959   00032D                     T4CLKCON        equ	813	;# 
  1960   00032D                     T4CLK           equ	813	;# 
  1961   00032E                     T4RST           equ	814	;# 
  1962   000340                     CCPR1           equ	832	;# 
  1963   000340                     CCPR1L          equ	832	;# 
  1964   000341                     CCPR1H          equ	833	;# 
  1965   000342                     CCP1CON         equ	834	;# 
  1966   000343                     CCP1CAP         equ	835	;# 
  1967   00034C                     CCPTMRS0        equ	844	;# 
  1968   00034E                     CRCDATA         equ	846	;# 
  1969   00034E                     CRCDATAL        equ	846	;# 
  1970   00034F                     CRCDATAH        equ	847	;# 
  1971   000350                     CRCDATAU        equ	848	;# 
  1972   000351                     CRCDATAT        equ	849	;# 
  1973   000352                     CRCOUT          equ	850	;# 
  1974   000352                     CRCSHFT         equ	850	;# 
  1975   000352                     CRCXOR          equ	850	;# 
  1976   000352                     CRCOUTL         equ	850	;# 
  1977   000352                     CRCSHFTL        equ	850	;# 
  1978   000352                     CRCSHIFTL       equ	850	;# 
  1979   000352                     CRCXORL         equ	850	;# 
  1980   000353                     CRCOUTH         equ	851	;# 
  1981   000353                     CRCSHFTH        equ	851	;# 
  1982   000353                     CRCSHIFTH       equ	851	;# 
  1983   000353                     CRCXORH         equ	851	;# 
  1984   000354                     CRCOUTU         equ	852	;# 
  1985   000354                     CRCSHFTU        equ	852	;# 
  1986   000354                     CRCSHIFTU       equ	852	;# 
  1987   000354                     CRCXORU         equ	852	;# 
  1988   000355                     CRCOUTT         equ	853	;# 
  1989   000355                     CRCSHFTT        equ	853	;# 
  1990   000355                     CRCSHIFTT       equ	853	;# 
  1991   000355                     CRCXORT         equ	853	;# 
  1992   000356                     CRCCON0         equ	854	;# 
  1993   000357                     CRCCON1         equ	855	;# 
  1994   000358                     CRCCON2         equ	856	;# 
  1995   00035A                     SCANLADR        equ	858	;# 
  1996   00035A                     SCANLADRL       equ	858	;# 
  1997   00035B                     SCANLADRH       equ	859	;# 
  1998   00035C                     SCANLADRU       equ	860	;# 
  1999   00035D                     SCANHADR        equ	861	;# 
  2000   00035D                     SCANHADRL       equ	861	;# 
  2001   00035E                     SCANHADRH       equ	862	;# 
  2002   00035F                     SCANHADRU       equ	863	;# 
  2003   000360                     SCANCON0        equ	864	;# 
  2004   000361                     SCANTRIG        equ	865	;# 
  2005   000367                     IPR0            equ	871	;# 
  2006   000368                     IPR1            equ	872	;# 
  2007   000369                     IPR2            equ	873	;# 
  2008   00036A                     IPR3            equ	874	;# 
  2009   00036B                     IPR4            equ	875	;# 
  2010   00036C                     IPR5            equ	876	;# 
  2011   00036D                     IPR6            equ	877	;# 
  2012   00036E                     IPR7            equ	878	;# 
  2013   00036F                     IPR8            equ	879	;# 
  2014   000370                     IPR9            equ	880	;# 
  2015   000371                     IPR10           equ	881	;# 
  2016   000373                     STATUS_CSHAD    equ	883	;# 
  2017   000374                     WREG_CSHAD      equ	884	;# 
  2018   000375                     BSR_CSHAD       equ	885	;# 
  2019   000376                     SHADCON         equ	886	;# 
  2020   000377                     STATUS_SHAD     equ	887	;# 
  2021   000378                     WREG_SHAD       equ	888	;# 
  2022   000379                     BSR_SHAD        equ	889	;# 
  2023   00037A                     PCLATH_SHAD     equ	890	;# 
  2024   00037B                     PCLATU_SHAD     equ	891	;# 
  2025   00037C                     FSR0SH          equ	892	;# 
  2026   00037C                     FSR0L_SHAD      equ	892	;# 
  2027   00037D                     FSR0H_SHAD      equ	893	;# 
  2028   00037E                     FSR1SH          equ	894	;# 
  2029   00037E                     FSR1L_SHAD      equ	894	;# 
  2030   00037F                     FSR1H_SHAD      equ	895	;# 
  2031   000380                     FSR2SH          equ	896	;# 
  2032   000380                     FSR2L_SHAD      equ	896	;# 
  2033   000381                     FSR2H_SHAD      equ	897	;# 
  2034   000382                     PRODSH          equ	898	;# 
  2035   000382                     PRODL_SHAD      equ	898	;# 
  2036   000383                     PRODH_SHAD      equ	899	;# 
  2037   0003BC                     CWG1CLK         equ	956	;# 
  2038   0003BC                     CWG1CLKCON      equ	956	;# 
  2039   0003BD                     CWG1ISM         equ	957	;# 
  2040   0003BD                     CWG1DAT         equ	957	;# 
  2041   0003BE                     CWG1DBR         equ	958	;# 
  2042   0003BF                     CWG1DBF         equ	959	;# 
  2043   0003C0                     CWG1CON0        equ	960	;# 
  2044   0003C1                     CWG1CON1        equ	961	;# 
  2045   0003C2                     CWG1AS0         equ	962	;# 
  2046   0003C3                     CWG1AS1         equ	963	;# 
  2047   0003C4                     CWG1STR         equ	964	;# 
  2048   0003D7                     FVRCON          equ	983	;# 
  2049   0003D8                     ADCPCON         equ	984	;# 
  2050   0003D8                     ADCP            equ	984	;# 
  2051   0003D9                     ADLTH           equ	985	;# 
  2052   0003D9                     ADLTHL          equ	985	;# 
  2053   0003DA                     ADLTHH          equ	986	;# 
  2054   0003DB                     ADUTH           equ	987	;# 
  2055   0003DB                     ADUTHL          equ	987	;# 
  2056   0003DC                     ADUTHH          equ	988	;# 
  2057   0003DD                     ADERR           equ	989	;# 
  2058   0003DD                     ADERRL          equ	989	;# 
  2059   0003DE                     ADERRH          equ	990	;# 
  2060   0003DF                     ADSTPT          equ	991	;# 
  2061   0003DF                     ADSTPTL         equ	991	;# 
  2062   0003E0                     ADSTPTH         equ	992	;# 
  2063   0003E1                     ADFLTR          equ	993	;# 
  2064   0003E1                     ADFLTRL         equ	993	;# 
  2065   0003E2                     ADFLTRH         equ	994	;# 
  2066   0003E3                     ADACC           equ	995	;# 
  2067   0003E3                     ADACCL          equ	995	;# 
  2068   0003E4                     ADACCH          equ	996	;# 
  2069   0003E5                     ADACCU          equ	997	;# 
  2070   0003E6                     ADCNT           equ	998	;# 
  2071   0003E7                     ADRPT           equ	999	;# 
  2072   0003E8                     ADPREV          equ	1000	;# 
  2073   0003E8                     ADPREVL         equ	1000	;# 
  2074   0003E9                     ADPREVH         equ	1001	;# 
  2075   0003EA                     ADRES           equ	1002	;# 
  2076   0003EA                     ADRESL          equ	1002	;# 
  2077   0003EB                     ADRESH          equ	1003	;# 
  2078   0003EC                     ADPCH           equ	1004	;# 
  2079   0003EE                     ADACQ           equ	1006	;# 
  2080   0003EE                     ADACQL          equ	1006	;# 
  2081   0003EF                     ADACQH          equ	1007	;# 
  2082   0003F0                     ADCAP           equ	1008	;# 
  2083   0003F1                     ADPRE           equ	1009	;# 
  2084   0003F1                     ADPREL          equ	1009	;# 
  2085   0003F2                     ADPREH          equ	1010	;# 
  2086   0003F3                     ADCON0          equ	1011	;# 
  2087   0003F4                     ADCON1          equ	1012	;# 
  2088   0003F5                     ADCON2          equ	1013	;# 
  2089   0003F6                     ADCON3          equ	1014	;# 
  2090   0003F7                     ADSTAT          equ	1015	;# 
  2091   0003F8                     ADREF           equ	1016	;# 
  2092   0003F9                     ADACT           equ	1017	;# 
  2093   0003FA                     ADCLK           equ	1018	;# 
  2094   000400                     ANSELA          equ	1024	;# 
  2095   000401                     WPUA            equ	1025	;# 
  2096   000402                     ODCONA          equ	1026	;# 
  2097   000403                     SLRCONA         equ	1027	;# 
  2098   000404                     INLVLA          equ	1028	;# 
  2099   000405                     IOCAP           equ	1029	;# 
  2100   000406                     IOCAN           equ	1030	;# 
  2101   000407                     IOCAF           equ	1031	;# 
  2102   000408                     ANSELB          equ	1032	;# 
  2103   000409                     WPUB            equ	1033	;# 
  2104   00040A                     ODCONB          equ	1034	;# 
  2105   00040B                     SLRCONB         equ	1035	;# 
  2106   00040C                     INLVLB          equ	1036	;# 
  2107   00040D                     IOCBP           equ	1037	;# 
  2108   00040E                     IOCBN           equ	1038	;# 
  2109   00040F                     IOCBF           equ	1039	;# 
  2110   000410                     ANSELC          equ	1040	;# 
  2111   000411                     WPUC            equ	1041	;# 
  2112   000412                     ODCONC          equ	1042	;# 
  2113   000413                     SLRCONC         equ	1043	;# 
  2114   000414                     INLVLC          equ	1044	;# 
  2115   000415                     IOCCP           equ	1045	;# 
  2116   000416                     IOCCN           equ	1046	;# 
  2117   000417                     IOCCF           equ	1047	;# 
  2118   000440                     NCO1ACC         equ	1088	;# 
  2119   000440                     NCO1ACCL        equ	1088	;# 
  2120   000441                     NCO1ACCH        equ	1089	;# 
  2121   000442                     NCO1ACCU        equ	1090	;# 
  2122   000443                     NCO1INC         equ	1091	;# 
  2123   000443                     NCO1INCL        equ	1091	;# 
  2124   000444                     NCO1INCH        equ	1092	;# 
  2125   000445                     NCO1INCU        equ	1093	;# 
  2126   000446                     NCO1CON         equ	1094	;# 
  2127   000447                     NCO1CLK         equ	1095	;# 
  2128   000458                     FSCMCON         equ	1112	;# 
  2129   000459                     IVTLOCK         equ	1113	;# 
  2130   00045A                     IVTAD           equ	1114	;# 
  2131   00045A                     IVTADL          equ	1114	;# 
  2132   00045B                     IVTADH          equ	1115	;# 
  2133   00045C                     IVTADU          equ	1116	;# 
  2134   00045D                     IVTBASE         equ	1117	;# 
  2135   00045D                     IVTBASEL        equ	1117	;# 
  2136   00045E                     IVTBASEH        equ	1118	;# 
  2137   00045F                     IVTBASEU        equ	1119	;# 
  2138   000460                     PWM1ERS         equ	1120	;# 
  2139   000461                     PWM1CLK         equ	1121	;# 
  2140   000462                     PWM1LDS         equ	1122	;# 
  2141   000463                     PWM1PR          equ	1123	;# 
  2142   000463                     PWM1PRL         equ	1123	;# 
  2143   000464                     PWM1PRH         equ	1124	;# 
  2144   000465                     PWM1CPRE        equ	1125	;# 
  2145   000466                     PWM1PIPOS       equ	1126	;# 
  2146   000467                     PWM1GIR         equ	1127	;# 
  2147   000468                     PWM1GIE         equ	1128	;# 
  2148   000469                     PWM1CON         equ	1129	;# 
  2149   00046A                     PWM1S1CFG       equ	1130	;# 
  2150   00046B                     PWM1S1P1        equ	1131	;# 
  2151   00046B                     PWM1S1P1L       equ	1131	;# 
  2152   00046C                     PWM1S1P1H       equ	1132	;# 
  2153   00046D                     PWM1S1P2        equ	1133	;# 
  2154   00046D                     PWM1S1P2L       equ	1133	;# 
  2155   00046E                     PWM1S1P2H       equ	1134	;# 
  2156   00046F                     PWM2ERS         equ	1135	;# 
  2157   000470                     PWM2CLK         equ	1136	;# 
  2158   000471                     PWM2LDS         equ	1137	;# 
  2159   000472                     PWM2PR          equ	1138	;# 
  2160   000472                     PWM2PRL         equ	1138	;# 
  2161   000473                     PWM2PRH         equ	1139	;# 
  2162   000474                     PWM2CPRE        equ	1140	;# 
  2163   000475                     PWM2PIPOS       equ	1141	;# 
  2164   000476                     PWM2GIR         equ	1142	;# 
  2165   000477                     PWM2GIE         equ	1143	;# 
  2166   000478                     PWM2CON         equ	1144	;# 
  2167   000479                     PWM2S1CFG       equ	1145	;# 
  2168   00047A                     PWM2S1P1        equ	1146	;# 
  2169   00047A                     PWM2S1P1L       equ	1146	;# 
  2170   00047B                     PWM2S1P1H       equ	1147	;# 
  2171   00047C                     PWM2S1P2        equ	1148	;# 
  2172   00047C                     PWM2S1P2L       equ	1148	;# 
  2173   00047D                     PWM2S1P2H       equ	1149	;# 
  2174   00047E                     PWM3ERS         equ	1150	;# 
  2175   00047F                     PWM3CLK         equ	1151	;# 
  2176   000480                     PWM3LDS         equ	1152	;# 
  2177   000481                     PWM3PR          equ	1153	;# 
  2178   000481                     PWM3PRL         equ	1153	;# 
  2179   000482                     PWM3PRH         equ	1154	;# 
  2180   000483                     PWM3CPRE        equ	1155	;# 
  2181   000484                     PWM3PIPOS       equ	1156	;# 
  2182   000485                     PWM3GIR         equ	1157	;# 
  2183   000486                     PWM3GIE         equ	1158	;# 
  2184   000487                     PWM3CON         equ	1159	;# 
  2185   000488                     PWM3S1CFG       equ	1160	;# 
  2186   000489                     PWM3S1P1        equ	1161	;# 
  2187   000489                     PWM3S1P1L       equ	1161	;# 
  2188   00048A                     PWM3S1P1H       equ	1162	;# 
  2189   00048B                     PWM3S1P2        equ	1163	;# 
  2190   00048B                     PWM3S1P2L       equ	1163	;# 
  2191   00048C                     PWM3S1P2H       equ	1164	;# 
  2192   00049C                     PWMLOAD         equ	1180	;# 
  2193   00049D                     PWMEN           equ	1181	;# 
  2194   0004A8                     PIE0            equ	1192	;# 
  2195   0004A9                     PIE1            equ	1193	;# 
  2196   0004AA                     PIE2            equ	1194	;# 
  2197   0004AB                     PIE3            equ	1195	;# 
  2198   0004AC                     PIE4            equ	1196	;# 
  2199   0004AD                     PIE5            equ	1197	;# 
  2200   0004AE                     PIE6            equ	1198	;# 
  2201   0004AF                     PIE7            equ	1199	;# 
  2202   0004B0                     PIE8            equ	1200	;# 
  2203   0004B1                     PIE9            equ	1201	;# 
  2204   0004B2                     PIE10           equ	1202	;# 
  2205   0004B3                     PIR0            equ	1203	;# 
  2206   0004B4                     PIR1            equ	1204	;# 
  2207   0004B5                     PIR2            equ	1205	;# 
  2208   0004B6                     PIR3            equ	1206	;# 
  2209   0004B7                     PIR4            equ	1207	;# 
  2210   0004B8                     PIR5            equ	1208	;# 
  2211   0004B9                     PIR6            equ	1209	;# 
  2212   0004BA                     PIR7            equ	1210	;# 
  2213   0004BB                     PIR8            equ	1211	;# 
  2214   0004BC                     PIR9            equ	1212	;# 
  2215   0004BD                     PIR10           equ	1213	;# 
  2216   0004BE                     LATA            equ	1214	;# 
  2217   0004BF                     LATB            equ	1215	;# 
  2218   0004C0                     LATC            equ	1216	;# 
  2219   0004C6                     TRISA           equ	1222	;# 
  2220   0004C7                     TRISB           equ	1223	;# 
  2221   0004C8                     TRISC           equ	1224	;# 
  2222   0004CE                     PORTA           equ	1230	;# 
  2223   0004CF                     PORTB           equ	1231	;# 
  2224   0004D0                     PORTC           equ	1232	;# 
  2225   0004D6                     INTCON0         equ	1238	;# 
  2226   0004D7                     INTCON1         equ	1239	;# 
  2227   0004D8                     STATUS          equ	1240	;# 
  2228   0004D9                     FSR2            equ	1241	;# 
  2229   0004D9                     FSR2L           equ	1241	;# 
  2230   0004DA                     FSR2H           equ	1242	;# 
  2231   0004DB                     PLUSW2          equ	1243	;# 
  2232   0004DC                     PREINC2         equ	1244	;# 
  2233   0004DD                     POSTDEC2        equ	1245	;# 
  2234   0004DE                     POSTINC2        equ	1246	;# 
  2235   0004DF                     INDF2           equ	1247	;# 
  2236   0004E0                     BSR             equ	1248	;# 
  2237   0004E1                     FSR1            equ	1249	;# 
  2238   0004E1                     FSR1L           equ	1249	;# 
  2239   0004E2                     FSR1H           equ	1250	;# 
  2240   0004E3                     PLUSW1          equ	1251	;# 
  2241   0004E4                     PREINC1         equ	1252	;# 
  2242   0004E5                     POSTDEC1        equ	1253	;# 
  2243   0004E6                     POSTINC1        equ	1254	;# 
  2244   0004E7                     INDF1           equ	1255	;# 
  2245   0004E8                     WREG            equ	1256	;# 
  2246   0004E9                     FSR0            equ	1257	;# 
  2247   0004E9                     FSR0L           equ	1257	;# 
  2248   0004EA                     FSR0H           equ	1258	;# 
  2249   0004EB                     PLUSW0          equ	1259	;# 
  2250   0004EC                     PREINC0         equ	1260	;# 
  2251   0004ED                     POSTDEC0        equ	1261	;# 
  2252   0004EE                     POSTINC0        equ	1262	;# 
  2253   0004EF                     INDF0           equ	1263	;# 
  2254   0004F0                     PCON0           equ	1264	;# 
  2255   0004F1                     PCON1           equ	1265	;# 
  2256   0004F2                     CPUDOZE         equ	1266	;# 
  2257   0004F3                     PROD            equ	1267	;# 
  2258   0004F3                     PRODL           equ	1267	;# 
  2259   0004F4                     PRODH           equ	1268	;# 
  2260   0004F5                     TABLAT          equ	1269	;# 
  2261   0004F6                     TBLPTR          equ	1270	;# 
  2262   0004F6                     TBLPTRL         equ	1270	;# 
  2263   0004F7                     TBLPTRH         equ	1271	;# 
  2264   0004F8                     TBLPTRU         equ	1272	;# 
  2265   0004F9                     PCLAT           equ	1273	;# 
  2266   0004F9                     PCL             equ	1273	;# 
  2267   0004FA                     PCLATH          equ	1274	;# 
  2268   0004FB                     PCLATU          equ	1275	;# 
  2269   0004FC                     STKPTR          equ	1276	;# 
  2270   0004FD                     TOS             equ	1277	;# 
  2271   0004FD                     TOSL            equ	1277	;# 
  2272   0004FE                     TOSH            equ	1278	;# 
  2273   0004FF                     TOSU            equ	1279	;# 
  2274   000039                     CLKRCON         equ	57	;# 
  2275   00003A                     CLKRCLK         equ	58	;# 
  2276   000040                     NVMCON0         equ	64	;# 
  2277   000041                     NVMCON1         equ	65	;# 
  2278   000042                     NVMLOCK         equ	66	;# 
  2279   000043                     NVMADR          equ	67	;# 
  2280   000043                     NVMADRL         equ	67	;# 
  2281   000044                     NVMADRH         equ	68	;# 
  2282   000045                     NVMADRU         equ	69	;# 
  2283   000046                     NVMDAT          equ	70	;# 
  2284   000046                     NVMDATL         equ	70	;# 
  2285   000047                     NVMDATH         equ	71	;# 
  2286   000048                     VREGCON         equ	72	;# 
  2287   000049                     BORCON          equ	73	;# 
  2288   00004A                     HLVDCON0        equ	74	;# 
  2289   00004B                     HLVDCON1        equ	75	;# 
  2290   00004C                     ZCDCON          equ	76	;# 
  2291   000063                     PMD0            equ	99	;# 
  2292   000064                     PMD1            equ	100	;# 
  2293   000065                     PMD2            equ	101	;# 
  2294   000066                     PMD3            equ	102	;# 
  2295   000067                     PMD4            equ	103	;# 
  2296   000068                     PMD5            equ	104	;# 
  2297   00006A                     MD1CON0         equ	106	;# 
  2298   00006B                     MD1CON1         equ	107	;# 
  2299   00006C                     MD1SRC          equ	108	;# 
  2300   00006D                     MD1CARL         equ	109	;# 
  2301   00006E                     MD1CARH         equ	110	;# 
  2302   00006F                     CMOUT           equ	111	;# 
  2303   000070                     CM1CON0         equ	112	;# 
  2304   000071                     CM1CON1         equ	113	;# 
  2305   000072                     CM1NCH          equ	114	;# 
  2306   000073                     CM1PCH          equ	115	;# 
  2307   000074                     CM2CON0         equ	116	;# 
  2308   000075                     CM2CON1         equ	117	;# 
  2309   000076                     CM2NCH          equ	118	;# 
  2310   000077                     CM2PCH          equ	119	;# 
  2311   000078                     WDTCON0         equ	120	;# 
  2312   000079                     WDTCON1         equ	121	;# 
  2313   00007A                     WDTPS           equ	122	;# 
  2314   00007A                     WDTPSL          equ	122	;# 
  2315   00007B                     WDTPSH          equ	123	;# 
  2316   00007C                     WDTTMR          equ	124	;# 
  2317   00007D                     DAC1DAT         equ	125	;# 
  2318   00007D                     DAC1DATL        equ	125	;# 
  2319   00007F                     DAC1CON         equ	127	;# 
  2320   000080                     SPI1RXB         equ	128	;# 
  2321   000081                     SPI1TXB         equ	129	;# 
  2322   000082                     SPI1TCNT        equ	130	;# 
  2323   000082                     SPI1TCNTL       equ	130	;# 
  2324   000083                     SPI1TCNTH       equ	131	;# 
  2325   000084                     SPI1CON0        equ	132	;# 
  2326   000085                     SPI1CON1        equ	133	;# 
  2327   000086                     SPI1CON2        equ	134	;# 
  2328   000087                     SPI1STATUS      equ	135	;# 
  2329   000088                     SPI1TWIDTH      equ	136	;# 
  2330   000089                     SPI1BAUD        equ	137	;# 
  2331   00008A                     SPI1INTF        equ	138	;# 
  2332   00008B                     SPI1INTE        equ	139	;# 
  2333   00008C                     SPI1CLK         equ	140	;# 
  2334   00008D                     SPI2RXB         equ	141	;# 
  2335   00008E                     SPI2TXB         equ	142	;# 
  2336   00008F                     SPI2TCNT        equ	143	;# 
  2337   00008F                     SPI2TCNTL       equ	143	;# 
  2338   000090                     SPI2TCNTH       equ	144	;# 
  2339   000091                     SPI2CON0        equ	145	;# 
  2340   000092                     SPI2CON1        equ	146	;# 
  2341   000093                     SPI2CON2        equ	147	;# 
  2342   000094                     SPI2STATUS      equ	148	;# 
  2343   000095                     SPI2TWIDTH      equ	149	;# 
  2344   000096                     SPI2BAUD        equ	150	;# 
  2345   000097                     SPI2INTF        equ	151	;# 
  2346   000098                     SPI2INTE        equ	152	;# 
  2347   000099                     SPI2CLK         equ	153	;# 
  2348   0000A0                     DAC2DAT         equ	160	;# 
  2349   0000A0                     DAC2DATL        equ	160	;# 
  2350   0000A2                     DAC2CON         equ	162	;# 
  2351   0000A3                     OPA1CON0        equ	163	;# 
  2352   0000A4                     OPA1CON1        equ	164	;# 
  2353   0000A5                     OPA1CON2        equ	165	;# 
  2354   0000A6                     OPA1CON3        equ	166	;# 
  2355   0000A7                     OPA1HWC         equ	167	;# 
  2356   0000A8                     OPA1OFFSET      equ	168	;# 
  2357   0000A9                     OPA1ORS         equ	169	;# 
  2358   0000AC                     ACTCON          equ	172	;# 
  2359   0000AD                     OSCCON1         equ	173	;# 
  2360   0000AE                     OSCCON2         equ	174	;# 
  2361   0000AF                     OSCCON3         equ	175	;# 
  2362   0000B0                     OSCTUNE         equ	176	;# 
  2363   0000B1                     OSCFRQ          equ	177	;# 
  2364   0000B1                     OSCFREQ         equ	177	;# 
  2365   0000B2                     OSCSTAT         equ	178	;# 
  2366   0000B2                     OSCSTAT1        equ	178	;# 
  2367   0000B3                     OSCEN           equ	179	;# 
  2368   0000B4                     PRLOCK          equ	180	;# 
  2369   0000B5                     SCANPR          equ	181	;# 
  2370   0000B6                     DMA1PR          equ	182	;# 
  2371   0000B7                     DMA2PR          equ	183	;# 
  2372   0000B8                     DMA3PR          equ	184	;# 
  2373   0000B9                     DMA4PR          equ	185	;# 
  2374   0000BE                     MAINPR          equ	190	;# 
  2375   0000BF                     ISRPR           equ	191	;# 
  2376   0000D4                     CLCDATA         equ	212	;# 
  2377   0000D5                     CLCSELECT       equ	213	;# 
  2378   0000D6                     CLCnCON         equ	214	;# 
  2379   0000D7                     CLCnPOL         equ	215	;# 
  2380   0000D8                     CLCnSEL0        equ	216	;# 
  2381   0000D9                     CLCnSEL1        equ	217	;# 
  2382   0000DA                     CLCnSEL2        equ	218	;# 
  2383   0000DB                     CLCnSEL3        equ	219	;# 
  2384   0000DC                     CLCnGLS0        equ	220	;# 
  2385   0000DD                     CLCnGLS1        equ	221	;# 
  2386   0000DE                     CLCnGLS2        equ	222	;# 
  2387   0000DF                     CLCnGLS3        equ	223	;# 
  2388   0000E8                     DMASELECT       equ	232	;# 
  2389   0000E9                     DMAnBUF         equ	233	;# 
  2390   0000EA                     DMAnDCNT        equ	234	;# 
  2391   0000EA                     DMAnDCNTL       equ	234	;# 
  2392   0000EB                     DMAnDCNTH       equ	235	;# 
  2393   0000EC                     DMAnDPTR        equ	236	;# 
  2394   0000EC                     DMAnDPTRL       equ	236	;# 
  2395   0000ED                     DMAnDPTRH       equ	237	;# 
  2396   0000EE                     DMAnDSZ         equ	238	;# 
  2397   0000EE                     DMAnDSZL        equ	238	;# 
  2398   0000EF                     DMAnDSZH        equ	239	;# 
  2399   0000F0                     DMAnDSA         equ	240	;# 
  2400   0000F0                     DMAnDSAL        equ	240	;# 
  2401   0000F1                     DMAnDSAH        equ	241	;# 
  2402   0000F2                     DMAnSCNT        equ	242	;# 
  2403   0000F2                     DMAnSCNTL       equ	242	;# 
  2404   0000F3                     DMAnSCNTH       equ	243	;# 
  2405   0000F4                     DMAnSPTR        equ	244	;# 
  2406   0000F4                     DMAnSPTRL       equ	244	;# 
  2407   0000F5                     DMAnSPTRH       equ	245	;# 
  2408   0000F6                     DMAnSPTRU       equ	246	;# 
  2409   0000F7                     DMAnSSZ         equ	247	;# 
  2410   0000F7                     DMAnSSZL        equ	247	;# 
  2411   0000F8                     DMAnSSZH        equ	248	;# 
  2412   0000F9                     DMAnSSA         equ	249	;# 
  2413   0000F9                     DMAnSSAL        equ	249	;# 
  2414   0000FA                     DMAnSSAH        equ	250	;# 
  2415   0000FB                     DMAnSSAU        equ	251	;# 
  2416   0000FC                     DMAnCON0        equ	252	;# 
  2417   0000FD                     DMAnCON1        equ	253	;# 
  2418   0000FE                     DMAnAIRQ        equ	254	;# 
  2419   0000FF                     DMAnSIRQ        equ	255	;# 
  2420   000200                     PPSLOCK         equ	512	;# 
  2421   000201                     RA0PPS          equ	513	;# 
  2422   000202                     RA1PPS          equ	514	;# 
  2423   000203                     RA2PPS          equ	515	;# 
  2424   000205                     RA4PPS          equ	517	;# 
  2425   000206                     RA5PPS          equ	518	;# 
  2426   00020D                     RB4PPS          equ	525	;# 
  2427   00020E                     RB5PPS          equ	526	;# 
  2428   00020F                     RB6PPS          equ	527	;# 
  2429   000210                     RB7PPS          equ	528	;# 
  2430   000211                     RC0PPS          equ	529	;# 
  2431   000212                     RC1PPS          equ	530	;# 
  2432   000213                     RC2PPS          equ	531	;# 
  2433   000214                     RC3PPS          equ	532	;# 
  2434   000215                     RC4PPS          equ	533	;# 
  2435   000216                     RC5PPS          equ	534	;# 
  2436   000217                     RC6PPS          equ	535	;# 
  2437   000218                     RC7PPS          equ	536	;# 
  2438   00023E                     INT0PPS         equ	574	;# 
  2439   00023F                     INT1PPS         equ	575	;# 
  2440   000240                     INT2PPS         equ	576	;# 
  2441   000241                     T0CKIPPS        equ	577	;# 
  2442   000242                     T1CKIPPS        equ	578	;# 
  2443   000243                     T1GPPS          equ	579	;# 
  2444   000244                     T3CKIPPS        equ	580	;# 
  2445   000245                     T3GPPS          equ	581	;# 
  2446   000248                     T2INPPS         equ	584	;# 
  2447   000249                     T4INPPS         equ	585	;# 
  2448   00024F                     CCP1PPS         equ	591	;# 
  2449   000251                     PWM1ERSPPS      equ	593	;# 
  2450   000252                     PWM2ERSPPS      equ	594	;# 
  2451   000253                     PWM3ERSPPS      equ	595	;# 
  2452   000257                     PWMIN0PPS       equ	599	;# 
  2453   000258                     PWMIN1PPS       equ	600	;# 
  2454   000259                     SMT1WINPPS      equ	601	;# 
  2455   00025A                     SMT1SIGPPS      equ	602	;# 
  2456   00025B                     CWG1PPS         equ	603	;# 
  2457   00025B                     CWG1INPPS       equ	603	;# 
  2458   00025E                     MD1CARLPPS      equ	606	;# 
  2459   00025E                     MDCARLPPS       equ	606	;# 
  2460   00025F                     MD1CARHPPS      equ	607	;# 
  2461   00025F                     MDCARHPPS       equ	607	;# 
  2462   000260                     MD1SRCPPS       equ	608	;# 
  2463   000260                     MDSRCPPS        equ	608	;# 
  2464   000261                     CLCIN0PPS       equ	609	;# 
  2465   000262                     CLCIN1PPS       equ	610	;# 
  2466   000263                     CLCIN2PPS       equ	611	;# 
  2467   000264                     CLCIN3PPS       equ	612	;# 
  2468   000269                     ADACTPPS        equ	617	;# 
  2469   00026A                     SPI1SCKPPS      equ	618	;# 
  2470   00026B                     SPI1SDIPPS      equ	619	;# 
  2471   00026C                     SPI1SSPPS       equ	620	;# 
  2472   00026D                     SPI2SCKPPS      equ	621	;# 
  2473   00026E                     SPI2SDIPPS      equ	622	;# 
  2474   00026F                     SPI2SSPPS       equ	623	;# 
  2475   000270                     I2C1SDAPPS      equ	624	;# 
  2476   000271                     I2C1SCLPPS      equ	625	;# 
  2477   000272                     U1RXPPS         equ	626	;# 
  2478   000273                     U1CTSPPS        equ	627	;# 
  2479   000274                     U2RXPPS         equ	628	;# 
  2480   000275                     U2CTSPPS        equ	629	;# 
  2481   000276                     U3RXPPS         equ	630	;# 
  2482   000277                     U3CTSPPS        equ	631	;# 
  2483   000286                     RB6I2C          equ	646	;# 
  2484   000287                     RB4I2C          equ	647	;# 
  2485   00028A                     I2C1RXB         equ	650	;# 
  2486   00028B                     I2C1TXB         equ	651	;# 
  2487   00028C                     I2C1CNTL        equ	652	;# 
  2488   00028D                     I2C1CNTH        equ	653	;# 
  2489   00028E                     I2C1ADB0        equ	654	;# 
  2490   00028F                     I2C1ADB1        equ	655	;# 
  2491   000290                     I2C1ADR0        equ	656	;# 
  2492   000291                     I2C1ADR1        equ	657	;# 
  2493   000292                     I2C1ADR2        equ	658	;# 
  2494   000293                     I2C1ADR3        equ	659	;# 
  2495   000294                     I2C1CON0        equ	660	;# 
  2496   000295                     I2C1CON1        equ	661	;# 
  2497   000296                     I2C1CON2        equ	662	;# 
  2498   000297                     I2C1ERR         equ	663	;# 
  2499   000298                     I2C1STAT0       equ	664	;# 
  2500   000299                     I2C1STAT1       equ	665	;# 
  2501   00029A                     I2C1PIR         equ	666	;# 
  2502   00029B                     I2C1PIE         equ	667	;# 
  2503   00029C                     I2C1BTO         equ	668	;# 
  2504   00029D                     I2C1BAUD        equ	669	;# 
  2505   00029E                     I2C1CLK         equ	670	;# 
  2506   00029F                     I2C1BTOC        equ	671	;# 
  2507   0002A1                     U1RXB           equ	673	;# 
  2508   0002A1                     U1RXBL          equ	673	;# 
  2509   0002A2                     U1RXCHK         equ	674	;# 
  2510   0002A3                     U1TXB           equ	675	;# 
  2511   0002A3                     U1TXBL          equ	675	;# 
  2512   0002A4                     U1TXCHK         equ	676	;# 
  2513   0002A5                     U1P1            equ	677	;# 
  2514   0002A5                     U1P1L           equ	677	;# 
  2515   0002A6                     U1P1H           equ	678	;# 
  2516   0002A7                     U1P2            equ	679	;# 
  2517   0002A7                     U1P2L           equ	679	;# 
  2518   0002A8                     U1P2H           equ	680	;# 
  2519   0002A9                     U1P3            equ	681	;# 
  2520   0002A9                     U1P3L           equ	681	;# 
  2521   0002AA                     U1P3H           equ	682	;# 
  2522   0002AB                     U1CON0          equ	683	;# 
  2523   0002AC                     U1CON1          equ	684	;# 
  2524   0002AD                     U1CON2          equ	685	;# 
  2525   0002AE                     U1BRG           equ	686	;# 
  2526   0002AE                     U1BRGL          equ	686	;# 
  2527   0002AF                     U1BRGH          equ	687	;# 
  2528   0002B0                     U1FIFO          equ	688	;# 
  2529   0002B1                     U1UIR           equ	689	;# 
  2530   0002B2                     U1ERRIR         equ	690	;# 
  2531   0002B3                     U1ERRIE         equ	691	;# 
  2532   0002B4                     U2RXB           equ	692	;# 
  2533   0002B4                     U2RXBL          equ	692	;# 
  2534   0002B6                     U2TXB           equ	694	;# 
  2535   0002B6                     U2TXBL          equ	694	;# 
  2536   0002B8                     U2P1            equ	696	;# 
  2537   0002B8                     U2P1L           equ	696	;# 
  2538   0002BA                     U2P2            equ	698	;# 
  2539   0002BA                     U2P2L           equ	698	;# 
  2540   0002BC                     U2P3            equ	700	;# 
  2541   0002BC                     U2P3L           equ	700	;# 
  2542   0002BE                     U2CON0          equ	702	;# 
  2543   0002BF                     U2CON1          equ	703	;# 
  2544   0002C0                     U2CON2          equ	704	;# 
  2545   0002C1                     U2BRG           equ	705	;# 
  2546   0002C1                     U2BRGL          equ	705	;# 
  2547   0002C2                     U2BRGH          equ	706	;# 
  2548   0002C3                     U2FIFO          equ	707	;# 
  2549   0002C4                     U2UIR           equ	708	;# 
  2550   0002C5                     U2ERRIR         equ	709	;# 
  2551   0002C6                     U2ERRIE         equ	710	;# 
  2552   0002C7                     U3RXB           equ	711	;# 
  2553   0002C7                     U3RXBL          equ	711	;# 
  2554   0002C9                     U3TXB           equ	713	;# 
  2555   0002C9                     U3TXBL          equ	713	;# 
  2556   0002CB                     U3P1            equ	715	;# 
  2557   0002CB                     U3P1L           equ	715	;# 
  2558   0002CD                     U3P2            equ	717	;# 
  2559   0002CD                     U3P2L           equ	717	;# 
  2560   0002CF                     U3P3            equ	719	;# 
  2561   0002CF                     U3P3L           equ	719	;# 
  2562   0002D1                     U3CON0          equ	721	;# 
  2563   0002D2                     U3CON1          equ	722	;# 
  2564   0002D3                     U3CON2          equ	723	;# 
  2565   0002D4                     U3BRG           equ	724	;# 
  2566   0002D4                     U3BRGL          equ	724	;# 
  2567   0002D5                     U3BRGH          equ	725	;# 
  2568   0002D6                     U3FIFO          equ	726	;# 
  2569   0002D7                     U3UIR           equ	727	;# 
  2570   0002D8                     U3ERRIR         equ	728	;# 
  2571   0002D9                     U3ERRIE         equ	729	;# 
  2572   000300                     SMT1TMR         equ	768	;# 
  2573   000300                     SMT1TMRL        equ	768	;# 
  2574   000301                     SMT1TMRH        equ	769	;# 
  2575   000302                     SMT1TMRU        equ	770	;# 
  2576   000303                     SMT1CPR         equ	771	;# 
  2577   000303                     SMT1CPRL        equ	771	;# 
  2578   000304                     SMT1CPRH        equ	772	;# 
  2579   000305                     SMT1CPRU        equ	773	;# 
  2580   000306                     SMT1CPW         equ	774	;# 
  2581   000306                     SMT1CPWL        equ	774	;# 
  2582   000307                     SMT1CPWH        equ	775	;# 
  2583   000308                     SMT1CPWU        equ	776	;# 
  2584   000309                     SMT1PR          equ	777	;# 
  2585   000309                     SMT1PRL         equ	777	;# 
  2586   00030A                     SMT1PRH         equ	778	;# 
  2587   00030B                     SMT1PRU         equ	779	;# 
  2588   00030C                     SMT1CON0        equ	780	;# 
  2589   00030D                     SMT1CON1        equ	781	;# 
  2590   00030E                     SMT1STAT        equ	782	;# 
  2591   00030F                     SMT1CLK         equ	783	;# 
  2592   000310                     SMT1SIG         equ	784	;# 
  2593   000311                     SMT1WIN         equ	785	;# 
  2594   000312                     TMR1            equ	786	;# 
  2595   000312                     TMR1L           equ	786	;# 
  2596   000313                     TMR1H           equ	787	;# 
  2597   000314                     T1CON           equ	788	;# 
  2598   000314                     TMR1CON         equ	788	;# 
  2599   000315                     T1GCON          equ	789	;# 
  2600   000315                     TMR1GCON        equ	789	;# 
  2601   000316                     T1GATE          equ	790	;# 
  2602   000316                     TMR1GATE        equ	790	;# 
  2603   000317                     T1CLK           equ	791	;# 
  2604   000317                     TMR1CLK         equ	791	;# 
  2605   000317                     PR1             equ	791	;# 
  2606   000318                     TMR0L           equ	792	;# 
  2607   000318                     TMR0            equ	792	;# 
  2608   000319                     TMR0H           equ	793	;# 
  2609   000319                     PR0             equ	793	;# 
  2610   00031A                     T0CON0          equ	794	;# 
  2611   00031B                     T0CON1          equ	795	;# 
  2612   00031C                     T2TMR           equ	796	;# 
  2613   00031C                     TMR2            equ	796	;# 
  2614   00031D                     T2PR            equ	797	;# 
  2615   00031D                     PR2             equ	797	;# 
  2616   00031E                     T2CON           equ	798	;# 
  2617   00031F                     T2HLT           equ	799	;# 
  2618   000320                     T2CLKCON        equ	800	;# 
  2619   000320                     T2CLK           equ	800	;# 
  2620   000321                     T2RST           equ	801	;# 
  2621   000323                     TMR3            equ	803	;# 
  2622   000323                     TMR3L           equ	803	;# 
  2623   000324                     TMR3H           equ	804	;# 
  2624   000325                     T3CON           equ	805	;# 
  2625   000325                     TMR3CON         equ	805	;# 
  2626   000326                     T3GCON          equ	806	;# 
  2627   000326                     TMR3GCON        equ	806	;# 
  2628   000327                     T3GATE          equ	807	;# 
  2629   000327                     TMR3GATE        equ	807	;# 
  2630   000328                     T3CLK           equ	808	;# 
  2631   000328                     TMR3CLK         equ	808	;# 
  2632   000328                     PR3             equ	808	;# 
  2633   000329                     T4TMR           equ	809	;# 
  2634   000329                     TMR4            equ	809	;# 
  2635   00032A                     T4PR            equ	810	;# 
  2636   00032A                     PR4             equ	810	;# 
  2637   00032B                     T4CON           equ	811	;# 
  2638   00032C                     T4HLT           equ	812	;# 
  2639   00032D                     T4CLKCON        equ	813	;# 
  2640   00032D                     T4CLK           equ	813	;# 
  2641   00032E                     T4RST           equ	814	;# 
  2642   000340                     CCPR1           equ	832	;# 
  2643   000340                     CCPR1L          equ	832	;# 
  2644   000341                     CCPR1H          equ	833	;# 
  2645   000342                     CCP1CON         equ	834	;# 
  2646   000343                     CCP1CAP         equ	835	;# 
  2647   00034C                     CCPTMRS0        equ	844	;# 
  2648   00034E                     CRCDATA         equ	846	;# 
  2649   00034E                     CRCDATAL        equ	846	;# 
  2650   00034F                     CRCDATAH        equ	847	;# 
  2651   000350                     CRCDATAU        equ	848	;# 
  2652   000351                     CRCDATAT        equ	849	;# 
  2653   000352                     CRCOUT          equ	850	;# 
  2654   000352                     CRCSHFT         equ	850	;# 
  2655   000352                     CRCXOR          equ	850	;# 
  2656   000352                     CRCOUTL         equ	850	;# 
  2657   000352                     CRCSHFTL        equ	850	;# 
  2658   000352                     CRCSHIFTL       equ	850	;# 
  2659   000352                     CRCXORL         equ	850	;# 
  2660   000353                     CRCOUTH         equ	851	;# 
  2661   000353                     CRCSHFTH        equ	851	;# 
  2662   000353                     CRCSHIFTH       equ	851	;# 
  2663   000353                     CRCXORH         equ	851	;# 
  2664   000354                     CRCOUTU         equ	852	;# 
  2665   000354                     CRCSHFTU        equ	852	;# 
  2666   000354                     CRCSHIFTU       equ	852	;# 
  2667   000354                     CRCXORU         equ	852	;# 
  2668   000355                     CRCOUTT         equ	853	;# 
  2669   000355                     CRCSHFTT        equ	853	;# 
  2670   000355                     CRCSHIFTT       equ	853	;# 
  2671   000355                     CRCXORT         equ	853	;# 
  2672   000356                     CRCCON0         equ	854	;# 
  2673   000357                     CRCCON1         equ	855	;# 
  2674   000358                     CRCCON2         equ	856	;# 
  2675   00035A                     SCANLADR        equ	858	;# 
  2676   00035A                     SCANLADRL       equ	858	;# 
  2677   00035B                     SCANLADRH       equ	859	;# 
  2678   00035C                     SCANLADRU       equ	860	;# 
  2679   00035D                     SCANHADR        equ	861	;# 
  2680   00035D                     SCANHADRL       equ	861	;# 
  2681   00035E                     SCANHADRH       equ	862	;# 
  2682   00035F                     SCANHADRU       equ	863	;# 
  2683   000360                     SCANCON0        equ	864	;# 
  2684   000361                     SCANTRIG        equ	865	;# 
  2685   000367                     IPR0            equ	871	;# 
  2686   000368                     IPR1            equ	872	;# 
  2687   000369                     IPR2            equ	873	;# 
  2688   00036A                     IPR3            equ	874	;# 
  2689   00036B                     IPR4            equ	875	;# 
  2690   00036C                     IPR5            equ	876	;# 
  2691   00036D                     IPR6            equ	877	;# 
  2692   00036E                     IPR7            equ	878	;# 
  2693   00036F                     IPR8            equ	879	;# 
  2694   000370                     IPR9            equ	880	;# 
  2695   000371                     IPR10           equ	881	;# 
  2696   000373                     STATUS_CSHAD    equ	883	;# 
  2697   000374                     WREG_CSHAD      equ	884	;# 
  2698   000375                     BSR_CSHAD       equ	885	;# 
  2699   000376                     SHADCON         equ	886	;# 
  2700   000377                     STATUS_SHAD     equ	887	;# 
  2701   000378                     WREG_SHAD       equ	888	;# 
  2702   000379                     BSR_SHAD        equ	889	;# 
  2703   00037A                     PCLATH_SHAD     equ	890	;# 
  2704   00037B                     PCLATU_SHAD     equ	891	;# 
  2705   00037C                     FSR0SH          equ	892	;# 
  2706   00037C                     FSR0L_SHAD      equ	892	;# 
  2707   00037D                     FSR0H_SHAD      equ	893	;# 
  2708   00037E                     FSR1SH          equ	894	;# 
  2709   00037E                     FSR1L_SHAD      equ	894	;# 
  2710   00037F                     FSR1H_SHAD      equ	895	;# 
  2711   000380                     FSR2SH          equ	896	;# 
  2712   000380                     FSR2L_SHAD      equ	896	;# 
  2713   000381                     FSR2H_SHAD      equ	897	;# 
  2714   000382                     PRODSH          equ	898	;# 
  2715   000382                     PRODL_SHAD      equ	898	;# 
  2716   000383                     PRODH_SHAD      equ	899	;# 
  2717   0003BC                     CWG1CLK         equ	956	;# 
  2718   0003BC                     CWG1CLKCON      equ	956	;# 
  2719   0003BD                     CWG1ISM         equ	957	;# 
  2720   0003BD                     CWG1DAT         equ	957	;# 
  2721   0003BE                     CWG1DBR         equ	958	;# 
  2722   0003BF                     CWG1DBF         equ	959	;# 
  2723   0003C0                     CWG1CON0        equ	960	;# 
  2724   0003C1                     CWG1CON1        equ	961	;# 
  2725   0003C2                     CWG1AS0         equ	962	;# 
  2726   0003C3                     CWG1AS1         equ	963	;# 
  2727   0003C4                     CWG1STR         equ	964	;# 
  2728   0003D7                     FVRCON          equ	983	;# 
  2729   0003D8                     ADCPCON         equ	984	;# 
  2730   0003D8                     ADCP            equ	984	;# 
  2731   0003D9                     ADLTH           equ	985	;# 
  2732   0003D9                     ADLTHL          equ	985	;# 
  2733   0003DA                     ADLTHH          equ	986	;# 
  2734   0003DB                     ADUTH           equ	987	;# 
  2735   0003DB                     ADUTHL          equ	987	;# 
  2736   0003DC                     ADUTHH          equ	988	;# 
  2737   0003DD                     ADERR           equ	989	;# 
  2738   0003DD                     ADERRL          equ	989	;# 
  2739   0003DE                     ADERRH          equ	990	;# 
  2740   0003DF                     ADSTPT          equ	991	;# 
  2741   0003DF                     ADSTPTL         equ	991	;# 
  2742   0003E0                     ADSTPTH         equ	992	;# 
  2743   0003E1                     ADFLTR          equ	993	;# 
  2744   0003E1                     ADFLTRL         equ	993	;# 
  2745   0003E2                     ADFLTRH         equ	994	;# 
  2746   0003E3                     ADACC           equ	995	;# 
  2747   0003E3                     ADACCL          equ	995	;# 
  2748   0003E4                     ADACCH          equ	996	;# 
  2749   0003E5                     ADACCU          equ	997	;# 
  2750   0003E6                     ADCNT           equ	998	;# 
  2751   0003E7                     ADRPT           equ	999	;# 
  2752   0003E8                     ADPREV          equ	1000	;# 
  2753   0003E8                     ADPREVL         equ	1000	;# 
  2754   0003E9                     ADPREVH         equ	1001	;# 
  2755   0003EA                     ADRES           equ	1002	;# 
  2756   0003EA                     ADRESL          equ	1002	;# 
  2757   0003EB                     ADRESH          equ	1003	;# 
  2758   0003EC                     ADPCH           equ	1004	;# 
  2759   0003EE                     ADACQ           equ	1006	;# 
  2760   0003EE                     ADACQL          equ	1006	;# 
  2761   0003EF                     ADACQH          equ	1007	;# 
  2762   0003F0                     ADCAP           equ	1008	;# 
  2763   0003F1                     ADPRE           equ	1009	;# 
  2764   0003F1                     ADPREL          equ	1009	;# 
  2765   0003F2                     ADPREH          equ	1010	;# 
  2766   0003F3                     ADCON0          equ	1011	;# 
  2767   0003F4                     ADCON1          equ	1012	;# 
  2768   0003F5                     ADCON2          equ	1013	;# 
  2769   0003F6                     ADCON3          equ	1014	;# 
  2770   0003F7                     ADSTAT          equ	1015	;# 
  2771   0003F8                     ADREF           equ	1016	;# 
  2772   0003F9                     ADACT           equ	1017	;# 
  2773   0003FA                     ADCLK           equ	1018	;# 
  2774   000400                     ANSELA          equ	1024	;# 
  2775   000401                     WPUA            equ	1025	;# 
  2776   000402                     ODCONA          equ	1026	;# 
  2777   000403                     SLRCONA         equ	1027	;# 
  2778   000404                     INLVLA          equ	1028	;# 
  2779   000405                     IOCAP           equ	1029	;# 
  2780   000406                     IOCAN           equ	1030	;# 
  2781   000407                     IOCAF           equ	1031	;# 
  2782   000408                     ANSELB          equ	1032	;# 
  2783   000409                     WPUB            equ	1033	;# 
  2784   00040A                     ODCONB          equ	1034	;# 
  2785   00040B                     SLRCONB         equ	1035	;# 
  2786   00040C                     INLVLB          equ	1036	;# 
  2787   00040D                     IOCBP           equ	1037	;# 
  2788   00040E                     IOCBN           equ	1038	;# 
  2789   00040F                     IOCBF           equ	1039	;# 
  2790   000410                     ANSELC          equ	1040	;# 
  2791   000411                     WPUC            equ	1041	;# 
  2792   000412                     ODCONC          equ	1042	;# 
  2793   000413                     SLRCONC         equ	1043	;# 
  2794   000414                     INLVLC          equ	1044	;# 
  2795   000415                     IOCCP           equ	1045	;# 
  2796   000416                     IOCCN           equ	1046	;# 
  2797   000417                     IOCCF           equ	1047	;# 
  2798   000440                     NCO1ACC         equ	1088	;# 
  2799   000440                     NCO1ACCL        equ	1088	;# 
  2800   000441                     NCO1ACCH        equ	1089	;# 
  2801   000442                     NCO1ACCU        equ	1090	;# 
  2802   000443                     NCO1INC         equ	1091	;# 
  2803   000443                     NCO1INCL        equ	1091	;# 
  2804   000444                     NCO1INCH        equ	1092	;# 
  2805   000445                     NCO1INCU        equ	1093	;# 
  2806   000446                     NCO1CON         equ	1094	;# 
  2807   000447                     NCO1CLK         equ	1095	;# 
  2808   000458                     FSCMCON         equ	1112	;# 
  2809   000459                     IVTLOCK         equ	1113	;# 
  2810   00045A                     IVTAD           equ	1114	;# 
  2811   00045A                     IVTADL          equ	1114	;# 
  2812   00045B                     IVTADH          equ	1115	;# 
  2813   00045C                     IVTADU          equ	1116	;# 
  2814   00045D                     IVTBASE         equ	1117	;# 
  2815   00045D                     IVTBASEL        equ	1117	;# 
  2816   00045E                     IVTBASEH        equ	1118	;# 
  2817   00045F                     IVTBASEU        equ	1119	;# 
  2818   000460                     PWM1ERS         equ	1120	;# 
  2819   000461                     PWM1CLK         equ	1121	;# 
  2820   000462                     PWM1LDS         equ	1122	;# 
  2821   000463                     PWM1PR          equ	1123	;# 
  2822   000463                     PWM1PRL         equ	1123	;# 
  2823   000464                     PWM1PRH         equ	1124	;# 
  2824   000465                     PWM1CPRE        equ	1125	;# 
  2825   000466                     PWM1PIPOS       equ	1126	;# 
  2826   000467                     PWM1GIR         equ	1127	;# 
  2827   000468                     PWM1GIE         equ	1128	;# 
  2828   000469                     PWM1CON         equ	1129	;# 
  2829   00046A                     PWM1S1CFG       equ	1130	;# 
  2830   00046B                     PWM1S1P1        equ	1131	;# 
  2831   00046B                     PWM1S1P1L       equ	1131	;# 
  2832   00046C                     PWM1S1P1H       equ	1132	;# 
  2833   00046D                     PWM1S1P2        equ	1133	;# 
  2834   00046D                     PWM1S1P2L       equ	1133	;# 
  2835   00046E                     PWM1S1P2H       equ	1134	;# 
  2836   00046F                     PWM2ERS         equ	1135	;# 
  2837   000470                     PWM2CLK         equ	1136	;# 
  2838   000471                     PWM2LDS         equ	1137	;# 
  2839   000472                     PWM2PR          equ	1138	;# 
  2840   000472                     PWM2PRL         equ	1138	;# 
  2841   000473                     PWM2PRH         equ	1139	;# 
  2842   000474                     PWM2CPRE        equ	1140	;# 
  2843   000475                     PWM2PIPOS       equ	1141	;# 
  2844   000476                     PWM2GIR         equ	1142	;# 
  2845   000477                     PWM2GIE         equ	1143	;# 
  2846   000478                     PWM2CON         equ	1144	;# 
  2847   000479                     PWM2S1CFG       equ	1145	;# 
  2848   00047A                     PWM2S1P1        equ	1146	;# 
  2849   00047A                     PWM2S1P1L       equ	1146	;# 
  2850   00047B                     PWM2S1P1H       equ	1147	;# 
  2851   00047C                     PWM2S1P2        equ	1148	;# 
  2852   00047C                     PWM2S1P2L       equ	1148	;# 
  2853   00047D                     PWM2S1P2H       equ	1149	;# 
  2854   00047E                     PWM3ERS         equ	1150	;# 
  2855   00047F                     PWM3CLK         equ	1151	;# 
  2856   000480                     PWM3LDS         equ	1152	;# 
  2857   000481                     PWM3PR          equ	1153	;# 
  2858   000481                     PWM3PRL         equ	1153	;# 
  2859   000482                     PWM3PRH         equ	1154	;# 
  2860   000483                     PWM3CPRE        equ	1155	;# 
  2861   000484                     PWM3PIPOS       equ	1156	;# 
  2862   000485                     PWM3GIR         equ	1157	;# 
  2863   000486                     PWM3GIE         equ	1158	;# 
  2864   000487                     PWM3CON         equ	1159	;# 
  2865   000488                     PWM3S1CFG       equ	1160	;# 
  2866   000489                     PWM3S1P1        equ	1161	;# 
  2867   000489                     PWM3S1P1L       equ	1161	;# 
  2868   00048A                     PWM3S1P1H       equ	1162	;# 
  2869   00048B                     PWM3S1P2        equ	1163	;# 
  2870   00048B                     PWM3S1P2L       equ	1163	;# 
  2871   00048C                     PWM3S1P2H       equ	1164	;# 
  2872   00049C                     PWMLOAD         equ	1180	;# 
  2873   00049D                     PWMEN           equ	1181	;# 
  2874   0004A8                     PIE0            equ	1192	;# 
  2875   0004A9                     PIE1            equ	1193	;# 
  2876   0004AA                     PIE2            equ	1194	;# 
  2877   0004AB                     PIE3            equ	1195	;# 
  2878   0004AC                     PIE4            equ	1196	;# 
  2879   0004AD                     PIE5            equ	1197	;# 
  2880   0004AE                     PIE6            equ	1198	;# 
  2881   0004AF                     PIE7            equ	1199	;# 
  2882   0004B0                     PIE8            equ	1200	;# 
  2883   0004B1                     PIE9            equ	1201	;# 
  2884   0004B2                     PIE10           equ	1202	;# 
  2885   0004B3                     PIR0            equ	1203	;# 
  2886   0004B4                     PIR1            equ	1204	;# 
  2887   0004B5                     PIR2            equ	1205	;# 
  2888   0004B6                     PIR3            equ	1206	;# 
  2889   0004B7                     PIR4            equ	1207	;# 
  2890   0004B8                     PIR5            equ	1208	;# 
  2891   0004B9                     PIR6            equ	1209	;# 
  2892   0004BA                     PIR7            equ	1210	;# 
  2893   0004BB                     PIR8            equ	1211	;# 
  2894   0004BC                     PIR9            equ	1212	;# 
  2895   0004BD                     PIR10           equ	1213	;# 
  2896   0004BE                     LATA            equ	1214	;# 
  2897   0004BF                     LATB            equ	1215	;# 
  2898   0004C0                     LATC            equ	1216	;# 
  2899   0004C6                     TRISA           equ	1222	;# 
  2900   0004C7                     TRISB           equ	1223	;# 
  2901   0004C8                     TRISC           equ	1224	;# 
  2902   0004CE                     PORTA           equ	1230	;# 
  2903   0004CF                     PORTB           equ	1231	;# 
  2904   0004D0                     PORTC           equ	1232	;# 
  2905   0004D6                     INTCON0         equ	1238	;# 
  2906   0004D7                     INTCON1         equ	1239	;# 
  2907   0004D8                     STATUS          equ	1240	;# 
  2908   0004D9                     FSR2            equ	1241	;# 
  2909   0004D9                     FSR2L           equ	1241	;# 
  2910   0004DA                     FSR2H           equ	1242	;# 
  2911   0004DB                     PLUSW2          equ	1243	;# 
  2912   0004DC                     PREINC2         equ	1244	;# 
  2913   0004DD                     POSTDEC2        equ	1245	;# 
  2914   0004DE                     POSTINC2        equ	1246	;# 
  2915   0004DF                     INDF2           equ	1247	;# 
  2916   0004E0                     BSR             equ	1248	;# 
  2917   0004E1                     FSR1            equ	1249	;# 
  2918   0004E1                     FSR1L           equ	1249	;# 
  2919   0004E2                     FSR1H           equ	1250	;# 
  2920   0004E3                     PLUSW1          equ	1251	;# 
  2921   0004E4                     PREINC1         equ	1252	;# 
  2922   0004E5                     POSTDEC1        equ	1253	;# 
  2923   0004E6                     POSTINC1        equ	1254	;# 
  2924   0004E7                     INDF1           equ	1255	;# 
  2925   0004E8                     WREG            equ	1256	;# 
  2926   0004E9                     FSR0            equ	1257	;# 
  2927   0004E9                     FSR0L           equ	1257	;# 
  2928   0004EA                     FSR0H           equ	1258	;# 
  2929   0004EB                     PLUSW0          equ	1259	;# 
  2930   0004EC                     PREINC0         equ	1260	;# 
  2931   0004ED                     POSTDEC0        equ	1261	;# 
  2932   0004EE                     POSTINC0        equ	1262	;# 
  2933   0004EF                     INDF0           equ	1263	;# 
  2934   0004F0                     PCON0           equ	1264	;# 
  2935   0004F1                     PCON1           equ	1265	;# 
  2936   0004F2                     CPUDOZE         equ	1266	;# 
  2937   0004F3                     PROD            equ	1267	;# 
  2938   0004F3                     PRODL           equ	1267	;# 
  2939   0004F4                     PRODH           equ	1268	;# 
  2940   0004F5                     TABLAT          equ	1269	;# 
  2941   0004F6                     TBLPTR          equ	1270	;# 
  2942   0004F6                     TBLPTRL         equ	1270	;# 
  2943   0004F7                     TBLPTRH         equ	1271	;# 
  2944   0004F8                     TBLPTRU         equ	1272	;# 
  2945   0004F9                     PCLAT           equ	1273	;# 
  2946   0004F9                     PCL             equ	1273	;# 
  2947   0004FA                     PCLATH          equ	1274	;# 
  2948   0004FB                     PCLATU          equ	1275	;# 
  2949   0004FC                     STKPTR          equ	1276	;# 
  2950   0004FD                     TOS             equ	1277	;# 
  2951   0004FD                     TOSL            equ	1277	;# 
  2952   0004FE                     TOSH            equ	1278	;# 
  2953   0004FF                     TOSU            equ	1279	;# 
  2954   000039                     CLKRCON         equ	57	;# 
  2955   00003A                     CLKRCLK         equ	58	;# 
  2956   000040                     NVMCON0         equ	64	;# 
  2957   000041                     NVMCON1         equ	65	;# 
  2958   000042                     NVMLOCK         equ	66	;# 
  2959   000043                     NVMADR          equ	67	;# 
  2960   000043                     NVMADRL         equ	67	;# 
  2961   000044                     NVMADRH         equ	68	;# 
  2962   000045                     NVMADRU         equ	69	;# 
  2963   000046                     NVMDAT          equ	70	;# 
  2964   000046                     NVMDATL         equ	70	;# 
  2965   000047                     NVMDATH         equ	71	;# 
  2966   000048                     VREGCON         equ	72	;# 
  2967   000049                     BORCON          equ	73	;# 
  2968   00004A                     HLVDCON0        equ	74	;# 
  2969   00004B                     HLVDCON1        equ	75	;# 
  2970   00004C                     ZCDCON          equ	76	;# 
  2971   000063                     PMD0            equ	99	;# 
  2972   000064                     PMD1            equ	100	;# 
  2973   000065                     PMD2            equ	101	;# 
  2974   000066                     PMD3            equ	102	;# 
  2975   000067                     PMD4            equ	103	;# 
  2976   000068                     PMD5            equ	104	;# 
  2977   00006A                     MD1CON0         equ	106	;# 
  2978   00006B                     MD1CON1         equ	107	;# 
  2979   00006C                     MD1SRC          equ	108	;# 
  2980   00006D                     MD1CARL         equ	109	;# 
  2981   00006E                     MD1CARH         equ	110	;# 
  2982   00006F                     CMOUT           equ	111	;# 
  2983   000070                     CM1CON0         equ	112	;# 
  2984   000071                     CM1CON1         equ	113	;# 
  2985   000072                     CM1NCH          equ	114	;# 
  2986   000073                     CM1PCH          equ	115	;# 
  2987   000074                     CM2CON0         equ	116	;# 
  2988   000075                     CM2CON1         equ	117	;# 
  2989   000076                     CM2NCH          equ	118	;# 
  2990   000077                     CM2PCH          equ	119	;# 
  2991   000078                     WDTCON0         equ	120	;# 
  2992   000079                     WDTCON1         equ	121	;# 
  2993   00007A                     WDTPS           equ	122	;# 
  2994   00007A                     WDTPSL          equ	122	;# 
  2995   00007B                     WDTPSH          equ	123	;# 
  2996   00007C                     WDTTMR          equ	124	;# 
  2997   00007D                     DAC1DAT         equ	125	;# 
  2998   00007D                     DAC1DATL        equ	125	;# 
  2999   00007F                     DAC1CON         equ	127	;# 
  3000   000080                     SPI1RXB         equ	128	;# 
  3001   000081                     SPI1TXB         equ	129	;# 
  3002   000082                     SPI1TCNT        equ	130	;# 
  3003   000082                     SPI1TCNTL       equ	130	;# 
  3004   000083                     SPI1TCNTH       equ	131	;# 
  3005   000084                     SPI1CON0        equ	132	;# 
  3006   000085                     SPI1CON1        equ	133	;# 
  3007   000086                     SPI1CON2        equ	134	;# 
  3008   000087                     SPI1STATUS      equ	135	;# 
  3009   000088                     SPI1TWIDTH      equ	136	;# 
  3010   000089                     SPI1BAUD        equ	137	;# 
  3011   00008A                     SPI1INTF        equ	138	;# 
  3012   00008B                     SPI1INTE        equ	139	;# 
  3013   00008C                     SPI1CLK         equ	140	;# 
  3014   00008D                     SPI2RXB         equ	141	;# 
  3015   00008E                     SPI2TXB         equ	142	;# 
  3016   00008F                     SPI2TCNT        equ	143	;# 
  3017   00008F                     SPI2TCNTL       equ	143	;# 
  3018   000090                     SPI2TCNTH       equ	144	;# 
  3019   000091                     SPI2CON0        equ	145	;# 
  3020   000092                     SPI2CON1        equ	146	;# 
  3021   000093                     SPI2CON2        equ	147	;# 
  3022   000094                     SPI2STATUS      equ	148	;# 
  3023   000095                     SPI2TWIDTH      equ	149	;# 
  3024   000096                     SPI2BAUD        equ	150	;# 
  3025   000097                     SPI2INTF        equ	151	;# 
  3026   000098                     SPI2INTE        equ	152	;# 
  3027   000099                     SPI2CLK         equ	153	;# 
  3028   0000A0                     DAC2DAT         equ	160	;# 
  3029   0000A0                     DAC2DATL        equ	160	;# 
  3030   0000A2                     DAC2CON         equ	162	;# 
  3031   0000A3                     OPA1CON0        equ	163	;# 
  3032   0000A4                     OPA1CON1        equ	164	;# 
  3033   0000A5                     OPA1CON2        equ	165	;# 
  3034   0000A6                     OPA1CON3        equ	166	;# 
  3035   0000A7                     OPA1HWC         equ	167	;# 
  3036   0000A8                     OPA1OFFSET      equ	168	;# 
  3037   0000A9                     OPA1ORS         equ	169	;# 
  3038   0000AC                     ACTCON          equ	172	;# 
  3039   0000AD                     OSCCON1         equ	173	;# 
  3040   0000AE                     OSCCON2         equ	174	;# 
  3041   0000AF                     OSCCON3         equ	175	;# 
  3042   0000B0                     OSCTUNE         equ	176	;# 
  3043   0000B1                     OSCFRQ          equ	177	;# 
  3044   0000B1                     OSCFREQ         equ	177	;# 
  3045   0000B2                     OSCSTAT         equ	178	;# 
  3046   0000B2                     OSCSTAT1        equ	178	;# 
  3047   0000B3                     OSCEN           equ	179	;# 
  3048   0000B4                     PRLOCK          equ	180	;# 
  3049   0000B5                     SCANPR          equ	181	;# 
  3050   0000B6                     DMA1PR          equ	182	;# 
  3051   0000B7                     DMA2PR          equ	183	;# 
  3052   0000B8                     DMA3PR          equ	184	;# 
  3053   0000B9                     DMA4PR          equ	185	;# 
  3054   0000BE                     MAINPR          equ	190	;# 
  3055   0000BF                     ISRPR           equ	191	;# 
  3056   0000D4                     CLCDATA         equ	212	;# 
  3057   0000D5                     CLCSELECT       equ	213	;# 
  3058   0000D6                     CLCnCON         equ	214	;# 
  3059   0000D7                     CLCnPOL         equ	215	;# 
  3060   0000D8                     CLCnSEL0        equ	216	;# 
  3061   0000D9                     CLCnSEL1        equ	217	;# 
  3062   0000DA                     CLCnSEL2        equ	218	;# 
  3063   0000DB                     CLCnSEL3        equ	219	;# 
  3064   0000DC                     CLCnGLS0        equ	220	;# 
  3065   0000DD                     CLCnGLS1        equ	221	;# 
  3066   0000DE                     CLCnGLS2        equ	222	;# 
  3067   0000DF                     CLCnGLS3        equ	223	;# 
  3068   0000E8                     DMASELECT       equ	232	;# 
  3069   0000E9                     DMAnBUF         equ	233	;# 
  3070   0000EA                     DMAnDCNT        equ	234	;# 
  3071   0000EA                     DMAnDCNTL       equ	234	;# 
  3072   0000EB                     DMAnDCNTH       equ	235	;# 
  3073   0000EC                     DMAnDPTR        equ	236	;# 
  3074   0000EC                     DMAnDPTRL       equ	236	;# 
  3075   0000ED                     DMAnDPTRH       equ	237	;# 
  3076   0000EE                     DMAnDSZ         equ	238	;# 
  3077   0000EE                     DMAnDSZL        equ	238	;# 
  3078   0000EF                     DMAnDSZH        equ	239	;# 
  3079   0000F0                     DMAnDSA         equ	240	;# 
  3080   0000F0                     DMAnDSAL        equ	240	;# 
  3081   0000F1                     DMAnDSAH        equ	241	;# 
  3082   0000F2                     DMAnSCNT        equ	242	;# 
  3083   0000F2                     DMAnSCNTL       equ	242	;# 
  3084   0000F3                     DMAnSCNTH       equ	243	;# 
  3085   0000F4                     DMAnSPTR        equ	244	;# 
  3086   0000F4                     DMAnSPTRL       equ	244	;# 
  3087   0000F5                     DMAnSPTRH       equ	245	;# 
  3088   0000F6                     DMAnSPTRU       equ	246	;# 
  3089   0000F7                     DMAnSSZ         equ	247	;# 
  3090   0000F7                     DMAnSSZL        equ	247	;# 
  3091   0000F8                     DMAnSSZH        equ	248	;# 
  3092   0000F9                     DMAnSSA         equ	249	;# 
  3093   0000F9                     DMAnSSAL        equ	249	;# 
  3094   0000FA                     DMAnSSAH        equ	250	;# 
  3095   0000FB                     DMAnSSAU        equ	251	;# 
  3096   0000FC                     DMAnCON0        equ	252	;# 
  3097   0000FD                     DMAnCON1        equ	253	;# 
  3098   0000FE                     DMAnAIRQ        equ	254	;# 
  3099   0000FF                     DMAnSIRQ        equ	255	;# 
  3100   000200                     PPSLOCK         equ	512	;# 
  3101   000201                     RA0PPS          equ	513	;# 
  3102   000202                     RA1PPS          equ	514	;# 
  3103   000203                     RA2PPS          equ	515	;# 
  3104   000205                     RA4PPS          equ	517	;# 
  3105   000206                     RA5PPS          equ	518	;# 
  3106   00020D                     RB4PPS          equ	525	;# 
  3107   00020E                     RB5PPS          equ	526	;# 
  3108   00020F                     RB6PPS          equ	527	;# 
  3109   000210                     RB7PPS          equ	528	;# 
  3110   000211                     RC0PPS          equ	529	;# 
  3111   000212                     RC1PPS          equ	530	;# 
  3112   000213                     RC2PPS          equ	531	;# 
  3113   000214                     RC3PPS          equ	532	;# 
  3114   000215                     RC4PPS          equ	533	;# 
  3115   000216                     RC5PPS          equ	534	;# 
  3116   000217                     RC6PPS          equ	535	;# 
  3117   000218                     RC7PPS          equ	536	;# 
  3118   00023E                     INT0PPS         equ	574	;# 
  3119   00023F                     INT1PPS         equ	575	;# 
  3120   000240                     INT2PPS         equ	576	;# 
  3121   000241                     T0CKIPPS        equ	577	;# 
  3122   000242                     T1CKIPPS        equ	578	;# 
  3123   000243                     T1GPPS          equ	579	;# 
  3124   000244                     T3CKIPPS        equ	580	;# 
  3125   000245                     T3GPPS          equ	581	;# 
  3126   000248                     T2INPPS         equ	584	;# 
  3127   000249                     T4INPPS         equ	585	;# 
  3128   00024F                     CCP1PPS         equ	591	;# 
  3129   000251                     PWM1ERSPPS      equ	593	;# 
  3130   000252                     PWM2ERSPPS      equ	594	;# 
  3131   000253                     PWM3ERSPPS      equ	595	;# 
  3132   000257                     PWMIN0PPS       equ	599	;# 
  3133   000258                     PWMIN1PPS       equ	600	;# 
  3134   000259                     SMT1WINPPS      equ	601	;# 
  3135   00025A                     SMT1SIGPPS      equ	602	;# 
  3136   00025B                     CWG1PPS         equ	603	;# 
  3137   00025B                     CWG1INPPS       equ	603	;# 
  3138   00025E                     MD1CARLPPS      equ	606	;# 
  3139   00025E                     MDCARLPPS       equ	606	;# 
  3140   00025F                     MD1CARHPPS      equ	607	;# 
  3141   00025F                     MDCARHPPS       equ	607	;# 
  3142   000260                     MD1SRCPPS       equ	608	;# 
  3143   000260                     MDSRCPPS        equ	608	;# 
  3144   000261                     CLCIN0PPS       equ	609	;# 
  3145   000262                     CLCIN1PPS       equ	610	;# 
  3146   000263                     CLCIN2PPS       equ	611	;# 
  3147   000264                     CLCIN3PPS       equ	612	;# 
  3148   000269                     ADACTPPS        equ	617	;# 
  3149   00026A                     SPI1SCKPPS      equ	618	;# 
  3150   00026B                     SPI1SDIPPS      equ	619	;# 
  3151   00026C                     SPI1SSPPS       equ	620	;# 
  3152   00026D                     SPI2SCKPPS      equ	621	;# 
  3153   00026E                     SPI2SDIPPS      equ	622	;# 
  3154   00026F                     SPI2SSPPS       equ	623	;# 
  3155   000270                     I2C1SDAPPS      equ	624	;# 
  3156   000271                     I2C1SCLPPS      equ	625	;# 
  3157   000272                     U1RXPPS         equ	626	;# 
  3158   000273                     U1CTSPPS        equ	627	;# 
  3159   000274                     U2RXPPS         equ	628	;# 
  3160   000275                     U2CTSPPS        equ	629	;# 
  3161   000276                     U3RXPPS         equ	630	;# 
  3162   000277                     U3CTSPPS        equ	631	;# 
  3163   000286                     RB6I2C          equ	646	;# 
  3164   000287                     RB4I2C          equ	647	;# 
  3165   00028A                     I2C1RXB         equ	650	;# 
  3166   00028B                     I2C1TXB         equ	651	;# 
  3167   00028C                     I2C1CNTL        equ	652	;# 
  3168   00028D                     I2C1CNTH        equ	653	;# 
  3169   00028E                     I2C1ADB0        equ	654	;# 
  3170   00028F                     I2C1ADB1        equ	655	;# 
  3171   000290                     I2C1ADR0        equ	656	;# 
  3172   000291                     I2C1ADR1        equ	657	;# 
  3173   000292                     I2C1ADR2        equ	658	;# 
  3174   000293                     I2C1ADR3        equ	659	;# 
  3175   000294                     I2C1CON0        equ	660	;# 
  3176   000295                     I2C1CON1        equ	661	;# 
  3177   000296                     I2C1CON2        equ	662	;# 
  3178   000297                     I2C1ERR         equ	663	;# 
  3179   000298                     I2C1STAT0       equ	664	;# 
  3180   000299                     I2C1STAT1       equ	665	;# 
  3181   00029A                     I2C1PIR         equ	666	;# 
  3182   00029B                     I2C1PIE         equ	667	;# 
  3183   00029C                     I2C1BTO         equ	668	;# 
  3184   00029D                     I2C1BAUD        equ	669	;# 
  3185   00029E                     I2C1CLK         equ	670	;# 
  3186   00029F                     I2C1BTOC        equ	671	;# 
  3187   0002A1                     U1RXB           equ	673	;# 
  3188   0002A1                     U1RXBL          equ	673	;# 
  3189   0002A2                     U1RXCHK         equ	674	;# 
  3190   0002A3                     U1TXB           equ	675	;# 
  3191   0002A3                     U1TXBL          equ	675	;# 
  3192   0002A4                     U1TXCHK         equ	676	;# 
  3193   0002A5                     U1P1            equ	677	;# 
  3194   0002A5                     U1P1L           equ	677	;# 
  3195   0002A6                     U1P1H           equ	678	;# 
  3196   0002A7                     U1P2            equ	679	;# 
  3197   0002A7                     U1P2L           equ	679	;# 
  3198   0002A8                     U1P2H           equ	680	;# 
  3199   0002A9                     U1P3            equ	681	;# 
  3200   0002A9                     U1P3L           equ	681	;# 
  3201   0002AA                     U1P3H           equ	682	;# 
  3202   0002AB                     U1CON0          equ	683	;# 
  3203   0002AC                     U1CON1          equ	684	;# 
  3204   0002AD                     U1CON2          equ	685	;# 
  3205   0002AE                     U1BRG           equ	686	;# 
  3206   0002AE                     U1BRGL          equ	686	;# 
  3207   0002AF                     U1BRGH          equ	687	;# 
  3208   0002B0                     U1FIFO          equ	688	;# 
  3209   0002B1                     U1UIR           equ	689	;# 
  3210   0002B2                     U1ERRIR         equ	690	;# 
  3211   0002B3                     U1ERRIE         equ	691	;# 
  3212   0002B4                     U2RXB           equ	692	;# 
  3213   0002B4                     U2RXBL          equ	692	;# 
  3214   0002B6                     U2TXB           equ	694	;# 
  3215   0002B6                     U2TXBL          equ	694	;# 
  3216   0002B8                     U2P1            equ	696	;# 
  3217   0002B8                     U2P1L           equ	696	;# 
  3218   0002BA                     U2P2            equ	698	;# 
  3219   0002BA                     U2P2L           equ	698	;# 
  3220   0002BC                     U2P3            equ	700	;# 
  3221   0002BC                     U2P3L           equ	700	;# 
  3222   0002BE                     U2CON0          equ	702	;# 
  3223   0002BF                     U2CON1          equ	703	;# 
  3224   0002C0                     U2CON2          equ	704	;# 
  3225   0002C1                     U2BRG           equ	705	;# 
  3226   0002C1                     U2BRGL          equ	705	;# 
  3227   0002C2                     U2BRGH          equ	706	;# 
  3228   0002C3                     U2FIFO          equ	707	;# 
  3229   0002C4                     U2UIR           equ	708	;# 
  3230   0002C5                     U2ERRIR         equ	709	;# 
  3231   0002C6                     U2ERRIE         equ	710	;# 
  3232   0002C7                     U3RXB           equ	711	;# 
  3233   0002C7                     U3RXBL          equ	711	;# 
  3234   0002C9                     U3TXB           equ	713	;# 
  3235   0002C9                     U3TXBL          equ	713	;# 
  3236   0002CB                     U3P1            equ	715	;# 
  3237   0002CB                     U3P1L           equ	715	;# 
  3238   0002CD                     U3P2            equ	717	;# 
  3239   0002CD                     U3P2L           equ	717	;# 
  3240   0002CF                     U3P3            equ	719	;# 
  3241   0002CF                     U3P3L           equ	719	;# 
  3242   0002D1                     U3CON0          equ	721	;# 
  3243   0002D2                     U3CON1          equ	722	;# 
  3244   0002D3                     U3CON2          equ	723	;# 
  3245   0002D4                     U3BRG           equ	724	;# 
  3246   0002D4                     U3BRGL          equ	724	;# 
  3247   0002D5                     U3BRGH          equ	725	;# 
  3248   0002D6                     U3FIFO          equ	726	;# 
  3249   0002D7                     U3UIR           equ	727	;# 
  3250   0002D8                     U3ERRIR         equ	728	;# 
  3251   0002D9                     U3ERRIE         equ	729	;# 
  3252   000300                     SMT1TMR         equ	768	;# 
  3253   000300                     SMT1TMRL        equ	768	;# 
  3254   000301                     SMT1TMRH        equ	769	;# 
  3255   000302                     SMT1TMRU        equ	770	;# 
  3256   000303                     SMT1CPR         equ	771	;# 
  3257   000303                     SMT1CPRL        equ	771	;# 
  3258   000304                     SMT1CPRH        equ	772	;# 
  3259   000305                     SMT1CPRU        equ	773	;# 
  3260   000306                     SMT1CPW         equ	774	;# 
  3261   000306                     SMT1CPWL        equ	774	;# 
  3262   000307                     SMT1CPWH        equ	775	;# 
  3263   000308                     SMT1CPWU        equ	776	;# 
  3264   000309                     SMT1PR          equ	777	;# 
  3265   000309                     SMT1PRL         equ	777	;# 
  3266   00030A                     SMT1PRH         equ	778	;# 
  3267   00030B                     SMT1PRU         equ	779	;# 
  3268   00030C                     SMT1CON0        equ	780	;# 
  3269   00030D                     SMT1CON1        equ	781	;# 
  3270   00030E                     SMT1STAT        equ	782	;# 
  3271   00030F                     SMT1CLK         equ	783	;# 
  3272   000310                     SMT1SIG         equ	784	;# 
  3273   000311                     SMT1WIN         equ	785	;# 
  3274   000312                     TMR1            equ	786	;# 
  3275   000312                     TMR1L           equ	786	;# 
  3276   000313                     TMR1H           equ	787	;# 
  3277   000314                     T1CON           equ	788	;# 
  3278   000314                     TMR1CON         equ	788	;# 
  3279   000315                     T1GCON          equ	789	;# 
  3280   000315                     TMR1GCON        equ	789	;# 
  3281   000316                     T1GATE          equ	790	;# 
  3282   000316                     TMR1GATE        equ	790	;# 
  3283   000317                     T1CLK           equ	791	;# 
  3284   000317                     TMR1CLK         equ	791	;# 
  3285   000317                     PR1             equ	791	;# 
  3286   000318                     TMR0L           equ	792	;# 
  3287   000318                     TMR0            equ	792	;# 
  3288   000319                     TMR0H           equ	793	;# 
  3289   000319                     PR0             equ	793	;# 
  3290   00031A                     T0CON0          equ	794	;# 
  3291   00031B                     T0CON1          equ	795	;# 
  3292   00031C                     T2TMR           equ	796	;# 
  3293   00031C                     TMR2            equ	796	;# 
  3294   00031D                     T2PR            equ	797	;# 
  3295   00031D                     PR2             equ	797	;# 
  3296   00031E                     T2CON           equ	798	;# 
  3297   00031F                     T2HLT           equ	799	;# 
  3298   000320                     T2CLKCON        equ	800	;# 
  3299   000320                     T2CLK           equ	800	;# 
  3300   000321                     T2RST           equ	801	;# 
  3301   000323                     TMR3            equ	803	;# 
  3302   000323                     TMR3L           equ	803	;# 
  3303   000324                     TMR3H           equ	804	;# 
  3304   000325                     T3CON           equ	805	;# 
  3305   000325                     TMR3CON         equ	805	;# 
  3306   000326                     T3GCON          equ	806	;# 
  3307   000326                     TMR3GCON        equ	806	;# 
  3308   000327                     T3GATE          equ	807	;# 
  3309   000327                     TMR3GATE        equ	807	;# 
  3310   000328                     T3CLK           equ	808	;# 
  3311   000328                     TMR3CLK         equ	808	;# 
  3312   000328                     PR3             equ	808	;# 
  3313   000329                     T4TMR           equ	809	;# 
  3314   000329                     TMR4            equ	809	;# 
  3315   00032A                     T4PR            equ	810	;# 
  3316   00032A                     PR4             equ	810	;# 
  3317   00032B                     T4CON           equ	811	;# 
  3318   00032C                     T4HLT           equ	812	;# 
  3319   00032D                     T4CLKCON        equ	813	;# 
  3320   00032D                     T4CLK           equ	813	;# 
  3321   00032E                     T4RST           equ	814	;# 
  3322   000340                     CCPR1           equ	832	;# 
  3323   000340                     CCPR1L          equ	832	;# 
  3324   000341                     CCPR1H          equ	833	;# 
  3325   000342                     CCP1CON         equ	834	;# 
  3326   000343                     CCP1CAP         equ	835	;# 
  3327   00034C                     CCPTMRS0        equ	844	;# 
  3328   00034E                     CRCDATA         equ	846	;# 
  3329   00034E                     CRCDATAL        equ	846	;# 
  3330   00034F                     CRCDATAH        equ	847	;# 
  3331   000350                     CRCDATAU        equ	848	;# 
  3332   000351                     CRCDATAT        equ	849	;# 
  3333   000352                     CRCOUT          equ	850	;# 
  3334   000352                     CRCSHFT         equ	850	;# 
  3335   000352                     CRCXOR          equ	850	;# 
  3336   000352                     CRCOUTL         equ	850	;# 
  3337   000352                     CRCSHFTL        equ	850	;# 
  3338   000352                     CRCSHIFTL       equ	850	;# 
  3339   000352                     CRCXORL         equ	850	;# 
  3340   000353                     CRCOUTH         equ	851	;# 
  3341   000353                     CRCSHFTH        equ	851	;# 
  3342   000353                     CRCSHIFTH       equ	851	;# 
  3343   000353                     CRCXORH         equ	851	;# 
  3344   000354                     CRCOUTU         equ	852	;# 
  3345   000354                     CRCSHFTU        equ	852	;# 
  3346   000354                     CRCSHIFTU       equ	852	;# 
  3347   000354                     CRCXORU         equ	852	;# 
  3348   000355                     CRCOUTT         equ	853	;# 
  3349   000355                     CRCSHFTT        equ	853	;# 
  3350   000355                     CRCSHIFTT       equ	853	;# 
  3351   000355                     CRCXORT         equ	853	;# 
  3352   000356                     CRCCON0         equ	854	;# 
  3353   000357                     CRCCON1         equ	855	;# 
  3354   000358                     CRCCON2         equ	856	;# 
  3355   00035A                     SCANLADR        equ	858	;# 
  3356   00035A                     SCANLADRL       equ	858	;# 
  3357   00035B                     SCANLADRH       equ	859	;# 
  3358   00035C                     SCANLADRU       equ	860	;# 
  3359   00035D                     SCANHADR        equ	861	;# 
  3360   00035D                     SCANHADRL       equ	861	;# 
  3361   00035E                     SCANHADRH       equ	862	;# 
  3362   00035F                     SCANHADRU       equ	863	;# 
  3363   000360                     SCANCON0        equ	864	;# 
  3364   000361                     SCANTRIG        equ	865	;# 
  3365   000367                     IPR0            equ	871	;# 
  3366   000368                     IPR1            equ	872	;# 
  3367   000369                     IPR2            equ	873	;# 
  3368   00036A                     IPR3            equ	874	;# 
  3369   00036B                     IPR4            equ	875	;# 
  3370   00036C                     IPR5            equ	876	;# 
  3371   00036D                     IPR6            equ	877	;# 
  3372   00036E                     IPR7            equ	878	;# 
  3373   00036F                     IPR8            equ	879	;# 
  3374   000370                     IPR9            equ	880	;# 
  3375   000371                     IPR10           equ	881	;# 
  3376   000373                     STATUS_CSHAD    equ	883	;# 
  3377   000374                     WREG_CSHAD      equ	884	;# 
  3378   000375                     BSR_CSHAD       equ	885	;# 
  3379   000376                     SHADCON         equ	886	;# 
  3380   000377                     STATUS_SHAD     equ	887	;# 
  3381   000378                     WREG_SHAD       equ	888	;# 
  3382   000379                     BSR_SHAD        equ	889	;# 
  3383   00037A                     PCLATH_SHAD     equ	890	;# 
  3384   00037B                     PCLATU_SHAD     equ	891	;# 
  3385   00037C                     FSR0SH          equ	892	;# 
  3386   00037C                     FSR0L_SHAD      equ	892	;# 
  3387   00037D                     FSR0H_SHAD      equ	893	;# 
  3388   00037E                     FSR1SH          equ	894	;# 
  3389   00037E                     FSR1L_SHAD      equ	894	;# 
  3390   00037F                     FSR1H_SHAD      equ	895	;# 
  3391   000380                     FSR2SH          equ	896	;# 
  3392   000380                     FSR2L_SHAD      equ	896	;# 
  3393   000381                     FSR2H_SHAD      equ	897	;# 
  3394   000382                     PRODSH          equ	898	;# 
  3395   000382                     PRODL_SHAD      equ	898	;# 
  3396   000383                     PRODH_SHAD      equ	899	;# 
  3397   0003BC                     CWG1CLK         equ	956	;# 
  3398   0003BC                     CWG1CLKCON      equ	956	;# 
  3399   0003BD                     CWG1ISM         equ	957	;# 
  3400   0003BD                     CWG1DAT         equ	957	;# 
  3401   0003BE                     CWG1DBR         equ	958	;# 
  3402   0003BF                     CWG1DBF         equ	959	;# 
  3403   0003C0                     CWG1CON0        equ	960	;# 
  3404   0003C1                     CWG1CON1        equ	961	;# 
  3405   0003C2                     CWG1AS0         equ	962	;# 
  3406   0003C3                     CWG1AS1         equ	963	;# 
  3407   0003C4                     CWG1STR         equ	964	;# 
  3408   0003D7                     FVRCON          equ	983	;# 
  3409   0003D8                     ADCPCON         equ	984	;# 
  3410   0003D8                     ADCP            equ	984	;# 
  3411   0003D9                     ADLTH           equ	985	;# 
  3412   0003D9                     ADLTHL          equ	985	;# 
  3413   0003DA                     ADLTHH          equ	986	;# 
  3414   0003DB                     ADUTH           equ	987	;# 
  3415   0003DB                     ADUTHL          equ	987	;# 
  3416   0003DC                     ADUTHH          equ	988	;# 
  3417   0003DD                     ADERR           equ	989	;# 
  3418   0003DD                     ADERRL          equ	989	;# 
  3419   0003DE                     ADERRH          equ	990	;# 
  3420   0003DF                     ADSTPT          equ	991	;# 
  3421   0003DF                     ADSTPTL         equ	991	;# 
  3422   0003E0                     ADSTPTH         equ	992	;# 
  3423   0003E1                     ADFLTR          equ	993	;# 
  3424   0003E1                     ADFLTRL         equ	993	;# 
  3425   0003E2                     ADFLTRH         equ	994	;# 
  3426   0003E3                     ADACC           equ	995	;# 
  3427   0003E3                     ADACCL          equ	995	;# 
  3428   0003E4                     ADACCH          equ	996	;# 
  3429   0003E5                     ADACCU          equ	997	;# 
  3430   0003E6                     ADCNT           equ	998	;# 
  3431   0003E7                     ADRPT           equ	999	;# 
  3432   0003E8                     ADPREV          equ	1000	;# 
  3433   0003E8                     ADPREVL         equ	1000	;# 
  3434   0003E9                     ADPREVH         equ	1001	;# 
  3435   0003EA                     ADRES           equ	1002	;# 
  3436   0003EA                     ADRESL          equ	1002	;# 
  3437   0003EB                     ADRESH          equ	1003	;# 
  3438   0003EC                     ADPCH           equ	1004	;# 
  3439   0003EE                     ADACQ           equ	1006	;# 
  3440   0003EE                     ADACQL          equ	1006	;# 
  3441   0003EF                     ADACQH          equ	1007	;# 
  3442   0003F0                     ADCAP           equ	1008	;# 
  3443   0003F1                     ADPRE           equ	1009	;# 
  3444   0003F1                     ADPREL          equ	1009	;# 
  3445   0003F2                     ADPREH          equ	1010	;# 
  3446   0003F3                     ADCON0          equ	1011	;# 
  3447   0003F4                     ADCON1          equ	1012	;# 
  3448   0003F5                     ADCON2          equ	1013	;# 
  3449   0003F6                     ADCON3          equ	1014	;# 
  3450   0003F7                     ADSTAT          equ	1015	;# 
  3451   0003F8                     ADREF           equ	1016	;# 
  3452   0003F9                     ADACT           equ	1017	;# 
  3453   0003FA                     ADCLK           equ	1018	;# 
  3454   000400                     ANSELA          equ	1024	;# 
  3455   000401                     WPUA            equ	1025	;# 
  3456   000402                     ODCONA          equ	1026	;# 
  3457   000403                     SLRCONA         equ	1027	;# 
  3458   000404                     INLVLA          equ	1028	;# 
  3459   000405                     IOCAP           equ	1029	;# 
  3460   000406                     IOCAN           equ	1030	;# 
  3461   000407                     IOCAF           equ	1031	;# 
  3462   000408                     ANSELB          equ	1032	;# 
  3463   000409                     WPUB            equ	1033	;# 
  3464   00040A                     ODCONB          equ	1034	;# 
  3465   00040B                     SLRCONB         equ	1035	;# 
  3466   00040C                     INLVLB          equ	1036	;# 
  3467   00040D                     IOCBP           equ	1037	;# 
  3468   00040E                     IOCBN           equ	1038	;# 
  3469   00040F                     IOCBF           equ	1039	;# 
  3470   000410                     ANSELC          equ	1040	;# 
  3471   000411                     WPUC            equ	1041	;# 
  3472   000412                     ODCONC          equ	1042	;# 
  3473   000413                     SLRCONC         equ	1043	;# 
  3474   000414                     INLVLC          equ	1044	;# 
  3475   000415                     IOCCP           equ	1045	;# 
  3476   000416                     IOCCN           equ	1046	;# 
  3477   000417                     IOCCF           equ	1047	;# 
  3478   000440                     NCO1ACC         equ	1088	;# 
  3479   000440                     NCO1ACCL        equ	1088	;# 
  3480   000441                     NCO1ACCH        equ	1089	;# 
  3481   000442                     NCO1ACCU        equ	1090	;# 
  3482   000443                     NCO1INC         equ	1091	;# 
  3483   000443                     NCO1INCL        equ	1091	;# 
  3484   000444                     NCO1INCH        equ	1092	;# 
  3485   000445                     NCO1INCU        equ	1093	;# 
  3486   000446                     NCO1CON         equ	1094	;# 
  3487   000447                     NCO1CLK         equ	1095	;# 
  3488   000458                     FSCMCON         equ	1112	;# 
  3489   000459                     IVTLOCK         equ	1113	;# 
  3490   00045A                     IVTAD           equ	1114	;# 
  3491   00045A                     IVTADL          equ	1114	;# 
  3492   00045B                     IVTADH          equ	1115	;# 
  3493   00045C                     IVTADU          equ	1116	;# 
  3494   00045D                     IVTBASE         equ	1117	;# 
  3495   00045D                     IVTBASEL        equ	1117	;# 
  3496   00045E                     IVTBASEH        equ	1118	;# 
  3497   00045F                     IVTBASEU        equ	1119	;# 
  3498   000460                     PWM1ERS         equ	1120	;# 
  3499   000461                     PWM1CLK         equ	1121	;# 
  3500   000462                     PWM1LDS         equ	1122	;# 
  3501   000463                     PWM1PR          equ	1123	;# 
  3502   000463                     PWM1PRL         equ	1123	;# 
  3503   000464                     PWM1PRH         equ	1124	;# 
  3504   000465                     PWM1CPRE        equ	1125	;# 
  3505   000466                     PWM1PIPOS       equ	1126	;# 
  3506   000467                     PWM1GIR         equ	1127	;# 
  3507   000468                     PWM1GIE         equ	1128	;# 
  3508   000469                     PWM1CON         equ	1129	;# 
  3509   00046A                     PWM1S1CFG       equ	1130	;# 
  3510   00046B                     PWM1S1P1        equ	1131	;# 
  3511   00046B                     PWM1S1P1L       equ	1131	;# 
  3512   00046C                     PWM1S1P1H       equ	1132	;# 
  3513   00046D                     PWM1S1P2        equ	1133	;# 
  3514   00046D                     PWM1S1P2L       equ	1133	;# 
  3515   00046E                     PWM1S1P2H       equ	1134	;# 
  3516   00046F                     PWM2ERS         equ	1135	;# 
  3517   000470                     PWM2CLK         equ	1136	;# 
  3518   000471                     PWM2LDS         equ	1137	;# 
  3519   000472                     PWM2PR          equ	1138	;# 
  3520   000472                     PWM2PRL         equ	1138	;# 
  3521   000473                     PWM2PRH         equ	1139	;# 
  3522   000474                     PWM2CPRE        equ	1140	;# 
  3523   000475                     PWM2PIPOS       equ	1141	;# 
  3524   000476                     PWM2GIR         equ	1142	;# 
  3525   000477                     PWM2GIE         equ	1143	;# 
  3526   000478                     PWM2CON         equ	1144	;# 
  3527   000479                     PWM2S1CFG       equ	1145	;# 
  3528   00047A                     PWM2S1P1        equ	1146	;# 
  3529   00047A                     PWM2S1P1L       equ	1146	;# 
  3530   00047B                     PWM2S1P1H       equ	1147	;# 
  3531   00047C                     PWM2S1P2        equ	1148	;# 
  3532   00047C                     PWM2S1P2L       equ	1148	;# 
  3533   00047D                     PWM2S1P2H       equ	1149	;# 
  3534   00047E                     PWM3ERS         equ	1150	;# 
  3535   00047F                     PWM3CLK         equ	1151	;# 
  3536   000480                     PWM3LDS         equ	1152	;# 
  3537   000481                     PWM3PR          equ	1153	;# 
  3538   000481                     PWM3PRL         equ	1153	;# 
  3539   000482                     PWM3PRH         equ	1154	;# 
  3540   000483                     PWM3CPRE        equ	1155	;# 
  3541   000484                     PWM3PIPOS       equ	1156	;# 
  3542   000485                     PWM3GIR         equ	1157	;# 
  3543   000486                     PWM3GIE         equ	1158	;# 
  3544   000487                     PWM3CON         equ	1159	;# 
  3545   000488                     PWM3S1CFG       equ	1160	;# 
  3546   000489                     PWM3S1P1        equ	1161	;# 
  3547   000489                     PWM3S1P1L       equ	1161	;# 
  3548   00048A                     PWM3S1P1H       equ	1162	;# 
  3549   00048B                     PWM3S1P2        equ	1163	;# 
  3550   00048B                     PWM3S1P2L       equ	1163	;# 
  3551   00048C                     PWM3S1P2H       equ	1164	;# 
  3552   00049C                     PWMLOAD         equ	1180	;# 
  3553   00049D                     PWMEN           equ	1181	;# 
  3554   0004A8                     PIE0            equ	1192	;# 
  3555   0004A9                     PIE1            equ	1193	;# 
  3556   0004AA                     PIE2            equ	1194	;# 
  3557   0004AB                     PIE3            equ	1195	;# 
  3558   0004AC                     PIE4            equ	1196	;# 
  3559   0004AD                     PIE5            equ	1197	;# 
  3560   0004AE                     PIE6            equ	1198	;# 
  3561   0004AF                     PIE7            equ	1199	;# 
  3562   0004B0                     PIE8            equ	1200	;# 
  3563   0004B1                     PIE9            equ	1201	;# 
  3564   0004B2                     PIE10           equ	1202	;# 
  3565   0004B3                     PIR0            equ	1203	;# 
  3566   0004B4                     PIR1            equ	1204	;# 
  3567   0004B5                     PIR2            equ	1205	;# 
  3568   0004B6                     PIR3            equ	1206	;# 
  3569   0004B7                     PIR4            equ	1207	;# 
  3570   0004B8                     PIR5            equ	1208	;# 
  3571   0004B9                     PIR6            equ	1209	;# 
  3572   0004BA                     PIR7            equ	1210	;# 
  3573   0004BB                     PIR8            equ	1211	;# 
  3574   0004BC                     PIR9            equ	1212	;# 
  3575   0004BD                     PIR10           equ	1213	;# 
  3576   0004BE                     LATA            equ	1214	;# 
  3577   0004BF                     LATB            equ	1215	;# 
  3578   0004C0                     LATC            equ	1216	;# 
  3579   0004C6                     TRISA           equ	1222	;# 
  3580   0004C7                     TRISB           equ	1223	;# 
  3581   0004C8                     TRISC           equ	1224	;# 
  3582   0004CE                     PORTA           equ	1230	;# 
  3583   0004CF                     PORTB           equ	1231	;# 
  3584   0004D0                     PORTC           equ	1232	;# 
  3585   0004D6                     INTCON0         equ	1238	;# 
  3586   0004D7                     INTCON1         equ	1239	;# 
  3587   0004D8                     STATUS          equ	1240	;# 
  3588   0004D9                     FSR2            equ	1241	;# 
  3589   0004D9                     FSR2L           equ	1241	;# 
  3590   0004DA                     FSR2H           equ	1242	;# 
  3591   0004DB                     PLUSW2          equ	1243	;# 
  3592   0004DC                     PREINC2         equ	1244	;# 
  3593   0004DD                     POSTDEC2        equ	1245	;# 
  3594   0004DE                     POSTINC2        equ	1246	;# 
  3595   0004DF                     INDF2           equ	1247	;# 
  3596   0004E0                     BSR             equ	1248	;# 
  3597   0004E1                     FSR1            equ	1249	;# 
  3598   0004E1                     FSR1L           equ	1249	;# 
  3599   0004E2                     FSR1H           equ	1250	;# 
  3600   0004E3                     PLUSW1          equ	1251	;# 
  3601   0004E4                     PREINC1         equ	1252	;# 
  3602   0004E5                     POSTDEC1        equ	1253	;# 
  3603   0004E6                     POSTINC1        equ	1254	;# 
  3604   0004E7                     INDF1           equ	1255	;# 
  3605   0004E8                     WREG            equ	1256	;# 
  3606   0004E9                     FSR0            equ	1257	;# 
  3607   0004E9                     FSR0L           equ	1257	;# 
  3608   0004EA                     FSR0H           equ	1258	;# 
  3609   0004EB                     PLUSW0          equ	1259	;# 
  3610   0004EC                     PREINC0         equ	1260	;# 
  3611   0004ED                     POSTDEC0        equ	1261	;# 
  3612   0004EE                     POSTINC0        equ	1262	;# 
  3613   0004EF                     INDF0           equ	1263	;# 
  3614   0004F0                     PCON0           equ	1264	;# 
  3615   0004F1                     PCON1           equ	1265	;# 
  3616   0004F2                     CPUDOZE         equ	1266	;# 
  3617   0004F3                     PROD            equ	1267	;# 
  3618   0004F3                     PRODL           equ	1267	;# 
  3619   0004F4                     PRODH           equ	1268	;# 
  3620   0004F5                     TABLAT          equ	1269	;# 
  3621   0004F6                     TBLPTR          equ	1270	;# 
  3622   0004F6                     TBLPTRL         equ	1270	;# 
  3623   0004F7                     TBLPTRH         equ	1271	;# 
  3624   0004F8                     TBLPTRU         equ	1272	;# 
  3625   0004F9                     PCLAT           equ	1273	;# 
  3626   0004F9                     PCL             equ	1273	;# 
  3627   0004FA                     PCLATH          equ	1274	;# 
  3628   0004FB                     PCLATU          equ	1275	;# 
  3629   0004FC                     STKPTR          equ	1276	;# 
  3630   0004FD                     TOS             equ	1277	;# 
  3631   0004FD                     TOSL            equ	1277	;# 
  3632   0004FE                     TOSH            equ	1278	;# 
  3633   0004FF                     TOSU            equ	1279	;# 
  3634   000039                     CLKRCON         equ	57	;# 
  3635   00003A                     CLKRCLK         equ	58	;# 
  3636   000040                     NVMCON0         equ	64	;# 
  3637   000041                     NVMCON1         equ	65	;# 
  3638   000042                     NVMLOCK         equ	66	;# 
  3639   000043                     NVMADR          equ	67	;# 
  3640   000043                     NVMADRL         equ	67	;# 
  3641   000044                     NVMADRH         equ	68	;# 
  3642   000045                     NVMADRU         equ	69	;# 
  3643   000046                     NVMDAT          equ	70	;# 
  3644   000046                     NVMDATL         equ	70	;# 
  3645   000047                     NVMDATH         equ	71	;# 
  3646   000048                     VREGCON         equ	72	;# 
  3647   000049                     BORCON          equ	73	;# 
  3648   00004A                     HLVDCON0        equ	74	;# 
  3649   00004B                     HLVDCON1        equ	75	;# 
  3650   00004C                     ZCDCON          equ	76	;# 
  3651   000063                     PMD0            equ	99	;# 
  3652   000064                     PMD1            equ	100	;# 
  3653   000065                     PMD2            equ	101	;# 
  3654   000066                     PMD3            equ	102	;# 
  3655   000067                     PMD4            equ	103	;# 
  3656   000068                     PMD5            equ	104	;# 
  3657   00006A                     MD1CON0         equ	106	;# 
  3658   00006B                     MD1CON1         equ	107	;# 
  3659   00006C                     MD1SRC          equ	108	;# 
  3660   00006D                     MD1CARL         equ	109	;# 
  3661   00006E                     MD1CARH         equ	110	;# 
  3662   00006F                     CMOUT           equ	111	;# 
  3663   000070                     CM1CON0         equ	112	;# 
  3664   000071                     CM1CON1         equ	113	;# 
  3665   000072                     CM1NCH          equ	114	;# 
  3666   000073                     CM1PCH          equ	115	;# 
  3667   000074                     CM2CON0         equ	116	;# 
  3668   000075                     CM2CON1         equ	117	;# 
  3669   000076                     CM2NCH          equ	118	;# 
  3670   000077                     CM2PCH          equ	119	;# 
  3671   000078                     WDTCON0         equ	120	;# 
  3672   000079                     WDTCON1         equ	121	;# 
  3673   00007A                     WDTPS           equ	122	;# 
  3674   00007A                     WDTPSL          equ	122	;# 
  3675   00007B                     WDTPSH          equ	123	;# 
  3676   00007C                     WDTTMR          equ	124	;# 
  3677   00007D                     DAC1DAT         equ	125	;# 
  3678   00007D                     DAC1DATL        equ	125	;# 
  3679   00007F                     DAC1CON         equ	127	;# 
  3680   000080                     SPI1RXB         equ	128	;# 
  3681   000081                     SPI1TXB         equ	129	;# 
  3682   000082                     SPI1TCNT        equ	130	;# 
  3683   000082                     SPI1TCNTL       equ	130	;# 
  3684   000083                     SPI1TCNTH       equ	131	;# 
  3685   000084                     SPI1CON0        equ	132	;# 
  3686   000085                     SPI1CON1        equ	133	;# 
  3687   000086                     SPI1CON2        equ	134	;# 
  3688   000087                     SPI1STATUS      equ	135	;# 
  3689   000088                     SPI1TWIDTH      equ	136	;# 
  3690   000089                     SPI1BAUD        equ	137	;# 
  3691   00008A                     SPI1INTF        equ	138	;# 
  3692   00008B                     SPI1INTE        equ	139	;# 
  3693   00008C                     SPI1CLK         equ	140	;# 
  3694   00008D                     SPI2RXB         equ	141	;# 
  3695   00008E                     SPI2TXB         equ	142	;# 
  3696   00008F                     SPI2TCNT        equ	143	;# 
  3697   00008F                     SPI2TCNTL       equ	143	;# 
  3698   000090                     SPI2TCNTH       equ	144	;# 
  3699   000091                     SPI2CON0        equ	145	;# 
  3700   000092                     SPI2CON1        equ	146	;# 
  3701   000093                     SPI2CON2        equ	147	;# 
  3702   000094                     SPI2STATUS      equ	148	;# 
  3703   000095                     SPI2TWIDTH      equ	149	;# 
  3704   000096                     SPI2BAUD        equ	150	;# 
  3705   000097                     SPI2INTF        equ	151	;# 
  3706   000098                     SPI2INTE        equ	152	;# 
  3707   000099                     SPI2CLK         equ	153	;# 
  3708   0000A0                     DAC2DAT         equ	160	;# 
  3709   0000A0                     DAC2DATL        equ	160	;# 
  3710   0000A2                     DAC2CON         equ	162	;# 
  3711   0000A3                     OPA1CON0        equ	163	;# 
  3712   0000A4                     OPA1CON1        equ	164	;# 
  3713   0000A5                     OPA1CON2        equ	165	;# 
  3714   0000A6                     OPA1CON3        equ	166	;# 
  3715   0000A7                     OPA1HWC         equ	167	;# 
  3716   0000A8                     OPA1OFFSET      equ	168	;# 
  3717   0000A9                     OPA1ORS         equ	169	;# 
  3718   0000AC                     ACTCON          equ	172	;# 
  3719   0000AD                     OSCCON1         equ	173	;# 
  3720   0000AE                     OSCCON2         equ	174	;# 
  3721   0000AF                     OSCCON3         equ	175	;# 
  3722   0000B0                     OSCTUNE         equ	176	;# 
  3723   0000B1                     OSCFRQ          equ	177	;# 
  3724   0000B1                     OSCFREQ         equ	177	;# 
  3725   0000B2                     OSCSTAT         equ	178	;# 
  3726   0000B2                     OSCSTAT1        equ	178	;# 
  3727   0000B3                     OSCEN           equ	179	;# 
  3728   0000B4                     PRLOCK          equ	180	;# 
  3729   0000B5                     SCANPR          equ	181	;# 
  3730   0000B6                     DMA1PR          equ	182	;# 
  3731   0000B7                     DMA2PR          equ	183	;# 
  3732   0000B8                     DMA3PR          equ	184	;# 
  3733   0000B9                     DMA4PR          equ	185	;# 
  3734   0000BE                     MAINPR          equ	190	;# 
  3735   0000BF                     ISRPR           equ	191	;# 
  3736   0000D4                     CLCDATA         equ	212	;# 
  3737   0000D5                     CLCSELECT       equ	213	;# 
  3738   0000D6                     CLCnCON         equ	214	;# 
  3739   0000D7                     CLCnPOL         equ	215	;# 
  3740   0000D8                     CLCnSEL0        equ	216	;# 
  3741   0000D9                     CLCnSEL1        equ	217	;# 
  3742   0000DA                     CLCnSEL2        equ	218	;# 
  3743   0000DB                     CLCnSEL3        equ	219	;# 
  3744   0000DC                     CLCnGLS0        equ	220	;# 
  3745   0000DD                     CLCnGLS1        equ	221	;# 
  3746   0000DE                     CLCnGLS2        equ	222	;# 
  3747   0000DF                     CLCnGLS3        equ	223	;# 
  3748   0000E8                     DMASELECT       equ	232	;# 
  3749   0000E9                     DMAnBUF         equ	233	;# 
  3750   0000EA                     DMAnDCNT        equ	234	;# 
  3751   0000EA                     DMAnDCNTL       equ	234	;# 
  3752   0000EB                     DMAnDCNTH       equ	235	;# 
  3753   0000EC                     DMAnDPTR        equ	236	;# 
  3754   0000EC                     DMAnDPTRL       equ	236	;# 
  3755   0000ED                     DMAnDPTRH       equ	237	;# 
  3756   0000EE                     DMAnDSZ         equ	238	;# 
  3757   0000EE                     DMAnDSZL        equ	238	;# 
  3758   0000EF                     DMAnDSZH        equ	239	;# 
  3759   0000F0                     DMAnDSA         equ	240	;# 
  3760   0000F0                     DMAnDSAL        equ	240	;# 
  3761   0000F1                     DMAnDSAH        equ	241	;# 
  3762   0000F2                     DMAnSCNT        equ	242	;# 
  3763   0000F2                     DMAnSCNTL       equ	242	;# 
  3764   0000F3                     DMAnSCNTH       equ	243	;# 
  3765   0000F4                     DMAnSPTR        equ	244	;# 
  3766   0000F4                     DMAnSPTRL       equ	244	;# 
  3767   0000F5                     DMAnSPTRH       equ	245	;# 
  3768   0000F6                     DMAnSPTRU       equ	246	;# 
  3769   0000F7                     DMAnSSZ         equ	247	;# 
  3770   0000F7                     DMAnSSZL        equ	247	;# 
  3771   0000F8                     DMAnSSZH        equ	248	;# 
  3772   0000F9                     DMAnSSA         equ	249	;# 
  3773   0000F9                     DMAnSSAL        equ	249	;# 
  3774   0000FA                     DMAnSSAH        equ	250	;# 
  3775   0000FB                     DMAnSSAU        equ	251	;# 
  3776   0000FC                     DMAnCON0        equ	252	;# 
  3777   0000FD                     DMAnCON1        equ	253	;# 
  3778   0000FE                     DMAnAIRQ        equ	254	;# 
  3779   0000FF                     DMAnSIRQ        equ	255	;# 
  3780   000200                     PPSLOCK         equ	512	;# 
  3781   000201                     RA0PPS          equ	513	;# 
  3782   000202                     RA1PPS          equ	514	;# 
  3783   000203                     RA2PPS          equ	515	;# 
  3784   000205                     RA4PPS          equ	517	;# 
  3785   000206                     RA5PPS          equ	518	;# 
  3786   00020D                     RB4PPS          equ	525	;# 
  3787   00020E                     RB5PPS          equ	526	;# 
  3788   00020F                     RB6PPS          equ	527	;# 
  3789   000210                     RB7PPS          equ	528	;# 
  3790   000211                     RC0PPS          equ	529	;# 
  3791   000212                     RC1PPS          equ	530	;# 
  3792   000213                     RC2PPS          equ	531	;# 
  3793   000214                     RC3PPS          equ	532	;# 
  3794   000215                     RC4PPS          equ	533	;# 
  3795   000216                     RC5PPS          equ	534	;# 
  3796   000217                     RC6PPS          equ	535	;# 
  3797   000218                     RC7PPS          equ	536	;# 
  3798   00023E                     INT0PPS         equ	574	;# 
  3799   00023F                     INT1PPS         equ	575	;# 
  3800   000240                     INT2PPS         equ	576	;# 
  3801   000241                     T0CKIPPS        equ	577	;# 
  3802   000242                     T1CKIPPS        equ	578	;# 
  3803   000243                     T1GPPS          equ	579	;# 
  3804   000244                     T3CKIPPS        equ	580	;# 
  3805   000245                     T3GPPS          equ	581	;# 
  3806   000248                     T2INPPS         equ	584	;# 
  3807   000249                     T4INPPS         equ	585	;# 
  3808   00024F                     CCP1PPS         equ	591	;# 
  3809   000251                     PWM1ERSPPS      equ	593	;# 
  3810   000252                     PWM2ERSPPS      equ	594	;# 
  3811   000253                     PWM3ERSPPS      equ	595	;# 
  3812   000257                     PWMIN0PPS       equ	599	;# 
  3813   000258                     PWMIN1PPS       equ	600	;# 
  3814   000259                     SMT1WINPPS      equ	601	;# 
  3815   00025A                     SMT1SIGPPS      equ	602	;# 
  3816   00025B                     CWG1PPS         equ	603	;# 
  3817   00025B                     CWG1INPPS       equ	603	;# 
  3818   00025E                     MD1CARLPPS      equ	606	;# 
  3819   00025E                     MDCARLPPS       equ	606	;# 
  3820   00025F                     MD1CARHPPS      equ	607	;# 
  3821   00025F                     MDCARHPPS       equ	607	;# 
  3822   000260                     MD1SRCPPS       equ	608	;# 
  3823   000260                     MDSRCPPS        equ	608	;# 
  3824   000261                     CLCIN0PPS       equ	609	;# 
  3825   000262                     CLCIN1PPS       equ	610	;# 
  3826   000263                     CLCIN2PPS       equ	611	;# 
  3827   000264                     CLCIN3PPS       equ	612	;# 
  3828   000269                     ADACTPPS        equ	617	;# 
  3829   00026A                     SPI1SCKPPS      equ	618	;# 
  3830   00026B                     SPI1SDIPPS      equ	619	;# 
  3831   00026C                     SPI1SSPPS       equ	620	;# 
  3832   00026D                     SPI2SCKPPS      equ	621	;# 
  3833   00026E                     SPI2SDIPPS      equ	622	;# 
  3834   00026F                     SPI2SSPPS       equ	623	;# 
  3835   000270                     I2C1SDAPPS      equ	624	;# 
  3836   000271                     I2C1SCLPPS      equ	625	;# 
  3837   000272                     U1RXPPS         equ	626	;# 
  3838   000273                     U1CTSPPS        equ	627	;# 
  3839   000274                     U2RXPPS         equ	628	;# 
  3840   000275                     U2CTSPPS        equ	629	;# 
  3841   000276                     U3RXPPS         equ	630	;# 
  3842   000277                     U3CTSPPS        equ	631	;# 
  3843   000286                     RB6I2C          equ	646	;# 
  3844   000287                     RB4I2C          equ	647	;# 
  3845   00028A                     I2C1RXB         equ	650	;# 
  3846   00028B                     I2C1TXB         equ	651	;# 
  3847   00028C                     I2C1CNTL        equ	652	;# 
  3848   00028D                     I2C1CNTH        equ	653	;# 
  3849   00028E                     I2C1ADB0        equ	654	;# 
  3850   00028F                     I2C1ADB1        equ	655	;# 
  3851   000290                     I2C1ADR0        equ	656	;# 
  3852   000291                     I2C1ADR1        equ	657	;# 
  3853   000292                     I2C1ADR2        equ	658	;# 
  3854   000293                     I2C1ADR3        equ	659	;# 
  3855   000294                     I2C1CON0        equ	660	;# 
  3856   000295                     I2C1CON1        equ	661	;# 
  3857   000296                     I2C1CON2        equ	662	;# 
  3858   000297                     I2C1ERR         equ	663	;# 
  3859   000298                     I2C1STAT0       equ	664	;# 
  3860   000299                     I2C1STAT1       equ	665	;# 
  3861   00029A                     I2C1PIR         equ	666	;# 
  3862   00029B                     I2C1PIE         equ	667	;# 
  3863   00029C                     I2C1BTO         equ	668	;# 
  3864   00029D                     I2C1BAUD        equ	669	;# 
  3865   00029E                     I2C1CLK         equ	670	;# 
  3866   00029F                     I2C1BTOC        equ	671	;# 
  3867   0002A1                     U1RXB           equ	673	;# 
  3868   0002A1                     U1RXBL          equ	673	;# 
  3869   0002A2                     U1RXCHK         equ	674	;# 
  3870   0002A3                     U1TXB           equ	675	;# 
  3871   0002A3                     U1TXBL          equ	675	;# 
  3872   0002A4                     U1TXCHK         equ	676	;# 
  3873   0002A5                     U1P1            equ	677	;# 
  3874   0002A5                     U1P1L           equ	677	;# 
  3875   0002A6                     U1P1H           equ	678	;# 
  3876   0002A7                     U1P2            equ	679	;# 
  3877   0002A7                     U1P2L           equ	679	;# 
  3878   0002A8                     U1P2H           equ	680	;# 
  3879   0002A9                     U1P3            equ	681	;# 
  3880   0002A9                     U1P3L           equ	681	;# 
  3881   0002AA                     U1P3H           equ	682	;# 
  3882   0002AB                     U1CON0          equ	683	;# 
  3883   0002AC                     U1CON1          equ	684	;# 
  3884   0002AD                     U1CON2          equ	685	;# 
  3885   0002AE                     U1BRG           equ	686	;# 
  3886   0002AE                     U1BRGL          equ	686	;# 
  3887   0002AF                     U1BRGH          equ	687	;# 
  3888   0002B0                     U1FIFO          equ	688	;# 
  3889   0002B1                     U1UIR           equ	689	;# 
  3890   0002B2                     U1ERRIR         equ	690	;# 
  3891   0002B3                     U1ERRIE         equ	691	;# 
  3892   0002B4                     U2RXB           equ	692	;# 
  3893   0002B4                     U2RXBL          equ	692	;# 
  3894   0002B6                     U2TXB           equ	694	;# 
  3895   0002B6                     U2TXBL          equ	694	;# 
  3896   0002B8                     U2P1            equ	696	;# 
  3897   0002B8                     U2P1L           equ	696	;# 
  3898   0002BA                     U2P2            equ	698	;# 
  3899   0002BA                     U2P2L           equ	698	;# 
  3900   0002BC                     U2P3            equ	700	;# 
  3901   0002BC                     U2P3L           equ	700	;# 
  3902   0002BE                     U2CON0          equ	702	;# 
  3903   0002BF                     U2CON1          equ	703	;# 
  3904   0002C0                     U2CON2          equ	704	;# 
  3905   0002C1                     U2BRG           equ	705	;# 
  3906   0002C1                     U2BRGL          equ	705	;# 
  3907   0002C2                     U2BRGH          equ	706	;# 
  3908   0002C3                     U2FIFO          equ	707	;# 
  3909   0002C4                     U2UIR           equ	708	;# 
  3910   0002C5                     U2ERRIR         equ	709	;# 
  3911   0002C6                     U2ERRIE         equ	710	;# 
  3912   0002C7                     U3RXB           equ	711	;# 
  3913   0002C7                     U3RXBL          equ	711	;# 
  3914   0002C9                     U3TXB           equ	713	;# 
  3915   0002C9                     U3TXBL          equ	713	;# 
  3916   0002CB                     U3P1            equ	715	;# 
  3917   0002CB                     U3P1L           equ	715	;# 
  3918   0002CD                     U3P2            equ	717	;# 
  3919   0002CD                     U3P2L           equ	717	;# 
  3920   0002CF                     U3P3            equ	719	;# 
  3921   0002CF                     U3P3L           equ	719	;# 
  3922   0002D1                     U3CON0          equ	721	;# 
  3923   0002D2                     U3CON1          equ	722	;# 
  3924   0002D3                     U3CON2          equ	723	;# 
  3925   0002D4                     U3BRG           equ	724	;# 
  3926   0002D4                     U3BRGL          equ	724	;# 
  3927   0002D5                     U3BRGH          equ	725	;# 
  3928   0002D6                     U3FIFO          equ	726	;# 
  3929   0002D7                     U3UIR           equ	727	;# 
  3930   0002D8                     U3ERRIR         equ	728	;# 
  3931   0002D9                     U3ERRIE         equ	729	;# 
  3932   000300                     SMT1TMR         equ	768	;# 
  3933   000300                     SMT1TMRL        equ	768	;# 
  3934   000301                     SMT1TMRH        equ	769	;# 
  3935   000302                     SMT1TMRU        equ	770	;# 
  3936   000303                     SMT1CPR         equ	771	;# 
  3937   000303                     SMT1CPRL        equ	771	;# 
  3938   000304                     SMT1CPRH        equ	772	;# 
  3939   000305                     SMT1CPRU        equ	773	;# 
  3940   000306                     SMT1CPW         equ	774	;# 
  3941   000306                     SMT1CPWL        equ	774	;# 
  3942   000307                     SMT1CPWH        equ	775	;# 
  3943   000308                     SMT1CPWU        equ	776	;# 
  3944   000309                     SMT1PR          equ	777	;# 
  3945   000309                     SMT1PRL         equ	777	;# 
  3946   00030A                     SMT1PRH         equ	778	;# 
  3947   00030B                     SMT1PRU         equ	779	;# 
  3948   00030C                     SMT1CON0        equ	780	;# 
  3949   00030D                     SMT1CON1        equ	781	;# 
  3950   00030E                     SMT1STAT        equ	782	;# 
  3951   00030F                     SMT1CLK         equ	783	;# 
  3952   000310                     SMT1SIG         equ	784	;# 
  3953   000311                     SMT1WIN         equ	785	;# 
  3954   000312                     TMR1            equ	786	;# 
  3955   000312                     TMR1L           equ	786	;# 
  3956   000313                     TMR1H           equ	787	;# 
  3957   000314                     T1CON           equ	788	;# 
  3958   000314                     TMR1CON         equ	788	;# 
  3959   000315                     T1GCON          equ	789	;# 
  3960   000315                     TMR1GCON        equ	789	;# 
  3961   000316                     T1GATE          equ	790	;# 
  3962   000316                     TMR1GATE        equ	790	;# 
  3963   000317                     T1CLK           equ	791	;# 
  3964   000317                     TMR1CLK         equ	791	;# 
  3965   000317                     PR1             equ	791	;# 
  3966   000318                     TMR0L           equ	792	;# 
  3967   000318                     TMR0            equ	792	;# 
  3968   000319                     TMR0H           equ	793	;# 
  3969   000319                     PR0             equ	793	;# 
  3970   00031A                     T0CON0          equ	794	;# 
  3971   00031B                     T0CON1          equ	795	;# 
  3972   00031C                     T2TMR           equ	796	;# 
  3973   00031C                     TMR2            equ	796	;# 
  3974   00031D                     T2PR            equ	797	;# 
  3975   00031D                     PR2             equ	797	;# 
  3976   00031E                     T2CON           equ	798	;# 
  3977   00031F                     T2HLT           equ	799	;# 
  3978   000320                     T2CLKCON        equ	800	;# 
  3979   000320                     T2CLK           equ	800	;# 
  3980   000321                     T2RST           equ	801	;# 
  3981   000323                     TMR3            equ	803	;# 
  3982   000323                     TMR3L           equ	803	;# 
  3983   000324                     TMR3H           equ	804	;# 
  3984   000325                     T3CON           equ	805	;# 
  3985   000325                     TMR3CON         equ	805	;# 
  3986   000326                     T3GCON          equ	806	;# 
  3987   000326                     TMR3GCON        equ	806	;# 
  3988   000327                     T3GATE          equ	807	;# 
  3989   000327                     TMR3GATE        equ	807	;# 
  3990   000328                     T3CLK           equ	808	;# 
  3991   000328                     TMR3CLK         equ	808	;# 
  3992   000328                     PR3             equ	808	;# 
  3993   000329                     T4TMR           equ	809	;# 
  3994   000329                     TMR4            equ	809	;# 
  3995   00032A                     T4PR            equ	810	;# 
  3996   00032A                     PR4             equ	810	;# 
  3997   00032B                     T4CON           equ	811	;# 
  3998   00032C                     T4HLT           equ	812	;# 
  3999   00032D                     T4CLKCON        equ	813	;# 
  4000   00032D                     T4CLK           equ	813	;# 
  4001   00032E                     T4RST           equ	814	;# 
  4002   000340                     CCPR1           equ	832	;# 
  4003   000340                     CCPR1L          equ	832	;# 
  4004   000341                     CCPR1H          equ	833	;# 
  4005   000342                     CCP1CON         equ	834	;# 
  4006   000343                     CCP1CAP         equ	835	;# 
  4007   00034C                     CCPTMRS0        equ	844	;# 
  4008   00034E                     CRCDATA         equ	846	;# 
  4009   00034E                     CRCDATAL        equ	846	;# 
  4010   00034F                     CRCDATAH        equ	847	;# 
  4011   000350                     CRCDATAU        equ	848	;# 
  4012   000351                     CRCDATAT        equ	849	;# 
  4013   000352                     CRCOUT          equ	850	;# 
  4014   000352                     CRCSHFT         equ	850	;# 
  4015   000352                     CRCXOR          equ	850	;# 
  4016   000352                     CRCOUTL         equ	850	;# 
  4017   000352                     CRCSHFTL        equ	850	;# 
  4018   000352                     CRCSHIFTL       equ	850	;# 
  4019   000352                     CRCXORL         equ	850	;# 
  4020   000353                     CRCOUTH         equ	851	;# 
  4021   000353                     CRCSHFTH        equ	851	;# 
  4022   000353                     CRCSHIFTH       equ	851	;# 
  4023   000353                     CRCXORH         equ	851	;# 
  4024   000354                     CRCOUTU         equ	852	;# 
  4025   000354                     CRCSHFTU        equ	852	;# 
  4026   000354                     CRCSHIFTU       equ	852	;# 
  4027   000354                     CRCXORU         equ	852	;# 
  4028   000355                     CRCOUTT         equ	853	;# 
  4029   000355                     CRCSHFTT        equ	853	;# 
  4030   000355                     CRCSHIFTT       equ	853	;# 
  4031   000355                     CRCXORT         equ	853	;# 
  4032   000356                     CRCCON0         equ	854	;# 
  4033   000357                     CRCCON1         equ	855	;# 
  4034   000358                     CRCCON2         equ	856	;# 
  4035   00035A                     SCANLADR        equ	858	;# 
  4036   00035A                     SCANLADRL       equ	858	;# 
  4037   00035B                     SCANLADRH       equ	859	;# 
  4038   00035C                     SCANLADRU       equ	860	;# 
  4039   00035D                     SCANHADR        equ	861	;# 
  4040   00035D                     SCANHADRL       equ	861	;# 
  4041   00035E                     SCANHADRH       equ	862	;# 
  4042   00035F                     SCANHADRU       equ	863	;# 
  4043   000360                     SCANCON0        equ	864	;# 
  4044   000361                     SCANTRIG        equ	865	;# 
  4045   000367                     IPR0            equ	871	;# 
  4046   000368                     IPR1            equ	872	;# 
  4047   000369                     IPR2            equ	873	;# 
  4048   00036A                     IPR3            equ	874	;# 
  4049   00036B                     IPR4            equ	875	;# 
  4050   00036C                     IPR5            equ	876	;# 
  4051   00036D                     IPR6            equ	877	;# 
  4052   00036E                     IPR7            equ	878	;# 
  4053   00036F                     IPR8            equ	879	;# 
  4054   000370                     IPR9            equ	880	;# 
  4055   000371                     IPR10           equ	881	;# 
  4056   000373                     STATUS_CSHAD    equ	883	;# 
  4057   000374                     WREG_CSHAD      equ	884	;# 
  4058   000375                     BSR_CSHAD       equ	885	;# 
  4059   000376                     SHADCON         equ	886	;# 
  4060   000377                     STATUS_SHAD     equ	887	;# 
  4061   000378                     WREG_SHAD       equ	888	;# 
  4062   000379                     BSR_SHAD        equ	889	;# 
  4063   00037A                     PCLATH_SHAD     equ	890	;# 
  4064   00037B                     PCLATU_SHAD     equ	891	;# 
  4065   00037C                     FSR0SH          equ	892	;# 
  4066   00037C                     FSR0L_SHAD      equ	892	;# 
  4067   00037D                     FSR0H_SHAD      equ	893	;# 
  4068   00037E                     FSR1SH          equ	894	;# 
  4069   00037E                     FSR1L_SHAD      equ	894	;# 
  4070   00037F                     FSR1H_SHAD      equ	895	;# 
  4071   000380                     FSR2SH          equ	896	;# 
  4072   000380                     FSR2L_SHAD      equ	896	;# 
  4073   000381                     FSR2H_SHAD      equ	897	;# 
  4074   000382                     PRODSH          equ	898	;# 
  4075   000382                     PRODL_SHAD      equ	898	;# 
  4076   000383                     PRODH_SHAD      equ	899	;# 
  4077   0003BC                     CWG1CLK         equ	956	;# 
  4078   0003BC                     CWG1CLKCON      equ	956	;# 
  4079   0003BD                     CWG1ISM         equ	957	;# 
  4080   0003BD                     CWG1DAT         equ	957	;# 
  4081   0003BE                     CWG1DBR         equ	958	;# 
  4082   0003BF                     CWG1DBF         equ	959	;# 
  4083   0003C0                     CWG1CON0        equ	960	;# 
  4084   0003C1                     CWG1CON1        equ	961	;# 
  4085   0003C2                     CWG1AS0         equ	962	;# 
  4086   0003C3                     CWG1AS1         equ	963	;# 
  4087   0003C4                     CWG1STR         equ	964	;# 
  4088   0003D7                     FVRCON          equ	983	;# 
  4089   0003D8                     ADCPCON         equ	984	;# 
  4090   0003D8                     ADCP            equ	984	;# 
  4091   0003D9                     ADLTH           equ	985	;# 
  4092   0003D9                     ADLTHL          equ	985	;# 
  4093   0003DA                     ADLTHH          equ	986	;# 
  4094   0003DB                     ADUTH           equ	987	;# 
  4095   0003DB                     ADUTHL          equ	987	;# 
  4096   0003DC                     ADUTHH          equ	988	;# 
  4097   0003DD                     ADERR           equ	989	;# 
  4098   0003DD                     ADERRL          equ	989	;# 
  4099   0003DE                     ADERRH          equ	990	;# 
  4100   0003DF                     ADSTPT          equ	991	;# 
  4101   0003DF                     ADSTPTL         equ	991	;# 
  4102   0003E0                     ADSTPTH         equ	992	;# 
  4103   0003E1                     ADFLTR          equ	993	;# 
  4104   0003E1                     ADFLTRL         equ	993	;# 
  4105   0003E2                     ADFLTRH         equ	994	;# 
  4106   0003E3                     ADACC           equ	995	;# 
  4107   0003E3                     ADACCL          equ	995	;# 
  4108   0003E4                     ADACCH          equ	996	;# 
  4109   0003E5                     ADACCU          equ	997	;# 
  4110   0003E6                     ADCNT           equ	998	;# 
  4111   0003E7                     ADRPT           equ	999	;# 
  4112   0003E8                     ADPREV          equ	1000	;# 
  4113   0003E8                     ADPREVL         equ	1000	;# 
  4114   0003E9                     ADPREVH         equ	1001	;# 
  4115   0003EA                     ADRES           equ	1002	;# 
  4116   0003EA                     ADRESL          equ	1002	;# 
  4117   0003EB                     ADRESH          equ	1003	;# 
  4118   0003EC                     ADPCH           equ	1004	;# 
  4119   0003EE                     ADACQ           equ	1006	;# 
  4120   0003EE                     ADACQL          equ	1006	;# 
  4121   0003EF                     ADACQH          equ	1007	;# 
  4122   0003F0                     ADCAP           equ	1008	;# 
  4123   0003F1                     ADPRE           equ	1009	;# 
  4124   0003F1                     ADPREL          equ	1009	;# 
  4125   0003F2                     ADPREH          equ	1010	;# 
  4126   0003F3                     ADCON0          equ	1011	;# 
  4127   0003F4                     ADCON1          equ	1012	;# 
  4128   0003F5                     ADCON2          equ	1013	;# 
  4129   0003F6                     ADCON3          equ	1014	;# 
  4130   0003F7                     ADSTAT          equ	1015	;# 
  4131   0003F8                     ADREF           equ	1016	;# 
  4132   0003F9                     ADACT           equ	1017	;# 
  4133   0003FA                     ADCLK           equ	1018	;# 
  4134   000400                     ANSELA          equ	1024	;# 
  4135   000401                     WPUA            equ	1025	;# 
  4136   000402                     ODCONA          equ	1026	;# 
  4137   000403                     SLRCONA         equ	1027	;# 
  4138   000404                     INLVLA          equ	1028	;# 
  4139   000405                     IOCAP           equ	1029	;# 
  4140   000406                     IOCAN           equ	1030	;# 
  4141   000407                     IOCAF           equ	1031	;# 
  4142   000408                     ANSELB          equ	1032	;# 
  4143   000409                     WPUB            equ	1033	;# 
  4144   00040A                     ODCONB          equ	1034	;# 
  4145   00040B                     SLRCONB         equ	1035	;# 
  4146   00040C                     INLVLB          equ	1036	;# 
  4147   00040D                     IOCBP           equ	1037	;# 
  4148   00040E                     IOCBN           equ	1038	;# 
  4149   00040F                     IOCBF           equ	1039	;# 
  4150   000410                     ANSELC          equ	1040	;# 
  4151   000411                     WPUC            equ	1041	;# 
  4152   000412                     ODCONC          equ	1042	;# 
  4153   000413                     SLRCONC         equ	1043	;# 
  4154   000414                     INLVLC          equ	1044	;# 
  4155   000415                     IOCCP           equ	1045	;# 
  4156   000416                     IOCCN           equ	1046	;# 
  4157   000417                     IOCCF           equ	1047	;# 
  4158   000440                     NCO1ACC         equ	1088	;# 
  4159   000440                     NCO1ACCL        equ	1088	;# 
  4160   000441                     NCO1ACCH        equ	1089	;# 
  4161   000442                     NCO1ACCU        equ	1090	;# 
  4162   000443                     NCO1INC         equ	1091	;# 
  4163   000443                     NCO1INCL        equ	1091	;# 
  4164   000444                     NCO1INCH        equ	1092	;# 
  4165   000445                     NCO1INCU        equ	1093	;# 
  4166   000446                     NCO1CON         equ	1094	;# 
  4167   000447                     NCO1CLK         equ	1095	;# 
  4168   000458                     FSCMCON         equ	1112	;# 
  4169   000459                     IVTLOCK         equ	1113	;# 
  4170   00045A                     IVTAD           equ	1114	;# 
  4171   00045A                     IVTADL          equ	1114	;# 
  4172   00045B                     IVTADH          equ	1115	;# 
  4173   00045C                     IVTADU          equ	1116	;# 
  4174   00045D                     IVTBASE         equ	1117	;# 
  4175   00045D                     IVTBASEL        equ	1117	;# 
  4176   00045E                     IVTBASEH        equ	1118	;# 
  4177   00045F                     IVTBASEU        equ	1119	;# 
  4178   000460                     PWM1ERS         equ	1120	;# 
  4179   000461                     PWM1CLK         equ	1121	;# 
  4180   000462                     PWM1LDS         equ	1122	;# 
  4181   000463                     PWM1PR          equ	1123	;# 
  4182   000463                     PWM1PRL         equ	1123	;# 
  4183   000464                     PWM1PRH         equ	1124	;# 
  4184   000465                     PWM1CPRE        equ	1125	;# 
  4185   000466                     PWM1PIPOS       equ	1126	;# 
  4186   000467                     PWM1GIR         equ	1127	;# 
  4187   000468                     PWM1GIE         equ	1128	;# 
  4188   000469                     PWM1CON         equ	1129	;# 
  4189   00046A                     PWM1S1CFG       equ	1130	;# 
  4190   00046B                     PWM1S1P1        equ	1131	;# 
  4191   00046B                     PWM1S1P1L       equ	1131	;# 
  4192   00046C                     PWM1S1P1H       equ	1132	;# 
  4193   00046D                     PWM1S1P2        equ	1133	;# 
  4194   00046D                     PWM1S1P2L       equ	1133	;# 
  4195   00046E                     PWM1S1P2H       equ	1134	;# 
  4196   00046F                     PWM2ERS         equ	1135	;# 
  4197   000470                     PWM2CLK         equ	1136	;# 
  4198   000471                     PWM2LDS         equ	1137	;# 
  4199   000472                     PWM2PR          equ	1138	;# 
  4200   000472                     PWM2PRL         equ	1138	;# 
  4201   000473                     PWM2PRH         equ	1139	;# 
  4202   000474                     PWM2CPRE        equ	1140	;# 
  4203   000475                     PWM2PIPOS       equ	1141	;# 
  4204   000476                     PWM2GIR         equ	1142	;# 
  4205   000477                     PWM2GIE         equ	1143	;# 
  4206   000478                     PWM2CON         equ	1144	;# 
  4207   000479                     PWM2S1CFG       equ	1145	;# 
  4208   00047A                     PWM2S1P1        equ	1146	;# 
  4209   00047A                     PWM2S1P1L       equ	1146	;# 
  4210   00047B                     PWM2S1P1H       equ	1147	;# 
  4211   00047C                     PWM2S1P2        equ	1148	;# 
  4212   00047C                     PWM2S1P2L       equ	1148	;# 
  4213   00047D                     PWM2S1P2H       equ	1149	;# 
  4214   00047E                     PWM3ERS         equ	1150	;# 
  4215   00047F                     PWM3CLK         equ	1151	;# 
  4216   000480                     PWM3LDS         equ	1152	;# 
  4217   000481                     PWM3PR          equ	1153	;# 
  4218   000481                     PWM3PRL         equ	1153	;# 
  4219   000482                     PWM3PRH         equ	1154	;# 
  4220   000483                     PWM3CPRE        equ	1155	;# 
  4221   000484                     PWM3PIPOS       equ	1156	;# 
  4222   000485                     PWM3GIR         equ	1157	;# 
  4223   000486                     PWM3GIE         equ	1158	;# 
  4224   000487                     PWM3CON         equ	1159	;# 
  4225   000488                     PWM3S1CFG       equ	1160	;# 
  4226   000489                     PWM3S1P1        equ	1161	;# 
  4227   000489                     PWM3S1P1L       equ	1161	;# 
  4228   00048A                     PWM3S1P1H       equ	1162	;# 
  4229   00048B                     PWM3S1P2        equ	1163	;# 
  4230   00048B                     PWM3S1P2L       equ	1163	;# 
  4231   00048C                     PWM3S1P2H       equ	1164	;# 
  4232   00049C                     PWMLOAD         equ	1180	;# 
  4233   00049D                     PWMEN           equ	1181	;# 
  4234   0004A8                     PIE0            equ	1192	;# 
  4235   0004A9                     PIE1            equ	1193	;# 
  4236   0004AA                     PIE2            equ	1194	;# 
  4237   0004AB                     PIE3            equ	1195	;# 
  4238   0004AC                     PIE4            equ	1196	;# 
  4239   0004AD                     PIE5            equ	1197	;# 
  4240   0004AE                     PIE6            equ	1198	;# 
  4241   0004AF                     PIE7            equ	1199	;# 
  4242   0004B0                     PIE8            equ	1200	;# 
  4243   0004B1                     PIE9            equ	1201	;# 
  4244   0004B2                     PIE10           equ	1202	;# 
  4245   0004B3                     PIR0            equ	1203	;# 
  4246   0004B4                     PIR1            equ	1204	;# 
  4247   0004B5                     PIR2            equ	1205	;# 
  4248   0004B6                     PIR3            equ	1206	;# 
  4249   0004B7                     PIR4            equ	1207	;# 
  4250   0004B8                     PIR5            equ	1208	;# 
  4251   0004B9                     PIR6            equ	1209	;# 
  4252   0004BA                     PIR7            equ	1210	;# 
  4253   0004BB                     PIR8            equ	1211	;# 
  4254   0004BC                     PIR9            equ	1212	;# 
  4255   0004BD                     PIR10           equ	1213	;# 
  4256   0004BE                     LATA            equ	1214	;# 
  4257   0004BF                     LATB            equ	1215	;# 
  4258   0004C0                     LATC            equ	1216	;# 
  4259   0004C6                     TRISA           equ	1222	;# 
  4260   0004C7                     TRISB           equ	1223	;# 
  4261   0004C8                     TRISC           equ	1224	;# 
  4262   0004CE                     PORTA           equ	1230	;# 
  4263   0004CF                     PORTB           equ	1231	;# 
  4264   0004D0                     PORTC           equ	1232	;# 
  4265   0004D6                     INTCON0         equ	1238	;# 
  4266   0004D7                     INTCON1         equ	1239	;# 
  4267   0004D8                     STATUS          equ	1240	;# 
  4268   0004D9                     FSR2            equ	1241	;# 
  4269   0004D9                     FSR2L           equ	1241	;# 
  4270   0004DA                     FSR2H           equ	1242	;# 
  4271   0004DB                     PLUSW2          equ	1243	;# 
  4272   0004DC                     PREINC2         equ	1244	;# 
  4273   0004DD                     POSTDEC2        equ	1245	;# 
  4274   0004DE                     POSTINC2        equ	1246	;# 
  4275   0004DF                     INDF2           equ	1247	;# 
  4276   0004E0                     BSR             equ	1248	;# 
  4277   0004E1                     FSR1            equ	1249	;# 
  4278   0004E1                     FSR1L           equ	1249	;# 
  4279   0004E2                     FSR1H           equ	1250	;# 
  4280   0004E3                     PLUSW1          equ	1251	;# 
  4281   0004E4                     PREINC1         equ	1252	;# 
  4282   0004E5                     POSTDEC1        equ	1253	;# 
  4283   0004E6                     POSTINC1        equ	1254	;# 
  4284   0004E7                     INDF1           equ	1255	;# 
  4285   0004E8                     WREG            equ	1256	;# 
  4286   0004E9                     FSR0            equ	1257	;# 
  4287   0004E9                     FSR0L           equ	1257	;# 
  4288   0004EA                     FSR0H           equ	1258	;# 
  4289   0004EB                     PLUSW0          equ	1259	;# 
  4290   0004EC                     PREINC0         equ	1260	;# 
  4291   0004ED                     POSTDEC0        equ	1261	;# 
  4292   0004EE                     POSTINC0        equ	1262	;# 
  4293   0004EF                     INDF0           equ	1263	;# 
  4294   0004F0                     PCON0           equ	1264	;# 
  4295   0004F1                     PCON1           equ	1265	;# 
  4296   0004F2                     CPUDOZE         equ	1266	;# 
  4297   0004F3                     PROD            equ	1267	;# 
  4298   0004F3                     PRODL           equ	1267	;# 
  4299   0004F4                     PRODH           equ	1268	;# 
  4300   0004F5                     TABLAT          equ	1269	;# 
  4301   0004F6                     TBLPTR          equ	1270	;# 
  4302   0004F6                     TBLPTRL         equ	1270	;# 
  4303   0004F7                     TBLPTRH         equ	1271	;# 
  4304   0004F8                     TBLPTRU         equ	1272	;# 
  4305   0004F9                     PCLAT           equ	1273	;# 
  4306   0004F9                     PCL             equ	1273	;# 
  4307   0004FA                     PCLATH          equ	1274	;# 
  4308   0004FB                     PCLATU          equ	1275	;# 
  4309   0004FC                     STKPTR          equ	1276	;# 
  4310   0004FD                     TOS             equ	1277	;# 
  4311   0004FD                     TOSL            equ	1277	;# 
  4312   0004FE                     TOSH            equ	1278	;# 
  4313   0004FF                     TOSU            equ	1279	;# 
  4314   000039                     CLKRCON         equ	57	;# 
  4315   00003A                     CLKRCLK         equ	58	;# 
  4316   000040                     NVMCON0         equ	64	;# 
  4317   000041                     NVMCON1         equ	65	;# 
  4318   000042                     NVMLOCK         equ	66	;# 
  4319   000043                     NVMADR          equ	67	;# 
  4320   000043                     NVMADRL         equ	67	;# 
  4321   000044                     NVMADRH         equ	68	;# 
  4322   000045                     NVMADRU         equ	69	;# 
  4323   000046                     NVMDAT          equ	70	;# 
  4324   000046                     NVMDATL         equ	70	;# 
  4325   000047                     NVMDATH         equ	71	;# 
  4326   000048                     VREGCON         equ	72	;# 
  4327   000049                     BORCON          equ	73	;# 
  4328   00004A                     HLVDCON0        equ	74	;# 
  4329   00004B                     HLVDCON1        equ	75	;# 
  4330   00004C                     ZCDCON          equ	76	;# 
  4331   000063                     PMD0            equ	99	;# 
  4332   000064                     PMD1            equ	100	;# 
  4333   000065                     PMD2            equ	101	;# 
  4334   000066                     PMD3            equ	102	;# 
  4335   000067                     PMD4            equ	103	;# 
  4336   000068                     PMD5            equ	104	;# 
  4337   00006A                     MD1CON0         equ	106	;# 
  4338   00006B                     MD1CON1         equ	107	;# 
  4339   00006C                     MD1SRC          equ	108	;# 
  4340   00006D                     MD1CARL         equ	109	;# 
  4341   00006E                     MD1CARH         equ	110	;# 
  4342   00006F                     CMOUT           equ	111	;# 
  4343   000070                     CM1CON0         equ	112	;# 
  4344   000071                     CM1CON1         equ	113	;# 
  4345   000072                     CM1NCH          equ	114	;# 
  4346   000073                     CM1PCH          equ	115	;# 
  4347   000074                     CM2CON0         equ	116	;# 
  4348   000075                     CM2CON1         equ	117	;# 
  4349   000076                     CM2NCH          equ	118	;# 
  4350   000077                     CM2PCH          equ	119	;# 
  4351   000078                     WDTCON0         equ	120	;# 
  4352   000079                     WDTCON1         equ	121	;# 
  4353   00007A                     WDTPS           equ	122	;# 
  4354   00007A                     WDTPSL          equ	122	;# 
  4355   00007B                     WDTPSH          equ	123	;# 
  4356   00007C                     WDTTMR          equ	124	;# 
  4357   00007D                     DAC1DAT         equ	125	;# 
  4358   00007D                     DAC1DATL        equ	125	;# 
  4359   00007F                     DAC1CON         equ	127	;# 
  4360   000080                     SPI1RXB         equ	128	;# 
  4361   000081                     SPI1TXB         equ	129	;# 
  4362   000082                     SPI1TCNT        equ	130	;# 
  4363   000082                     SPI1TCNTL       equ	130	;# 
  4364   000083                     SPI1TCNTH       equ	131	;# 
  4365   000084                     SPI1CON0        equ	132	;# 
  4366   000085                     SPI1CON1        equ	133	;# 
  4367   000086                     SPI1CON2        equ	134	;# 
  4368   000087                     SPI1STATUS      equ	135	;# 
  4369   000088                     SPI1TWIDTH      equ	136	;# 
  4370   000089                     SPI1BAUD        equ	137	;# 
  4371   00008A                     SPI1INTF        equ	138	;# 
  4372   00008B                     SPI1INTE        equ	139	;# 
  4373   00008C                     SPI1CLK         equ	140	;# 
  4374   00008D                     SPI2RXB         equ	141	;# 
  4375   00008E                     SPI2TXB         equ	142	;# 
  4376   00008F                     SPI2TCNT        equ	143	;# 
  4377   00008F                     SPI2TCNTL       equ	143	;# 
  4378   000090                     SPI2TCNTH       equ	144	;# 
  4379   000091                     SPI2CON0        equ	145	;# 
  4380   000092                     SPI2CON1        equ	146	;# 
  4381   000093                     SPI2CON2        equ	147	;# 
  4382   000094                     SPI2STATUS      equ	148	;# 
  4383   000095                     SPI2TWIDTH      equ	149	;# 
  4384   000096                     SPI2BAUD        equ	150	;# 
  4385   000097                     SPI2INTF        equ	151	;# 
  4386   000098                     SPI2INTE        equ	152	;# 
  4387   000099                     SPI2CLK         equ	153	;# 
  4388   0000A0                     DAC2DAT         equ	160	;# 
  4389   0000A0                     DAC2DATL        equ	160	;# 
  4390   0000A2                     DAC2CON         equ	162	;# 
  4391   0000A3                     OPA1CON0        equ	163	;# 
  4392   0000A4                     OPA1CON1        equ	164	;# 
  4393   0000A5                     OPA1CON2        equ	165	;# 
  4394   0000A6                     OPA1CON3        equ	166	;# 
  4395   0000A7                     OPA1HWC         equ	167	;# 
  4396   0000A8                     OPA1OFFSET      equ	168	;# 
  4397   0000A9                     OPA1ORS         equ	169	;# 
  4398   0000AC                     ACTCON          equ	172	;# 
  4399   0000AD                     OSCCON1         equ	173	;# 
  4400   0000AE                     OSCCON2         equ	174	;# 
  4401   0000AF                     OSCCON3         equ	175	;# 
  4402   0000B0                     OSCTUNE         equ	176	;# 
  4403   0000B1                     OSCFRQ          equ	177	;# 
  4404   0000B1                     OSCFREQ         equ	177	;# 
  4405   0000B2                     OSCSTAT         equ	178	;# 
  4406   0000B2                     OSCSTAT1        equ	178	;# 
  4407   0000B3                     OSCEN           equ	179	;# 
  4408   0000B4                     PRLOCK          equ	180	;# 
  4409   0000B5                     SCANPR          equ	181	;# 
  4410   0000B6                     DMA1PR          equ	182	;# 
  4411   0000B7                     DMA2PR          equ	183	;# 
  4412   0000B8                     DMA3PR          equ	184	;# 
  4413   0000B9                     DMA4PR          equ	185	;# 
  4414   0000BE                     MAINPR          equ	190	;# 
  4415   0000BF                     ISRPR           equ	191	;# 
  4416   0000D4                     CLCDATA         equ	212	;# 
  4417   0000D5                     CLCSELECT       equ	213	;# 
  4418   0000D6                     CLCnCON         equ	214	;# 
  4419   0000D7                     CLCnPOL         equ	215	;# 
  4420   0000D8                     CLCnSEL0        equ	216	;# 
  4421   0000D9                     CLCnSEL1        equ	217	;# 
  4422   0000DA                     CLCnSEL2        equ	218	;# 
  4423   0000DB                     CLCnSEL3        equ	219	;# 
  4424   0000DC                     CLCnGLS0        equ	220	;# 
  4425   0000DD                     CLCnGLS1        equ	221	;# 
  4426   0000DE                     CLCnGLS2        equ	222	;# 
  4427   0000DF                     CLCnGLS3        equ	223	;# 
  4428   0000E8                     DMASELECT       equ	232	;# 
  4429   0000E9                     DMAnBUF         equ	233	;# 
  4430   0000EA                     DMAnDCNT        equ	234	;# 
  4431   0000EA                     DMAnDCNTL       equ	234	;# 
  4432   0000EB                     DMAnDCNTH       equ	235	;# 
  4433   0000EC                     DMAnDPTR        equ	236	;# 
  4434   0000EC                     DMAnDPTRL       equ	236	;# 
  4435   0000ED                     DMAnDPTRH       equ	237	;# 
  4436   0000EE                     DMAnDSZ         equ	238	;# 
  4437   0000EE                     DMAnDSZL        equ	238	;# 
  4438   0000EF                     DMAnDSZH        equ	239	;# 
  4439   0000F0                     DMAnDSA         equ	240	;# 
  4440   0000F0                     DMAnDSAL        equ	240	;# 
  4441   0000F1                     DMAnDSAH        equ	241	;# 
  4442   0000F2                     DMAnSCNT        equ	242	;# 
  4443   0000F2                     DMAnSCNTL       equ	242	;# 
  4444   0000F3                     DMAnSCNTH       equ	243	;# 
  4445   0000F4                     DMAnSPTR        equ	244	;# 
  4446   0000F4                     DMAnSPTRL       equ	244	;# 
  4447   0000F5                     DMAnSPTRH       equ	245	;# 
  4448   0000F6                     DMAnSPTRU       equ	246	;# 
  4449   0000F7                     DMAnSSZ         equ	247	;# 
  4450   0000F7                     DMAnSSZL        equ	247	;# 
  4451   0000F8                     DMAnSSZH        equ	248	;# 
  4452   0000F9                     DMAnSSA         equ	249	;# 
  4453   0000F9                     DMAnSSAL        equ	249	;# 
  4454   0000FA                     DMAnSSAH        equ	250	;# 
  4455   0000FB                     DMAnSSAU        equ	251	;# 
  4456   0000FC                     DMAnCON0        equ	252	;# 
  4457   0000FD                     DMAnCON1        equ	253	;# 
  4458   0000FE                     DMAnAIRQ        equ	254	;# 
  4459   0000FF                     DMAnSIRQ        equ	255	;# 
  4460   000200                     PPSLOCK         equ	512	;# 
  4461   000201                     RA0PPS          equ	513	;# 
  4462   000202                     RA1PPS          equ	514	;# 
  4463   000203                     RA2PPS          equ	515	;# 
  4464   000205                     RA4PPS          equ	517	;# 
  4465   000206                     RA5PPS          equ	518	;# 
  4466   00020D                     RB4PPS          equ	525	;# 
  4467   00020E                     RB5PPS          equ	526	;# 
  4468   00020F                     RB6PPS          equ	527	;# 
  4469   000210                     RB7PPS          equ	528	;# 
  4470   000211                     RC0PPS          equ	529	;# 
  4471   000212                     RC1PPS          equ	530	;# 
  4472   000213                     RC2PPS          equ	531	;# 
  4473   000214                     RC3PPS          equ	532	;# 
  4474   000215                     RC4PPS          equ	533	;# 
  4475   000216                     RC5PPS          equ	534	;# 
  4476   000217                     RC6PPS          equ	535	;# 
  4477   000218                     RC7PPS          equ	536	;# 
  4478   00023E                     INT0PPS         equ	574	;# 
  4479   00023F                     INT1PPS         equ	575	;# 
  4480   000240                     INT2PPS         equ	576	;# 
  4481   000241                     T0CKIPPS        equ	577	;# 
  4482   000242                     T1CKIPPS        equ	578	;# 
  4483   000243                     T1GPPS          equ	579	;# 
  4484   000244                     T3CKIPPS        equ	580	;# 
  4485   000245                     T3GPPS          equ	581	;# 
  4486   000248                     T2INPPS         equ	584	;# 
  4487   000249                     T4INPPS         equ	585	;# 
  4488   00024F                     CCP1PPS         equ	591	;# 
  4489   000251                     PWM1ERSPPS      equ	593	;# 
  4490   000252                     PWM2ERSPPS      equ	594	;# 
  4491   000253                     PWM3ERSPPS      equ	595	;# 
  4492   000257                     PWMIN0PPS       equ	599	;# 
  4493   000258                     PWMIN1PPS       equ	600	;# 
  4494   000259                     SMT1WINPPS      equ	601	;# 
  4495   00025A                     SMT1SIGPPS      equ	602	;# 
  4496   00025B                     CWG1PPS         equ	603	;# 
  4497   00025B                     CWG1INPPS       equ	603	;# 
  4498   00025E                     MD1CARLPPS      equ	606	;# 
  4499   00025E                     MDCARLPPS       equ	606	;# 
  4500   00025F                     MD1CARHPPS      equ	607	;# 
  4501   00025F                     MDCARHPPS       equ	607	;# 
  4502   000260                     MD1SRCPPS       equ	608	;# 
  4503   000260                     MDSRCPPS        equ	608	;# 
  4504   000261                     CLCIN0PPS       equ	609	;# 
  4505   000262                     CLCIN1PPS       equ	610	;# 
  4506   000263                     CLCIN2PPS       equ	611	;# 
  4507   000264                     CLCIN3PPS       equ	612	;# 
  4508   000269                     ADACTPPS        equ	617	;# 
  4509   00026A                     SPI1SCKPPS      equ	618	;# 
  4510   00026B                     SPI1SDIPPS      equ	619	;# 
  4511   00026C                     SPI1SSPPS       equ	620	;# 
  4512   00026D                     SPI2SCKPPS      equ	621	;# 
  4513   00026E                     SPI2SDIPPS      equ	622	;# 
  4514   00026F                     SPI2SSPPS       equ	623	;# 
  4515   000270                     I2C1SDAPPS      equ	624	;# 
  4516   000271                     I2C1SCLPPS      equ	625	;# 
  4517   000272                     U1RXPPS         equ	626	;# 
  4518   000273                     U1CTSPPS        equ	627	;# 
  4519   000274                     U2RXPPS         equ	628	;# 
  4520   000275                     U2CTSPPS        equ	629	;# 
  4521   000276                     U3RXPPS         equ	630	;# 
  4522   000277                     U3CTSPPS        equ	631	;# 
  4523   000286                     RB6I2C          equ	646	;# 
  4524   000287                     RB4I2C          equ	647	;# 
  4525   00028A                     I2C1RXB         equ	650	;# 
  4526   00028B                     I2C1TXB         equ	651	;# 
  4527   00028C                     I2C1CNTL        equ	652	;# 
  4528   00028D                     I2C1CNTH        equ	653	;# 
  4529   00028E                     I2C1ADB0        equ	654	;# 
  4530   00028F                     I2C1ADB1        equ	655	;# 
  4531   000290                     I2C1ADR0        equ	656	;# 
  4532   000291                     I2C1ADR1        equ	657	;# 
  4533   000292                     I2C1ADR2        equ	658	;# 
  4534   000293                     I2C1ADR3        equ	659	;# 
  4535   000294                     I2C1CON0        equ	660	;# 
  4536   000295                     I2C1CON1        equ	661	;# 
  4537   000296                     I2C1CON2        equ	662	;# 
  4538   000297                     I2C1ERR         equ	663	;# 
  4539   000298                     I2C1STAT0       equ	664	;# 
  4540   000299                     I2C1STAT1       equ	665	;# 
  4541   00029A                     I2C1PIR         equ	666	;# 
  4542   00029B                     I2C1PIE         equ	667	;# 
  4543   00029C                     I2C1BTO         equ	668	;# 
  4544   00029D                     I2C1BAUD        equ	669	;# 
  4545   00029E                     I2C1CLK         equ	670	;# 
  4546   00029F                     I2C1BTOC        equ	671	;# 
  4547   0002A1                     U1RXB           equ	673	;# 
  4548   0002A1                     U1RXBL          equ	673	;# 
  4549   0002A2                     U1RXCHK         equ	674	;# 
  4550   0002A3                     U1TXB           equ	675	;# 
  4551   0002A3                     U1TXBL          equ	675	;# 
  4552   0002A4                     U1TXCHK         equ	676	;# 
  4553   0002A5                     U1P1            equ	677	;# 
  4554   0002A5                     U1P1L           equ	677	;# 
  4555   0002A6                     U1P1H           equ	678	;# 
  4556   0002A7                     U1P2            equ	679	;# 
  4557   0002A7                     U1P2L           equ	679	;# 
  4558   0002A8                     U1P2H           equ	680	;# 
  4559   0002A9                     U1P3            equ	681	;# 
  4560   0002A9                     U1P3L           equ	681	;# 
  4561   0002AA                     U1P3H           equ	682	;# 
  4562   0002AB                     U1CON0          equ	683	;# 
  4563   0002AC                     U1CON1          equ	684	;# 
  4564   0002AD                     U1CON2          equ	685	;# 
  4565   0002AE                     U1BRG           equ	686	;# 
  4566   0002AE                     U1BRGL          equ	686	;# 
  4567   0002AF                     U1BRGH          equ	687	;# 
  4568   0002B0                     U1FIFO          equ	688	;# 
  4569   0002B1                     U1UIR           equ	689	;# 
  4570   0002B2                     U1ERRIR         equ	690	;# 
  4571   0002B3                     U1ERRIE         equ	691	;# 
  4572   0002B4                     U2RXB           equ	692	;# 
  4573   0002B4                     U2RXBL          equ	692	;# 
  4574   0002B6                     U2TXB           equ	694	;# 
  4575   0002B6                     U2TXBL          equ	694	;# 
  4576   0002B8                     U2P1            equ	696	;# 
  4577   0002B8                     U2P1L           equ	696	;# 
  4578   0002BA                     U2P2            equ	698	;# 
  4579   0002BA                     U2P2L           equ	698	;# 
  4580   0002BC                     U2P3            equ	700	;# 
  4581   0002BC                     U2P3L           equ	700	;# 
  4582   0002BE                     U2CON0          equ	702	;# 
  4583   0002BF                     U2CON1          equ	703	;# 
  4584   0002C0                     U2CON2          equ	704	;# 
  4585   0002C1                     U2BRG           equ	705	;# 
  4586   0002C1                     U2BRGL          equ	705	;# 
  4587   0002C2                     U2BRGH          equ	706	;# 
  4588   0002C3                     U2FIFO          equ	707	;# 
  4589   0002C4                     U2UIR           equ	708	;# 
  4590   0002C5                     U2ERRIR         equ	709	;# 
  4591   0002C6                     U2ERRIE         equ	710	;# 
  4592   0002C7                     U3RXB           equ	711	;# 
  4593   0002C7                     U3RXBL          equ	711	;# 
  4594   0002C9                     U3TXB           equ	713	;# 
  4595   0002C9                     U3TXBL          equ	713	;# 
  4596   0002CB                     U3P1            equ	715	;# 
  4597   0002CB                     U3P1L           equ	715	;# 
  4598   0002CD                     U3P2            equ	717	;# 
  4599   0002CD                     U3P2L           equ	717	;# 
  4600   0002CF                     U3P3            equ	719	;# 
  4601   0002CF                     U3P3L           equ	719	;# 
  4602   0002D1                     U3CON0          equ	721	;# 
  4603   0002D2                     U3CON1          equ	722	;# 
  4604   0002D3                     U3CON2          equ	723	;# 
  4605   0002D4                     U3BRG           equ	724	;# 
  4606   0002D4                     U3BRGL          equ	724	;# 
  4607   0002D5                     U3BRGH          equ	725	;# 
  4608   0002D6                     U3FIFO          equ	726	;# 
  4609   0002D7                     U3UIR           equ	727	;# 
  4610   0002D8                     U3ERRIR         equ	728	;# 
  4611   0002D9                     U3ERRIE         equ	729	;# 
  4612   000300                     SMT1TMR         equ	768	;# 
  4613   000300                     SMT1TMRL        equ	768	;# 
  4614   000301                     SMT1TMRH        equ	769	;# 
  4615   000302                     SMT1TMRU        equ	770	;# 
  4616   000303                     SMT1CPR         equ	771	;# 
  4617   000303                     SMT1CPRL        equ	771	;# 
  4618   000304                     SMT1CPRH        equ	772	;# 
  4619   000305                     SMT1CPRU        equ	773	;# 
  4620   000306                     SMT1CPW         equ	774	;# 
  4621   000306                     SMT1CPWL        equ	774	;# 
  4622   000307                     SMT1CPWH        equ	775	;# 
  4623   000308                     SMT1CPWU        equ	776	;# 
  4624   000309                     SMT1PR          equ	777	;# 
  4625   000309                     SMT1PRL         equ	777	;# 
  4626   00030A                     SMT1PRH         equ	778	;# 
  4627   00030B                     SMT1PRU         equ	779	;# 
  4628   00030C                     SMT1CON0        equ	780	;# 
  4629   00030D                     SMT1CON1        equ	781	;# 
  4630   00030E                     SMT1STAT        equ	782	;# 
  4631   00030F                     SMT1CLK         equ	783	;# 
  4632   000310                     SMT1SIG         equ	784	;# 
  4633   000311                     SMT1WIN         equ	785	;# 
  4634   000312                     TMR1            equ	786	;# 
  4635   000312                     TMR1L           equ	786	;# 
  4636   000313                     TMR1H           equ	787	;# 
  4637   000314                     T1CON           equ	788	;# 
  4638   000314                     TMR1CON         equ	788	;# 
  4639   000315                     T1GCON          equ	789	;# 
  4640   000315                     TMR1GCON        equ	789	;# 
  4641   000316                     T1GATE          equ	790	;# 
  4642   000316                     TMR1GATE        equ	790	;# 
  4643   000317                     T1CLK           equ	791	;# 
  4644   000317                     TMR1CLK         equ	791	;# 
  4645   000317                     PR1             equ	791	;# 
  4646   000318                     TMR0L           equ	792	;# 
  4647   000318                     TMR0            equ	792	;# 
  4648   000319                     TMR0H           equ	793	;# 
  4649   000319                     PR0             equ	793	;# 
  4650   00031A                     T0CON0          equ	794	;# 
  4651   00031B                     T0CON1          equ	795	;# 
  4652   00031C                     T2TMR           equ	796	;# 
  4653   00031C                     TMR2            equ	796	;# 
  4654   00031D                     T2PR            equ	797	;# 
  4655   00031D                     PR2             equ	797	;# 
  4656   00031E                     T2CON           equ	798	;# 
  4657   00031F                     T2HLT           equ	799	;# 
  4658   000320                     T2CLKCON        equ	800	;# 
  4659   000320                     T2CLK           equ	800	;# 
  4660   000321                     T2RST           equ	801	;# 
  4661   000323                     TMR3            equ	803	;# 
  4662   000323                     TMR3L           equ	803	;# 
  4663   000324                     TMR3H           equ	804	;# 
  4664   000325                     T3CON           equ	805	;# 
  4665   000325                     TMR3CON         equ	805	;# 
  4666   000326                     T3GCON          equ	806	;# 
  4667   000326                     TMR3GCON        equ	806	;# 
  4668   000327                     T3GATE          equ	807	;# 
  4669   000327                     TMR3GATE        equ	807	;# 
  4670   000328                     T3CLK           equ	808	;# 
  4671   000328                     TMR3CLK         equ	808	;# 
  4672   000328                     PR3             equ	808	;# 
  4673   000329                     T4TMR           equ	809	;# 
  4674   000329                     TMR4            equ	809	;# 
  4675   00032A                     T4PR            equ	810	;# 
  4676   00032A                     PR4             equ	810	;# 
  4677   00032B                     T4CON           equ	811	;# 
  4678   00032C                     T4HLT           equ	812	;# 
  4679   00032D                     T4CLKCON        equ	813	;# 
  4680   00032D                     T4CLK           equ	813	;# 
  4681   00032E                     T4RST           equ	814	;# 
  4682   000340                     CCPR1           equ	832	;# 
  4683   000340                     CCPR1L          equ	832	;# 
  4684   000341                     CCPR1H          equ	833	;# 
  4685   000342                     CCP1CON         equ	834	;# 
  4686   000343                     CCP1CAP         equ	835	;# 
  4687   00034C                     CCPTMRS0        equ	844	;# 
  4688   00034E                     CRCDATA         equ	846	;# 
  4689   00034E                     CRCDATAL        equ	846	;# 
  4690   00034F                     CRCDATAH        equ	847	;# 
  4691   000350                     CRCDATAU        equ	848	;# 
  4692   000351                     CRCDATAT        equ	849	;# 
  4693   000352                     CRCOUT          equ	850	;# 
  4694   000352                     CRCSHFT         equ	850	;# 
  4695   000352                     CRCXOR          equ	850	;# 
  4696   000352                     CRCOUTL         equ	850	;# 
  4697   000352                     CRCSHFTL        equ	850	;# 
  4698   000352                     CRCSHIFTL       equ	850	;# 
  4699   000352                     CRCXORL         equ	850	;# 
  4700   000353                     CRCOUTH         equ	851	;# 
  4701   000353                     CRCSHFTH        equ	851	;# 
  4702   000353                     CRCSHIFTH       equ	851	;# 
  4703   000353                     CRCXORH         equ	851	;# 
  4704   000354                     CRCOUTU         equ	852	;# 
  4705   000354                     CRCSHFTU        equ	852	;# 
  4706   000354                     CRCSHIFTU       equ	852	;# 
  4707   000354                     CRCXORU         equ	852	;# 
  4708   000355                     CRCOUTT         equ	853	;# 
  4709   000355                     CRCSHFTT        equ	853	;# 
  4710   000355                     CRCSHIFTT       equ	853	;# 
  4711   000355                     CRCXORT         equ	853	;# 
  4712   000356                     CRCCON0         equ	854	;# 
  4713   000357                     CRCCON1         equ	855	;# 
  4714   000358                     CRCCON2         equ	856	;# 
  4715   00035A                     SCANLADR        equ	858	;# 
  4716   00035A                     SCANLADRL       equ	858	;# 
  4717   00035B                     SCANLADRH       equ	859	;# 
  4718   00035C                     SCANLADRU       equ	860	;# 
  4719   00035D                     SCANHADR        equ	861	;# 
  4720   00035D                     SCANHADRL       equ	861	;# 
  4721   00035E                     SCANHADRH       equ	862	;# 
  4722   00035F                     SCANHADRU       equ	863	;# 
  4723   000360                     SCANCON0        equ	864	;# 
  4724   000361                     SCANTRIG        equ	865	;# 
  4725   000367                     IPR0            equ	871	;# 
  4726   000368                     IPR1            equ	872	;# 
  4727   000369                     IPR2            equ	873	;# 
  4728   00036A                     IPR3            equ	874	;# 
  4729   00036B                     IPR4            equ	875	;# 
  4730   00036C                     IPR5            equ	876	;# 
  4731   00036D                     IPR6            equ	877	;# 
  4732   00036E                     IPR7            equ	878	;# 
  4733   00036F                     IPR8            equ	879	;# 
  4734   000370                     IPR9            equ	880	;# 
  4735   000371                     IPR10           equ	881	;# 
  4736   000373                     STATUS_CSHAD    equ	883	;# 
  4737   000374                     WREG_CSHAD      equ	884	;# 
  4738   000375                     BSR_CSHAD       equ	885	;# 
  4739   000376                     SHADCON         equ	886	;# 
  4740   000377                     STATUS_SHAD     equ	887	;# 
  4741   000378                     WREG_SHAD       equ	888	;# 
  4742   000379                     BSR_SHAD        equ	889	;# 
  4743   00037A                     PCLATH_SHAD     equ	890	;# 
  4744   00037B                     PCLATU_SHAD     equ	891	;# 
  4745   00037C                     FSR0SH          equ	892	;# 
  4746   00037C                     FSR0L_SHAD      equ	892	;# 
  4747   00037D                     FSR0H_SHAD      equ	893	;# 
  4748   00037E                     FSR1SH          equ	894	;# 
  4749   00037E                     FSR1L_SHAD      equ	894	;# 
  4750   00037F                     FSR1H_SHAD      equ	895	;# 
  4751   000380                     FSR2SH          equ	896	;# 
  4752   000380                     FSR2L_SHAD      equ	896	;# 
  4753   000381                     FSR2H_SHAD      equ	897	;# 
  4754   000382                     PRODSH          equ	898	;# 
  4755   000382                     PRODL_SHAD      equ	898	;# 
  4756   000383                     PRODH_SHAD      equ	899	;# 
  4757   0003BC                     CWG1CLK         equ	956	;# 
  4758   0003BC                     CWG1CLKCON      equ	956	;# 
  4759   0003BD                     CWG1ISM         equ	957	;# 
  4760   0003BD                     CWG1DAT         equ	957	;# 
  4761   0003BE                     CWG1DBR         equ	958	;# 
  4762   0003BF                     CWG1DBF         equ	959	;# 
  4763   0003C0                     CWG1CON0        equ	960	;# 
  4764   0003C1                     CWG1CON1        equ	961	;# 
  4765   0003C2                     CWG1AS0         equ	962	;# 
  4766   0003C3                     CWG1AS1         equ	963	;# 
  4767   0003C4                     CWG1STR         equ	964	;# 
  4768   0003D7                     FVRCON          equ	983	;# 
  4769   0003D8                     ADCPCON         equ	984	;# 
  4770   0003D8                     ADCP            equ	984	;# 
  4771   0003D9                     ADLTH           equ	985	;# 
  4772   0003D9                     ADLTHL          equ	985	;# 
  4773   0003DA                     ADLTHH          equ	986	;# 
  4774   0003DB                     ADUTH           equ	987	;# 
  4775   0003DB                     ADUTHL          equ	987	;# 
  4776   0003DC                     ADUTHH          equ	988	;# 
  4777   0003DD                     ADERR           equ	989	;# 
  4778   0003DD                     ADERRL          equ	989	;# 
  4779   0003DE                     ADERRH          equ	990	;# 
  4780   0003DF                     ADSTPT          equ	991	;# 
  4781   0003DF                     ADSTPTL         equ	991	;# 
  4782   0003E0                     ADSTPTH         equ	992	;# 
  4783   0003E1                     ADFLTR          equ	993	;# 
  4784   0003E1                     ADFLTRL         equ	993	;# 
  4785   0003E2                     ADFLTRH         equ	994	;# 
  4786   0003E3                     ADACC           equ	995	;# 
  4787   0003E3                     ADACCL          equ	995	;# 
  4788   0003E4                     ADACCH          equ	996	;# 
  4789   0003E5                     ADACCU          equ	997	;# 
  4790   0003E6                     ADCNT           equ	998	;# 
  4791   0003E7                     ADRPT           equ	999	;# 
  4792   0003E8                     ADPREV          equ	1000	;# 
  4793   0003E8                     ADPREVL         equ	1000	;# 
  4794   0003E9                     ADPREVH         equ	1001	;# 
  4795   0003EA                     ADRES           equ	1002	;# 
  4796   0003EA                     ADRESL          equ	1002	;# 
  4797   0003EB                     ADRESH          equ	1003	;# 
  4798   0003EC                     ADPCH           equ	1004	;# 
  4799   0003EE                     ADACQ           equ	1006	;# 
  4800   0003EE                     ADACQL          equ	1006	;# 
  4801   0003EF                     ADACQH          equ	1007	;# 
  4802   0003F0                     ADCAP           equ	1008	;# 
  4803   0003F1                     ADPRE           equ	1009	;# 
  4804   0003F1                     ADPREL          equ	1009	;# 
  4805   0003F2                     ADPREH          equ	1010	;# 
  4806   0003F3                     ADCON0          equ	1011	;# 
  4807   0003F4                     ADCON1          equ	1012	;# 
  4808   0003F5                     ADCON2          equ	1013	;# 
  4809   0003F6                     ADCON3          equ	1014	;# 
  4810   0003F7                     ADSTAT          equ	1015	;# 
  4811   0003F8                     ADREF           equ	1016	;# 
  4812   0003F9                     ADACT           equ	1017	;# 
  4813   0003FA                     ADCLK           equ	1018	;# 
  4814   000400                     ANSELA          equ	1024	;# 
  4815   000401                     WPUA            equ	1025	;# 
  4816   000402                     ODCONA          equ	1026	;# 
  4817   000403                     SLRCONA         equ	1027	;# 
  4818   000404                     INLVLA          equ	1028	;# 
  4819   000405                     IOCAP           equ	1029	;# 
  4820   000406                     IOCAN           equ	1030	;# 
  4821   000407                     IOCAF           equ	1031	;# 
  4822   000408                     ANSELB          equ	1032	;# 
  4823   000409                     WPUB            equ	1033	;# 
  4824   00040A                     ODCONB          equ	1034	;# 
  4825   00040B                     SLRCONB         equ	1035	;# 
  4826   00040C                     INLVLB          equ	1036	;# 
  4827   00040D                     IOCBP           equ	1037	;# 
  4828   00040E                     IOCBN           equ	1038	;# 
  4829   00040F                     IOCBF           equ	1039	;# 
  4830   000410                     ANSELC          equ	1040	;# 
  4831   000411                     WPUC            equ	1041	;# 
  4832   000412                     ODCONC          equ	1042	;# 
  4833   000413                     SLRCONC         equ	1043	;# 
  4834   000414                     INLVLC          equ	1044	;# 
  4835   000415                     IOCCP           equ	1045	;# 
  4836   000416                     IOCCN           equ	1046	;# 
  4837   000417                     IOCCF           equ	1047	;# 
  4838   000440                     NCO1ACC         equ	1088	;# 
  4839   000440                     NCO1ACCL        equ	1088	;# 
  4840   000441                     NCO1ACCH        equ	1089	;# 
  4841   000442                     NCO1ACCU        equ	1090	;# 
  4842   000443                     NCO1INC         equ	1091	;# 
  4843   000443                     NCO1INCL        equ	1091	;# 
  4844   000444                     NCO1INCH        equ	1092	;# 
  4845   000445                     NCO1INCU        equ	1093	;# 
  4846   000446                     NCO1CON         equ	1094	;# 
  4847   000447                     NCO1CLK         equ	1095	;# 
  4848   000458                     FSCMCON         equ	1112	;# 
  4849   000459                     IVTLOCK         equ	1113	;# 
  4850   00045A                     IVTAD           equ	1114	;# 
  4851   00045A                     IVTADL          equ	1114	;# 
  4852   00045B                     IVTADH          equ	1115	;# 
  4853   00045C                     IVTADU          equ	1116	;# 
  4854   00045D                     IVTBASE         equ	1117	;# 
  4855   00045D                     IVTBASEL        equ	1117	;# 
  4856   00045E                     IVTBASEH        equ	1118	;# 
  4857   00045F                     IVTBASEU        equ	1119	;# 
  4858   000460                     PWM1ERS         equ	1120	;# 
  4859   000461                     PWM1CLK         equ	1121	;# 
  4860   000462                     PWM1LDS         equ	1122	;# 
  4861   000463                     PWM1PR          equ	1123	;# 
  4862   000463                     PWM1PRL         equ	1123	;# 
  4863   000464                     PWM1PRH         equ	1124	;# 
  4864   000465                     PWM1CPRE        equ	1125	;# 
  4865   000466                     PWM1PIPOS       equ	1126	;# 
  4866   000467                     PWM1GIR         equ	1127	;# 
  4867   000468                     PWM1GIE         equ	1128	;# 
  4868   000469                     PWM1CON         equ	1129	;# 
  4869   00046A                     PWM1S1CFG       equ	1130	;# 
  4870   00046B                     PWM1S1P1        equ	1131	;# 
  4871   00046B                     PWM1S1P1L       equ	1131	;# 
  4872   00046C                     PWM1S1P1H       equ	1132	;# 
  4873   00046D                     PWM1S1P2        equ	1133	;# 
  4874   00046D                     PWM1S1P2L       equ	1133	;# 
  4875   00046E                     PWM1S1P2H       equ	1134	;# 
  4876   00046F                     PWM2ERS         equ	1135	;# 
  4877   000470                     PWM2CLK         equ	1136	;# 
  4878   000471                     PWM2LDS         equ	1137	;# 
  4879   000472                     PWM2PR          equ	1138	;# 
  4880   000472                     PWM2PRL         equ	1138	;# 
  4881   000473                     PWM2PRH         equ	1139	;# 
  4882   000474                     PWM2CPRE        equ	1140	;# 
  4883   000475                     PWM2PIPOS       equ	1141	;# 
  4884   000476                     PWM2GIR         equ	1142	;# 
  4885   000477                     PWM2GIE         equ	1143	;# 
  4886   000478                     PWM2CON         equ	1144	;# 
  4887   000479                     PWM2S1CFG       equ	1145	;# 
  4888   00047A                     PWM2S1P1        equ	1146	;# 
  4889   00047A                     PWM2S1P1L       equ	1146	;# 
  4890   00047B                     PWM2S1P1H       equ	1147	;# 
  4891   00047C                     PWM2S1P2        equ	1148	;# 
  4892   00047C                     PWM2S1P2L       equ	1148	;# 
  4893   00047D                     PWM2S1P2H       equ	1149	;# 
  4894   00047E                     PWM3ERS         equ	1150	;# 
  4895   00047F                     PWM3CLK         equ	1151	;# 
  4896   000480                     PWM3LDS         equ	1152	;# 
  4897   000481                     PWM3PR          equ	1153	;# 
  4898   000481                     PWM3PRL         equ	1153	;# 
  4899   000482                     PWM3PRH         equ	1154	;# 
  4900   000483                     PWM3CPRE        equ	1155	;# 
  4901   000484                     PWM3PIPOS       equ	1156	;# 
  4902   000485                     PWM3GIR         equ	1157	;# 
  4903   000486                     PWM3GIE         equ	1158	;# 
  4904   000487                     PWM3CON         equ	1159	;# 
  4905   000488                     PWM3S1CFG       equ	1160	;# 
  4906   000489                     PWM3S1P1        equ	1161	;# 
  4907   000489                     PWM3S1P1L       equ	1161	;# 
  4908   00048A                     PWM3S1P1H       equ	1162	;# 
  4909   00048B                     PWM3S1P2        equ	1163	;# 
  4910   00048B                     PWM3S1P2L       equ	1163	;# 
  4911   00048C                     PWM3S1P2H       equ	1164	;# 
  4912   00049C                     PWMLOAD         equ	1180	;# 
  4913   00049D                     PWMEN           equ	1181	;# 
  4914   0004A8                     PIE0            equ	1192	;# 
  4915   0004A9                     PIE1            equ	1193	;# 
  4916   0004AA                     PIE2            equ	1194	;# 
  4917   0004AB                     PIE3            equ	1195	;# 
  4918   0004AC                     PIE4            equ	1196	;# 
  4919   0004AD                     PIE5            equ	1197	;# 
  4920   0004AE                     PIE6            equ	1198	;# 
  4921   0004AF                     PIE7            equ	1199	;# 
  4922   0004B0                     PIE8            equ	1200	;# 
  4923   0004B1                     PIE9            equ	1201	;# 
  4924   0004B2                     PIE10           equ	1202	;# 
  4925   0004B3                     PIR0            equ	1203	;# 
  4926   0004B4                     PIR1            equ	1204	;# 
  4927   0004B5                     PIR2            equ	1205	;# 
  4928   0004B6                     PIR3            equ	1206	;# 
  4929   0004B7                     PIR4            equ	1207	;# 
  4930   0004B8                     PIR5            equ	1208	;# 
  4931   0004B9                     PIR6            equ	1209	;# 
  4932   0004BA                     PIR7            equ	1210	;# 
  4933   0004BB                     PIR8            equ	1211	;# 
  4934   0004BC                     PIR9            equ	1212	;# 
  4935   0004BD                     PIR10           equ	1213	;# 
  4936   0004BE                     LATA            equ	1214	;# 
  4937   0004BF                     LATB            equ	1215	;# 
  4938   0004C0                     LATC            equ	1216	;# 
  4939   0004C6                     TRISA           equ	1222	;# 
  4940   0004C7                     TRISB           equ	1223	;# 
  4941   0004C8                     TRISC           equ	1224	;# 
  4942   0004CE                     PORTA           equ	1230	;# 
  4943   0004CF                     PORTB           equ	1231	;# 
  4944   0004D0                     PORTC           equ	1232	;# 
  4945   0004D6                     INTCON0         equ	1238	;# 
  4946   0004D7                     INTCON1         equ	1239	;# 
  4947   0004D8                     STATUS          equ	1240	;# 
  4948   0004D9                     FSR2            equ	1241	;# 
  4949   0004D9                     FSR2L           equ	1241	;# 
  4950   0004DA                     FSR2H           equ	1242	;# 
  4951   0004DB                     PLUSW2          equ	1243	;# 
  4952   0004DC                     PREINC2         equ	1244	;# 
  4953   0004DD                     POSTDEC2        equ	1245	;# 
  4954   0004DE                     POSTINC2        equ	1246	;# 
  4955   0004DF                     INDF2           equ	1247	;# 
  4956   0004E0                     BSR             equ	1248	;# 
  4957   0004E1                     FSR1            equ	1249	;# 
  4958   0004E1                     FSR1L           equ	1249	;# 
  4959   0004E2                     FSR1H           equ	1250	;# 
  4960   0004E3                     PLUSW1          equ	1251	;# 
  4961   0004E4                     PREINC1         equ	1252	;# 
  4962   0004E5                     POSTDEC1        equ	1253	;# 
  4963   0004E6                     POSTINC1        equ	1254	;# 
  4964   0004E7                     INDF1           equ	1255	;# 
  4965   0004E8                     WREG            equ	1256	;# 
  4966   0004E9                     FSR0            equ	1257	;# 
  4967   0004E9                     FSR0L           equ	1257	;# 
  4968   0004EA                     FSR0H           equ	1258	;# 
  4969   0004EB                     PLUSW0          equ	1259	;# 
  4970   0004EC                     PREINC0         equ	1260	;# 
  4971   0004ED                     POSTDEC0        equ	1261	;# 
  4972   0004EE                     POSTINC0        equ	1262	;# 
  4973   0004EF                     INDF0           equ	1263	;# 
  4974   0004F0                     PCON0           equ	1264	;# 
  4975   0004F1                     PCON1           equ	1265	;# 
  4976   0004F2                     CPUDOZE         equ	1266	;# 
  4977   0004F3                     PROD            equ	1267	;# 
  4978   0004F3                     PRODL           equ	1267	;# 
  4979   0004F4                     PRODH           equ	1268	;# 
  4980   0004F5                     TABLAT          equ	1269	;# 
  4981   0004F6                     TBLPTR          equ	1270	;# 
  4982   0004F6                     TBLPTRL         equ	1270	;# 
  4983   0004F7                     TBLPTRH         equ	1271	;# 
  4984   0004F8                     TBLPTRU         equ	1272	;# 
  4985   0004F9                     PCLAT           equ	1273	;# 
  4986   0004F9                     PCL             equ	1273	;# 
  4987   0004FA                     PCLATH          equ	1274	;# 
  4988   0004FB                     PCLATU          equ	1275	;# 
  4989   0004FC                     STKPTR          equ	1276	;# 
  4990   0004FD                     TOS             equ	1277	;# 
  4991   0004FD                     TOSL            equ	1277	;# 
  4992   0004FE                     TOSH            equ	1278	;# 
  4993   0004FF                     TOSU            equ	1279	;# 
  4994   000039                     CLKRCON         equ	57	;# 
  4995   00003A                     CLKRCLK         equ	58	;# 
  4996   000040                     NVMCON0         equ	64	;# 
  4997   000041                     NVMCON1         equ	65	;# 
  4998   000042                     NVMLOCK         equ	66	;# 
  4999   000043                     NVMADR          equ	67	;# 
  5000   000043                     NVMADRL         equ	67	;# 
  5001   000044                     NVMADRH         equ	68	;# 
  5002   000045                     NVMADRU         equ	69	;# 
  5003   000046                     NVMDAT          equ	70	;# 
  5004   000046                     NVMDATL         equ	70	;# 
  5005   000047                     NVMDATH         equ	71	;# 
  5006   000048                     VREGCON         equ	72	;# 
  5007   000049                     BORCON          equ	73	;# 
  5008   00004A                     HLVDCON0        equ	74	;# 
  5009   00004B                     HLVDCON1        equ	75	;# 
  5010   00004C                     ZCDCON          equ	76	;# 
  5011   000063                     PMD0            equ	99	;# 
  5012   000064                     PMD1            equ	100	;# 
  5013   000065                     PMD2            equ	101	;# 
  5014   000066                     PMD3            equ	102	;# 
  5015   000067                     PMD4            equ	103	;# 
  5016   000068                     PMD5            equ	104	;# 
  5017   00006A                     MD1CON0         equ	106	;# 
  5018   00006B                     MD1CON1         equ	107	;# 
  5019   00006C                     MD1SRC          equ	108	;# 
  5020   00006D                     MD1CARL         equ	109	;# 
  5021   00006E                     MD1CARH         equ	110	;# 
  5022   00006F                     CMOUT           equ	111	;# 
  5023   000070                     CM1CON0         equ	112	;# 
  5024   000071                     CM1CON1         equ	113	;# 
  5025   000072                     CM1NCH          equ	114	;# 
  5026   000073                     CM1PCH          equ	115	;# 
  5027   000074                     CM2CON0         equ	116	;# 
  5028   000075                     CM2CON1         equ	117	;# 
  5029   000076                     CM2NCH          equ	118	;# 
  5030   000077                     CM2PCH          equ	119	;# 
  5031   000078                     WDTCON0         equ	120	;# 
  5032   000079                     WDTCON1         equ	121	;# 
  5033   00007A                     WDTPS           equ	122	;# 
  5034   00007A                     WDTPSL          equ	122	;# 
  5035   00007B                     WDTPSH          equ	123	;# 
  5036   00007C                     WDTTMR          equ	124	;# 
  5037   00007D                     DAC1DAT         equ	125	;# 
  5038   00007D                     DAC1DATL        equ	125	;# 
  5039   00007F                     DAC1CON         equ	127	;# 
  5040   000080                     SPI1RXB         equ	128	;# 
  5041   000081                     SPI1TXB         equ	129	;# 
  5042   000082                     SPI1TCNT        equ	130	;# 
  5043   000082                     SPI1TCNTL       equ	130	;# 
  5044   000083                     SPI1TCNTH       equ	131	;# 
  5045   000084                     SPI1CON0        equ	132	;# 
  5046   000085                     SPI1CON1        equ	133	;# 
  5047   000086                     SPI1CON2        equ	134	;# 
  5048   000087                     SPI1STATUS      equ	135	;# 
  5049   000088                     SPI1TWIDTH      equ	136	;# 
  5050   000089                     SPI1BAUD        equ	137	;# 
  5051   00008A                     SPI1INTF        equ	138	;# 
  5052   00008B                     SPI1INTE        equ	139	;# 
  5053   00008C                     SPI1CLK         equ	140	;# 
  5054   00008D                     SPI2RXB         equ	141	;# 
  5055   00008E                     SPI2TXB         equ	142	;# 
  5056   00008F                     SPI2TCNT        equ	143	;# 
  5057   00008F                     SPI2TCNTL       equ	143	;# 
  5058   000090                     SPI2TCNTH       equ	144	;# 
  5059   000091                     SPI2CON0        equ	145	;# 
  5060   000092                     SPI2CON1        equ	146	;# 
  5061   000093                     SPI2CON2        equ	147	;# 
  5062   000094                     SPI2STATUS      equ	148	;# 
  5063   000095                     SPI2TWIDTH      equ	149	;# 
  5064   000096                     SPI2BAUD        equ	150	;# 
  5065   000097                     SPI2INTF        equ	151	;# 
  5066   000098                     SPI2INTE        equ	152	;# 
  5067   000099                     SPI2CLK         equ	153	;# 
  5068   0000A0                     DAC2DAT         equ	160	;# 
  5069   0000A0                     DAC2DATL        equ	160	;# 
  5070   0000A2                     DAC2CON         equ	162	;# 
  5071   0000A3                     OPA1CON0        equ	163	;# 
  5072   0000A4                     OPA1CON1        equ	164	;# 
  5073   0000A5                     OPA1CON2        equ	165	;# 
  5074   0000A6                     OPA1CON3        equ	166	;# 
  5075   0000A7                     OPA1HWC         equ	167	;# 
  5076   0000A8                     OPA1OFFSET      equ	168	;# 
  5077   0000A9                     OPA1ORS         equ	169	;# 
  5078   0000AC                     ACTCON          equ	172	;# 
  5079   0000AD                     OSCCON1         equ	173	;# 
  5080   0000AE                     OSCCON2         equ	174	;# 
  5081   0000AF                     OSCCON3         equ	175	;# 
  5082   0000B0                     OSCTUNE         equ	176	;# 
  5083   0000B1                     OSCFRQ          equ	177	;# 
  5084   0000B1                     OSCFREQ         equ	177	;# 
  5085   0000B2                     OSCSTAT         equ	178	;# 
  5086   0000B2                     OSCSTAT1        equ	178	;# 
  5087   0000B3                     OSCEN           equ	179	;# 
  5088   0000B4                     PRLOCK          equ	180	;# 
  5089   0000B5                     SCANPR          equ	181	;# 
  5090   0000B6                     DMA1PR          equ	182	;# 
  5091   0000B7                     DMA2PR          equ	183	;# 
  5092   0000B8                     DMA3PR          equ	184	;# 
  5093   0000B9                     DMA4PR          equ	185	;# 
  5094   0000BE                     MAINPR          equ	190	;# 
  5095   0000BF                     ISRPR           equ	191	;# 
  5096   0000D4                     CLCDATA         equ	212	;# 
  5097   0000D5                     CLCSELECT       equ	213	;# 
  5098   0000D6                     CLCnCON         equ	214	;# 
  5099   0000D7                     CLCnPOL         equ	215	;# 
  5100   0000D8                     CLCnSEL0        equ	216	;# 
  5101   0000D9                     CLCnSEL1        equ	217	;# 
  5102   0000DA                     CLCnSEL2        equ	218	;# 
  5103   0000DB                     CLCnSEL3        equ	219	;# 
  5104   0000DC                     CLCnGLS0        equ	220	;# 
  5105   0000DD                     CLCnGLS1        equ	221	;# 
  5106   0000DE                     CLCnGLS2        equ	222	;# 
  5107   0000DF                     CLCnGLS3        equ	223	;# 
  5108   0000E8                     DMASELECT       equ	232	;# 
  5109   0000E9                     DMAnBUF         equ	233	;# 
  5110   0000EA                     DMAnDCNT        equ	234	;# 
  5111   0000EA                     DMAnDCNTL       equ	234	;# 
  5112   0000EB                     DMAnDCNTH       equ	235	;# 
  5113   0000EC                     DMAnDPTR        equ	236	;# 
  5114   0000EC                     DMAnDPTRL       equ	236	;# 
  5115   0000ED                     DMAnDPTRH       equ	237	;# 
  5116   0000EE                     DMAnDSZ         equ	238	;# 
  5117   0000EE                     DMAnDSZL        equ	238	;# 
  5118   0000EF                     DMAnDSZH        equ	239	;# 
  5119   0000F0                     DMAnDSA         equ	240	;# 
  5120   0000F0                     DMAnDSAL        equ	240	;# 
  5121   0000F1                     DMAnDSAH        equ	241	;# 
  5122   0000F2                     DMAnSCNT        equ	242	;# 
  5123   0000F2                     DMAnSCNTL       equ	242	;# 
  5124   0000F3                     DMAnSCNTH       equ	243	;# 
  5125   0000F4                     DMAnSPTR        equ	244	;# 
  5126   0000F4                     DMAnSPTRL       equ	244	;# 
  5127   0000F5                     DMAnSPTRH       equ	245	;# 
  5128   0000F6                     DMAnSPTRU       equ	246	;# 
  5129   0000F7                     DMAnSSZ         equ	247	;# 
  5130   0000F7                     DMAnSSZL        equ	247	;# 
  5131   0000F8                     DMAnSSZH        equ	248	;# 
  5132   0000F9                     DMAnSSA         equ	249	;# 
  5133   0000F9                     DMAnSSAL        equ	249	;# 
  5134   0000FA                     DMAnSSAH        equ	250	;# 
  5135   0000FB                     DMAnSSAU        equ	251	;# 
  5136   0000FC                     DMAnCON0        equ	252	;# 
  5137   0000FD                     DMAnCON1        equ	253	;# 
  5138   0000FE                     DMAnAIRQ        equ	254	;# 
  5139   0000FF                     DMAnSIRQ        equ	255	;# 
  5140   000200                     PPSLOCK         equ	512	;# 
  5141   000201                     RA0PPS          equ	513	;# 
  5142   000202                     RA1PPS          equ	514	;# 
  5143   000203                     RA2PPS          equ	515	;# 
  5144   000205                     RA4PPS          equ	517	;# 
  5145   000206                     RA5PPS          equ	518	;# 
  5146   00020D                     RB4PPS          equ	525	;# 
  5147   00020E                     RB5PPS          equ	526	;# 
  5148   00020F                     RB6PPS          equ	527	;# 
  5149   000210                     RB7PPS          equ	528	;# 
  5150   000211                     RC0PPS          equ	529	;# 
  5151   000212                     RC1PPS          equ	530	;# 
  5152   000213                     RC2PPS          equ	531	;# 
  5153   000214                     RC3PPS          equ	532	;# 
  5154   000215                     RC4PPS          equ	533	;# 
  5155   000216                     RC5PPS          equ	534	;# 
  5156   000217                     RC6PPS          equ	535	;# 
  5157   000218                     RC7PPS          equ	536	;# 
  5158   00023E                     INT0PPS         equ	574	;# 
  5159   00023F                     INT1PPS         equ	575	;# 
  5160   000240                     INT2PPS         equ	576	;# 
  5161   000241                     T0CKIPPS        equ	577	;# 
  5162   000242                     T1CKIPPS        equ	578	;# 
  5163   000243                     T1GPPS          equ	579	;# 
  5164   000244                     T3CKIPPS        equ	580	;# 
  5165   000245                     T3GPPS          equ	581	;# 
  5166   000248                     T2INPPS         equ	584	;# 
  5167   000249                     T4INPPS         equ	585	;# 
  5168   00024F                     CCP1PPS         equ	591	;# 
  5169   000251                     PWM1ERSPPS      equ	593	;# 
  5170   000252                     PWM2ERSPPS      equ	594	;# 
  5171   000253                     PWM3ERSPPS      equ	595	;# 
  5172   000257                     PWMIN0PPS       equ	599	;# 
  5173   000258                     PWMIN1PPS       equ	600	;# 
  5174   000259                     SMT1WINPPS      equ	601	;# 
  5175   00025A                     SMT1SIGPPS      equ	602	;# 
  5176   00025B                     CWG1PPS         equ	603	;# 
  5177   00025B                     CWG1INPPS       equ	603	;# 
  5178   00025E                     MD1CARLPPS      equ	606	;# 
  5179   00025E                     MDCARLPPS       equ	606	;# 
  5180   00025F                     MD1CARHPPS      equ	607	;# 
  5181   00025F                     MDCARHPPS       equ	607	;# 
  5182   000260                     MD1SRCPPS       equ	608	;# 
  5183   000260                     MDSRCPPS        equ	608	;# 
  5184   000261                     CLCIN0PPS       equ	609	;# 
  5185   000262                     CLCIN1PPS       equ	610	;# 
  5186   000263                     CLCIN2PPS       equ	611	;# 
  5187   000264                     CLCIN3PPS       equ	612	;# 
  5188   000269                     ADACTPPS        equ	617	;# 
  5189   00026A                     SPI1SCKPPS      equ	618	;# 
  5190   00026B                     SPI1SDIPPS      equ	619	;# 
  5191   00026C                     SPI1SSPPS       equ	620	;# 
  5192   00026D                     SPI2SCKPPS      equ	621	;# 
  5193   00026E                     SPI2SDIPPS      equ	622	;# 
  5194   00026F                     SPI2SSPPS       equ	623	;# 
  5195   000270                     I2C1SDAPPS      equ	624	;# 
  5196   000271                     I2C1SCLPPS      equ	625	;# 
  5197   000272                     U1RXPPS         equ	626	;# 
  5198   000273                     U1CTSPPS        equ	627	;# 
  5199   000274                     U2RXPPS         equ	628	;# 
  5200   000275                     U2CTSPPS        equ	629	;# 
  5201   000276                     U3RXPPS         equ	630	;# 
  5202   000277                     U3CTSPPS        equ	631	;# 
  5203   000286                     RB6I2C          equ	646	;# 
  5204   000287                     RB4I2C          equ	647	;# 
  5205   00028A                     I2C1RXB         equ	650	;# 
  5206   00028B                     I2C1TXB         equ	651	;# 
  5207   00028C                     I2C1CNTL        equ	652	;# 
  5208   00028D                     I2C1CNTH        equ	653	;# 
  5209   00028E                     I2C1ADB0        equ	654	;# 
  5210   00028F                     I2C1ADB1        equ	655	;# 
  5211   000290                     I2C1ADR0        equ	656	;# 
  5212   000291                     I2C1ADR1        equ	657	;# 
  5213   000292                     I2C1ADR2        equ	658	;# 
  5214   000293                     I2C1ADR3        equ	659	;# 
  5215   000294                     I2C1CON0        equ	660	;# 
  5216   000295                     I2C1CON1        equ	661	;# 
  5217   000296                     I2C1CON2        equ	662	;# 
  5218   000297                     I2C1ERR         equ	663	;# 
  5219   000298                     I2C1STAT0       equ	664	;# 
  5220   000299                     I2C1STAT1       equ	665	;# 
  5221   00029A                     I2C1PIR         equ	666	;# 
  5222   00029B                     I2C1PIE         equ	667	;# 
  5223   00029C                     I2C1BTO         equ	668	;# 
  5224   00029D                     I2C1BAUD        equ	669	;# 
  5225   00029E                     I2C1CLK         equ	670	;# 
  5226   00029F                     I2C1BTOC        equ	671	;# 
  5227   0002A1                     U1RXB           equ	673	;# 
  5228   0002A1                     U1RXBL          equ	673	;# 
  5229   0002A2                     U1RXCHK         equ	674	;# 
  5230   0002A3                     U1TXB           equ	675	;# 
  5231   0002A3                     U1TXBL          equ	675	;# 
  5232   0002A4                     U1TXCHK         equ	676	;# 
  5233   0002A5                     U1P1            equ	677	;# 
  5234   0002A5                     U1P1L           equ	677	;# 
  5235   0002A6                     U1P1H           equ	678	;# 
  5236   0002A7                     U1P2            equ	679	;# 
  5237   0002A7                     U1P2L           equ	679	;# 
  5238   0002A8                     U1P2H           equ	680	;# 
  5239   0002A9                     U1P3            equ	681	;# 
  5240   0002A9                     U1P3L           equ	681	;# 
  5241   0002AA                     U1P3H           equ	682	;# 
  5242   0002AB                     U1CON0          equ	683	;# 
  5243   0002AC                     U1CON1          equ	684	;# 
  5244   0002AD                     U1CON2          equ	685	;# 
  5245   0002AE                     U1BRG           equ	686	;# 
  5246   0002AE                     U1BRGL          equ	686	;# 
  5247   0002AF                     U1BRGH          equ	687	;# 
  5248   0002B0                     U1FIFO          equ	688	;# 
  5249   0002B1                     U1UIR           equ	689	;# 
  5250   0002B2                     U1ERRIR         equ	690	;# 
  5251   0002B3                     U1ERRIE         equ	691	;# 
  5252   0002B4                     U2RXB           equ	692	;# 
  5253   0002B4                     U2RXBL          equ	692	;# 
  5254   0002B6                     U2TXB           equ	694	;# 
  5255   0002B6                     U2TXBL          equ	694	;# 
  5256   0002B8                     U2P1            equ	696	;# 
  5257   0002B8                     U2P1L           equ	696	;# 
  5258   0002BA                     U2P2            equ	698	;# 
  5259   0002BA                     U2P2L           equ	698	;# 
  5260   0002BC                     U2P3            equ	700	;# 
  5261   0002BC                     U2P3L           equ	700	;# 
  5262   0002BE                     U2CON0          equ	702	;# 
  5263   0002BF                     U2CON1          equ	703	;# 
  5264   0002C0                     U2CON2          equ	704	;# 
  5265   0002C1                     U2BRG           equ	705	;# 
  5266   0002C1                     U2BRGL          equ	705	;# 
  5267   0002C2                     U2BRGH          equ	706	;# 
  5268   0002C3                     U2FIFO          equ	707	;# 
  5269   0002C4                     U2UIR           equ	708	;# 
  5270   0002C5                     U2ERRIR         equ	709	;# 
  5271   0002C6                     U2ERRIE         equ	710	;# 
  5272   0002C7                     U3RXB           equ	711	;# 
  5273   0002C7                     U3RXBL          equ	711	;# 
  5274   0002C9                     U3TXB           equ	713	;# 
  5275   0002C9                     U3TXBL          equ	713	;# 
  5276   0002CB                     U3P1            equ	715	;# 
  5277   0002CB                     U3P1L           equ	715	;# 
  5278   0002CD                     U3P2            equ	717	;# 
  5279   0002CD                     U3P2L           equ	717	;# 
  5280   0002CF                     U3P3            equ	719	;# 
  5281   0002CF                     U3P3L           equ	719	;# 
  5282   0002D1                     U3CON0          equ	721	;# 
  5283   0002D2                     U3CON1          equ	722	;# 
  5284   0002D3                     U3CON2          equ	723	;# 
  5285   0002D4                     U3BRG           equ	724	;# 
  5286   0002D4                     U3BRGL          equ	724	;# 
  5287   0002D5                     U3BRGH          equ	725	;# 
  5288   0002D6                     U3FIFO          equ	726	;# 
  5289   0002D7                     U3UIR           equ	727	;# 
  5290   0002D8                     U3ERRIR         equ	728	;# 
  5291   0002D9                     U3ERRIE         equ	729	;# 
  5292   000300                     SMT1TMR         equ	768	;# 
  5293   000300                     SMT1TMRL        equ	768	;# 
  5294   000301                     SMT1TMRH        equ	769	;# 
  5295   000302                     SMT1TMRU        equ	770	;# 
  5296   000303                     SMT1CPR         equ	771	;# 
  5297   000303                     SMT1CPRL        equ	771	;# 
  5298   000304                     SMT1CPRH        equ	772	;# 
  5299   000305                     SMT1CPRU        equ	773	;# 
  5300   000306                     SMT1CPW         equ	774	;# 
  5301   000306                     SMT1CPWL        equ	774	;# 
  5302   000307                     SMT1CPWH        equ	775	;# 
  5303   000308                     SMT1CPWU        equ	776	;# 
  5304   000309                     SMT1PR          equ	777	;# 
  5305   000309                     SMT1PRL         equ	777	;# 
  5306   00030A                     SMT1PRH         equ	778	;# 
  5307   00030B                     SMT1PRU         equ	779	;# 
  5308   00030C                     SMT1CON0        equ	780	;# 
  5309   00030D                     SMT1CON1        equ	781	;# 
  5310   00030E                     SMT1STAT        equ	782	;# 
  5311   00030F                     SMT1CLK         equ	783	;# 
  5312   000310                     SMT1SIG         equ	784	;# 
  5313   000311                     SMT1WIN         equ	785	;# 
  5314   000312                     TMR1            equ	786	;# 
  5315   000312                     TMR1L           equ	786	;# 
  5316   000313                     TMR1H           equ	787	;# 
  5317   000314                     T1CON           equ	788	;# 
  5318   000314                     TMR1CON         equ	788	;# 
  5319   000315                     T1GCON          equ	789	;# 
  5320   000315                     TMR1GCON        equ	789	;# 
  5321   000316                     T1GATE          equ	790	;# 
  5322   000316                     TMR1GATE        equ	790	;# 
  5323   000317                     T1CLK           equ	791	;# 
  5324   000317                     TMR1CLK         equ	791	;# 
  5325   000317                     PR1             equ	791	;# 
  5326   000318                     TMR0L           equ	792	;# 
  5327   000318                     TMR0            equ	792	;# 
  5328   000319                     TMR0H           equ	793	;# 
  5329   000319                     PR0             equ	793	;# 
  5330   00031A                     T0CON0          equ	794	;# 
  5331   00031B                     T0CON1          equ	795	;# 
  5332   00031C                     T2TMR           equ	796	;# 
  5333   00031C                     TMR2            equ	796	;# 
  5334   00031D                     T2PR            equ	797	;# 
  5335   00031D                     PR2             equ	797	;# 
  5336   00031E                     T2CON           equ	798	;# 
  5337   00031F                     T2HLT           equ	799	;# 
  5338   000320                     T2CLKCON        equ	800	;# 
  5339   000320                     T2CLK           equ	800	;# 
  5340   000321                     T2RST           equ	801	;# 
  5341   000323                     TMR3            equ	803	;# 
  5342   000323                     TMR3L           equ	803	;# 
  5343   000324                     TMR3H           equ	804	;# 
  5344   000325                     T3CON           equ	805	;# 
  5345   000325                     TMR3CON         equ	805	;# 
  5346   000326                     T3GCON          equ	806	;# 
  5347   000326                     TMR3GCON        equ	806	;# 
  5348   000327                     T3GATE          equ	807	;# 
  5349   000327                     TMR3GATE        equ	807	;# 
  5350   000328                     T3CLK           equ	808	;# 
  5351   000328                     TMR3CLK         equ	808	;# 
  5352   000328                     PR3             equ	808	;# 
  5353   000329                     T4TMR           equ	809	;# 
  5354   000329                     TMR4            equ	809	;# 
  5355   00032A                     T4PR            equ	810	;# 
  5356   00032A                     PR4             equ	810	;# 
  5357   00032B                     T4CON           equ	811	;# 
  5358   00032C                     T4HLT           equ	812	;# 
  5359   00032D                     T4CLKCON        equ	813	;# 
  5360   00032D                     T4CLK           equ	813	;# 
  5361   00032E                     T4RST           equ	814	;# 
  5362   000340                     CCPR1           equ	832	;# 
  5363   000340                     CCPR1L          equ	832	;# 
  5364   000341                     CCPR1H          equ	833	;# 
  5365   000342                     CCP1CON         equ	834	;# 
  5366   000343                     CCP1CAP         equ	835	;# 
  5367   00034C                     CCPTMRS0        equ	844	;# 
  5368   00034E                     CRCDATA         equ	846	;# 
  5369   00034E                     CRCDATAL        equ	846	;# 
  5370   00034F                     CRCDATAH        equ	847	;# 
  5371   000350                     CRCDATAU        equ	848	;# 
  5372   000351                     CRCDATAT        equ	849	;# 
  5373   000352                     CRCOUT          equ	850	;# 
  5374   000352                     CRCSHFT         equ	850	;# 
  5375   000352                     CRCXOR          equ	850	;# 
  5376   000352                     CRCOUTL         equ	850	;# 
  5377   000352                     CRCSHFTL        equ	850	;# 
  5378   000352                     CRCSHIFTL       equ	850	;# 
  5379   000352                     CRCXORL         equ	850	;# 
  5380   000353                     CRCOUTH         equ	851	;# 
  5381   000353                     CRCSHFTH        equ	851	;# 
  5382   000353                     CRCSHIFTH       equ	851	;# 
  5383   000353                     CRCXORH         equ	851	;# 
  5384   000354                     CRCOUTU         equ	852	;# 
  5385   000354                     CRCSHFTU        equ	852	;# 
  5386   000354                     CRCSHIFTU       equ	852	;# 
  5387   000354                     CRCXORU         equ	852	;# 
  5388   000355                     CRCOUTT         equ	853	;# 
  5389   000355                     CRCSHFTT        equ	853	;# 
  5390   000355                     CRCSHIFTT       equ	853	;# 
  5391   000355                     CRCXORT         equ	853	;# 
  5392   000356                     CRCCON0         equ	854	;# 
  5393   000357                     CRCCON1         equ	855	;# 
  5394   000358                     CRCCON2         equ	856	;# 
  5395   00035A                     SCANLADR        equ	858	;# 
  5396   00035A                     SCANLADRL       equ	858	;# 
  5397   00035B                     SCANLADRH       equ	859	;# 
  5398   00035C                     SCANLADRU       equ	860	;# 
  5399   00035D                     SCANHADR        equ	861	;# 
  5400   00035D                     SCANHADRL       equ	861	;# 
  5401   00035E                     SCANHADRH       equ	862	;# 
  5402   00035F                     SCANHADRU       equ	863	;# 
  5403   000360                     SCANCON0        equ	864	;# 
  5404   000361                     SCANTRIG        equ	865	;# 
  5405   000367                     IPR0            equ	871	;# 
  5406   000368                     IPR1            equ	872	;# 
  5407   000369                     IPR2            equ	873	;# 
  5408   00036A                     IPR3            equ	874	;# 
  5409   00036B                     IPR4            equ	875	;# 
  5410   00036C                     IPR5            equ	876	;# 
  5411   00036D                     IPR6            equ	877	;# 
  5412   00036E                     IPR7            equ	878	;# 
  5413   00036F                     IPR8            equ	879	;# 
  5414   000370                     IPR9            equ	880	;# 
  5415   000371                     IPR10           equ	881	;# 
  5416   000373                     STATUS_CSHAD    equ	883	;# 
  5417   000374                     WREG_CSHAD      equ	884	;# 
  5418   000375                     BSR_CSHAD       equ	885	;# 
  5419   000376                     SHADCON         equ	886	;# 
  5420   000377                     STATUS_SHAD     equ	887	;# 
  5421   000378                     WREG_SHAD       equ	888	;# 
  5422   000379                     BSR_SHAD        equ	889	;# 
  5423   00037A                     PCLATH_SHAD     equ	890	;# 
  5424   00037B                     PCLATU_SHAD     equ	891	;# 
  5425   00037C                     FSR0SH          equ	892	;# 
  5426   00037C                     FSR0L_SHAD      equ	892	;# 
  5427   00037D                     FSR0H_SHAD      equ	893	;# 
  5428   00037E                     FSR1SH          equ	894	;# 
  5429   00037E                     FSR1L_SHAD      equ	894	;# 
  5430   00037F                     FSR1H_SHAD      equ	895	;# 
  5431   000380                     FSR2SH          equ	896	;# 
  5432   000380                     FSR2L_SHAD      equ	896	;# 
  5433   000381                     FSR2H_SHAD      equ	897	;# 
  5434   000382                     PRODSH          equ	898	;# 
  5435   000382                     PRODL_SHAD      equ	898	;# 
  5436   000383                     PRODH_SHAD      equ	899	;# 
  5437   0003BC                     CWG1CLK         equ	956	;# 
  5438   0003BC                     CWG1CLKCON      equ	956	;# 
  5439   0003BD                     CWG1ISM         equ	957	;# 
  5440   0003BD                     CWG1DAT         equ	957	;# 
  5441   0003BE                     CWG1DBR         equ	958	;# 
  5442   0003BF                     CWG1DBF         equ	959	;# 
  5443   0003C0                     CWG1CON0        equ	960	;# 
  5444   0003C1                     CWG1CON1        equ	961	;# 
  5445   0003C2                     CWG1AS0         equ	962	;# 
  5446   0003C3                     CWG1AS1         equ	963	;# 
  5447   0003C4                     CWG1STR         equ	964	;# 
  5448   0003D7                     FVRCON          equ	983	;# 
  5449   0003D8                     ADCPCON         equ	984	;# 
  5450   0003D8                     ADCP            equ	984	;# 
  5451   0003D9                     ADLTH           equ	985	;# 
  5452   0003D9                     ADLTHL          equ	985	;# 
  5453   0003DA                     ADLTHH          equ	986	;# 
  5454   0003DB                     ADUTH           equ	987	;# 
  5455   0003DB                     ADUTHL          equ	987	;# 
  5456   0003DC                     ADUTHH          equ	988	;# 
  5457   0003DD                     ADERR           equ	989	;# 
  5458   0003DD                     ADERRL          equ	989	;# 
  5459   0003DE                     ADERRH          equ	990	;# 
  5460   0003DF                     ADSTPT          equ	991	;# 
  5461   0003DF                     ADSTPTL         equ	991	;# 
  5462   0003E0                     ADSTPTH         equ	992	;# 
  5463   0003E1                     ADFLTR          equ	993	;# 
  5464   0003E1                     ADFLTRL         equ	993	;# 
  5465   0003E2                     ADFLTRH         equ	994	;# 
  5466   0003E3                     ADACC           equ	995	;# 
  5467   0003E3                     ADACCL          equ	995	;# 
  5468   0003E4                     ADACCH          equ	996	;# 
  5469   0003E5                     ADACCU          equ	997	;# 
  5470   0003E6                     ADCNT           equ	998	;# 
  5471   0003E7                     ADRPT           equ	999	;# 
  5472   0003E8                     ADPREV          equ	1000	;# 
  5473   0003E8                     ADPREVL         equ	1000	;# 
  5474   0003E9                     ADPREVH         equ	1001	;# 
  5475   0003EA                     ADRES           equ	1002	;# 
  5476   0003EA                     ADRESL          equ	1002	;# 
  5477   0003EB                     ADRESH          equ	1003	;# 
  5478   0003EC                     ADPCH           equ	1004	;# 
  5479   0003EE                     ADACQ           equ	1006	;# 
  5480   0003EE                     ADACQL          equ	1006	;# 
  5481   0003EF                     ADACQH          equ	1007	;# 
  5482   0003F0                     ADCAP           equ	1008	;# 
  5483   0003F1                     ADPRE           equ	1009	;# 
  5484   0003F1                     ADPREL          equ	1009	;# 
  5485   0003F2                     ADPREH          equ	1010	;# 
  5486   0003F3                     ADCON0          equ	1011	;# 
  5487   0003F4                     ADCON1          equ	1012	;# 
  5488   0003F5                     ADCON2          equ	1013	;# 
  5489   0003F6                     ADCON3          equ	1014	;# 
  5490   0003F7                     ADSTAT          equ	1015	;# 
  5491   0003F8                     ADREF           equ	1016	;# 
  5492   0003F9                     ADACT           equ	1017	;# 
  5493   0003FA                     ADCLK           equ	1018	;# 
  5494   000400                     ANSELA          equ	1024	;# 
  5495   000401                     WPUA            equ	1025	;# 
  5496   000402                     ODCONA          equ	1026	;# 
  5497   000403                     SLRCONA         equ	1027	;# 
  5498   000404                     INLVLA          equ	1028	;# 
  5499   000405                     IOCAP           equ	1029	;# 
  5500   000406                     IOCAN           equ	1030	;# 
  5501   000407                     IOCAF           equ	1031	;# 
  5502   000408                     ANSELB          equ	1032	;# 
  5503   000409                     WPUB            equ	1033	;# 
  5504   00040A                     ODCONB          equ	1034	;# 
  5505   00040B                     SLRCONB         equ	1035	;# 
  5506   00040C                     INLVLB          equ	1036	;# 
  5507   00040D                     IOCBP           equ	1037	;# 
  5508   00040E                     IOCBN           equ	1038	;# 
  5509   00040F                     IOCBF           equ	1039	;# 
  5510   000410                     ANSELC          equ	1040	;# 
  5511   000411                     WPUC            equ	1041	;# 
  5512   000412                     ODCONC          equ	1042	;# 
  5513   000413                     SLRCONC         equ	1043	;# 
  5514   000414                     INLVLC          equ	1044	;# 
  5515   000415                     IOCCP           equ	1045	;# 
  5516   000416                     IOCCN           equ	1046	;# 
  5517   000417                     IOCCF           equ	1047	;# 
  5518   000440                     NCO1ACC         equ	1088	;# 
  5519   000440                     NCO1ACCL        equ	1088	;# 
  5520   000441                     NCO1ACCH        equ	1089	;# 
  5521   000442                     NCO1ACCU        equ	1090	;# 
  5522   000443                     NCO1INC         equ	1091	;# 
  5523   000443                     NCO1INCL        equ	1091	;# 
  5524   000444                     NCO1INCH        equ	1092	;# 
  5525   000445                     NCO1INCU        equ	1093	;# 
  5526   000446                     NCO1CON         equ	1094	;# 
  5527   000447                     NCO1CLK         equ	1095	;# 
  5528   000458                     FSCMCON         equ	1112	;# 
  5529   000459                     IVTLOCK         equ	1113	;# 
  5530   00045A                     IVTAD           equ	1114	;# 
  5531   00045A                     IVTADL          equ	1114	;# 
  5532   00045B                     IVTADH          equ	1115	;# 
  5533   00045C                     IVTADU          equ	1116	;# 
  5534   00045D                     IVTBASE         equ	1117	;# 
  5535   00045D                     IVTBASEL        equ	1117	;# 
  5536   00045E                     IVTBASEH        equ	1118	;# 
  5537   00045F                     IVTBASEU        equ	1119	;# 
  5538   000460                     PWM1ERS         equ	1120	;# 
  5539   000461                     PWM1CLK         equ	1121	;# 
  5540   000462                     PWM1LDS         equ	1122	;# 
  5541   000463                     PWM1PR          equ	1123	;# 
  5542   000463                     PWM1PRL         equ	1123	;# 
  5543   000464                     PWM1PRH         equ	1124	;# 
  5544   000465                     PWM1CPRE        equ	1125	;# 
  5545   000466                     PWM1PIPOS       equ	1126	;# 
  5546   000467                     PWM1GIR         equ	1127	;# 
  5547   000468                     PWM1GIE         equ	1128	;# 
  5548   000469                     PWM1CON         equ	1129	;# 
  5549   00046A                     PWM1S1CFG       equ	1130	;# 
  5550   00046B                     PWM1S1P1        equ	1131	;# 
  5551   00046B                     PWM1S1P1L       equ	1131	;# 
  5552   00046C                     PWM1S1P1H       equ	1132	;# 
  5553   00046D                     PWM1S1P2        equ	1133	;# 
  5554   00046D                     PWM1S1P2L       equ	1133	;# 
  5555   00046E                     PWM1S1P2H       equ	1134	;# 
  5556   00046F                     PWM2ERS         equ	1135	;# 
  5557   000470                     PWM2CLK         equ	1136	;# 
  5558   000471                     PWM2LDS         equ	1137	;# 
  5559   000472                     PWM2PR          equ	1138	;# 
  5560   000472                     PWM2PRL         equ	1138	;# 
  5561   000473                     PWM2PRH         equ	1139	;# 
  5562   000474                     PWM2CPRE        equ	1140	;# 
  5563   000475                     PWM2PIPOS       equ	1141	;# 
  5564   000476                     PWM2GIR         equ	1142	;# 
  5565   000477                     PWM2GIE         equ	1143	;# 
  5566   000478                     PWM2CON         equ	1144	;# 
  5567   000479                     PWM2S1CFG       equ	1145	;# 
  5568   00047A                     PWM2S1P1        equ	1146	;# 
  5569   00047A                     PWM2S1P1L       equ	1146	;# 
  5570   00047B                     PWM2S1P1H       equ	1147	;# 
  5571   00047C                     PWM2S1P2        equ	1148	;# 
  5572   00047C                     PWM2S1P2L       equ	1148	;# 
  5573   00047D                     PWM2S1P2H       equ	1149	;# 
  5574   00047E                     PWM3ERS         equ	1150	;# 
  5575   00047F                     PWM3CLK         equ	1151	;# 
  5576   000480                     PWM3LDS         equ	1152	;# 
  5577   000481                     PWM3PR          equ	1153	;# 
  5578   000481                     PWM3PRL         equ	1153	;# 
  5579   000482                     PWM3PRH         equ	1154	;# 
  5580   000483                     PWM3CPRE        equ	1155	;# 
  5581   000484                     PWM3PIPOS       equ	1156	;# 
  5582   000485                     PWM3GIR         equ	1157	;# 
  5583   000486                     PWM3GIE         equ	1158	;# 
  5584   000487                     PWM3CON         equ	1159	;# 
  5585   000488                     PWM3S1CFG       equ	1160	;# 
  5586   000489                     PWM3S1P1        equ	1161	;# 
  5587   000489                     PWM3S1P1L       equ	1161	;# 
  5588   00048A                     PWM3S1P1H       equ	1162	;# 
  5589   00048B                     PWM3S1P2        equ	1163	;# 
  5590   00048B                     PWM3S1P2L       equ	1163	;# 
  5591   00048C                     PWM3S1P2H       equ	1164	;# 
  5592   00049C                     PWMLOAD         equ	1180	;# 
  5593   00049D                     PWMEN           equ	1181	;# 
  5594   0004A8                     PIE0            equ	1192	;# 
  5595   0004A9                     PIE1            equ	1193	;# 
  5596   0004AA                     PIE2            equ	1194	;# 
  5597   0004AB                     PIE3            equ	1195	;# 
  5598   0004AC                     PIE4            equ	1196	;# 
  5599   0004AD                     PIE5            equ	1197	;# 
  5600   0004AE                     PIE6            equ	1198	;# 
  5601   0004AF                     PIE7            equ	1199	;# 
  5602   0004B0                     PIE8            equ	1200	;# 
  5603   0004B1                     PIE9            equ	1201	;# 
  5604   0004B2                     PIE10           equ	1202	;# 
  5605   0004B3                     PIR0            equ	1203	;# 
  5606   0004B4                     PIR1            equ	1204	;# 
  5607   0004B5                     PIR2            equ	1205	;# 
  5608   0004B6                     PIR3            equ	1206	;# 
  5609   0004B7                     PIR4            equ	1207	;# 
  5610   0004B8                     PIR5            equ	1208	;# 
  5611   0004B9                     PIR6            equ	1209	;# 
  5612   0004BA                     PIR7            equ	1210	;# 
  5613   0004BB                     PIR8            equ	1211	;# 
  5614   0004BC                     PIR9            equ	1212	;# 
  5615   0004BD                     PIR10           equ	1213	;# 
  5616   0004BE                     LATA            equ	1214	;# 
  5617   0004BF                     LATB            equ	1215	;# 
  5618   0004C0                     LATC            equ	1216	;# 
  5619   0004C6                     TRISA           equ	1222	;# 
  5620   0004C7                     TRISB           equ	1223	;# 
  5621   0004C8                     TRISC           equ	1224	;# 
  5622   0004CE                     PORTA           equ	1230	;# 
  5623   0004CF                     PORTB           equ	1231	;# 
  5624   0004D0                     PORTC           equ	1232	;# 
  5625   0004D6                     INTCON0         equ	1238	;# 
  5626   0004D7                     INTCON1         equ	1239	;# 
  5627   0004D8                     STATUS          equ	1240	;# 
  5628   0004D9                     FSR2            equ	1241	;# 
  5629   0004D9                     FSR2L           equ	1241	;# 
  5630   0004DA                     FSR2H           equ	1242	;# 
  5631   0004DB                     PLUSW2          equ	1243	;# 
  5632   0004DC                     PREINC2         equ	1244	;# 
  5633   0004DD                     POSTDEC2        equ	1245	;# 
  5634   0004DE                     POSTINC2        equ	1246	;# 
  5635   0004DF                     INDF2           equ	1247	;# 
  5636   0004E0                     BSR             equ	1248	;# 
  5637   0004E1                     FSR1            equ	1249	;# 
  5638   0004E1                     FSR1L           equ	1249	;# 
  5639   0004E2                     FSR1H           equ	1250	;# 
  5640   0004E3                     PLUSW1          equ	1251	;# 
  5641   0004E4                     PREINC1         equ	1252	;# 
  5642   0004E5                     POSTDEC1        equ	1253	;# 
  5643   0004E6                     POSTINC1        equ	1254	;# 
  5644   0004E7                     INDF1           equ	1255	;# 
  5645   0004E8                     WREG            equ	1256	;# 
  5646   0004E9                     FSR0            equ	1257	;# 
  5647   0004E9                     FSR0L           equ	1257	;# 
  5648   0004EA                     FSR0H           equ	1258	;# 
  5649   0004EB                     PLUSW0          equ	1259	;# 
  5650   0004EC                     PREINC0         equ	1260	;# 
  5651   0004ED                     POSTDEC0        equ	1261	;# 
  5652   0004EE                     POSTINC0        equ	1262	;# 
  5653   0004EF                     INDF0           equ	1263	;# 
  5654   0004F0                     PCON0           equ	1264	;# 
  5655   0004F1                     PCON1           equ	1265	;# 
  5656   0004F2                     CPUDOZE         equ	1266	;# 
  5657   0004F3                     PROD            equ	1267	;# 
  5658   0004F3                     PRODL           equ	1267	;# 
  5659   0004F4                     PRODH           equ	1268	;# 
  5660   0004F5                     TABLAT          equ	1269	;# 
  5661   0004F6                     TBLPTR          equ	1270	;# 
  5662   0004F6                     TBLPTRL         equ	1270	;# 
  5663   0004F7                     TBLPTRH         equ	1271	;# 
  5664   0004F8                     TBLPTRU         equ	1272	;# 
  5665   0004F9                     PCLAT           equ	1273	;# 
  5666   0004F9                     PCL             equ	1273	;# 
  5667   0004FA                     PCLATH          equ	1274	;# 
  5668   0004FB                     PCLATU          equ	1275	;# 
  5669   0004FC                     STKPTR          equ	1276	;# 
  5670   0004FD                     TOS             equ	1277	;# 
  5671   0004FD                     TOSL            equ	1277	;# 
  5672   0004FE                     TOSH            equ	1278	;# 
  5673   0004FF                     TOSU            equ	1279	;# 
  5674   000039                     CLKRCON         equ	57	;# 
  5675   00003A                     CLKRCLK         equ	58	;# 
  5676   000040                     NVMCON0         equ	64	;# 
  5677   000041                     NVMCON1         equ	65	;# 
  5678   000042                     NVMLOCK         equ	66	;# 
  5679   000043                     NVMADR          equ	67	;# 
  5680   000043                     NVMADRL         equ	67	;# 
  5681   000044                     NVMADRH         equ	68	;# 
  5682   000045                     NVMADRU         equ	69	;# 
  5683   000046                     NVMDAT          equ	70	;# 
  5684   000046                     NVMDATL         equ	70	;# 
  5685   000047                     NVMDATH         equ	71	;# 
  5686   000048                     VREGCON         equ	72	;# 
  5687   000049                     BORCON          equ	73	;# 
  5688   00004A                     HLVDCON0        equ	74	;# 
  5689   00004B                     HLVDCON1        equ	75	;# 
  5690   00004C                     ZCDCON          equ	76	;# 
  5691   000063                     PMD0            equ	99	;# 
  5692   000064                     PMD1            equ	100	;# 
  5693   000065                     PMD2            equ	101	;# 
  5694   000066                     PMD3            equ	102	;# 
  5695   000067                     PMD4            equ	103	;# 
  5696   000068                     PMD5            equ	104	;# 
  5697   00006A                     MD1CON0         equ	106	;# 
  5698   00006B                     MD1CON1         equ	107	;# 
  5699   00006C                     MD1SRC          equ	108	;# 
  5700   00006D                     MD1CARL         equ	109	;# 
  5701   00006E                     MD1CARH         equ	110	;# 
  5702   00006F                     CMOUT           equ	111	;# 
  5703   000070                     CM1CON0         equ	112	;# 
  5704   000071                     CM1CON1         equ	113	;# 
  5705   000072                     CM1NCH          equ	114	;# 
  5706   000073                     CM1PCH          equ	115	;# 
  5707   000074                     CM2CON0         equ	116	;# 
  5708   000075                     CM2CON1         equ	117	;# 
  5709   000076                     CM2NCH          equ	118	;# 
  5710   000077                     CM2PCH          equ	119	;# 
  5711   000078                     WDTCON0         equ	120	;# 
  5712   000079                     WDTCON1         equ	121	;# 
  5713   00007A                     WDTPS           equ	122	;# 
  5714   00007A                     WDTPSL          equ	122	;# 
  5715   00007B                     WDTPSH          equ	123	;# 
  5716   00007C                     WDTTMR          equ	124	;# 
  5717   00007D                     DAC1DAT         equ	125	;# 
  5718   00007D                     DAC1DATL        equ	125	;# 
  5719   00007F                     DAC1CON         equ	127	;# 
  5720   000080                     SPI1RXB         equ	128	;# 
  5721   000081                     SPI1TXB         equ	129	;# 
  5722   000082                     SPI1TCNT        equ	130	;# 
  5723   000082                     SPI1TCNTL       equ	130	;# 
  5724   000083                     SPI1TCNTH       equ	131	;# 
  5725   000084                     SPI1CON0        equ	132	;# 
  5726   000085                     SPI1CON1        equ	133	;# 
  5727   000086                     SPI1CON2        equ	134	;# 
  5728   000087                     SPI1STATUS      equ	135	;# 
  5729   000088                     SPI1TWIDTH      equ	136	;# 
  5730   000089                     SPI1BAUD        equ	137	;# 
  5731   00008A                     SPI1INTF        equ	138	;# 
  5732   00008B                     SPI1INTE        equ	139	;# 
  5733   00008C                     SPI1CLK         equ	140	;# 
  5734   00008D                     SPI2RXB         equ	141	;# 
  5735   00008E                     SPI2TXB         equ	142	;# 
  5736   00008F                     SPI2TCNT        equ	143	;# 
  5737   00008F                     SPI2TCNTL       equ	143	;# 
  5738   000090                     SPI2TCNTH       equ	144	;# 
  5739   000091                     SPI2CON0        equ	145	;# 
  5740   000092                     SPI2CON1        equ	146	;# 
  5741   000093                     SPI2CON2        equ	147	;# 
  5742   000094                     SPI2STATUS      equ	148	;# 
  5743   000095                     SPI2TWIDTH      equ	149	;# 
  5744   000096                     SPI2BAUD        equ	150	;# 
  5745   000097                     SPI2INTF        equ	151	;# 
  5746   000098                     SPI2INTE        equ	152	;# 
  5747   000099                     SPI2CLK         equ	153	;# 
  5748   0000A0                     DAC2DAT         equ	160	;# 
  5749   0000A0                     DAC2DATL        equ	160	;# 
  5750   0000A2                     DAC2CON         equ	162	;# 
  5751   0000A3                     OPA1CON0        equ	163	;# 
  5752   0000A4                     OPA1CON1        equ	164	;# 
  5753   0000A5                     OPA1CON2        equ	165	;# 
  5754   0000A6                     OPA1CON3        equ	166	;# 
  5755   0000A7                     OPA1HWC         equ	167	;# 
  5756   0000A8                     OPA1OFFSET      equ	168	;# 
  5757   0000A9                     OPA1ORS         equ	169	;# 
  5758   0000AC                     ACTCON          equ	172	;# 
  5759   0000AD                     OSCCON1         equ	173	;# 
  5760   0000AE                     OSCCON2         equ	174	;# 
  5761   0000AF                     OSCCON3         equ	175	;# 
  5762   0000B0                     OSCTUNE         equ	176	;# 
  5763   0000B1                     OSCFRQ          equ	177	;# 
  5764   0000B1                     OSCFREQ         equ	177	;# 
  5765   0000B2                     OSCSTAT         equ	178	;# 
  5766   0000B2                     OSCSTAT1        equ	178	;# 
  5767   0000B3                     OSCEN           equ	179	;# 
  5768   0000B4                     PRLOCK          equ	180	;# 
  5769   0000B5                     SCANPR          equ	181	;# 
  5770   0000B6                     DMA1PR          equ	182	;# 
  5771   0000B7                     DMA2PR          equ	183	;# 
  5772   0000B8                     DMA3PR          equ	184	;# 
  5773   0000B9                     DMA4PR          equ	185	;# 
  5774   0000BE                     MAINPR          equ	190	;# 
  5775   0000BF                     ISRPR           equ	191	;# 
  5776   0000D4                     CLCDATA         equ	212	;# 
  5777   0000D5                     CLCSELECT       equ	213	;# 
  5778   0000D6                     CLCnCON         equ	214	;# 
  5779   0000D7                     CLCnPOL         equ	215	;# 
  5780   0000D8                     CLCnSEL0        equ	216	;# 
  5781   0000D9                     CLCnSEL1        equ	217	;# 
  5782   0000DA                     CLCnSEL2        equ	218	;# 
  5783   0000DB                     CLCnSEL3        equ	219	;# 
  5784   0000DC                     CLCnGLS0        equ	220	;# 
  5785   0000DD                     CLCnGLS1        equ	221	;# 
  5786   0000DE                     CLCnGLS2        equ	222	;# 
  5787   0000DF                     CLCnGLS3        equ	223	;# 
  5788   0000E8                     DMASELECT       equ	232	;# 
  5789   0000E9                     DMAnBUF         equ	233	;# 
  5790   0000EA                     DMAnDCNT        equ	234	;# 
  5791   0000EA                     DMAnDCNTL       equ	234	;# 
  5792   0000EB                     DMAnDCNTH       equ	235	;# 
  5793   0000EC                     DMAnDPTR        equ	236	;# 
  5794   0000EC                     DMAnDPTRL       equ	236	;# 
  5795   0000ED                     DMAnDPTRH       equ	237	;# 
  5796   0000EE                     DMAnDSZ         equ	238	;# 
  5797   0000EE                     DMAnDSZL        equ	238	;# 
  5798   0000EF                     DMAnDSZH        equ	239	;# 
  5799   0000F0                     DMAnDSA         equ	240	;# 
  5800   0000F0                     DMAnDSAL        equ	240	;# 
  5801   0000F1                     DMAnDSAH        equ	241	;# 
  5802   0000F2                     DMAnSCNT        equ	242	;# 
  5803   0000F2                     DMAnSCNTL       equ	242	;# 
  5804   0000F3                     DMAnSCNTH       equ	243	;# 
  5805   0000F4                     DMAnSPTR        equ	244	;# 
  5806   0000F4                     DMAnSPTRL       equ	244	;# 
  5807   0000F5                     DMAnSPTRH       equ	245	;# 
  5808   0000F6                     DMAnSPTRU       equ	246	;# 
  5809   0000F7                     DMAnSSZ         equ	247	;# 
  5810   0000F7                     DMAnSSZL        equ	247	;# 
  5811   0000F8                     DMAnSSZH        equ	248	;# 
  5812   0000F9                     DMAnSSA         equ	249	;# 
  5813   0000F9                     DMAnSSAL        equ	249	;# 
  5814   0000FA                     DMAnSSAH        equ	250	;# 
  5815   0000FB                     DMAnSSAU        equ	251	;# 
  5816   0000FC                     DMAnCON0        equ	252	;# 
  5817   0000FD                     DMAnCON1        equ	253	;# 
  5818   0000FE                     DMAnAIRQ        equ	254	;# 
  5819   0000FF                     DMAnSIRQ        equ	255	;# 
  5820   000200                     PPSLOCK         equ	512	;# 
  5821   000201                     RA0PPS          equ	513	;# 
  5822   000202                     RA1PPS          equ	514	;# 
  5823   000203                     RA2PPS          equ	515	;# 
  5824   000205                     RA4PPS          equ	517	;# 
  5825   000206                     RA5PPS          equ	518	;# 
  5826   00020D                     RB4PPS          equ	525	;# 
  5827   00020E                     RB5PPS          equ	526	;# 
  5828   00020F                     RB6PPS          equ	527	;# 
  5829   000210                     RB7PPS          equ	528	;# 
  5830   000211                     RC0PPS          equ	529	;# 
  5831   000212                     RC1PPS          equ	530	;# 
  5832   000213                     RC2PPS          equ	531	;# 
  5833   000214                     RC3PPS          equ	532	;# 
  5834   000215                     RC4PPS          equ	533	;# 
  5835   000216                     RC5PPS          equ	534	;# 
  5836   000217                     RC6PPS          equ	535	;# 
  5837   000218                     RC7PPS          equ	536	;# 
  5838   00023E                     INT0PPS         equ	574	;# 
  5839   00023F                     INT1PPS         equ	575	;# 
  5840   000240                     INT2PPS         equ	576	;# 
  5841   000241                     T0CKIPPS        equ	577	;# 
  5842   000242                     T1CKIPPS        equ	578	;# 
  5843   000243                     T1GPPS          equ	579	;# 
  5844   000244                     T3CKIPPS        equ	580	;# 
  5845   000245                     T3GPPS          equ	581	;# 
  5846   000248                     T2INPPS         equ	584	;# 
  5847   000249                     T4INPPS         equ	585	;# 
  5848   00024F                     CCP1PPS         equ	591	;# 
  5849   000251                     PWM1ERSPPS      equ	593	;# 
  5850   000252                     PWM2ERSPPS      equ	594	;# 
  5851   000253                     PWM3ERSPPS      equ	595	;# 
  5852   000257                     PWMIN0PPS       equ	599	;# 
  5853   000258                     PWMIN1PPS       equ	600	;# 
  5854   000259                     SMT1WINPPS      equ	601	;# 
  5855   00025A                     SMT1SIGPPS      equ	602	;# 
  5856   00025B                     CWG1PPS         equ	603	;# 
  5857   00025B                     CWG1INPPS       equ	603	;# 
  5858   00025E                     MD1CARLPPS      equ	606	;# 
  5859   00025E                     MDCARLPPS       equ	606	;# 
  5860   00025F                     MD1CARHPPS      equ	607	;# 
  5861   00025F                     MDCARHPPS       equ	607	;# 
  5862   000260                     MD1SRCPPS       equ	608	;# 
  5863   000260                     MDSRCPPS        equ	608	;# 
  5864   000261                     CLCIN0PPS       equ	609	;# 
  5865   000262                     CLCIN1PPS       equ	610	;# 
  5866   000263                     CLCIN2PPS       equ	611	;# 
  5867   000264                     CLCIN3PPS       equ	612	;# 
  5868   000269                     ADACTPPS        equ	617	;# 
  5869   00026A                     SPI1SCKPPS      equ	618	;# 
  5870   00026B                     SPI1SDIPPS      equ	619	;# 
  5871   00026C                     SPI1SSPPS       equ	620	;# 
  5872   00026D                     SPI2SCKPPS      equ	621	;# 
  5873   00026E                     SPI2SDIPPS      equ	622	;# 
  5874   00026F                     SPI2SSPPS       equ	623	;# 
  5875   000270                     I2C1SDAPPS      equ	624	;# 
  5876   000271                     I2C1SCLPPS      equ	625	;# 
  5877   000272                     U1RXPPS         equ	626	;# 
  5878   000273                     U1CTSPPS        equ	627	;# 
  5879   000274                     U2RXPPS         equ	628	;# 
  5880   000275                     U2CTSPPS        equ	629	;# 
  5881   000276                     U3RXPPS         equ	630	;# 
  5882   000277                     U3CTSPPS        equ	631	;# 
  5883   000286                     RB6I2C          equ	646	;# 
  5884   000287                     RB4I2C          equ	647	;# 
  5885   00028A                     I2C1RXB         equ	650	;# 
  5886   00028B                     I2C1TXB         equ	651	;# 
  5887   00028C                     I2C1CNTL        equ	652	;# 
  5888   00028D                     I2C1CNTH        equ	653	;# 
  5889   00028E                     I2C1ADB0        equ	654	;# 
  5890   00028F                     I2C1ADB1        equ	655	;# 
  5891   000290                     I2C1ADR0        equ	656	;# 
  5892   000291                     I2C1ADR1        equ	657	;# 
  5893   000292                     I2C1ADR2        equ	658	;# 
  5894   000293                     I2C1ADR3        equ	659	;# 
  5895   000294                     I2C1CON0        equ	660	;# 
  5896   000295                     I2C1CON1        equ	661	;# 
  5897   000296                     I2C1CON2        equ	662	;# 
  5898   000297                     I2C1ERR         equ	663	;# 
  5899   000298                     I2C1STAT0       equ	664	;# 
  5900   000299                     I2C1STAT1       equ	665	;# 
  5901   00029A                     I2C1PIR         equ	666	;# 
  5902   00029B                     I2C1PIE         equ	667	;# 
  5903   00029C                     I2C1BTO         equ	668	;# 
  5904   00029D                     I2C1BAUD        equ	669	;# 
  5905   00029E                     I2C1CLK         equ	670	;# 
  5906   00029F                     I2C1BTOC        equ	671	;# 
  5907   0002A1                     U1RXB           equ	673	;# 
  5908   0002A1                     U1RXBL          equ	673	;# 
  5909   0002A2                     U1RXCHK         equ	674	;# 
  5910   0002A3                     U1TXB           equ	675	;# 
  5911   0002A3                     U1TXBL          equ	675	;# 
  5912   0002A4                     U1TXCHK         equ	676	;# 
  5913   0002A5                     U1P1            equ	677	;# 
  5914   0002A5                     U1P1L           equ	677	;# 
  5915   0002A6                     U1P1H           equ	678	;# 
  5916   0002A7                     U1P2            equ	679	;# 
  5917   0002A7                     U1P2L           equ	679	;# 
  5918   0002A8                     U1P2H           equ	680	;# 
  5919   0002A9                     U1P3            equ	681	;# 
  5920   0002A9                     U1P3L           equ	681	;# 
  5921   0002AA                     U1P3H           equ	682	;# 
  5922   0002AB                     U1CON0          equ	683	;# 
  5923   0002AC                     U1CON1          equ	684	;# 
  5924   0002AD                     U1CON2          equ	685	;# 
  5925   0002AE                     U1BRG           equ	686	;# 
  5926   0002AE                     U1BRGL          equ	686	;# 
  5927   0002AF                     U1BRGH          equ	687	;# 
  5928   0002B0                     U1FIFO          equ	688	;# 
  5929   0002B1                     U1UIR           equ	689	;# 
  5930   0002B2                     U1ERRIR         equ	690	;# 
  5931   0002B3                     U1ERRIE         equ	691	;# 
  5932   0002B4                     U2RXB           equ	692	;# 
  5933   0002B4                     U2RXBL          equ	692	;# 
  5934   0002B6                     U2TXB           equ	694	;# 
  5935   0002B6                     U2TXBL          equ	694	;# 
  5936   0002B8                     U2P1            equ	696	;# 
  5937   0002B8                     U2P1L           equ	696	;# 
  5938   0002BA                     U2P2            equ	698	;# 
  5939   0002BA                     U2P2L           equ	698	;# 
  5940   0002BC                     U2P3            equ	700	;# 
  5941   0002BC                     U2P3L           equ	700	;# 
  5942   0002BE                     U2CON0          equ	702	;# 
  5943   0002BF                     U2CON1          equ	703	;# 
  5944   0002C0                     U2CON2          equ	704	;# 
  5945   0002C1                     U2BRG           equ	705	;# 
  5946   0002C1                     U2BRGL          equ	705	;# 
  5947   0002C2                     U2BRGH          equ	706	;# 
  5948   0002C3                     U2FIFO          equ	707	;# 
  5949   0002C4                     U2UIR           equ	708	;# 
  5950   0002C5                     U2ERRIR         equ	709	;# 
  5951   0002C6                     U2ERRIE         equ	710	;# 
  5952   0002C7                     U3RXB           equ	711	;# 
  5953   0002C7                     U3RXBL          equ	711	;# 
  5954   0002C9                     U3TXB           equ	713	;# 
  5955   0002C9                     U3TXBL          equ	713	;# 
  5956   0002CB                     U3P1            equ	715	;# 
  5957   0002CB                     U3P1L           equ	715	;# 
  5958   0002CD                     U3P2            equ	717	;# 
  5959   0002CD                     U3P2L           equ	717	;# 
  5960   0002CF                     U3P3            equ	719	;# 
  5961   0002CF                     U3P3L           equ	719	;# 
  5962   0002D1                     U3CON0          equ	721	;# 
  5963   0002D2                     U3CON1          equ	722	;# 
  5964   0002D3                     U3CON2          equ	723	;# 
  5965   0002D4                     U3BRG           equ	724	;# 
  5966   0002D4                     U3BRGL          equ	724	;# 
  5967   0002D5                     U3BRGH          equ	725	;# 
  5968   0002D6                     U3FIFO          equ	726	;# 
  5969   0002D7                     U3UIR           equ	727	;# 
  5970   0002D8                     U3ERRIR         equ	728	;# 
  5971   0002D9                     U3ERRIE         equ	729	;# 
  5972   000300                     SMT1TMR         equ	768	;# 
  5973   000300                     SMT1TMRL        equ	768	;# 
  5974   000301                     SMT1TMRH        equ	769	;# 
  5975   000302                     SMT1TMRU        equ	770	;# 
  5976   000303                     SMT1CPR         equ	771	;# 
  5977   000303                     SMT1CPRL        equ	771	;# 
  5978   000304                     SMT1CPRH        equ	772	;# 
  5979   000305                     SMT1CPRU        equ	773	;# 
  5980   000306                     SMT1CPW         equ	774	;# 
  5981   000306                     SMT1CPWL        equ	774	;# 
  5982   000307                     SMT1CPWH        equ	775	;# 
  5983   000308                     SMT1CPWU        equ	776	;# 
  5984   000309                     SMT1PR          equ	777	;# 
  5985   000309                     SMT1PRL         equ	777	;# 
  5986   00030A                     SMT1PRH         equ	778	;# 
  5987   00030B                     SMT1PRU         equ	779	;# 
  5988   00030C                     SMT1CON0        equ	780	;# 
  5989   00030D                     SMT1CON1        equ	781	;# 
  5990   00030E                     SMT1STAT        equ	782	;# 
  5991   00030F                     SMT1CLK         equ	783	;# 
  5992   000310                     SMT1SIG         equ	784	;# 
  5993   000311                     SMT1WIN         equ	785	;# 
  5994   000312                     TMR1            equ	786	;# 
  5995   000312                     TMR1L           equ	786	;# 
  5996   000313                     TMR1H           equ	787	;# 
  5997   000314                     T1CON           equ	788	;# 
  5998   000314                     TMR1CON         equ	788	;# 
  5999   000315                     T1GCON          equ	789	;# 
  6000   000315                     TMR1GCON        equ	789	;# 
  6001   000316                     T1GATE          equ	790	;# 
  6002   000316                     TMR1GATE        equ	790	;# 
  6003   000317                     T1CLK           equ	791	;# 
  6004   000317                     TMR1CLK         equ	791	;# 
  6005   000317                     PR1             equ	791	;# 
  6006   000318                     TMR0L           equ	792	;# 
  6007   000318                     TMR0            equ	792	;# 
  6008   000319                     TMR0H           equ	793	;# 
  6009   000319                     PR0             equ	793	;# 
  6010   00031A                     T0CON0          equ	794	;# 
  6011   00031B                     T0CON1          equ	795	;# 
  6012   00031C                     T2TMR           equ	796	;# 
  6013   00031C                     TMR2            equ	796	;# 
  6014   00031D                     T2PR            equ	797	;# 
  6015   00031D                     PR2             equ	797	;# 
  6016   00031E                     T2CON           equ	798	;# 
  6017   00031F                     T2HLT           equ	799	;# 
  6018   000320                     T2CLKCON        equ	800	;# 
  6019   000320                     T2CLK           equ	800	;# 
  6020   000321                     T2RST           equ	801	;# 
  6021   000323                     TMR3            equ	803	;# 
  6022   000323                     TMR3L           equ	803	;# 
  6023   000324                     TMR3H           equ	804	;# 
  6024   000325                     T3CON           equ	805	;# 
  6025   000325                     TMR3CON         equ	805	;# 
  6026   000326                     T3GCON          equ	806	;# 
  6027   000326                     TMR3GCON        equ	806	;# 
  6028   000327                     T3GATE          equ	807	;# 
  6029   000327                     TMR3GATE        equ	807	;# 
  6030   000328                     T3CLK           equ	808	;# 
  6031   000328                     TMR3CLK         equ	808	;# 
  6032   000328                     PR3             equ	808	;# 
  6033   000329                     T4TMR           equ	809	;# 
  6034   000329                     TMR4            equ	809	;# 
  6035   00032A                     T4PR            equ	810	;# 
  6036   00032A                     PR4             equ	810	;# 
  6037   00032B                     T4CON           equ	811	;# 
  6038   00032C                     T4HLT           equ	812	;# 
  6039   00032D                     T4CLKCON        equ	813	;# 
  6040   00032D                     T4CLK           equ	813	;# 
  6041   00032E                     T4RST           equ	814	;# 
  6042   000340                     CCPR1           equ	832	;# 
  6043   000340                     CCPR1L          equ	832	;# 
  6044   000341                     CCPR1H          equ	833	;# 
  6045   000342                     CCP1CON         equ	834	;# 
  6046   000343                     CCP1CAP         equ	835	;# 
  6047   00034C                     CCPTMRS0        equ	844	;# 
  6048   00034E                     CRCDATA         equ	846	;# 
  6049   00034E                     CRCDATAL        equ	846	;# 
  6050   00034F                     CRCDATAH        equ	847	;# 
  6051   000350                     CRCDATAU        equ	848	;# 
  6052   000351                     CRCDATAT        equ	849	;# 
  6053   000352                     CRCOUT          equ	850	;# 
  6054   000352                     CRCSHFT         equ	850	;# 
  6055   000352                     CRCXOR          equ	850	;# 
  6056   000352                     CRCOUTL         equ	850	;# 
  6057   000352                     CRCSHFTL        equ	850	;# 
  6058   000352                     CRCSHIFTL       equ	850	;# 
  6059   000352                     CRCXORL         equ	850	;# 
  6060   000353                     CRCOUTH         equ	851	;# 
  6061   000353                     CRCSHFTH        equ	851	;# 
  6062   000353                     CRCSHIFTH       equ	851	;# 
  6063   000353                     CRCXORH         equ	851	;# 
  6064   000354                     CRCOUTU         equ	852	;# 
  6065   000354                     CRCSHFTU        equ	852	;# 
  6066   000354                     CRCSHIFTU       equ	852	;# 
  6067   000354                     CRCXORU         equ	852	;# 
  6068   000355                     CRCOUTT         equ	853	;# 
  6069   000355                     CRCSHFTT        equ	853	;# 
  6070   000355                     CRCSHIFTT       equ	853	;# 
  6071   000355                     CRCXORT         equ	853	;# 
  6072   000356                     CRCCON0         equ	854	;# 
  6073   000357                     CRCCON1         equ	855	;# 
  6074   000358                     CRCCON2         equ	856	;# 
  6075   00035A                     SCANLADR        equ	858	;# 
  6076   00035A                     SCANLADRL       equ	858	;# 
  6077   00035B                     SCANLADRH       equ	859	;# 
  6078   00035C                     SCANLADRU       equ	860	;# 
  6079   00035D                     SCANHADR        equ	861	;# 
  6080   00035D                     SCANHADRL       equ	861	;# 
  6081   00035E                     SCANHADRH       equ	862	;# 
  6082   00035F                     SCANHADRU       equ	863	;# 
  6083   000360                     SCANCON0        equ	864	;# 
  6084   000361                     SCANTRIG        equ	865	;# 
  6085   000367                     IPR0            equ	871	;# 
  6086   000368                     IPR1            equ	872	;# 
  6087   000369                     IPR2            equ	873	;# 
  6088   00036A                     IPR3            equ	874	;# 
  6089   00036B                     IPR4            equ	875	;# 
  6090   00036C                     IPR5            equ	876	;# 
  6091   00036D                     IPR6            equ	877	;# 
  6092   00036E                     IPR7            equ	878	;# 
  6093   00036F                     IPR8            equ	879	;# 
  6094   000370                     IPR9            equ	880	;# 
  6095   000371                     IPR10           equ	881	;# 
  6096   000373                     STATUS_CSHAD    equ	883	;# 
  6097   000374                     WREG_CSHAD      equ	884	;# 
  6098   000375                     BSR_CSHAD       equ	885	;# 
  6099   000376                     SHADCON         equ	886	;# 
  6100   000377                     STATUS_SHAD     equ	887	;# 
  6101   000378                     WREG_SHAD       equ	888	;# 
  6102   000379                     BSR_SHAD        equ	889	;# 
  6103   00037A                     PCLATH_SHAD     equ	890	;# 
  6104   00037B                     PCLATU_SHAD     equ	891	;# 
  6105   00037C                     FSR0SH          equ	892	;# 
  6106   00037C                     FSR0L_SHAD      equ	892	;# 
  6107   00037D                     FSR0H_SHAD      equ	893	;# 
  6108   00037E                     FSR1SH          equ	894	;# 
  6109   00037E                     FSR1L_SHAD      equ	894	;# 
  6110   00037F                     FSR1H_SHAD      equ	895	;# 
  6111   000380                     FSR2SH          equ	896	;# 
  6112   000380                     FSR2L_SHAD      equ	896	;# 
  6113   000381                     FSR2H_SHAD      equ	897	;# 
  6114   000382                     PRODSH          equ	898	;# 
  6115   000382                     PRODL_SHAD      equ	898	;# 
  6116   000383                     PRODH_SHAD      equ	899	;# 
  6117   0003BC                     CWG1CLK         equ	956	;# 
  6118   0003BC                     CWG1CLKCON      equ	956	;# 
  6119   0003BD                     CWG1ISM         equ	957	;# 
  6120   0003BD                     CWG1DAT         equ	957	;# 
  6121   0003BE                     CWG1DBR         equ	958	;# 
  6122   0003BF                     CWG1DBF         equ	959	;# 
  6123   0003C0                     CWG1CON0        equ	960	;# 
  6124   0003C1                     CWG1CON1        equ	961	;# 
  6125   0003C2                     CWG1AS0         equ	962	;# 
  6126   0003C3                     CWG1AS1         equ	963	;# 
  6127   0003C4                     CWG1STR         equ	964	;# 
  6128   0003D7                     FVRCON          equ	983	;# 
  6129   0003D8                     ADCPCON         equ	984	;# 
  6130   0003D8                     ADCP            equ	984	;# 
  6131   0003D9                     ADLTH           equ	985	;# 
  6132   0003D9                     ADLTHL          equ	985	;# 
  6133   0003DA                     ADLTHH          equ	986	;# 
  6134   0003DB                     ADUTH           equ	987	;# 
  6135   0003DB                     ADUTHL          equ	987	;# 
  6136   0003DC                     ADUTHH          equ	988	;# 
  6137   0003DD                     ADERR           equ	989	;# 
  6138   0003DD                     ADERRL          equ	989	;# 
  6139   0003DE                     ADERRH          equ	990	;# 
  6140   0003DF                     ADSTPT          equ	991	;# 
  6141   0003DF                     ADSTPTL         equ	991	;# 
  6142   0003E0                     ADSTPTH         equ	992	;# 
  6143   0003E1                     ADFLTR          equ	993	;# 
  6144   0003E1                     ADFLTRL         equ	993	;# 
  6145   0003E2                     ADFLTRH         equ	994	;# 
  6146   0003E3                     ADACC           equ	995	;# 
  6147   0003E3                     ADACCL          equ	995	;# 
  6148   0003E4                     ADACCH          equ	996	;# 
  6149   0003E5                     ADACCU          equ	997	;# 
  6150   0003E6                     ADCNT           equ	998	;# 
  6151   0003E7                     ADRPT           equ	999	;# 
  6152   0003E8                     ADPREV          equ	1000	;# 
  6153   0003E8                     ADPREVL         equ	1000	;# 
  6154   0003E9                     ADPREVH         equ	1001	;# 
  6155   0003EA                     ADRES           equ	1002	;# 
  6156   0003EA                     ADRESL          equ	1002	;# 
  6157   0003EB                     ADRESH          equ	1003	;# 
  6158   0003EC                     ADPCH           equ	1004	;# 
  6159   0003EE                     ADACQ           equ	1006	;# 
  6160   0003EE                     ADACQL          equ	1006	;# 
  6161   0003EF                     ADACQH          equ	1007	;# 
  6162   0003F0                     ADCAP           equ	1008	;# 
  6163   0003F1                     ADPRE           equ	1009	;# 
  6164   0003F1                     ADPREL          equ	1009	;# 
  6165   0003F2                     ADPREH          equ	1010	;# 
  6166   0003F3                     ADCON0          equ	1011	;# 
  6167   0003F4                     ADCON1          equ	1012	;# 
  6168   0003F5                     ADCON2          equ	1013	;# 
  6169   0003F6                     ADCON3          equ	1014	;# 
  6170   0003F7                     ADSTAT          equ	1015	;# 
  6171   0003F8                     ADREF           equ	1016	;# 
  6172   0003F9                     ADACT           equ	1017	;# 
  6173   0003FA                     ADCLK           equ	1018	;# 
  6174   000400                     ANSELA          equ	1024	;# 
  6175   000401                     WPUA            equ	1025	;# 
  6176   000402                     ODCONA          equ	1026	;# 
  6177   000403                     SLRCONA         equ	1027	;# 
  6178   000404                     INLVLA          equ	1028	;# 
  6179   000405                     IOCAP           equ	1029	;# 
  6180   000406                     IOCAN           equ	1030	;# 
  6181   000407                     IOCAF           equ	1031	;# 
  6182   000408                     ANSELB          equ	1032	;# 
  6183   000409                     WPUB            equ	1033	;# 
  6184   00040A                     ODCONB          equ	1034	;# 
  6185   00040B                     SLRCONB         equ	1035	;# 
  6186   00040C                     INLVLB          equ	1036	;# 
  6187   00040D                     IOCBP           equ	1037	;# 
  6188   00040E                     IOCBN           equ	1038	;# 
  6189   00040F                     IOCBF           equ	1039	;# 
  6190   000410                     ANSELC          equ	1040	;# 
  6191   000411                     WPUC            equ	1041	;# 
  6192   000412                     ODCONC          equ	1042	;# 
  6193   000413                     SLRCONC         equ	1043	;# 
  6194   000414                     INLVLC          equ	1044	;# 
  6195   000415                     IOCCP           equ	1045	;# 
  6196   000416                     IOCCN           equ	1046	;# 
  6197   000417                     IOCCF           equ	1047	;# 
  6198   000440                     NCO1ACC         equ	1088	;# 
  6199   000440                     NCO1ACCL        equ	1088	;# 
  6200   000441                     NCO1ACCH        equ	1089	;# 
  6201   000442                     NCO1ACCU        equ	1090	;# 
  6202   000443                     NCO1INC         equ	1091	;# 
  6203   000443                     NCO1INCL        equ	1091	;# 
  6204   000444                     NCO1INCH        equ	1092	;# 
  6205   000445                     NCO1INCU        equ	1093	;# 
  6206   000446                     NCO1CON         equ	1094	;# 
  6207   000447                     NCO1CLK         equ	1095	;# 
  6208   000458                     FSCMCON         equ	1112	;# 
  6209   000459                     IVTLOCK         equ	1113	;# 
  6210   00045A                     IVTAD           equ	1114	;# 
  6211   00045A                     IVTADL          equ	1114	;# 
  6212   00045B                     IVTADH          equ	1115	;# 
  6213   00045C                     IVTADU          equ	1116	;# 
  6214   00045D                     IVTBASE         equ	1117	;# 
  6215   00045D                     IVTBASEL        equ	1117	;# 
  6216   00045E                     IVTBASEH        equ	1118	;# 
  6217   00045F                     IVTBASEU        equ	1119	;# 
  6218   000460                     PWM1ERS         equ	1120	;# 
  6219   000461                     PWM1CLK         equ	1121	;# 
  6220   000462                     PWM1LDS         equ	1122	;# 
  6221   000463                     PWM1PR          equ	1123	;# 
  6222   000463                     PWM1PRL         equ	1123	;# 
  6223   000464                     PWM1PRH         equ	1124	;# 
  6224   000465                     PWM1CPRE        equ	1125	;# 
  6225   000466                     PWM1PIPOS       equ	1126	;# 
  6226   000467                     PWM1GIR         equ	1127	;# 
  6227   000468                     PWM1GIE         equ	1128	;# 
  6228   000469                     PWM1CON         equ	1129	;# 
  6229   00046A                     PWM1S1CFG       equ	1130	;# 
  6230   00046B                     PWM1S1P1        equ	1131	;# 
  6231   00046B                     PWM1S1P1L       equ	1131	;# 
  6232   00046C                     PWM1S1P1H       equ	1132	;# 
  6233   00046D                     PWM1S1P2        equ	1133	;# 
  6234   00046D                     PWM1S1P2L       equ	1133	;# 
  6235   00046E                     PWM1S1P2H       equ	1134	;# 
  6236   00046F                     PWM2ERS         equ	1135	;# 
  6237   000470                     PWM2CLK         equ	1136	;# 
  6238   000471                     PWM2LDS         equ	1137	;# 
  6239   000472                     PWM2PR          equ	1138	;# 
  6240   000472                     PWM2PRL         equ	1138	;# 
  6241   000473                     PWM2PRH         equ	1139	;# 
  6242   000474                     PWM2CPRE        equ	1140	;# 
  6243   000475                     PWM2PIPOS       equ	1141	;# 
  6244   000476                     PWM2GIR         equ	1142	;# 
  6245   000477                     PWM2GIE         equ	1143	;# 
  6246   000478                     PWM2CON         equ	1144	;# 
  6247   000479                     PWM2S1CFG       equ	1145	;# 
  6248   00047A                     PWM2S1P1        equ	1146	;# 
  6249   00047A                     PWM2S1P1L       equ	1146	;# 
  6250   00047B                     PWM2S1P1H       equ	1147	;# 
  6251   00047C                     PWM2S1P2        equ	1148	;# 
  6252   00047C                     PWM2S1P2L       equ	1148	;# 
  6253   00047D                     PWM2S1P2H       equ	1149	;# 
  6254   00047E                     PWM3ERS         equ	1150	;# 
  6255   00047F                     PWM3CLK         equ	1151	;# 
  6256   000480                     PWM3LDS         equ	1152	;# 
  6257   000481                     PWM3PR          equ	1153	;# 
  6258   000481                     PWM3PRL         equ	1153	;# 
  6259   000482                     PWM3PRH         equ	1154	;# 
  6260   000483                     PWM3CPRE        equ	1155	;# 
  6261   000484                     PWM3PIPOS       equ	1156	;# 
  6262   000485                     PWM3GIR         equ	1157	;# 
  6263   000486                     PWM3GIE         equ	1158	;# 
  6264   000487                     PWM3CON         equ	1159	;# 
  6265   000488                     PWM3S1CFG       equ	1160	;# 
  6266   000489                     PWM3S1P1        equ	1161	;# 
  6267   000489                     PWM3S1P1L       equ	1161	;# 
  6268   00048A                     PWM3S1P1H       equ	1162	;# 
  6269   00048B                     PWM3S1P2        equ	1163	;# 
  6270   00048B                     PWM3S1P2L       equ	1163	;# 
  6271   00048C                     PWM3S1P2H       equ	1164	;# 
  6272   00049C                     PWMLOAD         equ	1180	;# 
  6273   00049D                     PWMEN           equ	1181	;# 
  6274   0004A8                     PIE0            equ	1192	;# 
  6275   0004A9                     PIE1            equ	1193	;# 
  6276   0004AA                     PIE2            equ	1194	;# 
  6277   0004AB                     PIE3            equ	1195	;# 
  6278   0004AC                     PIE4            equ	1196	;# 
  6279   0004AD                     PIE5            equ	1197	;# 
  6280   0004AE                     PIE6            equ	1198	;# 
  6281   0004AF                     PIE7            equ	1199	;# 
  6282   0004B0                     PIE8            equ	1200	;# 
  6283   0004B1                     PIE9            equ	1201	;# 
  6284   0004B2                     PIE10           equ	1202	;# 
  6285   0004B3                     PIR0            equ	1203	;# 
  6286   0004B4                     PIR1            equ	1204	;# 
  6287   0004B5                     PIR2            equ	1205	;# 
  6288   0004B6                     PIR3            equ	1206	;# 
  6289   0004B7                     PIR4            equ	1207	;# 
  6290   0004B8                     PIR5            equ	1208	;# 
  6291   0004B9                     PIR6            equ	1209	;# 
  6292   0004BA                     PIR7            equ	1210	;# 
  6293   0004BB                     PIR8            equ	1211	;# 
  6294   0004BC                     PIR9            equ	1212	;# 
  6295   0004BD                     PIR10           equ	1213	;# 
  6296   0004BE                     LATA            equ	1214	;# 
  6297   0004BF                     LATB            equ	1215	;# 
  6298   0004C0                     LATC            equ	1216	;# 
  6299   0004C6                     TRISA           equ	1222	;# 
  6300   0004C7                     TRISB           equ	1223	;# 
  6301   0004C8                     TRISC           equ	1224	;# 
  6302   0004CE                     PORTA           equ	1230	;# 
  6303   0004CF                     PORTB           equ	1231	;# 
  6304   0004D0                     PORTC           equ	1232	;# 
  6305   0004D6                     INTCON0         equ	1238	;# 
  6306   0004D7                     INTCON1         equ	1239	;# 
  6307   0004D8                     STATUS          equ	1240	;# 
  6308   0004D9                     FSR2            equ	1241	;# 
  6309   0004D9                     FSR2L           equ	1241	;# 
  6310   0004DA                     FSR2H           equ	1242	;# 
  6311   0004DB                     PLUSW2          equ	1243	;# 
  6312   0004DC                     PREINC2         equ	1244	;# 
  6313   0004DD                     POSTDEC2        equ	1245	;# 
  6314   0004DE                     POSTINC2        equ	1246	;# 
  6315   0004DF                     INDF2           equ	1247	;# 
  6316   0004E0                     BSR             equ	1248	;# 
  6317   0004E1                     FSR1            equ	1249	;# 
  6318   0004E1                     FSR1L           equ	1249	;# 
  6319   0004E2                     FSR1H           equ	1250	;# 
  6320   0004E3                     PLUSW1          equ	1251	;# 
  6321   0004E4                     PREINC1         equ	1252	;# 
  6322   0004E5                     POSTDEC1        equ	1253	;# 
  6323   0004E6                     POSTINC1        equ	1254	;# 
  6324   0004E7                     INDF1           equ	1255	;# 
  6325   0004E8                     WREG            equ	1256	;# 
  6326   0004E9                     FSR0            equ	1257	;# 
  6327   0004E9                     FSR0L           equ	1257	;# 
  6328   0004EA                     FSR0H           equ	1258	;# 
  6329   0004EB                     PLUSW0          equ	1259	;# 
  6330   0004EC                     PREINC0         equ	1260	;# 
  6331   0004ED                     POSTDEC0        equ	1261	;# 
  6332   0004EE                     POSTINC0        equ	1262	;# 
  6333   0004EF                     INDF0           equ	1263	;# 
  6334   0004F0                     PCON0           equ	1264	;# 
  6335   0004F1                     PCON1           equ	1265	;# 
  6336   0004F2                     CPUDOZE         equ	1266	;# 
  6337   0004F3                     PROD            equ	1267	;# 
  6338   0004F3                     PRODL           equ	1267	;# 
  6339   0004F4                     PRODH           equ	1268	;# 
  6340   0004F5                     TABLAT          equ	1269	;# 
  6341   0004F6                     TBLPTR          equ	1270	;# 
  6342   0004F6                     TBLPTRL         equ	1270	;# 
  6343   0004F7                     TBLPTRH         equ	1271	;# 
  6344   0004F8                     TBLPTRU         equ	1272	;# 
  6345   0004F9                     PCLAT           equ	1273	;# 
  6346   0004F9                     PCL             equ	1273	;# 
  6347   0004FA                     PCLATH          equ	1274	;# 
  6348   0004FB                     PCLATU          equ	1275	;# 
  6349   0004FC                     STKPTR          equ	1276	;# 
  6350   0004FD                     TOS             equ	1277	;# 
  6351   0004FD                     TOSL            equ	1277	;# 
  6352   0004FE                     TOSH            equ	1278	;# 
  6353   0004FF                     TOSU            equ	1279	;# 
  6354   000039                     CLKRCON         equ	57	;# 
  6355   00003A                     CLKRCLK         equ	58	;# 
  6356   000040                     NVMCON0         equ	64	;# 
  6357   000041                     NVMCON1         equ	65	;# 
  6358   000042                     NVMLOCK         equ	66	;# 
  6359   000043                     NVMADR          equ	67	;# 
  6360   000043                     NVMADRL         equ	67	;# 
  6361   000044                     NVMADRH         equ	68	;# 
  6362   000045                     NVMADRU         equ	69	;# 
  6363   000046                     NVMDAT          equ	70	;# 
  6364   000046                     NVMDATL         equ	70	;# 
  6365   000047                     NVMDATH         equ	71	;# 
  6366   000048                     VREGCON         equ	72	;# 
  6367   000049                     BORCON          equ	73	;# 
  6368   00004A                     HLVDCON0        equ	74	;# 
  6369   00004B                     HLVDCON1        equ	75	;# 
  6370   00004C                     ZCDCON          equ	76	;# 
  6371   000063                     PMD0            equ	99	;# 
  6372   000064                     PMD1            equ	100	;# 
  6373   000065                     PMD2            equ	101	;# 
  6374   000066                     PMD3            equ	102	;# 
  6375   000067                     PMD4            equ	103	;# 
  6376   000068                     PMD5            equ	104	;# 
  6377   00006A                     MD1CON0         equ	106	;# 
  6378   00006B                     MD1CON1         equ	107	;# 
  6379   00006C                     MD1SRC          equ	108	;# 
  6380   00006D                     MD1CARL         equ	109	;# 
  6381   00006E                     MD1CARH         equ	110	;# 
  6382   00006F                     CMOUT           equ	111	;# 
  6383   000070                     CM1CON0         equ	112	;# 
  6384   000071                     CM1CON1         equ	113	;# 
  6385   000072                     CM1NCH          equ	114	;# 
  6386   000073                     CM1PCH          equ	115	;# 
  6387   000074                     CM2CON0         equ	116	;# 
  6388   000075                     CM2CON1         equ	117	;# 
  6389   000076                     CM2NCH          equ	118	;# 
  6390   000077                     CM2PCH          equ	119	;# 
  6391   000078                     WDTCON0         equ	120	;# 
  6392   000079                     WDTCON1         equ	121	;# 
  6393   00007A                     WDTPS           equ	122	;# 
  6394   00007A                     WDTPSL          equ	122	;# 
  6395   00007B                     WDTPSH          equ	123	;# 
  6396   00007C                     WDTTMR          equ	124	;# 
  6397   00007D                     DAC1DAT         equ	125	;# 
  6398   00007D                     DAC1DATL        equ	125	;# 
  6399   00007F                     DAC1CON         equ	127	;# 
  6400   000080                     SPI1RXB         equ	128	;# 
  6401   000081                     SPI1TXB         equ	129	;# 
  6402   000082                     SPI1TCNT        equ	130	;# 
  6403   000082                     SPI1TCNTL       equ	130	;# 
  6404   000083                     SPI1TCNTH       equ	131	;# 
  6405   000084                     SPI1CON0        equ	132	;# 
  6406   000085                     SPI1CON1        equ	133	;# 
  6407   000086                     SPI1CON2        equ	134	;# 
  6408   000087                     SPI1STATUS      equ	135	;# 
  6409   000088                     SPI1TWIDTH      equ	136	;# 
  6410   000089                     SPI1BAUD        equ	137	;# 
  6411   00008A                     SPI1INTF        equ	138	;# 
  6412   00008B                     SPI1INTE        equ	139	;# 
  6413   00008C                     SPI1CLK         equ	140	;# 
  6414   00008D                     SPI2RXB         equ	141	;# 
  6415   00008E                     SPI2TXB         equ	142	;# 
  6416   00008F                     SPI2TCNT        equ	143	;# 
  6417   00008F                     SPI2TCNTL       equ	143	;# 
  6418   000090                     SPI2TCNTH       equ	144	;# 
  6419   000091                     SPI2CON0        equ	145	;# 
  6420   000092                     SPI2CON1        equ	146	;# 
  6421   000093                     SPI2CON2        equ	147	;# 
  6422   000094                     SPI2STATUS      equ	148	;# 
  6423   000095                     SPI2TWIDTH      equ	149	;# 
  6424   000096                     SPI2BAUD        equ	150	;# 
  6425   000097                     SPI2INTF        equ	151	;# 
  6426   000098                     SPI2INTE        equ	152	;# 
  6427   000099                     SPI2CLK         equ	153	;# 
  6428   0000A0                     DAC2DAT         equ	160	;# 
  6429   0000A0                     DAC2DATL        equ	160	;# 
  6430   0000A2                     DAC2CON         equ	162	;# 
  6431   0000A3                     OPA1CON0        equ	163	;# 
  6432   0000A4                     OPA1CON1        equ	164	;# 
  6433   0000A5                     OPA1CON2        equ	165	;# 
  6434   0000A6                     OPA1CON3        equ	166	;# 
  6435   0000A7                     OPA1HWC         equ	167	;# 
  6436   0000A8                     OPA1OFFSET      equ	168	;# 
  6437   0000A9                     OPA1ORS         equ	169	;# 
  6438   0000AC                     ACTCON          equ	172	;# 
  6439   0000AD                     OSCCON1         equ	173	;# 
  6440   0000AE                     OSCCON2         equ	174	;# 
  6441   0000AF                     OSCCON3         equ	175	;# 
  6442   0000B0                     OSCTUNE         equ	176	;# 
  6443   0000B1                     OSCFRQ          equ	177	;# 
  6444   0000B1                     OSCFREQ         equ	177	;# 
  6445   0000B2                     OSCSTAT         equ	178	;# 
  6446   0000B2                     OSCSTAT1        equ	178	;# 
  6447   0000B3                     OSCEN           equ	179	;# 
  6448   0000B4                     PRLOCK          equ	180	;# 
  6449   0000B5                     SCANPR          equ	181	;# 
  6450   0000B6                     DMA1PR          equ	182	;# 
  6451   0000B7                     DMA2PR          equ	183	;# 
  6452   0000B8                     DMA3PR          equ	184	;# 
  6453   0000B9                     DMA4PR          equ	185	;# 
  6454   0000BE                     MAINPR          equ	190	;# 
  6455   0000BF                     ISRPR           equ	191	;# 
  6456   0000D4                     CLCDATA         equ	212	;# 
  6457   0000D5                     CLCSELECT       equ	213	;# 
  6458   0000D6                     CLCnCON         equ	214	;# 
  6459   0000D7                     CLCnPOL         equ	215	;# 
  6460   0000D8                     CLCnSEL0        equ	216	;# 
  6461   0000D9                     CLCnSEL1        equ	217	;# 
  6462   0000DA                     CLCnSEL2        equ	218	;# 
  6463   0000DB                     CLCnSEL3        equ	219	;# 
  6464   0000DC                     CLCnGLS0        equ	220	;# 
  6465   0000DD                     CLCnGLS1        equ	221	;# 
  6466   0000DE                     CLCnGLS2        equ	222	;# 
  6467   0000DF                     CLCnGLS3        equ	223	;# 
  6468   0000E8                     DMASELECT       equ	232	;# 
  6469   0000E9                     DMAnBUF         equ	233	;# 
  6470   0000EA                     DMAnDCNT        equ	234	;# 
  6471   0000EA                     DMAnDCNTL       equ	234	;# 
  6472   0000EB                     DMAnDCNTH       equ	235	;# 
  6473   0000EC                     DMAnDPTR        equ	236	;# 
  6474   0000EC                     DMAnDPTRL       equ	236	;# 
  6475   0000ED                     DMAnDPTRH       equ	237	;# 
  6476   0000EE                     DMAnDSZ         equ	238	;# 
  6477   0000EE                     DMAnDSZL        equ	238	;# 
  6478   0000EF                     DMAnDSZH        equ	239	;# 
  6479   0000F0                     DMAnDSA         equ	240	;# 
  6480   0000F0                     DMAnDSAL        equ	240	;# 
  6481   0000F1                     DMAnDSAH        equ	241	;# 
  6482   0000F2                     DMAnSCNT        equ	242	;# 
  6483   0000F2                     DMAnSCNTL       equ	242	;# 
  6484   0000F3                     DMAnSCNTH       equ	243	;# 
  6485   0000F4                     DMAnSPTR        equ	244	;# 
  6486   0000F4                     DMAnSPTRL       equ	244	;# 
  6487   0000F5                     DMAnSPTRH       equ	245	;# 
  6488   0000F6                     DMAnSPTRU       equ	246	;# 
  6489   0000F7                     DMAnSSZ         equ	247	;# 
  6490   0000F7                     DMAnSSZL        equ	247	;# 
  6491   0000F8                     DMAnSSZH        equ	248	;# 
  6492   0000F9                     DMAnSSA         equ	249	;# 
  6493   0000F9                     DMAnSSAL        equ	249	;# 
  6494   0000FA                     DMAnSSAH        equ	250	;# 
  6495   0000FB                     DMAnSSAU        equ	251	;# 
  6496   0000FC                     DMAnCON0        equ	252	;# 
  6497   0000FD                     DMAnCON1        equ	253	;# 
  6498   0000FE                     DMAnAIRQ        equ	254	;# 
  6499   0000FF                     DMAnSIRQ        equ	255	;# 
  6500   000200                     PPSLOCK         equ	512	;# 
  6501   000201                     RA0PPS          equ	513	;# 
  6502   000202                     RA1PPS          equ	514	;# 
  6503   000203                     RA2PPS          equ	515	;# 
  6504   000205                     RA4PPS          equ	517	;# 
  6505   000206                     RA5PPS          equ	518	;# 
  6506   00020D                     RB4PPS          equ	525	;# 
  6507   00020E                     RB5PPS          equ	526	;# 
  6508   00020F                     RB6PPS          equ	527	;# 
  6509   000210                     RB7PPS          equ	528	;# 
  6510   000211                     RC0PPS          equ	529	;# 
  6511   000212                     RC1PPS          equ	530	;# 
  6512   000213                     RC2PPS          equ	531	;# 
  6513   000214                     RC3PPS          equ	532	;# 
  6514   000215                     RC4PPS          equ	533	;# 
  6515   000216                     RC5PPS          equ	534	;# 
  6516   000217                     RC6PPS          equ	535	;# 
  6517   000218                     RC7PPS          equ	536	;# 
  6518   00023E                     INT0PPS         equ	574	;# 
  6519   00023F                     INT1PPS         equ	575	;# 
  6520   000240                     INT2PPS         equ	576	;# 
  6521   000241                     T0CKIPPS        equ	577	;# 
  6522   000242                     T1CKIPPS        equ	578	;# 
  6523   000243                     T1GPPS          equ	579	;# 
  6524   000244                     T3CKIPPS        equ	580	;# 
  6525   000245                     T3GPPS          equ	581	;# 
  6526   000248                     T2INPPS         equ	584	;# 
  6527   000249                     T4INPPS         equ	585	;# 
  6528   00024F                     CCP1PPS         equ	591	;# 
  6529   000251                     PWM1ERSPPS      equ	593	;# 
  6530   000252                     PWM2ERSPPS      equ	594	;# 
  6531   000253                     PWM3ERSPPS      equ	595	;# 
  6532   000257                     PWMIN0PPS       equ	599	;# 
  6533   000258                     PWMIN1PPS       equ	600	;# 
  6534   000259                     SMT1WINPPS      equ	601	;# 
  6535   00025A                     SMT1SIGPPS      equ	602	;# 
  6536   00025B                     CWG1PPS         equ	603	;# 
  6537   00025B                     CWG1INPPS       equ	603	;# 
  6538   00025E                     MD1CARLPPS      equ	606	;# 
  6539   00025E                     MDCARLPPS       equ	606	;# 
  6540   00025F                     MD1CARHPPS      equ	607	;# 
  6541   00025F                     MDCARHPPS       equ	607	;# 
  6542   000260                     MD1SRCPPS       equ	608	;# 
  6543   000260                     MDSRCPPS        equ	608	;# 
  6544   000261                     CLCIN0PPS       equ	609	;# 
  6545   000262                     CLCIN1PPS       equ	610	;# 
  6546   000263                     CLCIN2PPS       equ	611	;# 
  6547   000264                     CLCIN3PPS       equ	612	;# 
  6548   000269                     ADACTPPS        equ	617	;# 
  6549   00026A                     SPI1SCKPPS      equ	618	;# 
  6550   00026B                     SPI1SDIPPS      equ	619	;# 
  6551   00026C                     SPI1SSPPS       equ	620	;# 
  6552   00026D                     SPI2SCKPPS      equ	621	;# 
  6553   00026E                     SPI2SDIPPS      equ	622	;# 
  6554   00026F                     SPI2SSPPS       equ	623	;# 
  6555   000270                     I2C1SDAPPS      equ	624	;# 
  6556   000271                     I2C1SCLPPS      equ	625	;# 
  6557   000272                     U1RXPPS         equ	626	;# 
  6558   000273                     U1CTSPPS        equ	627	;# 
  6559   000274                     U2RXPPS         equ	628	;# 
  6560   000275                     U2CTSPPS        equ	629	;# 
  6561   000276                     U3RXPPS         equ	630	;# 
  6562   000277                     U3CTSPPS        equ	631	;# 
  6563   000286                     RB6I2C          equ	646	;# 
  6564   000287                     RB4I2C          equ	647	;# 
  6565   00028A                     I2C1RXB         equ	650	;# 
  6566   00028B                     I2C1TXB         equ	651	;# 
  6567   00028C                     I2C1CNTL        equ	652	;# 
  6568   00028D                     I2C1CNTH        equ	653	;# 
  6569   00028E                     I2C1ADB0        equ	654	;# 
  6570   00028F                     I2C1ADB1        equ	655	;# 
  6571   000290                     I2C1ADR0        equ	656	;# 
  6572   000291                     I2C1ADR1        equ	657	;# 
  6573   000292                     I2C1ADR2        equ	658	;# 
  6574   000293                     I2C1ADR3        equ	659	;# 
  6575   000294                     I2C1CON0        equ	660	;# 
  6576   000295                     I2C1CON1        equ	661	;# 
  6577   000296                     I2C1CON2        equ	662	;# 
  6578   000297                     I2C1ERR         equ	663	;# 
  6579   000298                     I2C1STAT0       equ	664	;# 
  6580   000299                     I2C1STAT1       equ	665	;# 
  6581   00029A                     I2C1PIR         equ	666	;# 
  6582   00029B                     I2C1PIE         equ	667	;# 
  6583   00029C                     I2C1BTO         equ	668	;# 
  6584   00029D                     I2C1BAUD        equ	669	;# 
  6585   00029E                     I2C1CLK         equ	670	;# 
  6586   00029F                     I2C1BTOC        equ	671	;# 
  6587   0002A1                     U1RXB           equ	673	;# 
  6588   0002A1                     U1RXBL          equ	673	;# 
  6589   0002A2                     U1RXCHK         equ	674	;# 
  6590   0002A3                     U1TXB           equ	675	;# 
  6591   0002A3                     U1TXBL          equ	675	;# 
  6592   0002A4                     U1TXCHK         equ	676	;# 
  6593   0002A5                     U1P1            equ	677	;# 
  6594   0002A5                     U1P1L           equ	677	;# 
  6595   0002A6                     U1P1H           equ	678	;# 
  6596   0002A7                     U1P2            equ	679	;# 
  6597   0002A7                     U1P2L           equ	679	;# 
  6598   0002A8                     U1P2H           equ	680	;# 
  6599   0002A9                     U1P3            equ	681	;# 
  6600   0002A9                     U1P3L           equ	681	;# 
  6601   0002AA                     U1P3H           equ	682	;# 
  6602   0002AB                     U1CON0          equ	683	;# 
  6603   0002AC                     U1CON1          equ	684	;# 
  6604   0002AD                     U1CON2          equ	685	;# 
  6605   0002AE                     U1BRG           equ	686	;# 
  6606   0002AE                     U1BRGL          equ	686	;# 
  6607   0002AF                     U1BRGH          equ	687	;# 
  6608   0002B0                     U1FIFO          equ	688	;# 
  6609   0002B1                     U1UIR           equ	689	;# 
  6610   0002B2                     U1ERRIR         equ	690	;# 
  6611   0002B3                     U1ERRIE         equ	691	;# 
  6612   0002B4                     U2RXB           equ	692	;# 
  6613   0002B4                     U2RXBL          equ	692	;# 
  6614   0002B6                     U2TXB           equ	694	;# 
  6615   0002B6                     U2TXBL          equ	694	;# 
  6616   0002B8                     U2P1            equ	696	;# 
  6617   0002B8                     U2P1L           equ	696	;# 
  6618   0002BA                     U2P2            equ	698	;# 
  6619   0002BA                     U2P2L           equ	698	;# 
  6620   0002BC                     U2P3            equ	700	;# 
  6621   0002BC                     U2P3L           equ	700	;# 
  6622   0002BE                     U2CON0          equ	702	;# 
  6623   0002BF                     U2CON1          equ	703	;# 
  6624   0002C0                     U2CON2          equ	704	;# 
  6625   0002C1                     U2BRG           equ	705	;# 
  6626   0002C1                     U2BRGL          equ	705	;# 
  6627   0002C2                     U2BRGH          equ	706	;# 
  6628   0002C3                     U2FIFO          equ	707	;# 
  6629   0002C4                     U2UIR           equ	708	;# 
  6630   0002C5                     U2ERRIR         equ	709	;# 
  6631   0002C6                     U2ERRIE         equ	710	;# 
  6632   0002C7                     U3RXB           equ	711	;# 
  6633   0002C7                     U3RXBL          equ	711	;# 
  6634   0002C9                     U3TXB           equ	713	;# 
  6635   0002C9                     U3TXBL          equ	713	;# 
  6636   0002CB                     U3P1            equ	715	;# 
  6637   0002CB                     U3P1L           equ	715	;# 
  6638   0002CD                     U3P2            equ	717	;# 
  6639   0002CD                     U3P2L           equ	717	;# 
  6640   0002CF                     U3P3            equ	719	;# 
  6641   0002CF                     U3P3L           equ	719	;# 
  6642   0002D1                     U3CON0          equ	721	;# 
  6643   0002D2                     U3CON1          equ	722	;# 
  6644   0002D3                     U3CON2          equ	723	;# 
  6645   0002D4                     U3BRG           equ	724	;# 
  6646   0002D4                     U3BRGL          equ	724	;# 
  6647   0002D5                     U3BRGH          equ	725	;# 
  6648   0002D6                     U3FIFO          equ	726	;# 
  6649   0002D7                     U3UIR           equ	727	;# 
  6650   0002D8                     U3ERRIR         equ	728	;# 
  6651   0002D9                     U3ERRIE         equ	729	;# 
  6652   000300                     SMT1TMR         equ	768	;# 
  6653   000300                     SMT1TMRL        equ	768	;# 
  6654   000301                     SMT1TMRH        equ	769	;# 
  6655   000302                     SMT1TMRU        equ	770	;# 
  6656   000303                     SMT1CPR         equ	771	;# 
  6657   000303                     SMT1CPRL        equ	771	;# 
  6658   000304                     SMT1CPRH        equ	772	;# 
  6659   000305                     SMT1CPRU        equ	773	;# 
  6660   000306                     SMT1CPW         equ	774	;# 
  6661   000306                     SMT1CPWL        equ	774	;# 
  6662   000307                     SMT1CPWH        equ	775	;# 
  6663   000308                     SMT1CPWU        equ	776	;# 
  6664   000309                     SMT1PR          equ	777	;# 
  6665   000309                     SMT1PRL         equ	777	;# 
  6666   00030A                     SMT1PRH         equ	778	;# 
  6667   00030B                     SMT1PRU         equ	779	;# 
  6668   00030C                     SMT1CON0        equ	780	;# 
  6669   00030D                     SMT1CON1        equ	781	;# 
  6670   00030E                     SMT1STAT        equ	782	;# 
  6671   00030F                     SMT1CLK         equ	783	;# 
  6672   000310                     SMT1SIG         equ	784	;# 
  6673   000311                     SMT1WIN         equ	785	;# 
  6674   000312                     TMR1            equ	786	;# 
  6675   000312                     TMR1L           equ	786	;# 
  6676   000313                     TMR1H           equ	787	;# 
  6677   000314                     T1CON           equ	788	;# 
  6678   000314                     TMR1CON         equ	788	;# 
  6679   000315                     T1GCON          equ	789	;# 
  6680   000315                     TMR1GCON        equ	789	;# 
  6681   000316                     T1GATE          equ	790	;# 
  6682   000316                     TMR1GATE        equ	790	;# 
  6683   000317                     T1CLK           equ	791	;# 
  6684   000317                     TMR1CLK         equ	791	;# 
  6685   000317                     PR1             equ	791	;# 
  6686   000318                     TMR0L           equ	792	;# 
  6687   000318                     TMR0            equ	792	;# 
  6688   000319                     TMR0H           equ	793	;# 
  6689   000319                     PR0             equ	793	;# 
  6690   00031A                     T0CON0          equ	794	;# 
  6691   00031B                     T0CON1          equ	795	;# 
  6692   00031C                     T2TMR           equ	796	;# 
  6693   00031C                     TMR2            equ	796	;# 
  6694   00031D                     T2PR            equ	797	;# 
  6695   00031D                     PR2             equ	797	;# 
  6696   00031E                     T2CON           equ	798	;# 
  6697   00031F                     T2HLT           equ	799	;# 
  6698   000320                     T2CLKCON        equ	800	;# 
  6699   000320                     T2CLK           equ	800	;# 
  6700   000321                     T2RST           equ	801	;# 
  6701   000323                     TMR3            equ	803	;# 
  6702   000323                     TMR3L           equ	803	;# 
  6703   000324                     TMR3H           equ	804	;# 
  6704   000325                     T3CON           equ	805	;# 
  6705   000325                     TMR3CON         equ	805	;# 
  6706   000326                     T3GCON          equ	806	;# 
  6707   000326                     TMR3GCON        equ	806	;# 
  6708   000327                     T3GATE          equ	807	;# 
  6709   000327                     TMR3GATE        equ	807	;# 
  6710   000328                     T3CLK           equ	808	;# 
  6711   000328                     TMR3CLK         equ	808	;# 
  6712   000328                     PR3             equ	808	;# 
  6713   000329                     T4TMR           equ	809	;# 
  6714   000329                     TMR4            equ	809	;# 
  6715   00032A                     T4PR            equ	810	;# 
  6716   00032A                     PR4             equ	810	;# 
  6717   00032B                     T4CON           equ	811	;# 
  6718   00032C                     T4HLT           equ	812	;# 
  6719   00032D                     T4CLKCON        equ	813	;# 
  6720   00032D                     T4CLK           equ	813	;# 
  6721   00032E                     T4RST           equ	814	;# 
  6722   000340                     CCPR1           equ	832	;# 
  6723   000340                     CCPR1L          equ	832	;# 
  6724   000341                     CCPR1H          equ	833	;# 
  6725   000342                     CCP1CON         equ	834	;# 
  6726   000343                     CCP1CAP         equ	835	;# 
  6727   00034C                     CCPTMRS0        equ	844	;# 
  6728   00034E                     CRCDATA         equ	846	;# 
  6729   00034E                     CRCDATAL        equ	846	;# 
  6730   00034F                     CRCDATAH        equ	847	;# 
  6731   000350                     CRCDATAU        equ	848	;# 
  6732   000351                     CRCDATAT        equ	849	;# 
  6733   000352                     CRCOUT          equ	850	;# 
  6734   000352                     CRCSHFT         equ	850	;# 
  6735   000352                     CRCXOR          equ	850	;# 
  6736   000352                     CRCOUTL         equ	850	;# 
  6737   000352                     CRCSHFTL        equ	850	;# 
  6738   000352                     CRCSHIFTL       equ	850	;# 
  6739   000352                     CRCXORL         equ	850	;# 
  6740   000353                     CRCOUTH         equ	851	;# 
  6741   000353                     CRCSHFTH        equ	851	;# 
  6742   000353                     CRCSHIFTH       equ	851	;# 
  6743   000353                     CRCXORH         equ	851	;# 
  6744   000354                     CRCOUTU         equ	852	;# 
  6745   000354                     CRCSHFTU        equ	852	;# 
  6746   000354                     CRCSHIFTU       equ	852	;# 
  6747   000354                     CRCXORU         equ	852	;# 
  6748   000355                     CRCOUTT         equ	853	;# 
  6749   000355                     CRCSHFTT        equ	853	;# 
  6750   000355                     CRCSHIFTT       equ	853	;# 
  6751   000355                     CRCXORT         equ	853	;# 
  6752   000356                     CRCCON0         equ	854	;# 
  6753   000357                     CRCCON1         equ	855	;# 
  6754   000358                     CRCCON2         equ	856	;# 
  6755   00035A                     SCANLADR        equ	858	;# 
  6756   00035A                     SCANLADRL       equ	858	;# 
  6757   00035B                     SCANLADRH       equ	859	;# 
  6758   00035C                     SCANLADRU       equ	860	;# 
  6759   00035D                     SCANHADR        equ	861	;# 
  6760   00035D                     SCANHADRL       equ	861	;# 
  6761   00035E                     SCANHADRH       equ	862	;# 
  6762   00035F                     SCANHADRU       equ	863	;# 
  6763   000360                     SCANCON0        equ	864	;# 
  6764   000361                     SCANTRIG        equ	865	;# 
  6765   000367                     IPR0            equ	871	;# 
  6766   000368                     IPR1            equ	872	;# 
  6767   000369                     IPR2            equ	873	;# 
  6768   00036A                     IPR3            equ	874	;# 
  6769   00036B                     IPR4            equ	875	;# 
  6770   00036C                     IPR5            equ	876	;# 
  6771   00036D                     IPR6            equ	877	;# 
  6772   00036E                     IPR7            equ	878	;# 
  6773   00036F                     IPR8            equ	879	;# 
  6774   000370                     IPR9            equ	880	;# 
  6775   000371                     IPR10           equ	881	;# 
  6776   000373                     STATUS_CSHAD    equ	883	;# 
  6777   000374                     WREG_CSHAD      equ	884	;# 
  6778   000375                     BSR_CSHAD       equ	885	;# 
  6779   000376                     SHADCON         equ	886	;# 
  6780   000377                     STATUS_SHAD     equ	887	;# 
  6781   000378                     WREG_SHAD       equ	888	;# 
  6782   000379                     BSR_SHAD        equ	889	;# 
  6783   00037A                     PCLATH_SHAD     equ	890	;# 
  6784   00037B                     PCLATU_SHAD     equ	891	;# 
  6785   00037C                     FSR0SH          equ	892	;# 
  6786   00037C                     FSR0L_SHAD      equ	892	;# 
  6787   00037D                     FSR0H_SHAD      equ	893	;# 
  6788   00037E                     FSR1SH          equ	894	;# 
  6789   00037E                     FSR1L_SHAD      equ	894	;# 
  6790   00037F                     FSR1H_SHAD      equ	895	;# 
  6791   000380                     FSR2SH          equ	896	;# 
  6792   000380                     FSR2L_SHAD      equ	896	;# 
  6793   000381                     FSR2H_SHAD      equ	897	;# 
  6794   000382                     PRODSH          equ	898	;# 
  6795   000382                     PRODL_SHAD      equ	898	;# 
  6796   000383                     PRODH_SHAD      equ	899	;# 
  6797   0003BC                     CWG1CLK         equ	956	;# 
  6798   0003BC                     CWG1CLKCON      equ	956	;# 
  6799   0003BD                     CWG1ISM         equ	957	;# 
  6800   0003BD                     CWG1DAT         equ	957	;# 
  6801   0003BE                     CWG1DBR         equ	958	;# 
  6802   0003BF                     CWG1DBF         equ	959	;# 
  6803   0003C0                     CWG1CON0        equ	960	;# 
  6804   0003C1                     CWG1CON1        equ	961	;# 
  6805   0003C2                     CWG1AS0         equ	962	;# 
  6806   0003C3                     CWG1AS1         equ	963	;# 
  6807   0003C4                     CWG1STR         equ	964	;# 
  6808   0003D7                     FVRCON          equ	983	;# 
  6809   0003D8                     ADCPCON         equ	984	;# 
  6810   0003D8                     ADCP            equ	984	;# 
  6811   0003D9                     ADLTH           equ	985	;# 
  6812   0003D9                     ADLTHL          equ	985	;# 
  6813   0003DA                     ADLTHH          equ	986	;# 
  6814   0003DB                     ADUTH           equ	987	;# 
  6815   0003DB                     ADUTHL          equ	987	;# 
  6816   0003DC                     ADUTHH          equ	988	;# 
  6817   0003DD                     ADERR           equ	989	;# 
  6818   0003DD                     ADERRL          equ	989	;# 
  6819   0003DE                     ADERRH          equ	990	;# 
  6820   0003DF                     ADSTPT          equ	991	;# 
  6821   0003DF                     ADSTPTL         equ	991	;# 
  6822   0003E0                     ADSTPTH         equ	992	;# 
  6823   0003E1                     ADFLTR          equ	993	;# 
  6824   0003E1                     ADFLTRL         equ	993	;# 
  6825   0003E2                     ADFLTRH         equ	994	;# 
  6826   0003E3                     ADACC           equ	995	;# 
  6827   0003E3                     ADACCL          equ	995	;# 
  6828   0003E4                     ADACCH          equ	996	;# 
  6829   0003E5                     ADACCU          equ	997	;# 
  6830   0003E6                     ADCNT           equ	998	;# 
  6831   0003E7                     ADRPT           equ	999	;# 
  6832   0003E8                     ADPREV          equ	1000	;# 
  6833   0003E8                     ADPREVL         equ	1000	;# 
  6834   0003E9                     ADPREVH         equ	1001	;# 
  6835   0003EA                     ADRES           equ	1002	;# 
  6836   0003EA                     ADRESL          equ	1002	;# 
  6837   0003EB                     ADRESH          equ	1003	;# 
  6838   0003EC                     ADPCH           equ	1004	;# 
  6839   0003EE                     ADACQ           equ	1006	;# 
  6840   0003EE                     ADACQL          equ	1006	;# 
  6841   0003EF                     ADACQH          equ	1007	;# 
  6842   0003F0                     ADCAP           equ	1008	;# 
  6843   0003F1                     ADPRE           equ	1009	;# 
  6844   0003F1                     ADPREL          equ	1009	;# 
  6845   0003F2                     ADPREH          equ	1010	;# 
  6846   0003F3                     ADCON0          equ	1011	;# 
  6847   0003F4                     ADCON1          equ	1012	;# 
  6848   0003F5                     ADCON2          equ	1013	;# 
  6849   0003F6                     ADCON3          equ	1014	;# 
  6850   0003F7                     ADSTAT          equ	1015	;# 
  6851   0003F8                     ADREF           equ	1016	;# 
  6852   0003F9                     ADACT           equ	1017	;# 
  6853   0003FA                     ADCLK           equ	1018	;# 
  6854   000400                     ANSELA          equ	1024	;# 
  6855   000401                     WPUA            equ	1025	;# 
  6856   000402                     ODCONA          equ	1026	;# 
  6857   000403                     SLRCONA         equ	1027	;# 
  6858   000404                     INLVLA          equ	1028	;# 
  6859   000405                     IOCAP           equ	1029	;# 
  6860   000406                     IOCAN           equ	1030	;# 
  6861   000407                     IOCAF           equ	1031	;# 
  6862   000408                     ANSELB          equ	1032	;# 
  6863   000409                     WPUB            equ	1033	;# 
  6864   00040A                     ODCONB          equ	1034	;# 
  6865   00040B                     SLRCONB         equ	1035	;# 
  6866   00040C                     INLVLB          equ	1036	;# 
  6867   00040D                     IOCBP           equ	1037	;# 
  6868   00040E                     IOCBN           equ	1038	;# 
  6869   00040F                     IOCBF           equ	1039	;# 
  6870   000410                     ANSELC          equ	1040	;# 
  6871   000411                     WPUC            equ	1041	;# 
  6872   000412                     ODCONC          equ	1042	;# 
  6873   000413                     SLRCONC         equ	1043	;# 
  6874   000414                     INLVLC          equ	1044	;# 
  6875   000415                     IOCCP           equ	1045	;# 
  6876   000416                     IOCCN           equ	1046	;# 
  6877   000417                     IOCCF           equ	1047	;# 
  6878   000440                     NCO1ACC         equ	1088	;# 
  6879   000440                     NCO1ACCL        equ	1088	;# 
  6880   000441                     NCO1ACCH        equ	1089	;# 
  6881   000442                     NCO1ACCU        equ	1090	;# 
  6882   000443                     NCO1INC         equ	1091	;# 
  6883   000443                     NCO1INCL        equ	1091	;# 
  6884   000444                     NCO1INCH        equ	1092	;# 
  6885   000445                     NCO1INCU        equ	1093	;# 
  6886   000446                     NCO1CON         equ	1094	;# 
  6887   000447                     NCO1CLK         equ	1095	;# 
  6888   000458                     FSCMCON         equ	1112	;# 
  6889   000459                     IVTLOCK         equ	1113	;# 
  6890   00045A                     IVTAD           equ	1114	;# 
  6891   00045A                     IVTADL          equ	1114	;# 
  6892   00045B                     IVTADH          equ	1115	;# 
  6893   00045C                     IVTADU          equ	1116	;# 
  6894   00045D                     IVTBASE         equ	1117	;# 
  6895   00045D                     IVTBASEL        equ	1117	;# 
  6896   00045E                     IVTBASEH        equ	1118	;# 
  6897   00045F                     IVTBASEU        equ	1119	;# 
  6898   000460                     PWM1ERS         equ	1120	;# 
  6899   000461                     PWM1CLK         equ	1121	;# 
  6900   000462                     PWM1LDS         equ	1122	;# 
  6901   000463                     PWM1PR          equ	1123	;# 
  6902   000463                     PWM1PRL         equ	1123	;# 
  6903   000464                     PWM1PRH         equ	1124	;# 
  6904   000465                     PWM1CPRE        equ	1125	;# 
  6905   000466                     PWM1PIPOS       equ	1126	;# 
  6906   000467                     PWM1GIR         equ	1127	;# 
  6907   000468                     PWM1GIE         equ	1128	;# 
  6908   000469                     PWM1CON         equ	1129	;# 
  6909   00046A                     PWM1S1CFG       equ	1130	;# 
  6910   00046B                     PWM1S1P1        equ	1131	;# 
  6911   00046B                     PWM1S1P1L       equ	1131	;# 
  6912   00046C                     PWM1S1P1H       equ	1132	;# 
  6913   00046D                     PWM1S1P2        equ	1133	;# 
  6914   00046D                     PWM1S1P2L       equ	1133	;# 
  6915   00046E                     PWM1S1P2H       equ	1134	;# 
  6916   00046F                     PWM2ERS         equ	1135	;# 
  6917   000470                     PWM2CLK         equ	1136	;# 
  6918   000471                     PWM2LDS         equ	1137	;# 
  6919   000472                     PWM2PR          equ	1138	;# 
  6920   000472                     PWM2PRL         equ	1138	;# 
  6921   000473                     PWM2PRH         equ	1139	;# 
  6922   000474                     PWM2CPRE        equ	1140	;# 
  6923   000475                     PWM2PIPOS       equ	1141	;# 
  6924   000476                     PWM2GIR         equ	1142	;# 
  6925   000477                     PWM2GIE         equ	1143	;# 
  6926   000478                     PWM2CON         equ	1144	;# 
  6927   000479                     PWM2S1CFG       equ	1145	;# 
  6928   00047A                     PWM2S1P1        equ	1146	;# 
  6929   00047A                     PWM2S1P1L       equ	1146	;# 
  6930   00047B                     PWM2S1P1H       equ	1147	;# 
  6931   00047C                     PWM2S1P2        equ	1148	;# 
  6932   00047C                     PWM2S1P2L       equ	1148	;# 
  6933   00047D                     PWM2S1P2H       equ	1149	;# 
  6934   00047E                     PWM3ERS         equ	1150	;# 
  6935   00047F                     PWM3CLK         equ	1151	;# 
  6936   000480                     PWM3LDS         equ	1152	;# 
  6937   000481                     PWM3PR          equ	1153	;# 
  6938   000481                     PWM3PRL         equ	1153	;# 
  6939   000482                     PWM3PRH         equ	1154	;# 
  6940   000483                     PWM3CPRE        equ	1155	;# 
  6941   000484                     PWM3PIPOS       equ	1156	;# 
  6942   000485                     PWM3GIR         equ	1157	;# 
  6943   000486                     PWM3GIE         equ	1158	;# 
  6944   000487                     PWM3CON         equ	1159	;# 
  6945   000488                     PWM3S1CFG       equ	1160	;# 
  6946   000489                     PWM3S1P1        equ	1161	;# 
  6947   000489                     PWM3S1P1L       equ	1161	;# 
  6948   00048A                     PWM3S1P1H       equ	1162	;# 
  6949   00048B                     PWM3S1P2        equ	1163	;# 
  6950   00048B                     PWM3S1P2L       equ	1163	;# 
  6951   00048C                     PWM3S1P2H       equ	1164	;# 
  6952   00049C                     PWMLOAD         equ	1180	;# 
  6953   00049D                     PWMEN           equ	1181	;# 
  6954   0004A8                     PIE0            equ	1192	;# 
  6955   0004A9                     PIE1            equ	1193	;# 
  6956   0004AA                     PIE2            equ	1194	;# 
  6957   0004AB                     PIE3            equ	1195	;# 
  6958   0004AC                     PIE4            equ	1196	;# 
  6959   0004AD                     PIE5            equ	1197	;# 
  6960   0004AE                     PIE6            equ	1198	;# 
  6961   0004AF                     PIE7            equ	1199	;# 
  6962   0004B0                     PIE8            equ	1200	;# 
  6963   0004B1                     PIE9            equ	1201	;# 
  6964   0004B2                     PIE10           equ	1202	;# 
  6965   0004B3                     PIR0            equ	1203	;# 
  6966   0004B4                     PIR1            equ	1204	;# 
  6967   0004B5                     PIR2            equ	1205	;# 
  6968   0004B6                     PIR3            equ	1206	;# 
  6969   0004B7                     PIR4            equ	1207	;# 
  6970   0004B8                     PIR5            equ	1208	;# 
  6971   0004B9                     PIR6            equ	1209	;# 
  6972   0004BA                     PIR7            equ	1210	;# 
  6973   0004BB                     PIR8            equ	1211	;# 
  6974   0004BC                     PIR9            equ	1212	;# 
  6975   0004BD                     PIR10           equ	1213	;# 
  6976   0004BE                     LATA            equ	1214	;# 
  6977   0004BF                     LATB            equ	1215	;# 
  6978   0004C0                     LATC            equ	1216	;# 
  6979   0004C6                     TRISA           equ	1222	;# 
  6980   0004C7                     TRISB           equ	1223	;# 
  6981   0004C8                     TRISC           equ	1224	;# 
  6982   0004CE                     PORTA           equ	1230	;# 
  6983   0004CF                     PORTB           equ	1231	;# 
  6984   0004D0                     PORTC           equ	1232	;# 
  6985   0004D6                     INTCON0         equ	1238	;# 
  6986   0004D7                     INTCON1         equ	1239	;# 
  6987   0004D8                     STATUS          equ	1240	;# 
  6988   0004D9                     FSR2            equ	1241	;# 
  6989   0004D9                     FSR2L           equ	1241	;# 
  6990   0004DA                     FSR2H           equ	1242	;# 
  6991   0004DB                     PLUSW2          equ	1243	;# 
  6992   0004DC                     PREINC2         equ	1244	;# 
  6993   0004DD                     POSTDEC2        equ	1245	;# 
  6994   0004DE                     POSTINC2        equ	1246	;# 
  6995   0004DF                     INDF2           equ	1247	;# 
  6996   0004E0                     BSR             equ	1248	;# 
  6997   0004E1                     FSR1            equ	1249	;# 
  6998   0004E1                     FSR1L           equ	1249	;# 
  6999   0004E2                     FSR1H           equ	1250	;# 
  7000   0004E3                     PLUSW1          equ	1251	;# 
  7001   0004E4                     PREINC1         equ	1252	;# 
  7002   0004E5                     POSTDEC1        equ	1253	;# 
  7003   0004E6                     POSTINC1        equ	1254	;# 
  7004   0004E7                     INDF1           equ	1255	;# 
  7005   0004E8                     WREG            equ	1256	;# 
  7006   0004E9                     FSR0            equ	1257	;# 
  7007   0004E9                     FSR0L           equ	1257	;# 
  7008   0004EA                     FSR0H           equ	1258	;# 
  7009   0004EB                     PLUSW0          equ	1259	;# 
  7010   0004EC                     PREINC0         equ	1260	;# 
  7011   0004ED                     POSTDEC0        equ	1261	;# 
  7012   0004EE                     POSTINC0        equ	1262	;# 
  7013   0004EF                     INDF0           equ	1263	;# 
  7014   0004F0                     PCON0           equ	1264	;# 
  7015   0004F1                     PCON1           equ	1265	;# 
  7016   0004F2                     CPUDOZE         equ	1266	;# 
  7017   0004F3                     PROD            equ	1267	;# 
  7018   0004F3                     PRODL           equ	1267	;# 
  7019   0004F4                     PRODH           equ	1268	;# 
  7020   0004F5                     TABLAT          equ	1269	;# 
  7021   0004F6                     TBLPTR          equ	1270	;# 
  7022   0004F6                     TBLPTRL         equ	1270	;# 
  7023   0004F7                     TBLPTRH         equ	1271	;# 
  7024   0004F8                     TBLPTRU         equ	1272	;# 
  7025   0004F9                     PCLAT           equ	1273	;# 
  7026   0004F9                     PCL             equ	1273	;# 
  7027   0004FA                     PCLATH          equ	1274	;# 
  7028   0004FB                     PCLATU          equ	1275	;# 
  7029   0004FC                     STKPTR          equ	1276	;# 
  7030   0004FD                     TOS             equ	1277	;# 
  7031   0004FD                     TOSL            equ	1277	;# 
  7032   0004FE                     TOSH            equ	1278	;# 
  7033   0004FF                     TOSU            equ	1279	;# 
  7034   000039                     CLKRCON         equ	57	;# 
  7035   00003A                     CLKRCLK         equ	58	;# 
  7036   000040                     NVMCON0         equ	64	;# 
  7037   000041                     NVMCON1         equ	65	;# 
  7038   000042                     NVMLOCK         equ	66	;# 
  7039   000043                     NVMADR          equ	67	;# 
  7040   000043                     NVMADRL         equ	67	;# 
  7041   000044                     NVMADRH         equ	68	;# 
  7042   000045                     NVMADRU         equ	69	;# 
  7043   000046                     NVMDAT          equ	70	;# 
  7044   000046                     NVMDATL         equ	70	;# 
  7045   000047                     NVMDATH         equ	71	;# 
  7046   000048                     VREGCON         equ	72	;# 
  7047   000049                     BORCON          equ	73	;# 
  7048   00004A                     HLVDCON0        equ	74	;# 
  7049   00004B                     HLVDCON1        equ	75	;# 
  7050   00004C                     ZCDCON          equ	76	;# 
  7051   000063                     PMD0            equ	99	;# 
  7052   000064                     PMD1            equ	100	;# 
  7053   000065                     PMD2            equ	101	;# 
  7054   000066                     PMD3            equ	102	;# 
  7055   000067                     PMD4            equ	103	;# 
  7056   000068                     PMD5            equ	104	;# 
  7057   00006A                     MD1CON0         equ	106	;# 
  7058   00006B                     MD1CON1         equ	107	;# 
  7059   00006C                     MD1SRC          equ	108	;# 
  7060   00006D                     MD1CARL         equ	109	;# 
  7061   00006E                     MD1CARH         equ	110	;# 
  7062   00006F                     CMOUT           equ	111	;# 
  7063   000070                     CM1CON0         equ	112	;# 
  7064   000071                     CM1CON1         equ	113	;# 
  7065   000072                     CM1NCH          equ	114	;# 
  7066   000073                     CM1PCH          equ	115	;# 
  7067   000074                     CM2CON0         equ	116	;# 
  7068   000075                     CM2CON1         equ	117	;# 
  7069   000076                     CM2NCH          equ	118	;# 
  7070   000077                     CM2PCH          equ	119	;# 
  7071   000078                     WDTCON0         equ	120	;# 
  7072   000079                     WDTCON1         equ	121	;# 
  7073   00007A                     WDTPS           equ	122	;# 
  7074   00007A                     WDTPSL          equ	122	;# 
  7075   00007B                     WDTPSH          equ	123	;# 
  7076   00007C                     WDTTMR          equ	124	;# 
  7077   00007D                     DAC1DAT         equ	125	;# 
  7078   00007D                     DAC1DATL        equ	125	;# 
  7079   00007F                     DAC1CON         equ	127	;# 
  7080   000080                     SPI1RXB         equ	128	;# 
  7081   000081                     SPI1TXB         equ	129	;# 
  7082   000082                     SPI1TCNT        equ	130	;# 
  7083   000082                     SPI1TCNTL       equ	130	;# 
  7084   000083                     SPI1TCNTH       equ	131	;# 
  7085   000084                     SPI1CON0        equ	132	;# 
  7086   000085                     SPI1CON1        equ	133	;# 
  7087   000086                     SPI1CON2        equ	134	;# 
  7088   000087                     SPI1STATUS      equ	135	;# 
  7089   000088                     SPI1TWIDTH      equ	136	;# 
  7090   000089                     SPI1BAUD        equ	137	;# 
  7091   00008A                     SPI1INTF        equ	138	;# 
  7092   00008B                     SPI1INTE        equ	139	;# 
  7093   00008C                     SPI1CLK         equ	140	;# 
  7094   00008D                     SPI2RXB         equ	141	;# 
  7095   00008E                     SPI2TXB         equ	142	;# 
  7096   00008F                     SPI2TCNT        equ	143	;# 
  7097   00008F                     SPI2TCNTL       equ	143	;# 
  7098   000090                     SPI2TCNTH       equ	144	;# 
  7099   000091                     SPI2CON0        equ	145	;# 
  7100   000092                     SPI2CON1        equ	146	;# 
  7101   000093                     SPI2CON2        equ	147	;# 
  7102   000094                     SPI2STATUS      equ	148	;# 
  7103   000095                     SPI2TWIDTH      equ	149	;# 
  7104   000096                     SPI2BAUD        equ	150	;# 
  7105   000097                     SPI2INTF        equ	151	;# 
  7106   000098                     SPI2INTE        equ	152	;# 
  7107   000099                     SPI2CLK         equ	153	;# 
  7108   0000A0                     DAC2DAT         equ	160	;# 
  7109   0000A0                     DAC2DATL        equ	160	;# 
  7110   0000A2                     DAC2CON         equ	162	;# 
  7111   0000A3                     OPA1CON0        equ	163	;# 
  7112   0000A4                     OPA1CON1        equ	164	;# 
  7113   0000A5                     OPA1CON2        equ	165	;# 
  7114   0000A6                     OPA1CON3        equ	166	;# 
  7115   0000A7                     OPA1HWC         equ	167	;# 
  7116   0000A8                     OPA1OFFSET      equ	168	;# 
  7117   0000A9                     OPA1ORS         equ	169	;# 
  7118   0000AC                     ACTCON          equ	172	;# 
  7119   0000AD                     OSCCON1         equ	173	;# 
  7120   0000AE                     OSCCON2         equ	174	;# 
  7121   0000AF                     OSCCON3         equ	175	;# 
  7122   0000B0                     OSCTUNE         equ	176	;# 
  7123   0000B1                     OSCFRQ          equ	177	;# 
  7124   0000B1                     OSCFREQ         equ	177	;# 
  7125   0000B2                     OSCSTAT         equ	178	;# 
  7126   0000B2                     OSCSTAT1        equ	178	;# 
  7127   0000B3                     OSCEN           equ	179	;# 
  7128   0000B4                     PRLOCK          equ	180	;# 
  7129   0000B5                     SCANPR          equ	181	;# 
  7130   0000B6                     DMA1PR          equ	182	;# 
  7131   0000B7                     DMA2PR          equ	183	;# 
  7132   0000B8                     DMA3PR          equ	184	;# 
  7133   0000B9                     DMA4PR          equ	185	;# 
  7134   0000BE                     MAINPR          equ	190	;# 
  7135   0000BF                     ISRPR           equ	191	;# 
  7136   0000D4                     CLCDATA         equ	212	;# 
  7137   0000D5                     CLCSELECT       equ	213	;# 
  7138   0000D6                     CLCnCON         equ	214	;# 
  7139   0000D7                     CLCnPOL         equ	215	;# 
  7140   0000D8                     CLCnSEL0        equ	216	;# 
  7141   0000D9                     CLCnSEL1        equ	217	;# 
  7142   0000DA                     CLCnSEL2        equ	218	;# 
  7143   0000DB                     CLCnSEL3        equ	219	;# 
  7144   0000DC                     CLCnGLS0        equ	220	;# 
  7145   0000DD                     CLCnGLS1        equ	221	;# 
  7146   0000DE                     CLCnGLS2        equ	222	;# 
  7147   0000DF                     CLCnGLS3        equ	223	;# 
  7148   0000E8                     DMASELECT       equ	232	;# 
  7149   0000E9                     DMAnBUF         equ	233	;# 
  7150   0000EA                     DMAnDCNT        equ	234	;# 
  7151   0000EA                     DMAnDCNTL       equ	234	;# 
  7152   0000EB                     DMAnDCNTH       equ	235	;# 
  7153   0000EC                     DMAnDPTR        equ	236	;# 
  7154   0000EC                     DMAnDPTRL       equ	236	;# 
  7155   0000ED                     DMAnDPTRH       equ	237	;# 
  7156   0000EE                     DMAnDSZ         equ	238	;# 
  7157   0000EE                     DMAnDSZL        equ	238	;# 
  7158   0000EF                     DMAnDSZH        equ	239	;# 
  7159   0000F0                     DMAnDSA         equ	240	;# 
  7160   0000F0                     DMAnDSAL        equ	240	;# 
  7161   0000F1                     DMAnDSAH        equ	241	;# 
  7162   0000F2                     DMAnSCNT        equ	242	;# 
  7163   0000F2                     DMAnSCNTL       equ	242	;# 
  7164   0000F3                     DMAnSCNTH       equ	243	;# 
  7165   0000F4                     DMAnSPTR        equ	244	;# 
  7166   0000F4                     DMAnSPTRL       equ	244	;# 
  7167   0000F5                     DMAnSPTRH       equ	245	;# 
  7168   0000F6                     DMAnSPTRU       equ	246	;# 
  7169   0000F7                     DMAnSSZ         equ	247	;# 
  7170   0000F7                     DMAnSSZL        equ	247	;# 
  7171   0000F8                     DMAnSSZH        equ	248	;# 
  7172   0000F9                     DMAnSSA         equ	249	;# 
  7173   0000F9                     DMAnSSAL        equ	249	;# 
  7174   0000FA                     DMAnSSAH        equ	250	;# 
  7175   0000FB                     DMAnSSAU        equ	251	;# 
  7176   0000FC                     DMAnCON0        equ	252	;# 
  7177   0000FD                     DMAnCON1        equ	253	;# 
  7178   0000FE                     DMAnAIRQ        equ	254	;# 
  7179   0000FF                     DMAnSIRQ        equ	255	;# 
  7180   000200                     PPSLOCK         equ	512	;# 
  7181   000201                     RA0PPS          equ	513	;# 
  7182   000202                     RA1PPS          equ	514	;# 
  7183   000203                     RA2PPS          equ	515	;# 
  7184   000205                     RA4PPS          equ	517	;# 
  7185   000206                     RA5PPS          equ	518	;# 
  7186   00020D                     RB4PPS          equ	525	;# 
  7187   00020E                     RB5PPS          equ	526	;# 
  7188   00020F                     RB6PPS          equ	527	;# 
  7189   000210                     RB7PPS          equ	528	;# 
  7190   000211                     RC0PPS          equ	529	;# 
  7191   000212                     RC1PPS          equ	530	;# 
  7192   000213                     RC2PPS          equ	531	;# 
  7193   000214                     RC3PPS          equ	532	;# 
  7194   000215                     RC4PPS          equ	533	;# 
  7195   000216                     RC5PPS          equ	534	;# 
  7196   000217                     RC6PPS          equ	535	;# 
  7197   000218                     RC7PPS          equ	536	;# 
  7198   00023E                     INT0PPS         equ	574	;# 
  7199   00023F                     INT1PPS         equ	575	;# 
  7200   000240                     INT2PPS         equ	576	;# 
  7201   000241                     T0CKIPPS        equ	577	;# 
  7202   000242                     T1CKIPPS        equ	578	;# 
  7203   000243                     T1GPPS          equ	579	;# 
  7204   000244                     T3CKIPPS        equ	580	;# 
  7205   000245                     T3GPPS          equ	581	;# 
  7206   000248                     T2INPPS         equ	584	;# 
  7207   000249                     T4INPPS         equ	585	;# 
  7208   00024F                     CCP1PPS         equ	591	;# 
  7209   000251                     PWM1ERSPPS      equ	593	;# 
  7210   000252                     PWM2ERSPPS      equ	594	;# 
  7211   000253                     PWM3ERSPPS      equ	595	;# 
  7212   000257                     PWMIN0PPS       equ	599	;# 
  7213   000258                     PWMIN1PPS       equ	600	;# 
  7214   000259                     SMT1WINPPS      equ	601	;# 
  7215   00025A                     SMT1SIGPPS      equ	602	;# 
  7216   00025B                     CWG1PPS         equ	603	;# 
  7217   00025B                     CWG1INPPS       equ	603	;# 
  7218   00025E                     MD1CARLPPS      equ	606	;# 
  7219   00025E                     MDCARLPPS       equ	606	;# 
  7220   00025F                     MD1CARHPPS      equ	607	;# 
  7221   00025F                     MDCARHPPS       equ	607	;# 
  7222   000260                     MD1SRCPPS       equ	608	;# 
  7223   000260                     MDSRCPPS        equ	608	;# 
  7224   000261                     CLCIN0PPS       equ	609	;# 
  7225   000262                     CLCIN1PPS       equ	610	;# 
  7226   000263                     CLCIN2PPS       equ	611	;# 
  7227   000264                     CLCIN3PPS       equ	612	;# 
  7228   000269                     ADACTPPS        equ	617	;# 
  7229   00026A                     SPI1SCKPPS      equ	618	;# 
  7230   00026B                     SPI1SDIPPS      equ	619	;# 
  7231   00026C                     SPI1SSPPS       equ	620	;# 
  7232   00026D                     SPI2SCKPPS      equ	621	;# 
  7233   00026E                     SPI2SDIPPS      equ	622	;# 
  7234   00026F                     SPI2SSPPS       equ	623	;# 
  7235   000270                     I2C1SDAPPS      equ	624	;# 
  7236   000271                     I2C1SCLPPS      equ	625	;# 
  7237   000272                     U1RXPPS         equ	626	;# 
  7238   000273                     U1CTSPPS        equ	627	;# 
  7239   000274                     U2RXPPS         equ	628	;# 
  7240   000275                     U2CTSPPS        equ	629	;# 
  7241   000276                     U3RXPPS         equ	630	;# 
  7242   000277                     U3CTSPPS        equ	631	;# 
  7243   000286                     RB6I2C          equ	646	;# 
  7244   000287                     RB4I2C          equ	647	;# 
  7245   00028A                     I2C1RXB         equ	650	;# 
  7246   00028B                     I2C1TXB         equ	651	;# 
  7247   00028C                     I2C1CNTL        equ	652	;# 
  7248   00028D                     I2C1CNTH        equ	653	;# 
  7249   00028E                     I2C1ADB0        equ	654	;# 
  7250   00028F                     I2C1ADB1        equ	655	;# 
  7251   000290                     I2C1ADR0        equ	656	;# 
  7252   000291                     I2C1ADR1        equ	657	;# 
  7253   000292                     I2C1ADR2        equ	658	;# 
  7254   000293                     I2C1ADR3        equ	659	;# 
  7255   000294                     I2C1CON0        equ	660	;# 
  7256   000295                     I2C1CON1        equ	661	;# 
  7257   000296                     I2C1CON2        equ	662	;# 
  7258   000297                     I2C1ERR         equ	663	;# 
  7259   000298                     I2C1STAT0       equ	664	;# 
  7260   000299                     I2C1STAT1       equ	665	;# 
  7261   00029A                     I2C1PIR         equ	666	;# 
  7262   00029B                     I2C1PIE         equ	667	;# 
  7263   00029C                     I2C1BTO         equ	668	;# 
  7264   00029D                     I2C1BAUD        equ	669	;# 
  7265   00029E                     I2C1CLK         equ	670	;# 
  7266   00029F                     I2C1BTOC        equ	671	;# 
  7267   0002A1                     U1RXB           equ	673	;# 
  7268   0002A1                     U1RXBL          equ	673	;# 
  7269   0002A2                     U1RXCHK         equ	674	;# 
  7270   0002A3                     U1TXB           equ	675	;# 
  7271   0002A3                     U1TXBL          equ	675	;# 
  7272   0002A4                     U1TXCHK         equ	676	;# 
  7273   0002A5                     U1P1            equ	677	;# 
  7274   0002A5                     U1P1L           equ	677	;# 
  7275   0002A6                     U1P1H           equ	678	;# 
  7276   0002A7                     U1P2            equ	679	;# 
  7277   0002A7                     U1P2L           equ	679	;# 
  7278   0002A8                     U1P2H           equ	680	;# 
  7279   0002A9                     U1P3            equ	681	;# 
  7280   0002A9                     U1P3L           equ	681	;# 
  7281   0002AA                     U1P3H           equ	682	;# 
  7282   0002AB                     U1CON0          equ	683	;# 
  7283   0002AC                     U1CON1          equ	684	;# 
  7284   0002AD                     U1CON2          equ	685	;# 
  7285   0002AE                     U1BRG           equ	686	;# 
  7286   0002AE                     U1BRGL          equ	686	;# 
  7287   0002AF                     U1BRGH          equ	687	;# 
  7288   0002B0                     U1FIFO          equ	688	;# 
  7289   0002B1                     U1UIR           equ	689	;# 
  7290   0002B2                     U1ERRIR         equ	690	;# 
  7291   0002B3                     U1ERRIE         equ	691	;# 
  7292   0002B4                     U2RXB           equ	692	;# 
  7293   0002B4                     U2RXBL          equ	692	;# 
  7294   0002B6                     U2TXB           equ	694	;# 
  7295   0002B6                     U2TXBL          equ	694	;# 
  7296   0002B8                     U2P1            equ	696	;# 
  7297   0002B8                     U2P1L           equ	696	;# 
  7298   0002BA                     U2P2            equ	698	;# 
  7299   0002BA                     U2P2L           equ	698	;# 
  7300   0002BC                     U2P3            equ	700	;# 
  7301   0002BC                     U2P3L           equ	700	;# 
  7302   0002BE                     U2CON0          equ	702	;# 
  7303   0002BF                     U2CON1          equ	703	;# 
  7304   0002C0                     U2CON2          equ	704	;# 
  7305   0002C1                     U2BRG           equ	705	;# 
  7306   0002C1                     U2BRGL          equ	705	;# 
  7307   0002C2                     U2BRGH          equ	706	;# 
  7308   0002C3                     U2FIFO          equ	707	;# 
  7309   0002C4                     U2UIR           equ	708	;# 
  7310   0002C5                     U2ERRIR         equ	709	;# 
  7311   0002C6                     U2ERRIE         equ	710	;# 
  7312   0002C7                     U3RXB           equ	711	;# 
  7313   0002C7                     U3RXBL          equ	711	;# 
  7314   0002C9                     U3TXB           equ	713	;# 
  7315   0002C9                     U3TXBL          equ	713	;# 
  7316   0002CB                     U3P1            equ	715	;# 
  7317   0002CB                     U3P1L           equ	715	;# 
  7318   0002CD                     U3P2            equ	717	;# 
  7319   0002CD                     U3P2L           equ	717	;# 
  7320   0002CF                     U3P3            equ	719	;# 
  7321   0002CF                     U3P3L           equ	719	;# 
  7322   0002D1                     U3CON0          equ	721	;# 
  7323   0002D2                     U3CON1          equ	722	;# 
  7324   0002D3                     U3CON2          equ	723	;# 
  7325   0002D4                     U3BRG           equ	724	;# 
  7326   0002D4                     U3BRGL          equ	724	;# 
  7327   0002D5                     U3BRGH          equ	725	;# 
  7328   0002D6                     U3FIFO          equ	726	;# 
  7329   0002D7                     U3UIR           equ	727	;# 
  7330   0002D8                     U3ERRIR         equ	728	;# 
  7331   0002D9                     U3ERRIE         equ	729	;# 
  7332   000300                     SMT1TMR         equ	768	;# 
  7333   000300                     SMT1TMRL        equ	768	;# 
  7334   000301                     SMT1TMRH        equ	769	;# 
  7335   000302                     SMT1TMRU        equ	770	;# 
  7336   000303                     SMT1CPR         equ	771	;# 
  7337   000303                     SMT1CPRL        equ	771	;# 
  7338   000304                     SMT1CPRH        equ	772	;# 
  7339   000305                     SMT1CPRU        equ	773	;# 
  7340   000306                     SMT1CPW         equ	774	;# 
  7341   000306                     SMT1CPWL        equ	774	;# 
  7342   000307                     SMT1CPWH        equ	775	;# 
  7343   000308                     SMT1CPWU        equ	776	;# 
  7344   000309                     SMT1PR          equ	777	;# 
  7345   000309                     SMT1PRL         equ	777	;# 
  7346   00030A                     SMT1PRH         equ	778	;# 
  7347   00030B                     SMT1PRU         equ	779	;# 
  7348   00030C                     SMT1CON0        equ	780	;# 
  7349   00030D                     SMT1CON1        equ	781	;# 
  7350   00030E                     SMT1STAT        equ	782	;# 
  7351   00030F                     SMT1CLK         equ	783	;# 
  7352   000310                     SMT1SIG         equ	784	;# 
  7353   000311                     SMT1WIN         equ	785	;# 
  7354   000312                     TMR1            equ	786	;# 
  7355   000312                     TMR1L           equ	786	;# 
  7356   000313                     TMR1H           equ	787	;# 
  7357   000314                     T1CON           equ	788	;# 
  7358   000314                     TMR1CON         equ	788	;# 
  7359   000315                     T1GCON          equ	789	;# 
  7360   000315                     TMR1GCON        equ	789	;# 
  7361   000316                     T1GATE          equ	790	;# 
  7362   000316                     TMR1GATE        equ	790	;# 
  7363   000317                     T1CLK           equ	791	;# 
  7364   000317                     TMR1CLK         equ	791	;# 
  7365   000317                     PR1             equ	791	;# 
  7366   000318                     TMR0L           equ	792	;# 
  7367   000318                     TMR0            equ	792	;# 
  7368   000319                     TMR0H           equ	793	;# 
  7369   000319                     PR0             equ	793	;# 
  7370   00031A                     T0CON0          equ	794	;# 
  7371   00031B                     T0CON1          equ	795	;# 
  7372   00031C                     T2TMR           equ	796	;# 
  7373   00031C                     TMR2            equ	796	;# 
  7374   00031D                     T2PR            equ	797	;# 
  7375   00031D                     PR2             equ	797	;# 
  7376   00031E                     T2CON           equ	798	;# 
  7377   00031F                     T2HLT           equ	799	;# 
  7378   000320                     T2CLKCON        equ	800	;# 
  7379   000320                     T2CLK           equ	800	;# 
  7380   000321                     T2RST           equ	801	;# 
  7381   000323                     TMR3            equ	803	;# 
  7382   000323                     TMR3L           equ	803	;# 
  7383   000324                     TMR3H           equ	804	;# 
  7384   000325                     T3CON           equ	805	;# 
  7385   000325                     TMR3CON         equ	805	;# 
  7386   000326                     T3GCON          equ	806	;# 
  7387   000326                     TMR3GCON        equ	806	;# 
  7388   000327                     T3GATE          equ	807	;# 
  7389   000327                     TMR3GATE        equ	807	;# 
  7390   000328                     T3CLK           equ	808	;# 
  7391   000328                     TMR3CLK         equ	808	;# 
  7392   000328                     PR3             equ	808	;# 
  7393   000329                     T4TMR           equ	809	;# 
  7394   000329                     TMR4            equ	809	;# 
  7395   00032A                     T4PR            equ	810	;# 
  7396   00032A                     PR4             equ	810	;# 
  7397   00032B                     T4CON           equ	811	;# 
  7398   00032C                     T4HLT           equ	812	;# 
  7399   00032D                     T4CLKCON        equ	813	;# 
  7400   00032D                     T4CLK           equ	813	;# 
  7401   00032E                     T4RST           equ	814	;# 
  7402   000340                     CCPR1           equ	832	;# 
  7403   000340                     CCPR1L          equ	832	;# 
  7404   000341                     CCPR1H          equ	833	;# 
  7405   000342                     CCP1CON         equ	834	;# 
  7406   000343                     CCP1CAP         equ	835	;# 
  7407   00034C                     CCPTMRS0        equ	844	;# 
  7408   00034E                     CRCDATA         equ	846	;# 
  7409   00034E                     CRCDATAL        equ	846	;# 
  7410   00034F                     CRCDATAH        equ	847	;# 
  7411   000350                     CRCDATAU        equ	848	;# 
  7412   000351                     CRCDATAT        equ	849	;# 
  7413   000352                     CRCOUT          equ	850	;# 
  7414   000352                     CRCSHFT         equ	850	;# 
  7415   000352                     CRCXOR          equ	850	;# 
  7416   000352                     CRCOUTL         equ	850	;# 
  7417   000352                     CRCSHFTL        equ	850	;# 
  7418   000352                     CRCSHIFTL       equ	850	;# 
  7419   000352                     CRCXORL         equ	850	;# 
  7420   000353                     CRCOUTH         equ	851	;# 
  7421   000353                     CRCSHFTH        equ	851	;# 
  7422   000353                     CRCSHIFTH       equ	851	;# 
  7423   000353                     CRCXORH         equ	851	;# 
  7424   000354                     CRCOUTU         equ	852	;# 
  7425   000354                     CRCSHFTU        equ	852	;# 
  7426   000354                     CRCSHIFTU       equ	852	;# 
  7427   000354                     CRCXORU         equ	852	;# 
  7428   000355                     CRCOUTT         equ	853	;# 
  7429   000355                     CRCSHFTT        equ	853	;# 
  7430   000355                     CRCSHIFTT       equ	853	;# 
  7431   000355                     CRCXORT         equ	853	;# 
  7432   000356                     CRCCON0         equ	854	;# 
  7433   000357                     CRCCON1         equ	855	;# 
  7434   000358                     CRCCON2         equ	856	;# 
  7435   00035A                     SCANLADR        equ	858	;# 
  7436   00035A                     SCANLADRL       equ	858	;# 
  7437   00035B                     SCANLADRH       equ	859	;# 
  7438   00035C                     SCANLADRU       equ	860	;# 
  7439   00035D                     SCANHADR        equ	861	;# 
  7440   00035D                     SCANHADRL       equ	861	;# 
  7441   00035E                     SCANHADRH       equ	862	;# 
  7442   00035F                     SCANHADRU       equ	863	;# 
  7443   000360                     SCANCON0        equ	864	;# 
  7444   000361                     SCANTRIG        equ	865	;# 
  7445   000367                     IPR0            equ	871	;# 
  7446   000368                     IPR1            equ	872	;# 
  7447   000369                     IPR2            equ	873	;# 
  7448   00036A                     IPR3            equ	874	;# 
  7449   00036B                     IPR4            equ	875	;# 
  7450   00036C                     IPR5            equ	876	;# 
  7451   00036D                     IPR6            equ	877	;# 
  7452   00036E                     IPR7            equ	878	;# 
  7453   00036F                     IPR8            equ	879	;# 
  7454   000370                     IPR9            equ	880	;# 
  7455   000371                     IPR10           equ	881	;# 
  7456   000373                     STATUS_CSHAD    equ	883	;# 
  7457   000374                     WREG_CSHAD      equ	884	;# 
  7458   000375                     BSR_CSHAD       equ	885	;# 
  7459   000376                     SHADCON         equ	886	;# 
  7460   000377                     STATUS_SHAD     equ	887	;# 
  7461   000378                     WREG_SHAD       equ	888	;# 
  7462   000379                     BSR_SHAD        equ	889	;# 
  7463   00037A                     PCLATH_SHAD     equ	890	;# 
  7464   00037B                     PCLATU_SHAD     equ	891	;# 
  7465   00037C                     FSR0SH          equ	892	;# 
  7466   00037C                     FSR0L_SHAD      equ	892	;# 
  7467   00037D                     FSR0H_SHAD      equ	893	;# 
  7468   00037E                     FSR1SH          equ	894	;# 
  7469   00037E                     FSR1L_SHAD      equ	894	;# 
  7470   00037F                     FSR1H_SHAD      equ	895	;# 
  7471   000380                     FSR2SH          equ	896	;# 
  7472   000380                     FSR2L_SHAD      equ	896	;# 
  7473   000381                     FSR2H_SHAD      equ	897	;# 
  7474   000382                     PRODSH          equ	898	;# 
  7475   000382                     PRODL_SHAD      equ	898	;# 
  7476   000383                     PRODH_SHAD      equ	899	;# 
  7477   0003BC                     CWG1CLK         equ	956	;# 
  7478   0003BC                     CWG1CLKCON      equ	956	;# 
  7479   0003BD                     CWG1ISM         equ	957	;# 
  7480   0003BD                     CWG1DAT         equ	957	;# 
  7481   0003BE                     CWG1DBR         equ	958	;# 
  7482   0003BF                     CWG1DBF         equ	959	;# 
  7483   0003C0                     CWG1CON0        equ	960	;# 
  7484   0003C1                     CWG1CON1        equ	961	;# 
  7485   0003C2                     CWG1AS0         equ	962	;# 
  7486   0003C3                     CWG1AS1         equ	963	;# 
  7487   0003C4                     CWG1STR         equ	964	;# 
  7488   0003D7                     FVRCON          equ	983	;# 
  7489   0003D8                     ADCPCON         equ	984	;# 
  7490   0003D8                     ADCP            equ	984	;# 
  7491   0003D9                     ADLTH           equ	985	;# 
  7492   0003D9                     ADLTHL          equ	985	;# 
  7493   0003DA                     ADLTHH          equ	986	;# 
  7494   0003DB                     ADUTH           equ	987	;# 
  7495   0003DB                     ADUTHL          equ	987	;# 
  7496   0003DC                     ADUTHH          equ	988	;# 
  7497   0003DD                     ADERR           equ	989	;# 
  7498   0003DD                     ADERRL          equ	989	;# 
  7499   0003DE                     ADERRH          equ	990	;# 
  7500   0003DF                     ADSTPT          equ	991	;# 
  7501   0003DF                     ADSTPTL         equ	991	;# 
  7502   0003E0                     ADSTPTH         equ	992	;# 
  7503   0003E1                     ADFLTR          equ	993	;# 
  7504   0003E1                     ADFLTRL         equ	993	;# 
  7505   0003E2                     ADFLTRH         equ	994	;# 
  7506   0003E3                     ADACC           equ	995	;# 
  7507   0003E3                     ADACCL          equ	995	;# 
  7508   0003E4                     ADACCH          equ	996	;# 
  7509   0003E5                     ADACCU          equ	997	;# 
  7510   0003E6                     ADCNT           equ	998	;# 
  7511   0003E7                     ADRPT           equ	999	;# 
  7512   0003E8                     ADPREV          equ	1000	;# 
  7513   0003E8                     ADPREVL         equ	1000	;# 
  7514   0003E9                     ADPREVH         equ	1001	;# 
  7515   0003EA                     ADRES           equ	1002	;# 
  7516   0003EA                     ADRESL          equ	1002	;# 
  7517   0003EB                     ADRESH          equ	1003	;# 
  7518   0003EC                     ADPCH           equ	1004	;# 
  7519   0003EE                     ADACQ           equ	1006	;# 
  7520   0003EE                     ADACQL          equ	1006	;# 
  7521   0003EF                     ADACQH          equ	1007	;# 
  7522   0003F0                     ADCAP           equ	1008	;# 
  7523   0003F1                     ADPRE           equ	1009	;# 
  7524   0003F1                     ADPREL          equ	1009	;# 
  7525   0003F2                     ADPREH          equ	1010	;# 
  7526   0003F3                     ADCON0          equ	1011	;# 
  7527   0003F4                     ADCON1          equ	1012	;# 
  7528   0003F5                     ADCON2          equ	1013	;# 
  7529   0003F6                     ADCON3          equ	1014	;# 
  7530   0003F7                     ADSTAT          equ	1015	;# 
  7531   0003F8                     ADREF           equ	1016	;# 
  7532   0003F9                     ADACT           equ	1017	;# 
  7533   0003FA                     ADCLK           equ	1018	;# 
  7534   000400                     ANSELA          equ	1024	;# 
  7535   000401                     WPUA            equ	1025	;# 
  7536   000402                     ODCONA          equ	1026	;# 
  7537   000403                     SLRCONA         equ	1027	;# 
  7538   000404                     INLVLA          equ	1028	;# 
  7539   000405                     IOCAP           equ	1029	;# 
  7540   000406                     IOCAN           equ	1030	;# 
  7541   000407                     IOCAF           equ	1031	;# 
  7542   000408                     ANSELB          equ	1032	;# 
  7543   000409                     WPUB            equ	1033	;# 
  7544   00040A                     ODCONB          equ	1034	;# 
  7545   00040B                     SLRCONB         equ	1035	;# 
  7546   00040C                     INLVLB          equ	1036	;# 
  7547   00040D                     IOCBP           equ	1037	;# 
  7548   00040E                     IOCBN           equ	1038	;# 
  7549   00040F                     IOCBF           equ	1039	;# 
  7550   000410                     ANSELC          equ	1040	;# 
  7551   000411                     WPUC            equ	1041	;# 
  7552   000412                     ODCONC          equ	1042	;# 
  7553   000413                     SLRCONC         equ	1043	;# 
  7554   000414                     INLVLC          equ	1044	;# 
  7555   000415                     IOCCP           equ	1045	;# 
  7556   000416                     IOCCN           equ	1046	;# 
  7557   000417                     IOCCF           equ	1047	;# 
  7558   000440                     NCO1ACC         equ	1088	;# 
  7559   000440                     NCO1ACCL        equ	1088	;# 
  7560   000441                     NCO1ACCH        equ	1089	;# 
  7561   000442                     NCO1ACCU        equ	1090	;# 
  7562   000443                     NCO1INC         equ	1091	;# 
  7563   000443                     NCO1INCL        equ	1091	;# 
  7564   000444                     NCO1INCH        equ	1092	;# 
  7565   000445                     NCO1INCU        equ	1093	;# 
  7566   000446                     NCO1CON         equ	1094	;# 
  7567   000447                     NCO1CLK         equ	1095	;# 
  7568   000458                     FSCMCON         equ	1112	;# 
  7569   000459                     IVTLOCK         equ	1113	;# 
  7570   00045A                     IVTAD           equ	1114	;# 
  7571   00045A                     IVTADL          equ	1114	;# 
  7572   00045B                     IVTADH          equ	1115	;# 
  7573   00045C                     IVTADU          equ	1116	;# 
  7574   00045D                     IVTBASE         equ	1117	;# 
  7575   00045D                     IVTBASEL        equ	1117	;# 
  7576   00045E                     IVTBASEH        equ	1118	;# 
  7577   00045F                     IVTBASEU        equ	1119	;# 
  7578   000460                     PWM1ERS         equ	1120	;# 
  7579   000461                     PWM1CLK         equ	1121	;# 
  7580   000462                     PWM1LDS         equ	1122	;# 
  7581   000463                     PWM1PR          equ	1123	;# 
  7582   000463                     PWM1PRL         equ	1123	;# 
  7583   000464                     PWM1PRH         equ	1124	;# 
  7584   000465                     PWM1CPRE        equ	1125	;# 
  7585   000466                     PWM1PIPOS       equ	1126	;# 
  7586   000467                     PWM1GIR         equ	1127	;# 
  7587   000468                     PWM1GIE         equ	1128	;# 
  7588   000469                     PWM1CON         equ	1129	;# 
  7589   00046A                     PWM1S1CFG       equ	1130	;# 
  7590   00046B                     PWM1S1P1        equ	1131	;# 
  7591   00046B                     PWM1S1P1L       equ	1131	;# 
  7592   00046C                     PWM1S1P1H       equ	1132	;# 
  7593   00046D                     PWM1S1P2        equ	1133	;# 
  7594   00046D                     PWM1S1P2L       equ	1133	;# 
  7595   00046E                     PWM1S1P2H       equ	1134	;# 
  7596   00046F                     PWM2ERS         equ	1135	;# 
  7597   000470                     PWM2CLK         equ	1136	;# 
  7598   000471                     PWM2LDS         equ	1137	;# 
  7599   000472                     PWM2PR          equ	1138	;# 
  7600   000472                     PWM2PRL         equ	1138	;# 
  7601   000473                     PWM2PRH         equ	1139	;# 
  7602   000474                     PWM2CPRE        equ	1140	;# 
  7603   000475                     PWM2PIPOS       equ	1141	;# 
  7604   000476                     PWM2GIR         equ	1142	;# 
  7605   000477                     PWM2GIE         equ	1143	;# 
  7606   000478                     PWM2CON         equ	1144	;# 
  7607   000479                     PWM2S1CFG       equ	1145	;# 
  7608   00047A                     PWM2S1P1        equ	1146	;# 
  7609   00047A                     PWM2S1P1L       equ	1146	;# 
  7610   00047B                     PWM2S1P1H       equ	1147	;# 
  7611   00047C                     PWM2S1P2        equ	1148	;# 
  7612   00047C                     PWM2S1P2L       equ	1148	;# 
  7613   00047D                     PWM2S1P2H       equ	1149	;# 
  7614   00047E                     PWM3ERS         equ	1150	;# 
  7615   00047F                     PWM3CLK         equ	1151	;# 
  7616   000480                     PWM3LDS         equ	1152	;# 
  7617   000481                     PWM3PR          equ	1153	;# 
  7618   000481                     PWM3PRL         equ	1153	;# 
  7619   000482                     PWM3PRH         equ	1154	;# 
  7620   000483                     PWM3CPRE        equ	1155	;# 
  7621   000484                     PWM3PIPOS       equ	1156	;# 
  7622   000485                     PWM3GIR         equ	1157	;# 
  7623   000486                     PWM3GIE         equ	1158	;# 
  7624   000487                     PWM3CON         equ	1159	;# 
  7625   000488                     PWM3S1CFG       equ	1160	;# 
  7626   000489                     PWM3S1P1        equ	1161	;# 
  7627   000489                     PWM3S1P1L       equ	1161	;# 
  7628   00048A                     PWM3S1P1H       equ	1162	;# 
  7629   00048B                     PWM3S1P2        equ	1163	;# 
  7630   00048B                     PWM3S1P2L       equ	1163	;# 
  7631   00048C                     PWM3S1P2H       equ	1164	;# 
  7632   00049C                     PWMLOAD         equ	1180	;# 
  7633   00049D                     PWMEN           equ	1181	;# 
  7634   0004A8                     PIE0            equ	1192	;# 
  7635   0004A9                     PIE1            equ	1193	;# 
  7636   0004AA                     PIE2            equ	1194	;# 
  7637   0004AB                     PIE3            equ	1195	;# 
  7638   0004AC                     PIE4            equ	1196	;# 
  7639   0004AD                     PIE5            equ	1197	;# 
  7640   0004AE                     PIE6            equ	1198	;# 
  7641   0004AF                     PIE7            equ	1199	;# 
  7642   0004B0                     PIE8            equ	1200	;# 
  7643   0004B1                     PIE9            equ	1201	;# 
  7644   0004B2                     PIE10           equ	1202	;# 
  7645   0004B3                     PIR0            equ	1203	;# 
  7646   0004B4                     PIR1            equ	1204	;# 
  7647   0004B5                     PIR2            equ	1205	;# 
  7648   0004B6                     PIR3            equ	1206	;# 
  7649   0004B7                     PIR4            equ	1207	;# 
  7650   0004B8                     PIR5            equ	1208	;# 
  7651   0004B9                     PIR6            equ	1209	;# 
  7652   0004BA                     PIR7            equ	1210	;# 
  7653   0004BB                     PIR8            equ	1211	;# 
  7654   0004BC                     PIR9            equ	1212	;# 
  7655   0004BD                     PIR10           equ	1213	;# 
  7656   0004BE                     LATA            equ	1214	;# 
  7657   0004BF                     LATB            equ	1215	;# 
  7658   0004C0                     LATC            equ	1216	;# 
  7659   0004C6                     TRISA           equ	1222	;# 
  7660   0004C7                     TRISB           equ	1223	;# 
  7661   0004C8                     TRISC           equ	1224	;# 
  7662   0004CE                     PORTA           equ	1230	;# 
  7663   0004CF                     PORTB           equ	1231	;# 
  7664   0004D0                     PORTC           equ	1232	;# 
  7665   0004D6                     INTCON0         equ	1238	;# 
  7666   0004D7                     INTCON1         equ	1239	;# 
  7667   0004D8                     STATUS          equ	1240	;# 
  7668   0004D9                     FSR2            equ	1241	;# 
  7669   0004D9                     FSR2L           equ	1241	;# 
  7670   0004DA                     FSR2H           equ	1242	;# 
  7671   0004DB                     PLUSW2          equ	1243	;# 
  7672   0004DC                     PREINC2         equ	1244	;# 
  7673   0004DD                     POSTDEC2        equ	1245	;# 
  7674   0004DE                     POSTINC2        equ	1246	;# 
  7675   0004DF                     INDF2           equ	1247	;# 
  7676   0004E0                     BSR             equ	1248	;# 
  7677   0004E1                     FSR1            equ	1249	;# 
  7678   0004E1                     FSR1L           equ	1249	;# 
  7679   0004E2                     FSR1H           equ	1250	;# 
  7680   0004E3                     PLUSW1          equ	1251	;# 
  7681   0004E4                     PREINC1         equ	1252	;# 
  7682   0004E5                     POSTDEC1        equ	1253	;# 
  7683   0004E6                     POSTINC1        equ	1254	;# 
  7684   0004E7                     INDF1           equ	1255	;# 
  7685   0004E8                     WREG            equ	1256	;# 
  7686   0004E9                     FSR0            equ	1257	;# 
  7687   0004E9                     FSR0L           equ	1257	;# 
  7688   0004EA                     FSR0H           equ	1258	;# 
  7689   0004EB                     PLUSW0          equ	1259	;# 
  7690   0004EC                     PREINC0         equ	1260	;# 
  7691   0004ED                     POSTDEC0        equ	1261	;# 
  7692   0004EE                     POSTINC0        equ	1262	;# 
  7693   0004EF                     INDF0           equ	1263	;# 
  7694   0004F0                     PCON0           equ	1264	;# 
  7695   0004F1                     PCON1           equ	1265	;# 
  7696   0004F2                     CPUDOZE         equ	1266	;# 
  7697   0004F3                     PROD            equ	1267	;# 
  7698   0004F3                     PRODL           equ	1267	;# 
  7699   0004F4                     PRODH           equ	1268	;# 
  7700   0004F5                     TABLAT          equ	1269	;# 
  7701   0004F6                     TBLPTR          equ	1270	;# 
  7702   0004F6                     TBLPTRL         equ	1270	;# 
  7703   0004F7                     TBLPTRH         equ	1271	;# 
  7704   0004F8                     TBLPTRU         equ	1272	;# 
  7705   0004F9                     PCLAT           equ	1273	;# 
  7706   0004F9                     PCL             equ	1273	;# 
  7707   0004FA                     PCLATH          equ	1274	;# 
  7708   0004FB                     PCLATU          equ	1275	;# 
  7709   0004FC                     STKPTR          equ	1276	;# 
  7710   0004FD                     TOS             equ	1277	;# 
  7711   0004FD                     TOSL            equ	1277	;# 
  7712   0004FE                     TOSH            equ	1278	;# 
  7713   0004FF                     TOSU            equ	1279	;# 
  7714   000039                     CLKRCON         equ	57	;# 
  7715   00003A                     CLKRCLK         equ	58	;# 
  7716   000040                     NVMCON0         equ	64	;# 
  7717   000041                     NVMCON1         equ	65	;# 
  7718   000042                     NVMLOCK         equ	66	;# 
  7719   000043                     NVMADR          equ	67	;# 
  7720   000043                     NVMADRL         equ	67	;# 
  7721   000044                     NVMADRH         equ	68	;# 
  7722   000045                     NVMADRU         equ	69	;# 
  7723   000046                     NVMDAT          equ	70	;# 
  7724   000046                     NVMDATL         equ	70	;# 
  7725   000047                     NVMDATH         equ	71	;# 
  7726   000048                     VREGCON         equ	72	;# 
  7727   000049                     BORCON          equ	73	;# 
  7728   00004A                     HLVDCON0        equ	74	;# 
  7729   00004B                     HLVDCON1        equ	75	;# 
  7730   00004C                     ZCDCON          equ	76	;# 
  7731   000063                     PMD0            equ	99	;# 
  7732   000064                     PMD1            equ	100	;# 
  7733   000065                     PMD2            equ	101	;# 
  7734   000066                     PMD3            equ	102	;# 
  7735   000067                     PMD4            equ	103	;# 
  7736   000068                     PMD5            equ	104	;# 
  7737   00006A                     MD1CON0         equ	106	;# 
  7738   00006B                     MD1CON1         equ	107	;# 
  7739   00006C                     MD1SRC          equ	108	;# 
  7740   00006D                     MD1CARL         equ	109	;# 
  7741   00006E                     MD1CARH         equ	110	;# 
  7742   00006F                     CMOUT           equ	111	;# 
  7743   000070                     CM1CON0         equ	112	;# 
  7744   000071                     CM1CON1         equ	113	;# 
  7745   000072                     CM1NCH          equ	114	;# 
  7746   000073                     CM1PCH          equ	115	;# 
  7747   000074                     CM2CON0         equ	116	;# 
  7748   000075                     CM2CON1         equ	117	;# 
  7749   000076                     CM2NCH          equ	118	;# 
  7750   000077                     CM2PCH          equ	119	;# 
  7751   000078                     WDTCON0         equ	120	;# 
  7752   000079                     WDTCON1         equ	121	;# 
  7753   00007A                     WDTPS           equ	122	;# 
  7754   00007A                     WDTPSL          equ	122	;# 
  7755   00007B                     WDTPSH          equ	123	;# 
  7756   00007C                     WDTTMR          equ	124	;# 
  7757   00007D                     DAC1DAT         equ	125	;# 
  7758   00007D                     DAC1DATL        equ	125	;# 
  7759   00007F                     DAC1CON         equ	127	;# 
  7760   000080                     SPI1RXB         equ	128	;# 
  7761   000081                     SPI1TXB         equ	129	;# 
  7762   000082                     SPI1TCNT        equ	130	;# 
  7763   000082                     SPI1TCNTL       equ	130	;# 
  7764   000083                     SPI1TCNTH       equ	131	;# 
  7765   000084                     SPI1CON0        equ	132	;# 
  7766   000085                     SPI1CON1        equ	133	;# 
  7767   000086                     SPI1CON2        equ	134	;# 
  7768   000087                     SPI1STATUS      equ	135	;# 
  7769   000088                     SPI1TWIDTH      equ	136	;# 
  7770   000089                     SPI1BAUD        equ	137	;# 
  7771   00008A                     SPI1INTF        equ	138	;# 
  7772   00008B                     SPI1INTE        equ	139	;# 
  7773   00008C                     SPI1CLK         equ	140	;# 
  7774   00008D                     SPI2RXB         equ	141	;# 
  7775   00008E                     SPI2TXB         equ	142	;# 
  7776   00008F                     SPI2TCNT        equ	143	;# 
  7777   00008F                     SPI2TCNTL       equ	143	;# 
  7778   000090                     SPI2TCNTH       equ	144	;# 
  7779   000091                     SPI2CON0        equ	145	;# 
  7780   000092                     SPI2CON1        equ	146	;# 
  7781   000093                     SPI2CON2        equ	147	;# 
  7782   000094                     SPI2STATUS      equ	148	;# 
  7783   000095                     SPI2TWIDTH      equ	149	;# 
  7784   000096                     SPI2BAUD        equ	150	;# 
  7785   000097                     SPI2INTF        equ	151	;# 
  7786   000098                     SPI2INTE        equ	152	;# 
  7787   000099                     SPI2CLK         equ	153	;# 
  7788   0000A0                     DAC2DAT         equ	160	;# 
  7789   0000A0                     DAC2DATL        equ	160	;# 
  7790   0000A2                     DAC2CON         equ	162	;# 
  7791   0000A3                     OPA1CON0        equ	163	;# 
  7792   0000A4                     OPA1CON1        equ	164	;# 
  7793   0000A5                     OPA1CON2        equ	165	;# 
  7794   0000A6                     OPA1CON3        equ	166	;# 
  7795   0000A7                     OPA1HWC         equ	167	;# 
  7796   0000A8                     OPA1OFFSET      equ	168	;# 
  7797   0000A9                     OPA1ORS         equ	169	;# 
  7798   0000AC                     ACTCON          equ	172	;# 
  7799   0000AD                     OSCCON1         equ	173	;# 
  7800   0000AE                     OSCCON2         equ	174	;# 
  7801   0000AF                     OSCCON3         equ	175	;# 
  7802   0000B0                     OSCTUNE         equ	176	;# 
  7803   0000B1                     OSCFRQ          equ	177	;# 
  7804   0000B1                     OSCFREQ         equ	177	;# 
  7805   0000B2                     OSCSTAT         equ	178	;# 
  7806   0000B2                     OSCSTAT1        equ	178	;# 
  7807   0000B3                     OSCEN           equ	179	;# 
  7808   0000B4                     PRLOCK          equ	180	;# 
  7809   0000B5                     SCANPR          equ	181	;# 
  7810   0000B6                     DMA1PR          equ	182	;# 
  7811   0000B7                     DMA2PR          equ	183	;# 
  7812   0000B8                     DMA3PR          equ	184	;# 
  7813   0000B9                     DMA4PR          equ	185	;# 
  7814   0000BE                     MAINPR          equ	190	;# 
  7815   0000BF                     ISRPR           equ	191	;# 
  7816   0000D4                     CLCDATA         equ	212	;# 
  7817   0000D5                     CLCSELECT       equ	213	;# 
  7818   0000D6                     CLCnCON         equ	214	;# 
  7819   0000D7                     CLCnPOL         equ	215	;# 
  7820   0000D8                     CLCnSEL0        equ	216	;# 
  7821   0000D9                     CLCnSEL1        equ	217	;# 
  7822   0000DA                     CLCnSEL2        equ	218	;# 
  7823   0000DB                     CLCnSEL3        equ	219	;# 
  7824   0000DC                     CLCnGLS0        equ	220	;# 
  7825   0000DD                     CLCnGLS1        equ	221	;# 
  7826   0000DE                     CLCnGLS2        equ	222	;# 
  7827   0000DF                     CLCnGLS3        equ	223	;# 
  7828   0000E8                     DMASELECT       equ	232	;# 
  7829   0000E9                     DMAnBUF         equ	233	;# 
  7830   0000EA                     DMAnDCNT        equ	234	;# 
  7831   0000EA                     DMAnDCNTL       equ	234	;# 
  7832   0000EB                     DMAnDCNTH       equ	235	;# 
  7833   0000EC                     DMAnDPTR        equ	236	;# 
  7834   0000EC                     DMAnDPTRL       equ	236	;# 
  7835   0000ED                     DMAnDPTRH       equ	237	;# 
  7836   0000EE                     DMAnDSZ         equ	238	;# 
  7837   0000EE                     DMAnDSZL        equ	238	;# 
  7838   0000EF                     DMAnDSZH        equ	239	;# 
  7839   0000F0                     DMAnDSA         equ	240	;# 
  7840   0000F0                     DMAnDSAL        equ	240	;# 
  7841   0000F1                     DMAnDSAH        equ	241	;# 
  7842   0000F2                     DMAnSCNT        equ	242	;# 
  7843   0000F2                     DMAnSCNTL       equ	242	;# 
  7844   0000F3                     DMAnSCNTH       equ	243	;# 
  7845   0000F4                     DMAnSPTR        equ	244	;# 
  7846   0000F4                     DMAnSPTRL       equ	244	;# 
  7847   0000F5                     DMAnSPTRH       equ	245	;# 
  7848   0000F6                     DMAnSPTRU       equ	246	;# 
  7849   0000F7                     DMAnSSZ         equ	247	;# 
  7850   0000F7                     DMAnSSZL        equ	247	;# 
  7851   0000F8                     DMAnSSZH        equ	248	;# 
  7852   0000F9                     DMAnSSA         equ	249	;# 
  7853   0000F9                     DMAnSSAL        equ	249	;# 
  7854   0000FA                     DMAnSSAH        equ	250	;# 
  7855   0000FB                     DMAnSSAU        equ	251	;# 
  7856   0000FC                     DMAnCON0        equ	252	;# 
  7857   0000FD                     DMAnCON1        equ	253	;# 
  7858   0000FE                     DMAnAIRQ        equ	254	;# 
  7859   0000FF                     DMAnSIRQ        equ	255	;# 
  7860   000200                     PPSLOCK         equ	512	;# 
  7861   000201                     RA0PPS          equ	513	;# 
  7862   000202                     RA1PPS          equ	514	;# 
  7863   000203                     RA2PPS          equ	515	;# 
  7864   000205                     RA4PPS          equ	517	;# 
  7865   000206                     RA5PPS          equ	518	;# 
  7866   00020D                     RB4PPS          equ	525	;# 
  7867   00020E                     RB5PPS          equ	526	;# 
  7868   00020F                     RB6PPS          equ	527	;# 
  7869   000210                     RB7PPS          equ	528	;# 
  7870   000211                     RC0PPS          equ	529	;# 
  7871   000212                     RC1PPS          equ	530	;# 
  7872   000213                     RC2PPS          equ	531	;# 
  7873   000214                     RC3PPS          equ	532	;# 
  7874   000215                     RC4PPS          equ	533	;# 
  7875   000216                     RC5PPS          equ	534	;# 
  7876   000217                     RC6PPS          equ	535	;# 
  7877   000218                     RC7PPS          equ	536	;# 
  7878   00023E                     INT0PPS         equ	574	;# 
  7879   00023F                     INT1PPS         equ	575	;# 
  7880   000240                     INT2PPS         equ	576	;# 
  7881   000241                     T0CKIPPS        equ	577	;# 
  7882   000242                     T1CKIPPS        equ	578	;# 
  7883   000243                     T1GPPS          equ	579	;# 
  7884   000244                     T3CKIPPS        equ	580	;# 
  7885   000245                     T3GPPS          equ	581	;# 
  7886   000248                     T2INPPS         equ	584	;# 
  7887   000249                     T4INPPS         equ	585	;# 
  7888   00024F                     CCP1PPS         equ	591	;# 
  7889   000251                     PWM1ERSPPS      equ	593	;# 
  7890   000252                     PWM2ERSPPS      equ	594	;# 
  7891   000253                     PWM3ERSPPS      equ	595	;# 
  7892   000257                     PWMIN0PPS       equ	599	;# 
  7893   000258                     PWMIN1PPS       equ	600	;# 
  7894   000259                     SMT1WINPPS      equ	601	;# 
  7895   00025A                     SMT1SIGPPS      equ	602	;# 
  7896   00025B                     CWG1PPS         equ	603	;# 
  7897   00025B                     CWG1INPPS       equ	603	;# 
  7898   00025E                     MD1CARLPPS      equ	606	;# 
  7899   00025E                     MDCARLPPS       equ	606	;# 
  7900   00025F                     MD1CARHPPS      equ	607	;# 
  7901   00025F                     MDCARHPPS       equ	607	;# 
  7902   000260                     MD1SRCPPS       equ	608	;# 
  7903   000260                     MDSRCPPS        equ	608	;# 
  7904   000261                     CLCIN0PPS       equ	609	;# 
  7905   000262                     CLCIN1PPS       equ	610	;# 
  7906   000263                     CLCIN2PPS       equ	611	;# 
  7907   000264                     CLCIN3PPS       equ	612	;# 
  7908   000269                     ADACTPPS        equ	617	;# 
  7909   00026A                     SPI1SCKPPS      equ	618	;# 
  7910   00026B                     SPI1SDIPPS      equ	619	;# 
  7911   00026C                     SPI1SSPPS       equ	620	;# 
  7912   00026D                     SPI2SCKPPS      equ	621	;# 
  7913   00026E                     SPI2SDIPPS      equ	622	;# 
  7914   00026F                     SPI2SSPPS       equ	623	;# 
  7915   000270                     I2C1SDAPPS      equ	624	;# 
  7916   000271                     I2C1SCLPPS      equ	625	;# 
  7917   000272                     U1RXPPS         equ	626	;# 
  7918   000273                     U1CTSPPS        equ	627	;# 
  7919   000274                     U2RXPPS         equ	628	;# 
  7920   000275                     U2CTSPPS        equ	629	;# 
  7921   000276                     U3RXPPS         equ	630	;# 
  7922   000277                     U3CTSPPS        equ	631	;# 
  7923   000286                     RB6I2C          equ	646	;# 
  7924   000287                     RB4I2C          equ	647	;# 
  7925   00028A                     I2C1RXB         equ	650	;# 
  7926   00028B                     I2C1TXB         equ	651	;# 
  7927   00028C                     I2C1CNTL        equ	652	;# 
  7928   00028D                     I2C1CNTH        equ	653	;# 
  7929   00028E                     I2C1ADB0        equ	654	;# 
  7930   00028F                     I2C1ADB1        equ	655	;# 
  7931   000290                     I2C1ADR0        equ	656	;# 
  7932   000291                     I2C1ADR1        equ	657	;# 
  7933   000292                     I2C1ADR2        equ	658	;# 
  7934   000293                     I2C1ADR3        equ	659	;# 
  7935   000294                     I2C1CON0        equ	660	;# 
  7936   000295                     I2C1CON1        equ	661	;# 
  7937   000296                     I2C1CON2        equ	662	;# 
  7938   000297                     I2C1ERR         equ	663	;# 
  7939   000298                     I2C1STAT0       equ	664	;# 
  7940   000299                     I2C1STAT1       equ	665	;# 
  7941   00029A                     I2C1PIR         equ	666	;# 
  7942   00029B                     I2C1PIE         equ	667	;# 
  7943   00029C                     I2C1BTO         equ	668	;# 
  7944   00029D                     I2C1BAUD        equ	669	;# 
  7945   00029E                     I2C1CLK         equ	670	;# 
  7946   00029F                     I2C1BTOC        equ	671	;# 
  7947   0002A1                     U1RXB           equ	673	;# 
  7948   0002A1                     U1RXBL          equ	673	;# 
  7949   0002A2                     U1RXCHK         equ	674	;# 
  7950   0002A3                     U1TXB           equ	675	;# 
  7951   0002A3                     U1TXBL          equ	675	;# 
  7952   0002A4                     U1TXCHK         equ	676	;# 
  7953   0002A5                     U1P1            equ	677	;# 
  7954   0002A5                     U1P1L           equ	677	;# 
  7955   0002A6                     U1P1H           equ	678	;# 
  7956   0002A7                     U1P2            equ	679	;# 
  7957   0002A7                     U1P2L           equ	679	;# 
  7958   0002A8                     U1P2H           equ	680	;# 
  7959   0002A9                     U1P3            equ	681	;# 
  7960   0002A9                     U1P3L           equ	681	;# 
  7961   0002AA                     U1P3H           equ	682	;# 
  7962   0002AB                     U1CON0          equ	683	;# 
  7963   0002AC                     U1CON1          equ	684	;# 
  7964   0002AD                     U1CON2          equ	685	;# 
  7965   0002AE                     U1BRG           equ	686	;# 
  7966   0002AE                     U1BRGL          equ	686	;# 
  7967   0002AF                     U1BRGH          equ	687	;# 
  7968   0002B0                     U1FIFO          equ	688	;# 
  7969   0002B1                     U1UIR           equ	689	;# 
  7970   0002B2                     U1ERRIR         equ	690	;# 
  7971   0002B3                     U1ERRIE         equ	691	;# 
  7972   0002B4                     U2RXB           equ	692	;# 
  7973   0002B4                     U2RXBL          equ	692	;# 
  7974   0002B6                     U2TXB           equ	694	;# 
  7975   0002B6                     U2TXBL          equ	694	;# 
  7976   0002B8                     U2P1            equ	696	;# 
  7977   0002B8                     U2P1L           equ	696	;# 
  7978   0002BA                     U2P2            equ	698	;# 
  7979   0002BA                     U2P2L           equ	698	;# 
  7980   0002BC                     U2P3            equ	700	;# 
  7981   0002BC                     U2P3L           equ	700	;# 
  7982   0002BE                     U2CON0          equ	702	;# 
  7983   0002BF                     U2CON1          equ	703	;# 
  7984   0002C0                     U2CON2          equ	704	;# 
  7985   0002C1                     U2BRG           equ	705	;# 
  7986   0002C1                     U2BRGL          equ	705	;# 
  7987   0002C2                     U2BRGH          equ	706	;# 
  7988   0002C3                     U2FIFO          equ	707	;# 
  7989   0002C4                     U2UIR           equ	708	;# 
  7990   0002C5                     U2ERRIR         equ	709	;# 
  7991   0002C6                     U2ERRIE         equ	710	;# 
  7992   0002C7                     U3RXB           equ	711	;# 
  7993   0002C7                     U3RXBL          equ	711	;# 
  7994   0002C9                     U3TXB           equ	713	;# 
  7995   0002C9                     U3TXBL          equ	713	;# 
  7996   0002CB                     U3P1            equ	715	;# 
  7997   0002CB                     U3P1L           equ	715	;# 
  7998   0002CD                     U3P2            equ	717	;# 
  7999   0002CD                     U3P2L           equ	717	;# 
  8000   0002CF                     U3P3            equ	719	;# 
  8001   0002CF                     U3P3L           equ	719	;# 
  8002   0002D1                     U3CON0          equ	721	;# 
  8003   0002D2                     U3CON1          equ	722	;# 
  8004   0002D3                     U3CON2          equ	723	;# 
  8005   0002D4                     U3BRG           equ	724	;# 
  8006   0002D4                     U3BRGL          equ	724	;# 
  8007   0002D5                     U3BRGH          equ	725	;# 
  8008   0002D6                     U3FIFO          equ	726	;# 
  8009   0002D7                     U3UIR           equ	727	;# 
  8010   0002D8                     U3ERRIR         equ	728	;# 
  8011   0002D9                     U3ERRIE         equ	729	;# 
  8012   000300                     SMT1TMR         equ	768	;# 
  8013   000300                     SMT1TMRL        equ	768	;# 
  8014   000301                     SMT1TMRH        equ	769	;# 
  8015   000302                     SMT1TMRU        equ	770	;# 
  8016   000303                     SMT1CPR         equ	771	;# 
  8017   000303                     SMT1CPRL        equ	771	;# 
  8018   000304                     SMT1CPRH        equ	772	;# 
  8019   000305                     SMT1CPRU        equ	773	;# 
  8020   000306                     SMT1CPW         equ	774	;# 
  8021   000306                     SMT1CPWL        equ	774	;# 
  8022   000307                     SMT1CPWH        equ	775	;# 
  8023   000308                     SMT1CPWU        equ	776	;# 
  8024   000309                     SMT1PR          equ	777	;# 
  8025   000309                     SMT1PRL         equ	777	;# 
  8026   00030A                     SMT1PRH         equ	778	;# 
  8027   00030B                     SMT1PRU         equ	779	;# 
  8028   00030C                     SMT1CON0        equ	780	;# 
  8029   00030D                     SMT1CON1        equ	781	;# 
  8030   00030E                     SMT1STAT        equ	782	;# 
  8031   00030F                     SMT1CLK         equ	783	;# 
  8032   000310                     SMT1SIG         equ	784	;# 
  8033   000311                     SMT1WIN         equ	785	;# 
  8034   000312                     TMR1            equ	786	;# 
  8035   000312                     TMR1L           equ	786	;# 
  8036   000313                     TMR1H           equ	787	;# 
  8037   000314                     T1CON           equ	788	;# 
  8038   000314                     TMR1CON         equ	788	;# 
  8039   000315                     T1GCON          equ	789	;# 
  8040   000315                     TMR1GCON        equ	789	;# 
  8041   000316                     T1GATE          equ	790	;# 
  8042   000316                     TMR1GATE        equ	790	;# 
  8043   000317                     T1CLK           equ	791	;# 
  8044   000317                     TMR1CLK         equ	791	;# 
  8045   000317                     PR1             equ	791	;# 
  8046   000318                     TMR0L           equ	792	;# 
  8047   000318                     TMR0            equ	792	;# 
  8048   000319                     TMR0H           equ	793	;# 
  8049   000319                     PR0             equ	793	;# 
  8050   00031A                     T0CON0          equ	794	;# 
  8051   00031B                     T0CON1          equ	795	;# 
  8052   00031C                     T2TMR           equ	796	;# 
  8053   00031C                     TMR2            equ	796	;# 
  8054   00031D                     T2PR            equ	797	;# 
  8055   00031D                     PR2             equ	797	;# 
  8056   00031E                     T2CON           equ	798	;# 
  8057   00031F                     T2HLT           equ	799	;# 
  8058   000320                     T2CLKCON        equ	800	;# 
  8059   000320                     T2CLK           equ	800	;# 
  8060   000321                     T2RST           equ	801	;# 
  8061   000323                     TMR3            equ	803	;# 
  8062   000323                     TMR3L           equ	803	;# 
  8063   000324                     TMR3H           equ	804	;# 
  8064   000325                     T3CON           equ	805	;# 
  8065   000325                     TMR3CON         equ	805	;# 
  8066   000326                     T3GCON          equ	806	;# 
  8067   000326                     TMR3GCON        equ	806	;# 
  8068   000327                     T3GATE          equ	807	;# 
  8069   000327                     TMR3GATE        equ	807	;# 
  8070   000328                     T3CLK           equ	808	;# 
  8071   000328                     TMR3CLK         equ	808	;# 
  8072   000328                     PR3             equ	808	;# 
  8073   000329                     T4TMR           equ	809	;# 
  8074   000329                     TMR4            equ	809	;# 
  8075   00032A                     T4PR            equ	810	;# 
  8076   00032A                     PR4             equ	810	;# 
  8077   00032B                     T4CON           equ	811	;# 
  8078   00032C                     T4HLT           equ	812	;# 
  8079   00032D                     T4CLKCON        equ	813	;# 
  8080   00032D                     T4CLK           equ	813	;# 
  8081   00032E                     T4RST           equ	814	;# 
  8082   000340                     CCPR1           equ	832	;# 
  8083   000340                     CCPR1L          equ	832	;# 
  8084   000341                     CCPR1H          equ	833	;# 
  8085   000342                     CCP1CON         equ	834	;# 
  8086   000343                     CCP1CAP         equ	835	;# 
  8087   00034C                     CCPTMRS0        equ	844	;# 
  8088   00034E                     CRCDATA         equ	846	;# 
  8089   00034E                     CRCDATAL        equ	846	;# 
  8090   00034F                     CRCDATAH        equ	847	;# 
  8091   000350                     CRCDATAU        equ	848	;# 
  8092   000351                     CRCDATAT        equ	849	;# 
  8093   000352                     CRCOUT          equ	850	;# 
  8094   000352                     CRCSHFT         equ	850	;# 
  8095   000352                     CRCXOR          equ	850	;# 
  8096   000352                     CRCOUTL         equ	850	;# 
  8097   000352                     CRCSHFTL        equ	850	;# 
  8098   000352                     CRCSHIFTL       equ	850	;# 
  8099   000352                     CRCXORL         equ	850	;# 
  8100   000353                     CRCOUTH         equ	851	;# 
  8101   000353                     CRCSHFTH        equ	851	;# 
  8102   000353                     CRCSHIFTH       equ	851	;# 
  8103   000353                     CRCXORH         equ	851	;# 
  8104   000354                     CRCOUTU         equ	852	;# 
  8105   000354                     CRCSHFTU        equ	852	;# 
  8106   000354                     CRCSHIFTU       equ	852	;# 
  8107   000354                     CRCXORU         equ	852	;# 
  8108   000355                     CRCOUTT         equ	853	;# 
  8109   000355                     CRCSHFTT        equ	853	;# 
  8110   000355                     CRCSHIFTT       equ	853	;# 
  8111   000355                     CRCXORT         equ	853	;# 
  8112   000356                     CRCCON0         equ	854	;# 
  8113   000357                     CRCCON1         equ	855	;# 
  8114   000358                     CRCCON2         equ	856	;# 
  8115   00035A                     SCANLADR        equ	858	;# 
  8116   00035A                     SCANLADRL       equ	858	;# 
  8117   00035B                     SCANLADRH       equ	859	;# 
  8118   00035C                     SCANLADRU       equ	860	;# 
  8119   00035D                     SCANHADR        equ	861	;# 
  8120   00035D                     SCANHADRL       equ	861	;# 
  8121   00035E                     SCANHADRH       equ	862	;# 
  8122   00035F                     SCANHADRU       equ	863	;# 
  8123   000360                     SCANCON0        equ	864	;# 
  8124   000361                     SCANTRIG        equ	865	;# 
  8125   000367                     IPR0            equ	871	;# 
  8126   000368                     IPR1            equ	872	;# 
  8127   000369                     IPR2            equ	873	;# 
  8128   00036A                     IPR3            equ	874	;# 
  8129   00036B                     IPR4            equ	875	;# 
  8130   00036C                     IPR5            equ	876	;# 
  8131   00036D                     IPR6            equ	877	;# 
  8132   00036E                     IPR7            equ	878	;# 
  8133   00036F                     IPR8            equ	879	;# 
  8134   000370                     IPR9            equ	880	;# 
  8135   000371                     IPR10           equ	881	;# 
  8136   000373                     STATUS_CSHAD    equ	883	;# 
  8137   000374                     WREG_CSHAD      equ	884	;# 
  8138   000375                     BSR_CSHAD       equ	885	;# 
  8139   000376                     SHADCON         equ	886	;# 
  8140   000377                     STATUS_SHAD     equ	887	;# 
  8141   000378                     WREG_SHAD       equ	888	;# 
  8142   000379                     BSR_SHAD        equ	889	;# 
  8143   00037A                     PCLATH_SHAD     equ	890	;# 
  8144   00037B                     PCLATU_SHAD     equ	891	;# 
  8145   00037C                     FSR0SH          equ	892	;# 
  8146   00037C                     FSR0L_SHAD      equ	892	;# 
  8147   00037D                     FSR0H_SHAD      equ	893	;# 
  8148   00037E                     FSR1SH          equ	894	;# 
  8149   00037E                     FSR1L_SHAD      equ	894	;# 
  8150   00037F                     FSR1H_SHAD      equ	895	;# 
  8151   000380                     FSR2SH          equ	896	;# 
  8152   000380                     FSR2L_SHAD      equ	896	;# 
  8153   000381                     FSR2H_SHAD      equ	897	;# 
  8154   000382                     PRODSH          equ	898	;# 
  8155   000382                     PRODL_SHAD      equ	898	;# 
  8156   000383                     PRODH_SHAD      equ	899	;# 
  8157   0003BC                     CWG1CLK         equ	956	;# 
  8158   0003BC                     CWG1CLKCON      equ	956	;# 
  8159   0003BD                     CWG1ISM         equ	957	;# 
  8160   0003BD                     CWG1DAT         equ	957	;# 
  8161   0003BE                     CWG1DBR         equ	958	;# 
  8162   0003BF                     CWG1DBF         equ	959	;# 
  8163   0003C0                     CWG1CON0        equ	960	;# 
  8164   0003C1                     CWG1CON1        equ	961	;# 
  8165   0003C2                     CWG1AS0         equ	962	;# 
  8166   0003C3                     CWG1AS1         equ	963	;# 
  8167   0003C4                     CWG1STR         equ	964	;# 
  8168   0003D7                     FVRCON          equ	983	;# 
  8169   0003D8                     ADCPCON         equ	984	;# 
  8170   0003D8                     ADCP            equ	984	;# 
  8171   0003D9                     ADLTH           equ	985	;# 
  8172   0003D9                     ADLTHL          equ	985	;# 
  8173   0003DA                     ADLTHH          equ	986	;# 
  8174   0003DB                     ADUTH           equ	987	;# 
  8175   0003DB                     ADUTHL          equ	987	;# 
  8176   0003DC                     ADUTHH          equ	988	;# 
  8177   0003DD                     ADERR           equ	989	;# 
  8178   0003DD                     ADERRL          equ	989	;# 
  8179   0003DE                     ADERRH          equ	990	;# 
  8180   0003DF                     ADSTPT          equ	991	;# 
  8181   0003DF                     ADSTPTL         equ	991	;# 
  8182   0003E0                     ADSTPTH         equ	992	;# 
  8183   0003E1                     ADFLTR          equ	993	;# 
  8184   0003E1                     ADFLTRL         equ	993	;# 
  8185   0003E2                     ADFLTRH         equ	994	;# 
  8186   0003E3                     ADACC           equ	995	;# 
  8187   0003E3                     ADACCL          equ	995	;# 
  8188   0003E4                     ADACCH          equ	996	;# 
  8189   0003E5                     ADACCU          equ	997	;# 
  8190   0003E6                     ADCNT           equ	998	;# 
  8191   0003E7                     ADRPT           equ	999	;# 
  8192   0003E8                     ADPREV          equ	1000	;# 
  8193   0003E8                     ADPREVL         equ	1000	;# 
  8194   0003E9                     ADPREVH         equ	1001	;# 
  8195   0003EA                     ADRES           equ	1002	;# 
  8196   0003EA                     ADRESL          equ	1002	;# 
  8197   0003EB                     ADRESH          equ	1003	;# 
  8198   0003EC                     ADPCH           equ	1004	;# 
  8199   0003EE                     ADACQ           equ	1006	;# 
  8200   0003EE                     ADACQL          equ	1006	;# 
  8201   0003EF                     ADACQH          equ	1007	;# 
  8202   0003F0                     ADCAP           equ	1008	;# 
  8203   0003F1                     ADPRE           equ	1009	;# 
  8204   0003F1                     ADPREL          equ	1009	;# 
  8205   0003F2                     ADPREH          equ	1010	;# 
  8206   0003F3                     ADCON0          equ	1011	;# 
  8207   0003F4                     ADCON1          equ	1012	;# 
  8208   0003F5                     ADCON2          equ	1013	;# 
  8209   0003F6                     ADCON3          equ	1014	;# 
  8210   0003F7                     ADSTAT          equ	1015	;# 
  8211   0003F8                     ADREF           equ	1016	;# 
  8212   0003F9                     ADACT           equ	1017	;# 
  8213   0003FA                     ADCLK           equ	1018	;# 
  8214   000400                     ANSELA          equ	1024	;# 
  8215   000401                     WPUA            equ	1025	;# 
  8216   000402                     ODCONA          equ	1026	;# 
  8217   000403                     SLRCONA         equ	1027	;# 
  8218   000404                     INLVLA          equ	1028	;# 
  8219   000405                     IOCAP           equ	1029	;# 
  8220   000406                     IOCAN           equ	1030	;# 
  8221   000407                     IOCAF           equ	1031	;# 
  8222   000408                     ANSELB          equ	1032	;# 
  8223   000409                     WPUB            equ	1033	;# 
  8224   00040A                     ODCONB          equ	1034	;# 
  8225   00040B                     SLRCONB         equ	1035	;# 
  8226   00040C                     INLVLB          equ	1036	;# 
  8227   00040D                     IOCBP           equ	1037	;# 
  8228   00040E                     IOCBN           equ	1038	;# 
  8229   00040F                     IOCBF           equ	1039	;# 
  8230   000410                     ANSELC          equ	1040	;# 
  8231   000411                     WPUC            equ	1041	;# 
  8232   000412                     ODCONC          equ	1042	;# 
  8233   000413                     SLRCONC         equ	1043	;# 
  8234   000414                     INLVLC          equ	1044	;# 
  8235   000415                     IOCCP           equ	1045	;# 
  8236   000416                     IOCCN           equ	1046	;# 
  8237   000417                     IOCCF           equ	1047	;# 
  8238   000440                     NCO1ACC         equ	1088	;# 
  8239   000440                     NCO1ACCL        equ	1088	;# 
  8240   000441                     NCO1ACCH        equ	1089	;# 
  8241   000442                     NCO1ACCU        equ	1090	;# 
  8242   000443                     NCO1INC         equ	1091	;# 
  8243   000443                     NCO1INCL        equ	1091	;# 
  8244   000444                     NCO1INCH        equ	1092	;# 
  8245   000445                     NCO1INCU        equ	1093	;# 
  8246   000446                     NCO1CON         equ	1094	;# 
  8247   000447                     NCO1CLK         equ	1095	;# 
  8248   000458                     FSCMCON         equ	1112	;# 
  8249   000459                     IVTLOCK         equ	1113	;# 
  8250   00045A                     IVTAD           equ	1114	;# 
  8251   00045A                     IVTADL          equ	1114	;# 
  8252   00045B                     IVTADH          equ	1115	;# 
  8253   00045C                     IVTADU          equ	1116	;# 
  8254   00045D                     IVTBASE         equ	1117	;# 
  8255   00045D                     IVTBASEL        equ	1117	;# 
  8256   00045E                     IVTBASEH        equ	1118	;# 
  8257   00045F                     IVTBASEU        equ	1119	;# 
  8258   000460                     PWM1ERS         equ	1120	;# 
  8259   000461                     PWM1CLK         equ	1121	;# 
  8260   000462                     PWM1LDS         equ	1122	;# 
  8261   000463                     PWM1PR          equ	1123	;# 
  8262   000463                     PWM1PRL         equ	1123	;# 
  8263   000464                     PWM1PRH         equ	1124	;# 
  8264   000465                     PWM1CPRE        equ	1125	;# 
  8265   000466                     PWM1PIPOS       equ	1126	;# 
  8266   000467                     PWM1GIR         equ	1127	;# 
  8267   000468                     PWM1GIE         equ	1128	;# 
  8268   000469                     PWM1CON         equ	1129	;# 
  8269   00046A                     PWM1S1CFG       equ	1130	;# 
  8270   00046B                     PWM1S1P1        equ	1131	;# 
  8271   00046B                     PWM1S1P1L       equ	1131	;# 
  8272   00046C                     PWM1S1P1H       equ	1132	;# 
  8273   00046D                     PWM1S1P2        equ	1133	;# 
  8274   00046D                     PWM1S1P2L       equ	1133	;# 
  8275   00046E                     PWM1S1P2H       equ	1134	;# 
  8276   00046F                     PWM2ERS         equ	1135	;# 
  8277   000470                     PWM2CLK         equ	1136	;# 
  8278   000471                     PWM2LDS         equ	1137	;# 
  8279   000472                     PWM2PR          equ	1138	;# 
  8280   000472                     PWM2PRL         equ	1138	;# 
  8281   000473                     PWM2PRH         equ	1139	;# 
  8282   000474                     PWM2CPRE        equ	1140	;# 
  8283   000475                     PWM2PIPOS       equ	1141	;# 
  8284   000476                     PWM2GIR         equ	1142	;# 
  8285   000477                     PWM2GIE         equ	1143	;# 
  8286   000478                     PWM2CON         equ	1144	;# 
  8287   000479                     PWM2S1CFG       equ	1145	;# 
  8288   00047A                     PWM2S1P1        equ	1146	;# 
  8289   00047A                     PWM2S1P1L       equ	1146	;# 
  8290   00047B                     PWM2S1P1H       equ	1147	;# 
  8291   00047C                     PWM2S1P2        equ	1148	;# 
  8292   00047C                     PWM2S1P2L       equ	1148	;# 
  8293   00047D                     PWM2S1P2H       equ	1149	;# 
  8294   00047E                     PWM3ERS         equ	1150	;# 
  8295   00047F                     PWM3CLK         equ	1151	;# 
  8296   000480                     PWM3LDS         equ	1152	;# 
  8297   000481                     PWM3PR          equ	1153	;# 
  8298   000481                     PWM3PRL         equ	1153	;# 
  8299   000482                     PWM3PRH         equ	1154	;# 
  8300   000483                     PWM3CPRE        equ	1155	;# 
  8301   000484                     PWM3PIPOS       equ	1156	;# 
  8302   000485                     PWM3GIR         equ	1157	;# 
  8303   000486                     PWM3GIE         equ	1158	;# 
  8304   000487                     PWM3CON         equ	1159	;# 
  8305   000488                     PWM3S1CFG       equ	1160	;# 
  8306   000489                     PWM3S1P1        equ	1161	;# 
  8307   000489                     PWM3S1P1L       equ	1161	;# 
  8308   00048A                     PWM3S1P1H       equ	1162	;# 
  8309   00048B                     PWM3S1P2        equ	1163	;# 
  8310   00048B                     PWM3S1P2L       equ	1163	;# 
  8311   00048C                     PWM3S1P2H       equ	1164	;# 
  8312   00049C                     PWMLOAD         equ	1180	;# 
  8313   00049D                     PWMEN           equ	1181	;# 
  8314   0004A8                     PIE0            equ	1192	;# 
  8315   0004A9                     PIE1            equ	1193	;# 
  8316   0004AA                     PIE2            equ	1194	;# 
  8317   0004AB                     PIE3            equ	1195	;# 
  8318   0004AC                     PIE4            equ	1196	;# 
  8319   0004AD                     PIE5            equ	1197	;# 
  8320   0004AE                     PIE6            equ	1198	;# 
  8321   0004AF                     PIE7            equ	1199	;# 
  8322   0004B0                     PIE8            equ	1200	;# 
  8323   0004B1                     PIE9            equ	1201	;# 
  8324   0004B2                     PIE10           equ	1202	;# 
  8325   0004B3                     PIR0            equ	1203	;# 
  8326   0004B4                     PIR1            equ	1204	;# 
  8327   0004B5                     PIR2            equ	1205	;# 
  8328   0004B6                     PIR3            equ	1206	;# 
  8329   0004B7                     PIR4            equ	1207	;# 
  8330   0004B8                     PIR5            equ	1208	;# 
  8331   0004B9                     PIR6            equ	1209	;# 
  8332   0004BA                     PIR7            equ	1210	;# 
  8333   0004BB                     PIR8            equ	1211	;# 
  8334   0004BC                     PIR9            equ	1212	;# 
  8335   0004BD                     PIR10           equ	1213	;# 
  8336   0004BE                     LATA            equ	1214	;# 
  8337   0004BF                     LATB            equ	1215	;# 
  8338   0004C0                     LATC            equ	1216	;# 
  8339   0004C6                     TRISA           equ	1222	;# 
  8340   0004C7                     TRISB           equ	1223	;# 
  8341   0004C8                     TRISC           equ	1224	;# 
  8342   0004CE                     PORTA           equ	1230	;# 
  8343   0004CF                     PORTB           equ	1231	;# 
  8344   0004D0                     PORTC           equ	1232	;# 
  8345   0004D6                     INTCON0         equ	1238	;# 
  8346   0004D7                     INTCON1         equ	1239	;# 
  8347   0004D8                     STATUS          equ	1240	;# 
  8348   0004D9                     FSR2            equ	1241	;# 
  8349   0004D9                     FSR2L           equ	1241	;# 
  8350   0004DA                     FSR2H           equ	1242	;# 
  8351   0004DB                     PLUSW2          equ	1243	;# 
  8352   0004DC                     PREINC2         equ	1244	;# 
  8353   0004DD                     POSTDEC2        equ	1245	;# 
  8354   0004DE                     POSTINC2        equ	1246	;# 
  8355   0004DF                     INDF2           equ	1247	;# 
  8356   0004E0                     BSR             equ	1248	;# 
  8357   0004E1                     FSR1            equ	1249	;# 
  8358   0004E1                     FSR1L           equ	1249	;# 
  8359   0004E2                     FSR1H           equ	1250	;# 
  8360   0004E3                     PLUSW1          equ	1251	;# 
  8361   0004E4                     PREINC1         equ	1252	;# 
  8362   0004E5                     POSTDEC1        equ	1253	;# 
  8363   0004E6                     POSTINC1        equ	1254	;# 
  8364   0004E7                     INDF1           equ	1255	;# 
  8365   0004E8                     WREG            equ	1256	;# 
  8366   0004E9                     FSR0            equ	1257	;# 
  8367   0004E9                     FSR0L           equ	1257	;# 
  8368   0004EA                     FSR0H           equ	1258	;# 
  8369   0004EB                     PLUSW0          equ	1259	;# 
  8370   0004EC                     PREINC0         equ	1260	;# 
  8371   0004ED                     POSTDEC0        equ	1261	;# 
  8372   0004EE                     POSTINC0        equ	1262	;# 
  8373   0004EF                     INDF0           equ	1263	;# 
  8374   0004F0                     PCON0           equ	1264	;# 
  8375   0004F1                     PCON1           equ	1265	;# 
  8376   0004F2                     CPUDOZE         equ	1266	;# 
  8377   0004F3                     PROD            equ	1267	;# 
  8378   0004F3                     PRODL           equ	1267	;# 
  8379   0004F4                     PRODH           equ	1268	;# 
  8380   0004F5                     TABLAT          equ	1269	;# 
  8381   0004F6                     TBLPTR          equ	1270	;# 
  8382   0004F6                     TBLPTRL         equ	1270	;# 
  8383   0004F7                     TBLPTRH         equ	1271	;# 
  8384   0004F8                     TBLPTRU         equ	1272	;# 
  8385   0004F9                     PCLAT           equ	1273	;# 
  8386   0004F9                     PCL             equ	1273	;# 
  8387   0004FA                     PCLATH          equ	1274	;# 
  8388   0004FB                     PCLATU          equ	1275	;# 
  8389   0004FC                     STKPTR          equ	1276	;# 
  8390   0004FD                     TOS             equ	1277	;# 
  8391   0004FD                     TOSL            equ	1277	;# 
  8392   0004FE                     TOSH            equ	1278	;# 
  8393   0004FF                     TOSU            equ	1279	;# 
  8394   000039                     CLKRCON         equ	57	;# 
  8395   00003A                     CLKRCLK         equ	58	;# 
  8396   000040                     NVMCON0         equ	64	;# 
  8397   000041                     NVMCON1         equ	65	;# 
  8398   000042                     NVMLOCK         equ	66	;# 
  8399   000043                     NVMADR          equ	67	;# 
  8400   000043                     NVMADRL         equ	67	;# 
  8401   000044                     NVMADRH         equ	68	;# 
  8402   000045                     NVMADRU         equ	69	;# 
  8403   000046                     NVMDAT          equ	70	;# 
  8404   000046                     NVMDATL         equ	70	;# 
  8405   000047                     NVMDATH         equ	71	;# 
  8406   000048                     VREGCON         equ	72	;# 
  8407   000049                     BORCON          equ	73	;# 
  8408   00004A                     HLVDCON0        equ	74	;# 
  8409   00004B                     HLVDCON1        equ	75	;# 
  8410   00004C                     ZCDCON          equ	76	;# 
  8411   000063                     PMD0            equ	99	;# 
  8412   000064                     PMD1            equ	100	;# 
  8413   000065                     PMD2            equ	101	;# 
  8414   000066                     PMD3            equ	102	;# 
  8415   000067                     PMD4            equ	103	;# 
  8416   000068                     PMD5            equ	104	;# 
  8417   00006A                     MD1CON0         equ	106	;# 
  8418   00006B                     MD1CON1         equ	107	;# 
  8419   00006C                     MD1SRC          equ	108	;# 
  8420   00006D                     MD1CARL         equ	109	;# 
  8421   00006E                     MD1CARH         equ	110	;# 
  8422   00006F                     CMOUT           equ	111	;# 
  8423   000070                     CM1CON0         equ	112	;# 
  8424   000071                     CM1CON1         equ	113	;# 
  8425   000072                     CM1NCH          equ	114	;# 
  8426   000073                     CM1PCH          equ	115	;# 
  8427   000074                     CM2CON0         equ	116	;# 
  8428   000075                     CM2CON1         equ	117	;# 
  8429   000076                     CM2NCH          equ	118	;# 
  8430   000077                     CM2PCH          equ	119	;# 
  8431   000078                     WDTCON0         equ	120	;# 
  8432   000079                     WDTCON1         equ	121	;# 
  8433   00007A                     WDTPS           equ	122	;# 
  8434   00007A                     WDTPSL          equ	122	;# 
  8435   00007B                     WDTPSH          equ	123	;# 
  8436   00007C                     WDTTMR          equ	124	;# 
  8437   00007D                     DAC1DAT         equ	125	;# 
  8438   00007D                     DAC1DATL        equ	125	;# 
  8439   00007F                     DAC1CON         equ	127	;# 
  8440   000080                     SPI1RXB         equ	128	;# 
  8441   000081                     SPI1TXB         equ	129	;# 
  8442   000082                     SPI1TCNT        equ	130	;# 
  8443   000082                     SPI1TCNTL       equ	130	;# 
  8444   000083                     SPI1TCNTH       equ	131	;# 
  8445   000084                     SPI1CON0        equ	132	;# 
  8446   000085                     SPI1CON1        equ	133	;# 
  8447   000086                     SPI1CON2        equ	134	;# 
  8448   000087                     SPI1STATUS      equ	135	;# 
  8449   000088                     SPI1TWIDTH      equ	136	;# 
  8450   000089                     SPI1BAUD        equ	137	;# 
  8451   00008A                     SPI1INTF        equ	138	;# 
  8452   00008B                     SPI1INTE        equ	139	;# 
  8453   00008C                     SPI1CLK         equ	140	;# 
  8454   00008D                     SPI2RXB         equ	141	;# 
  8455   00008E                     SPI2TXB         equ	142	;# 
  8456   00008F                     SPI2TCNT        equ	143	;# 
  8457   00008F                     SPI2TCNTL       equ	143	;# 
  8458   000090                     SPI2TCNTH       equ	144	;# 
  8459   000091                     SPI2CON0        equ	145	;# 
  8460   000092                     SPI2CON1        equ	146	;# 
  8461   000093                     SPI2CON2        equ	147	;# 
  8462   000094                     SPI2STATUS      equ	148	;# 
  8463   000095                     SPI2TWIDTH      equ	149	;# 
  8464   000096                     SPI2BAUD        equ	150	;# 
  8465   000097                     SPI2INTF        equ	151	;# 
  8466   000098                     SPI2INTE        equ	152	;# 
  8467   000099                     SPI2CLK         equ	153	;# 
  8468   0000A0                     DAC2DAT         equ	160	;# 
  8469   0000A0                     DAC2DATL        equ	160	;# 
  8470   0000A2                     DAC2CON         equ	162	;# 
  8471   0000A3                     OPA1CON0        equ	163	;# 
  8472   0000A4                     OPA1CON1        equ	164	;# 
  8473   0000A5                     OPA1CON2        equ	165	;# 
  8474   0000A6                     OPA1CON3        equ	166	;# 
  8475   0000A7                     OPA1HWC         equ	167	;# 
  8476   0000A8                     OPA1OFFSET      equ	168	;# 
  8477   0000A9                     OPA1ORS         equ	169	;# 
  8478   0000AC                     ACTCON          equ	172	;# 
  8479   0000AD                     OSCCON1         equ	173	;# 
  8480   0000AE                     OSCCON2         equ	174	;# 
  8481   0000AF                     OSCCON3         equ	175	;# 
  8482   0000B0                     OSCTUNE         equ	176	;# 
  8483   0000B1                     OSCFRQ          equ	177	;# 
  8484   0000B1                     OSCFREQ         equ	177	;# 
  8485   0000B2                     OSCSTAT         equ	178	;# 
  8486   0000B2                     OSCSTAT1        equ	178	;# 
  8487   0000B3                     OSCEN           equ	179	;# 
  8488   0000B4                     PRLOCK          equ	180	;# 
  8489   0000B5                     SCANPR          equ	181	;# 
  8490   0000B6                     DMA1PR          equ	182	;# 
  8491   0000B7                     DMA2PR          equ	183	;# 
  8492   0000B8                     DMA3PR          equ	184	;# 
  8493   0000B9                     DMA4PR          equ	185	;# 
  8494   0000BE                     MAINPR          equ	190	;# 
  8495   0000BF                     ISRPR           equ	191	;# 
  8496   0000D4                     CLCDATA         equ	212	;# 
  8497   0000D5                     CLCSELECT       equ	213	;# 
  8498   0000D6                     CLCnCON         equ	214	;# 
  8499   0000D7                     CLCnPOL         equ	215	;# 
  8500   0000D8                     CLCnSEL0        equ	216	;# 
  8501   0000D9                     CLCnSEL1        equ	217	;# 
  8502   0000DA                     CLCnSEL2        equ	218	;# 
  8503   0000DB                     CLCnSEL3        equ	219	;# 
  8504   0000DC                     CLCnGLS0        equ	220	;# 
  8505   0000DD                     CLCnGLS1        equ	221	;# 
  8506   0000DE                     CLCnGLS2        equ	222	;# 
  8507   0000DF                     CLCnGLS3        equ	223	;# 
  8508   0000E8                     DMASELECT       equ	232	;# 
  8509   0000E9                     DMAnBUF         equ	233	;# 
  8510   0000EA                     DMAnDCNT        equ	234	;# 
  8511   0000EA                     DMAnDCNTL       equ	234	;# 
  8512   0000EB                     DMAnDCNTH       equ	235	;# 
  8513   0000EC                     DMAnDPTR        equ	236	;# 
  8514   0000EC                     DMAnDPTRL       equ	236	;# 
  8515   0000ED                     DMAnDPTRH       equ	237	;# 
  8516   0000EE                     DMAnDSZ         equ	238	;# 
  8517   0000EE                     DMAnDSZL        equ	238	;# 
  8518   0000EF                     DMAnDSZH        equ	239	;# 
  8519   0000F0                     DMAnDSA         equ	240	;# 
  8520   0000F0                     DMAnDSAL        equ	240	;# 
  8521   0000F1                     DMAnDSAH        equ	241	;# 
  8522   0000F2                     DMAnSCNT        equ	242	;# 
  8523   0000F2                     DMAnSCNTL       equ	242	;# 
  8524   0000F3                     DMAnSCNTH       equ	243	;# 
  8525   0000F4                     DMAnSPTR        equ	244	;# 
  8526   0000F4                     DMAnSPTRL       equ	244	;# 
  8527   0000F5                     DMAnSPTRH       equ	245	;# 
  8528   0000F6                     DMAnSPTRU       equ	246	;# 
  8529   0000F7                     DMAnSSZ         equ	247	;# 
  8530   0000F7                     DMAnSSZL        equ	247	;# 
  8531   0000F8                     DMAnSSZH        equ	248	;# 
  8532   0000F9                     DMAnSSA         equ	249	;# 
  8533   0000F9                     DMAnSSAL        equ	249	;# 
  8534   0000FA                     DMAnSSAH        equ	250	;# 
  8535   0000FB                     DMAnSSAU        equ	251	;# 
  8536   0000FC                     DMAnCON0        equ	252	;# 
  8537   0000FD                     DMAnCON1        equ	253	;# 
  8538   0000FE                     DMAnAIRQ        equ	254	;# 
  8539   0000FF                     DMAnSIRQ        equ	255	;# 
  8540   000200                     PPSLOCK         equ	512	;# 
  8541   000201                     RA0PPS          equ	513	;# 
  8542   000202                     RA1PPS          equ	514	;# 
  8543   000203                     RA2PPS          equ	515	;# 
  8544   000205                     RA4PPS          equ	517	;# 
  8545   000206                     RA5PPS          equ	518	;# 
  8546   00020D                     RB4PPS          equ	525	;# 
  8547   00020E                     RB5PPS          equ	526	;# 
  8548   00020F                     RB6PPS          equ	527	;# 
  8549   000210                     RB7PPS          equ	528	;# 
  8550   000211                     RC0PPS          equ	529	;# 
  8551   000212                     RC1PPS          equ	530	;# 
  8552   000213                     RC2PPS          equ	531	;# 
  8553   000214                     RC3PPS          equ	532	;# 
  8554   000215                     RC4PPS          equ	533	;# 
  8555   000216                     RC5PPS          equ	534	;# 
  8556   000217                     RC6PPS          equ	535	;# 
  8557   000218                     RC7PPS          equ	536	;# 
  8558   00023E                     INT0PPS         equ	574	;# 
  8559   00023F                     INT1PPS         equ	575	;# 
  8560   000240                     INT2PPS         equ	576	;# 
  8561   000241                     T0CKIPPS        equ	577	;# 
  8562   000242                     T1CKIPPS        equ	578	;# 
  8563   000243                     T1GPPS          equ	579	;# 
  8564   000244                     T3CKIPPS        equ	580	;# 
  8565   000245                     T3GPPS          equ	581	;# 
  8566   000248                     T2INPPS         equ	584	;# 
  8567   000249                     T4INPPS         equ	585	;# 
  8568   00024F                     CCP1PPS         equ	591	;# 
  8569   000251                     PWM1ERSPPS      equ	593	;# 
  8570   000252                     PWM2ERSPPS      equ	594	;# 
  8571   000253                     PWM3ERSPPS      equ	595	;# 
  8572   000257                     PWMIN0PPS       equ	599	;# 
  8573   000258                     PWMIN1PPS       equ	600	;# 
  8574   000259                     SMT1WINPPS      equ	601	;# 
  8575   00025A                     SMT1SIGPPS      equ	602	;# 
  8576   00025B                     CWG1PPS         equ	603	;# 
  8577   00025B                     CWG1INPPS       equ	603	;# 
  8578   00025E                     MD1CARLPPS      equ	606	;# 
  8579   00025E                     MDCARLPPS       equ	606	;# 
  8580   00025F                     MD1CARHPPS      equ	607	;# 
  8581   00025F                     MDCARHPPS       equ	607	;# 
  8582   000260                     MD1SRCPPS       equ	608	;# 
  8583   000260                     MDSRCPPS        equ	608	;# 
  8584   000261                     CLCIN0PPS       equ	609	;# 
  8585   000262                     CLCIN1PPS       equ	610	;# 
  8586   000263                     CLCIN2PPS       equ	611	;# 
  8587   000264                     CLCIN3PPS       equ	612	;# 
  8588   000269                     ADACTPPS        equ	617	;# 
  8589   00026A                     SPI1SCKPPS      equ	618	;# 
  8590   00026B                     SPI1SDIPPS      equ	619	;# 
  8591   00026C                     SPI1SSPPS       equ	620	;# 
  8592   00026D                     SPI2SCKPPS      equ	621	;# 
  8593   00026E                     SPI2SDIPPS      equ	622	;# 
  8594   00026F                     SPI2SSPPS       equ	623	;# 
  8595   000270                     I2C1SDAPPS      equ	624	;# 
  8596   000271                     I2C1SCLPPS      equ	625	;# 
  8597   000272                     U1RXPPS         equ	626	;# 
  8598   000273                     U1CTSPPS        equ	627	;# 
  8599   000274                     U2RXPPS         equ	628	;# 
  8600   000275                     U2CTSPPS        equ	629	;# 
  8601   000276                     U3RXPPS         equ	630	;# 
  8602   000277                     U3CTSPPS        equ	631	;# 
  8603   000286                     RB6I2C          equ	646	;# 
  8604   000287                     RB4I2C          equ	647	;# 
  8605   00028A                     I2C1RXB         equ	650	;# 
  8606   00028B                     I2C1TXB         equ	651	;# 
  8607   00028C                     I2C1CNTL        equ	652	;# 
  8608   00028D                     I2C1CNTH        equ	653	;# 
  8609   00028E                     I2C1ADB0        equ	654	;# 
  8610   00028F                     I2C1ADB1        equ	655	;# 
  8611   000290                     I2C1ADR0        equ	656	;# 
  8612   000291                     I2C1ADR1        equ	657	;# 
  8613   000292                     I2C1ADR2        equ	658	;# 
  8614   000293                     I2C1ADR3        equ	659	;# 
  8615   000294                     I2C1CON0        equ	660	;# 
  8616   000295                     I2C1CON1        equ	661	;# 
  8617   000296                     I2C1CON2        equ	662	;# 
  8618   000297                     I2C1ERR         equ	663	;# 
  8619   000298                     I2C1STAT0       equ	664	;# 
  8620   000299                     I2C1STAT1       equ	665	;# 
  8621   00029A                     I2C1PIR         equ	666	;# 
  8622   00029B                     I2C1PIE         equ	667	;# 
  8623   00029C                     I2C1BTO         equ	668	;# 
  8624   00029D                     I2C1BAUD        equ	669	;# 
  8625   00029E                     I2C1CLK         equ	670	;# 
  8626   00029F                     I2C1BTOC        equ	671	;# 
  8627   0002A1                     U1RXB           equ	673	;# 
  8628   0002A1                     U1RXBL          equ	673	;# 
  8629   0002A2                     U1RXCHK         equ	674	;# 
  8630   0002A3                     U1TXB           equ	675	;# 
  8631   0002A3                     U1TXBL          equ	675	;# 
  8632   0002A4                     U1TXCHK         equ	676	;# 
  8633   0002A5                     U1P1            equ	677	;# 
  8634   0002A5                     U1P1L           equ	677	;# 
  8635   0002A6                     U1P1H           equ	678	;# 
  8636   0002A7                     U1P2            equ	679	;# 
  8637   0002A7                     U1P2L           equ	679	;# 
  8638   0002A8                     U1P2H           equ	680	;# 
  8639   0002A9                     U1P3            equ	681	;# 
  8640   0002A9                     U1P3L           equ	681	;# 
  8641   0002AA                     U1P3H           equ	682	;# 
  8642   0002AB                     U1CON0          equ	683	;# 
  8643   0002AC                     U1CON1          equ	684	;# 
  8644   0002AD                     U1CON2          equ	685	;# 
  8645   0002AE                     U1BRG           equ	686	;# 
  8646   0002AE                     U1BRGL          equ	686	;# 
  8647   0002AF                     U1BRGH          equ	687	;# 
  8648   0002B0                     U1FIFO          equ	688	;# 
  8649   0002B1                     U1UIR           equ	689	;# 
  8650   0002B2                     U1ERRIR         equ	690	;# 
  8651   0002B3                     U1ERRIE         equ	691	;# 
  8652   0002B4                     U2RXB           equ	692	;# 
  8653   0002B4                     U2RXBL          equ	692	;# 
  8654   0002B6                     U2TXB           equ	694	;# 
  8655   0002B6                     U2TXBL          equ	694	;# 
  8656   0002B8                     U2P1            equ	696	;# 
  8657   0002B8                     U2P1L           equ	696	;# 
  8658   0002BA                     U2P2            equ	698	;# 
  8659   0002BA                     U2P2L           equ	698	;# 
  8660   0002BC                     U2P3            equ	700	;# 
  8661   0002BC                     U2P3L           equ	700	;# 
  8662   0002BE                     U2CON0          equ	702	;# 
  8663   0002BF                     U2CON1          equ	703	;# 
  8664   0002C0                     U2CON2          equ	704	;# 
  8665   0002C1                     U2BRG           equ	705	;# 
  8666   0002C1                     U2BRGL          equ	705	;# 
  8667   0002C2                     U2BRGH          equ	706	;# 
  8668   0002C3                     U2FIFO          equ	707	;# 
  8669   0002C4                     U2UIR           equ	708	;# 
  8670   0002C5                     U2ERRIR         equ	709	;# 
  8671   0002C6                     U2ERRIE         equ	710	;# 
  8672   0002C7                     U3RXB           equ	711	;# 
  8673   0002C7                     U3RXBL          equ	711	;# 
  8674   0002C9                     U3TXB           equ	713	;# 
  8675   0002C9                     U3TXBL          equ	713	;# 
  8676   0002CB                     U3P1            equ	715	;# 
  8677   0002CB                     U3P1L           equ	715	;# 
  8678   0002CD                     U3P2            equ	717	;# 
  8679   0002CD                     U3P2L           equ	717	;# 
  8680   0002CF                     U3P3            equ	719	;# 
  8681   0002CF                     U3P3L           equ	719	;# 
  8682   0002D1                     U3CON0          equ	721	;# 
  8683   0002D2                     U3CON1          equ	722	;# 
  8684   0002D3                     U3CON2          equ	723	;# 
  8685   0002D4                     U3BRG           equ	724	;# 
  8686   0002D4                     U3BRGL          equ	724	;# 
  8687   0002D5                     U3BRGH          equ	725	;# 
  8688   0002D6                     U3FIFO          equ	726	;# 
  8689   0002D7                     U3UIR           equ	727	;# 
  8690   0002D8                     U3ERRIR         equ	728	;# 
  8691   0002D9                     U3ERRIE         equ	729	;# 
  8692   000300                     SMT1TMR         equ	768	;# 
  8693   000300                     SMT1TMRL        equ	768	;# 
  8694   000301                     SMT1TMRH        equ	769	;# 
  8695   000302                     SMT1TMRU        equ	770	;# 
  8696   000303                     SMT1CPR         equ	771	;# 
  8697   000303                     SMT1CPRL        equ	771	;# 
  8698   000304                     SMT1CPRH        equ	772	;# 
  8699   000305                     SMT1CPRU        equ	773	;# 
  8700   000306                     SMT1CPW         equ	774	;# 
  8701   000306                     SMT1CPWL        equ	774	;# 
  8702   000307                     SMT1CPWH        equ	775	;# 
  8703   000308                     SMT1CPWU        equ	776	;# 
  8704   000309                     SMT1PR          equ	777	;# 
  8705   000309                     SMT1PRL         equ	777	;# 
  8706   00030A                     SMT1PRH         equ	778	;# 
  8707   00030B                     SMT1PRU         equ	779	;# 
  8708   00030C                     SMT1CON0        equ	780	;# 
  8709   00030D                     SMT1CON1        equ	781	;# 
  8710   00030E                     SMT1STAT        equ	782	;# 
  8711   00030F                     SMT1CLK         equ	783	;# 
  8712   000310                     SMT1SIG         equ	784	;# 
  8713   000311                     SMT1WIN         equ	785	;# 
  8714   000312                     TMR1            equ	786	;# 
  8715   000312                     TMR1L           equ	786	;# 
  8716   000313                     TMR1H           equ	787	;# 
  8717   000314                     T1CON           equ	788	;# 
  8718   000314                     TMR1CON         equ	788	;# 
  8719   000315                     T1GCON          equ	789	;# 
  8720   000315                     TMR1GCON        equ	789	;# 
  8721   000316                     T1GATE          equ	790	;# 
  8722   000316                     TMR1GATE        equ	790	;# 
  8723   000317                     T1CLK           equ	791	;# 
  8724   000317                     TMR1CLK         equ	791	;# 
  8725   000317                     PR1             equ	791	;# 
  8726   000318                     TMR0L           equ	792	;# 
  8727   000318                     TMR0            equ	792	;# 
  8728   000319                     TMR0H           equ	793	;# 
  8729   000319                     PR0             equ	793	;# 
  8730   00031A                     T0CON0          equ	794	;# 
  8731   00031B                     T0CON1          equ	795	;# 
  8732   00031C                     T2TMR           equ	796	;# 
  8733   00031C                     TMR2            equ	796	;# 
  8734   00031D                     T2PR            equ	797	;# 
  8735   00031D                     PR2             equ	797	;# 
  8736   00031E                     T2CON           equ	798	;# 
  8737   00031F                     T2HLT           equ	799	;# 
  8738   000320                     T2CLKCON        equ	800	;# 
  8739   000320                     T2CLK           equ	800	;# 
  8740   000321                     T2RST           equ	801	;# 
  8741   000323                     TMR3            equ	803	;# 
  8742   000323                     TMR3L           equ	803	;# 
  8743   000324                     TMR3H           equ	804	;# 
  8744   000325                     T3CON           equ	805	;# 
  8745   000325                     TMR3CON         equ	805	;# 
  8746   000326                     T3GCON          equ	806	;# 
  8747   000326                     TMR3GCON        equ	806	;# 
  8748   000327                     T3GATE          equ	807	;# 
  8749   000327                     TMR3GATE        equ	807	;# 
  8750   000328                     T3CLK           equ	808	;# 
  8751   000328                     TMR3CLK         equ	808	;# 
  8752   000328                     PR3             equ	808	;# 
  8753   000329                     T4TMR           equ	809	;# 
  8754   000329                     TMR4            equ	809	;# 
  8755   00032A                     T4PR            equ	810	;# 
  8756   00032A                     PR4             equ	810	;# 
  8757   00032B                     T4CON           equ	811	;# 
  8758   00032C                     T4HLT           equ	812	;# 
  8759   00032D                     T4CLKCON        equ	813	;# 
  8760   00032D                     T4CLK           equ	813	;# 
  8761   00032E                     T4RST           equ	814	;# 
  8762   000340                     CCPR1           equ	832	;# 
  8763   000340                     CCPR1L          equ	832	;# 
  8764   000341                     CCPR1H          equ	833	;# 
  8765   000342                     CCP1CON         equ	834	;# 
  8766   000343                     CCP1CAP         equ	835	;# 
  8767   00034C                     CCPTMRS0        equ	844	;# 
  8768   00034E                     CRCDATA         equ	846	;# 
  8769   00034E                     CRCDATAL        equ	846	;# 
  8770   00034F                     CRCDATAH        equ	847	;# 
  8771   000350                     CRCDATAU        equ	848	;# 
  8772   000351                     CRCDATAT        equ	849	;# 
  8773   000352                     CRCOUT          equ	850	;# 
  8774   000352                     CRCSHFT         equ	850	;# 
  8775   000352                     CRCXOR          equ	850	;# 
  8776   000352                     CRCOUTL         equ	850	;# 
  8777   000352                     CRCSHFTL        equ	850	;# 
  8778   000352                     CRCSHIFTL       equ	850	;# 
  8779   000352                     CRCXORL         equ	850	;# 
  8780   000353                     CRCOUTH         equ	851	;# 
  8781   000353                     CRCSHFTH        equ	851	;# 
  8782   000353                     CRCSHIFTH       equ	851	;# 
  8783   000353                     CRCXORH         equ	851	;# 
  8784   000354                     CRCOUTU         equ	852	;# 
  8785   000354                     CRCSHFTU        equ	852	;# 
  8786   000354                     CRCSHIFTU       equ	852	;# 
  8787   000354                     CRCXORU         equ	852	;# 
  8788   000355                     CRCOUTT         equ	853	;# 
  8789   000355                     CRCSHFTT        equ	853	;# 
  8790   000355                     CRCSHIFTT       equ	853	;# 
  8791   000355                     CRCXORT         equ	853	;# 
  8792   000356                     CRCCON0         equ	854	;# 
  8793   000357                     CRCCON1         equ	855	;# 
  8794   000358                     CRCCON2         equ	856	;# 
  8795   00035A                     SCANLADR        equ	858	;# 
  8796   00035A                     SCANLADRL       equ	858	;# 
  8797   00035B                     SCANLADRH       equ	859	;# 
  8798   00035C                     SCANLADRU       equ	860	;# 
  8799   00035D                     SCANHADR        equ	861	;# 
  8800   00035D                     SCANHADRL       equ	861	;# 
  8801   00035E                     SCANHADRH       equ	862	;# 
  8802   00035F                     SCANHADRU       equ	863	;# 
  8803   000360                     SCANCON0        equ	864	;# 
  8804   000361                     SCANTRIG        equ	865	;# 
  8805   000367                     IPR0            equ	871	;# 
  8806   000368                     IPR1            equ	872	;# 
  8807   000369                     IPR2            equ	873	;# 
  8808   00036A                     IPR3            equ	874	;# 
  8809   00036B                     IPR4            equ	875	;# 
  8810   00036C                     IPR5            equ	876	;# 
  8811   00036D                     IPR6            equ	877	;# 
  8812   00036E                     IPR7            equ	878	;# 
  8813   00036F                     IPR8            equ	879	;# 
  8814   000370                     IPR9            equ	880	;# 
  8815   000371                     IPR10           equ	881	;# 
  8816   000373                     STATUS_CSHAD    equ	883	;# 
  8817   000374                     WREG_CSHAD      equ	884	;# 
  8818   000375                     BSR_CSHAD       equ	885	;# 
  8819   000376                     SHADCON         equ	886	;# 
  8820   000377                     STATUS_SHAD     equ	887	;# 
  8821   000378                     WREG_SHAD       equ	888	;# 
  8822   000379                     BSR_SHAD        equ	889	;# 
  8823   00037A                     PCLATH_SHAD     equ	890	;# 
  8824   00037B                     PCLATU_SHAD     equ	891	;# 
  8825   00037C                     FSR0SH          equ	892	;# 
  8826   00037C                     FSR0L_SHAD      equ	892	;# 
  8827   00037D                     FSR0H_SHAD      equ	893	;# 
  8828   00037E                     FSR1SH          equ	894	;# 
  8829   00037E                     FSR1L_SHAD      equ	894	;# 
  8830   00037F                     FSR1H_SHAD      equ	895	;# 
  8831   000380                     FSR2SH          equ	896	;# 
  8832   000380                     FSR2L_SHAD      equ	896	;# 
  8833   000381                     FSR2H_SHAD      equ	897	;# 
  8834   000382                     PRODSH          equ	898	;# 
  8835   000382                     PRODL_SHAD      equ	898	;# 
  8836   000383                     PRODH_SHAD      equ	899	;# 
  8837   0003BC                     CWG1CLK         equ	956	;# 
  8838   0003BC                     CWG1CLKCON      equ	956	;# 
  8839   0003BD                     CWG1ISM         equ	957	;# 
  8840   0003BD                     CWG1DAT         equ	957	;# 
  8841   0003BE                     CWG1DBR         equ	958	;# 
  8842   0003BF                     CWG1DBF         equ	959	;# 
  8843   0003C0                     CWG1CON0        equ	960	;# 
  8844   0003C1                     CWG1CON1        equ	961	;# 
  8845   0003C2                     CWG1AS0         equ	962	;# 
  8846   0003C3                     CWG1AS1         equ	963	;# 
  8847   0003C4                     CWG1STR         equ	964	;# 
  8848   0003D7                     FVRCON          equ	983	;# 
  8849   0003D8                     ADCPCON         equ	984	;# 
  8850   0003D8                     ADCP            equ	984	;# 
  8851   0003D9                     ADLTH           equ	985	;# 
  8852   0003D9                     ADLTHL          equ	985	;# 
  8853   0003DA                     ADLTHH          equ	986	;# 
  8854   0003DB                     ADUTH           equ	987	;# 
  8855   0003DB                     ADUTHL          equ	987	;# 
  8856   0003DC                     ADUTHH          equ	988	;# 
  8857   0003DD                     ADERR           equ	989	;# 
  8858   0003DD                     ADERRL          equ	989	;# 
  8859   0003DE                     ADERRH          equ	990	;# 
  8860   0003DF                     ADSTPT          equ	991	;# 
  8861   0003DF                     ADSTPTL         equ	991	;# 
  8862   0003E0                     ADSTPTH         equ	992	;# 
  8863   0003E1                     ADFLTR          equ	993	;# 
  8864   0003E1                     ADFLTRL         equ	993	;# 
  8865   0003E2                     ADFLTRH         equ	994	;# 
  8866   0003E3                     ADACC           equ	995	;# 
  8867   0003E3                     ADACCL          equ	995	;# 
  8868   0003E4                     ADACCH          equ	996	;# 
  8869   0003E5                     ADACCU          equ	997	;# 
  8870   0003E6                     ADCNT           equ	998	;# 
  8871   0003E7                     ADRPT           equ	999	;# 
  8872   0003E8                     ADPREV          equ	1000	;# 
  8873   0003E8                     ADPREVL         equ	1000	;# 
  8874   0003E9                     ADPREVH         equ	1001	;# 
  8875   0003EA                     ADRES           equ	1002	;# 
  8876   0003EA                     ADRESL          equ	1002	;# 
  8877   0003EB                     ADRESH          equ	1003	;# 
  8878   0003EC                     ADPCH           equ	1004	;# 
  8879   0003EE                     ADACQ           equ	1006	;# 
  8880   0003EE                     ADACQL          equ	1006	;# 
  8881   0003EF                     ADACQH          equ	1007	;# 
  8882   0003F0                     ADCAP           equ	1008	;# 
  8883   0003F1                     ADPRE           equ	1009	;# 
  8884   0003F1                     ADPREL          equ	1009	;# 
  8885   0003F2                     ADPREH          equ	1010	;# 
  8886   0003F3                     ADCON0          equ	1011	;# 
  8887   0003F4                     ADCON1          equ	1012	;# 
  8888   0003F5                     ADCON2          equ	1013	;# 
  8889   0003F6                     ADCON3          equ	1014	;# 
  8890   0003F7                     ADSTAT          equ	1015	;# 
  8891   0003F8                     ADREF           equ	1016	;# 
  8892   0003F9                     ADACT           equ	1017	;# 
  8893   0003FA                     ADCLK           equ	1018	;# 
  8894   000400                     ANSELA          equ	1024	;# 
  8895   000401                     WPUA            equ	1025	;# 
  8896   000402                     ODCONA          equ	1026	;# 
  8897   000403                     SLRCONA         equ	1027	;# 
  8898   000404                     INLVLA          equ	1028	;# 
  8899   000405                     IOCAP           equ	1029	;# 
  8900   000406                     IOCAN           equ	1030	;# 
  8901   000407                     IOCAF           equ	1031	;# 
  8902   000408                     ANSELB          equ	1032	;# 
  8903   000409                     WPUB            equ	1033	;# 
  8904   00040A                     ODCONB          equ	1034	;# 
  8905   00040B                     SLRCONB         equ	1035	;# 
  8906   00040C                     INLVLB          equ	1036	;# 
  8907   00040D                     IOCBP           equ	1037	;# 
  8908   00040E                     IOCBN           equ	1038	;# 
  8909   00040F                     IOCBF           equ	1039	;# 
  8910   000410                     ANSELC          equ	1040	;# 
  8911   000411                     WPUC            equ	1041	;# 
  8912   000412                     ODCONC          equ	1042	;# 
  8913   000413                     SLRCONC         equ	1043	;# 
  8914   000414                     INLVLC          equ	1044	;# 
  8915   000415                     IOCCP           equ	1045	;# 
  8916   000416                     IOCCN           equ	1046	;# 
  8917   000417                     IOCCF           equ	1047	;# 
  8918   000440                     NCO1ACC         equ	1088	;# 
  8919   000440                     NCO1ACCL        equ	1088	;# 
  8920   000441                     NCO1ACCH        equ	1089	;# 
  8921   000442                     NCO1ACCU        equ	1090	;# 
  8922   000443                     NCO1INC         equ	1091	;# 
  8923   000443                     NCO1INCL        equ	1091	;# 
  8924   000444                     NCO1INCH        equ	1092	;# 
  8925   000445                     NCO1INCU        equ	1093	;# 
  8926   000446                     NCO1CON         equ	1094	;# 
  8927   000447                     NCO1CLK         equ	1095	;# 
  8928   000458                     FSCMCON         equ	1112	;# 
  8929   000459                     IVTLOCK         equ	1113	;# 
  8930   00045A                     IVTAD           equ	1114	;# 
  8931   00045A                     IVTADL          equ	1114	;# 
  8932   00045B                     IVTADH          equ	1115	;# 
  8933   00045C                     IVTADU          equ	1116	;# 
  8934   00045D                     IVTBASE         equ	1117	;# 
  8935   00045D                     IVTBASEL        equ	1117	;# 
  8936   00045E                     IVTBASEH        equ	1118	;# 
  8937   00045F                     IVTBASEU        equ	1119	;# 
  8938   000460                     PWM1ERS         equ	1120	;# 
  8939   000461                     PWM1CLK         equ	1121	;# 
  8940   000462                     PWM1LDS         equ	1122	;# 
  8941   000463                     PWM1PR          equ	1123	;# 
  8942   000463                     PWM1PRL         equ	1123	;# 
  8943   000464                     PWM1PRH         equ	1124	;# 
  8944   000465                     PWM1CPRE        equ	1125	;# 
  8945   000466                     PWM1PIPOS       equ	1126	;# 
  8946   000467                     PWM1GIR         equ	1127	;# 
  8947   000468                     PWM1GIE         equ	1128	;# 
  8948   000469                     PWM1CON         equ	1129	;# 
  8949   00046A                     PWM1S1CFG       equ	1130	;# 
  8950   00046B                     PWM1S1P1        equ	1131	;# 
  8951   00046B                     PWM1S1P1L       equ	1131	;# 
  8952   00046C                     PWM1S1P1H       equ	1132	;# 
  8953   00046D                     PWM1S1P2        equ	1133	;# 
  8954   00046D                     PWM1S1P2L       equ	1133	;# 
  8955   00046E                     PWM1S1P2H       equ	1134	;# 
  8956   00046F                     PWM2ERS         equ	1135	;# 
  8957   000470                     PWM2CLK         equ	1136	;# 
  8958   000471                     PWM2LDS         equ	1137	;# 
  8959   000472                     PWM2PR          equ	1138	;# 
  8960   000472                     PWM2PRL         equ	1138	;# 
  8961   000473                     PWM2PRH         equ	1139	;# 
  8962   000474                     PWM2CPRE        equ	1140	;# 
  8963   000475                     PWM2PIPOS       equ	1141	;# 
  8964   000476                     PWM2GIR         equ	1142	;# 
  8965   000477                     PWM2GIE         equ	1143	;# 
  8966   000478                     PWM2CON         equ	1144	;# 
  8967   000479                     PWM2S1CFG       equ	1145	;# 
  8968   00047A                     PWM2S1P1        equ	1146	;# 
  8969   00047A                     PWM2S1P1L       equ	1146	;# 
  8970   00047B                     PWM2S1P1H       equ	1147	;# 
  8971   00047C                     PWM2S1P2        equ	1148	;# 
  8972   00047C                     PWM2S1P2L       equ	1148	;# 
  8973   00047D                     PWM2S1P2H       equ	1149	;# 
  8974   00047E                     PWM3ERS         equ	1150	;# 
  8975   00047F                     PWM3CLK         equ	1151	;# 
  8976   000480                     PWM3LDS         equ	1152	;# 
  8977   000481                     PWM3PR          equ	1153	;# 
  8978   000481                     PWM3PRL         equ	1153	;# 
  8979   000482                     PWM3PRH         equ	1154	;# 
  8980   000483                     PWM3CPRE        equ	1155	;# 
  8981   000484                     PWM3PIPOS       equ	1156	;# 
  8982   000485                     PWM3GIR         equ	1157	;# 
  8983   000486                     PWM3GIE         equ	1158	;# 
  8984   000487                     PWM3CON         equ	1159	;# 
  8985   000488                     PWM3S1CFG       equ	1160	;# 
  8986   000489                     PWM3S1P1        equ	1161	;# 
  8987   000489                     PWM3S1P1L       equ	1161	;# 
  8988   00048A                     PWM3S1P1H       equ	1162	;# 
  8989   00048B                     PWM3S1P2        equ	1163	;# 
  8990   00048B                     PWM3S1P2L       equ	1163	;# 
  8991   00048C                     PWM3S1P2H       equ	1164	;# 
  8992   00049C                     PWMLOAD         equ	1180	;# 
  8993   00049D                     PWMEN           equ	1181	;# 
  8994   0004A8                     PIE0            equ	1192	;# 
  8995   0004A9                     PIE1            equ	1193	;# 
  8996   0004AA                     PIE2            equ	1194	;# 
  8997   0004AB                     PIE3            equ	1195	;# 
  8998   0004AC                     PIE4            equ	1196	;# 
  8999   0004AD                     PIE5            equ	1197	;# 
  9000   0004AE                     PIE6            equ	1198	;# 
  9001   0004AF                     PIE7            equ	1199	;# 
  9002   0004B0                     PIE8            equ	1200	;# 
  9003   0004B1                     PIE9            equ	1201	;# 
  9004   0004B2                     PIE10           equ	1202	;# 
  9005   0004B3                     PIR0            equ	1203	;# 
  9006   0004B4                     PIR1            equ	1204	;# 
  9007   0004B5                     PIR2            equ	1205	;# 
  9008   0004B6                     PIR3            equ	1206	;# 
  9009   0004B7                     PIR4            equ	1207	;# 
  9010   0004B8                     PIR5            equ	1208	;# 
  9011   0004B9                     PIR6            equ	1209	;# 
  9012   0004BA                     PIR7            equ	1210	;# 
  9013   0004BB                     PIR8            equ	1211	;# 
  9014   0004BC                     PIR9            equ	1212	;# 
  9015   0004BD                     PIR10           equ	1213	;# 
  9016   0004BE                     LATA            equ	1214	;# 
  9017   0004BF                     LATB            equ	1215	;# 
  9018   0004C0                     LATC            equ	1216	;# 
  9019   0004C6                     TRISA           equ	1222	;# 
  9020   0004C7                     TRISB           equ	1223	;# 
  9021   0004C8                     TRISC           equ	1224	;# 
  9022   0004CE                     PORTA           equ	1230	;# 
  9023   0004CF                     PORTB           equ	1231	;# 
  9024   0004D0                     PORTC           equ	1232	;# 
  9025   0004D6                     INTCON0         equ	1238	;# 
  9026   0004D7                     INTCON1         equ	1239	;# 
  9027   0004D8                     STATUS          equ	1240	;# 
  9028   0004D9                     FSR2            equ	1241	;# 
  9029   0004D9                     FSR2L           equ	1241	;# 
  9030   0004DA                     FSR2H           equ	1242	;# 
  9031   0004DB                     PLUSW2          equ	1243	;# 
  9032   0004DC                     PREINC2         equ	1244	;# 
  9033   0004DD                     POSTDEC2        equ	1245	;# 
  9034   0004DE                     POSTINC2        equ	1246	;# 
  9035   0004DF                     INDF2           equ	1247	;# 
  9036   0004E0                     BSR             equ	1248	;# 
  9037   0004E1                     FSR1            equ	1249	;# 
  9038   0004E1                     FSR1L           equ	1249	;# 
  9039   0004E2                     FSR1H           equ	1250	;# 
  9040   0004E3                     PLUSW1          equ	1251	;# 
  9041   0004E4                     PREINC1         equ	1252	;# 
  9042   0004E5                     POSTDEC1        equ	1253	;# 
  9043   0004E6                     POSTINC1        equ	1254	;# 
  9044   0004E7                     INDF1           equ	1255	;# 
  9045   0004E8                     WREG            equ	1256	;# 
  9046   0004E9                     FSR0            equ	1257	;# 
  9047   0004E9                     FSR0L           equ	1257	;# 
  9048   0004EA                     FSR0H           equ	1258	;# 
  9049   0004EB                     PLUSW0          equ	1259	;# 
  9050   0004EC                     PREINC0         equ	1260	;# 
  9051   0004ED                     POSTDEC0        equ	1261	;# 
  9052   0004EE                     POSTINC0        equ	1262	;# 
  9053   0004EF                     INDF0           equ	1263	;# 
  9054   0004F0                     PCON0           equ	1264	;# 
  9055   0004F1                     PCON1           equ	1265	;# 
  9056   0004F2                     CPUDOZE         equ	1266	;# 
  9057   0004F3                     PROD            equ	1267	;# 
  9058   0004F3                     PRODL           equ	1267	;# 
  9059   0004F4                     PRODH           equ	1268	;# 
  9060   0004F5                     TABLAT          equ	1269	;# 
  9061   0004F6                     TBLPTR          equ	1270	;# 
  9062   0004F6                     TBLPTRL         equ	1270	;# 
  9063   0004F7                     TBLPTRH         equ	1271	;# 
  9064   0004F8                     TBLPTRU         equ	1272	;# 
  9065   0004F9                     PCLAT           equ	1273	;# 
  9066   0004F9                     PCL             equ	1273	;# 
  9067   0004FA                     PCLATH          equ	1274	;# 
  9068   0004FB                     PCLATU          equ	1275	;# 
  9069   0004FC                     STKPTR          equ	1276	;# 
  9070   0004FD                     TOS             equ	1277	;# 
  9071   0004FD                     TOSL            equ	1277	;# 
  9072   0004FE                     TOSH            equ	1278	;# 
  9073   0004FF                     TOSU            equ	1279	;# 
  9074   000039                     CLKRCON         equ	57	;# 
  9075   00003A                     CLKRCLK         equ	58	;# 
  9076   000040                     NVMCON0         equ	64	;# 
  9077   000041                     NVMCON1         equ	65	;# 
  9078   000042                     NVMLOCK         equ	66	;# 
  9079   000043                     NVMADR          equ	67	;# 
  9080   000043                     NVMADRL         equ	67	;# 
  9081   000044                     NVMADRH         equ	68	;# 
  9082   000045                     NVMADRU         equ	69	;# 
  9083   000046                     NVMDAT          equ	70	;# 
  9084   000046                     NVMDATL         equ	70	;# 
  9085   000047                     NVMDATH         equ	71	;# 
  9086   000048                     VREGCON         equ	72	;# 
  9087   000049                     BORCON          equ	73	;# 
  9088   00004A                     HLVDCON0        equ	74	;# 
  9089   00004B                     HLVDCON1        equ	75	;# 
  9090   00004C                     ZCDCON          equ	76	;# 
  9091   000063                     PMD0            equ	99	;# 
  9092   000064                     PMD1            equ	100	;# 
  9093   000065                     PMD2            equ	101	;# 
  9094   000066                     PMD3            equ	102	;# 
  9095   000067                     PMD4            equ	103	;# 
  9096   000068                     PMD5            equ	104	;# 
  9097   00006A                     MD1CON0         equ	106	;# 
  9098   00006B                     MD1CON1         equ	107	;# 
  9099   00006C                     MD1SRC          equ	108	;# 
  9100   00006D                     MD1CARL         equ	109	;# 
  9101   00006E                     MD1CARH         equ	110	;# 
  9102   00006F                     CMOUT           equ	111	;# 
  9103   000070                     CM1CON0         equ	112	;# 
  9104   000071                     CM1CON1         equ	113	;# 
  9105   000072                     CM1NCH          equ	114	;# 
  9106   000073                     CM1PCH          equ	115	;# 
  9107   000074                     CM2CON0         equ	116	;# 
  9108   000075                     CM2CON1         equ	117	;# 
  9109   000076                     CM2NCH          equ	118	;# 
  9110   000077                     CM2PCH          equ	119	;# 
  9111   000078                     WDTCON0         equ	120	;# 
  9112   000079                     WDTCON1         equ	121	;# 
  9113   00007A                     WDTPS           equ	122	;# 
  9114   00007A                     WDTPSL          equ	122	;# 
  9115   00007B                     WDTPSH          equ	123	;# 
  9116   00007C                     WDTTMR          equ	124	;# 
  9117   00007D                     DAC1DAT         equ	125	;# 
  9118   00007D                     DAC1DATL        equ	125	;# 
  9119   00007F                     DAC1CON         equ	127	;# 
  9120   000080                     SPI1RXB         equ	128	;# 
  9121   000081                     SPI1TXB         equ	129	;# 
  9122   000082                     SPI1TCNT        equ	130	;# 
  9123   000082                     SPI1TCNTL       equ	130	;# 
  9124   000083                     SPI1TCNTH       equ	131	;# 
  9125   000084                     SPI1CON0        equ	132	;# 
  9126   000085                     SPI1CON1        equ	133	;# 
  9127   000086                     SPI1CON2        equ	134	;# 
  9128   000087                     SPI1STATUS      equ	135	;# 
  9129   000088                     SPI1TWIDTH      equ	136	;# 
  9130   000089                     SPI1BAUD        equ	137	;# 
  9131   00008A                     SPI1INTF        equ	138	;# 
  9132   00008B                     SPI1INTE        equ	139	;# 
  9133   00008C                     SPI1CLK         equ	140	;# 
  9134   00008D                     SPI2RXB         equ	141	;# 
  9135   00008E                     SPI2TXB         equ	142	;# 
  9136   00008F                     SPI2TCNT        equ	143	;# 
  9137   00008F                     SPI2TCNTL       equ	143	;# 
  9138   000090                     SPI2TCNTH       equ	144	;# 
  9139   000091                     SPI2CON0        equ	145	;# 
  9140   000092                     SPI2CON1        equ	146	;# 
  9141   000093                     SPI2CON2        equ	147	;# 
  9142   000094                     SPI2STATUS      equ	148	;# 
  9143   000095                     SPI2TWIDTH      equ	149	;# 
  9144   000096                     SPI2BAUD        equ	150	;# 
  9145   000097                     SPI2INTF        equ	151	;# 
  9146   000098                     SPI2INTE        equ	152	;# 
  9147   000099                     SPI2CLK         equ	153	;# 
  9148   0000A0                     DAC2DAT         equ	160	;# 
  9149   0000A0                     DAC2DATL        equ	160	;# 
  9150   0000A2                     DAC2CON         equ	162	;# 
  9151   0000A3                     OPA1CON0        equ	163	;# 
  9152   0000A4                     OPA1CON1        equ	164	;# 
  9153   0000A5                     OPA1CON2        equ	165	;# 
  9154   0000A6                     OPA1CON3        equ	166	;# 
  9155   0000A7                     OPA1HWC         equ	167	;# 
  9156   0000A8                     OPA1OFFSET      equ	168	;# 
  9157   0000A9                     OPA1ORS         equ	169	;# 
  9158   0000AC                     ACTCON          equ	172	;# 
  9159   0000AD                     OSCCON1         equ	173	;# 
  9160   0000AE                     OSCCON2         equ	174	;# 
  9161   0000AF                     OSCCON3         equ	175	;# 
  9162   0000B0                     OSCTUNE         equ	176	;# 
  9163   0000B1                     OSCFRQ          equ	177	;# 
  9164   0000B1                     OSCFREQ         equ	177	;# 
  9165   0000B2                     OSCSTAT         equ	178	;# 
  9166   0000B2                     OSCSTAT1        equ	178	;# 
  9167   0000B3                     OSCEN           equ	179	;# 
  9168   0000B4                     PRLOCK          equ	180	;# 
  9169   0000B5                     SCANPR          equ	181	;# 
  9170   0000B6                     DMA1PR          equ	182	;# 
  9171   0000B7                     DMA2PR          equ	183	;# 
  9172   0000B8                     DMA3PR          equ	184	;# 
  9173   0000B9                     DMA4PR          equ	185	;# 
  9174   0000BE                     MAINPR          equ	190	;# 
  9175   0000BF                     ISRPR           equ	191	;# 
  9176   0000D4                     CLCDATA         equ	212	;# 
  9177   0000D5                     CLCSELECT       equ	213	;# 
  9178   0000D6                     CLCnCON         equ	214	;# 
  9179   0000D7                     CLCnPOL         equ	215	;# 
  9180   0000D8                     CLCnSEL0        equ	216	;# 
  9181   0000D9                     CLCnSEL1        equ	217	;# 
  9182   0000DA                     CLCnSEL2        equ	218	;# 
  9183   0000DB                     CLCnSEL3        equ	219	;# 
  9184   0000DC                     CLCnGLS0        equ	220	;# 
  9185   0000DD                     CLCnGLS1        equ	221	;# 
  9186   0000DE                     CLCnGLS2        equ	222	;# 
  9187   0000DF                     CLCnGLS3        equ	223	;# 
  9188   0000E8                     DMASELECT       equ	232	;# 
  9189   0000E9                     DMAnBUF         equ	233	;# 
  9190   0000EA                     DMAnDCNT        equ	234	;# 
  9191   0000EA                     DMAnDCNTL       equ	234	;# 
  9192   0000EB                     DMAnDCNTH       equ	235	;# 
  9193   0000EC                     DMAnDPTR        equ	236	;# 
  9194   0000EC                     DMAnDPTRL       equ	236	;# 
  9195   0000ED                     DMAnDPTRH       equ	237	;# 
  9196   0000EE                     DMAnDSZ         equ	238	;# 
  9197   0000EE                     DMAnDSZL        equ	238	;# 
  9198   0000EF                     DMAnDSZH        equ	239	;# 
  9199   0000F0                     DMAnDSA         equ	240	;# 
  9200   0000F0                     DMAnDSAL        equ	240	;# 
  9201   0000F1                     DMAnDSAH        equ	241	;# 
  9202   0000F2                     DMAnSCNT        equ	242	;# 
  9203   0000F2                     DMAnSCNTL       equ	242	;# 
  9204   0000F3                     DMAnSCNTH       equ	243	;# 
  9205   0000F4                     DMAnSPTR        equ	244	;# 
  9206   0000F4                     DMAnSPTRL       equ	244	;# 
  9207   0000F5                     DMAnSPTRH       equ	245	;# 
  9208   0000F6                     DMAnSPTRU       equ	246	;# 
  9209   0000F7                     DMAnSSZ         equ	247	;# 
  9210   0000F7                     DMAnSSZL        equ	247	;# 
  9211   0000F8                     DMAnSSZH        equ	248	;# 
  9212   0000F9                     DMAnSSA         equ	249	;# 
  9213   0000F9                     DMAnSSAL        equ	249	;# 
  9214   0000FA                     DMAnSSAH        equ	250	;# 
  9215   0000FB                     DMAnSSAU        equ	251	;# 
  9216   0000FC                     DMAnCON0        equ	252	;# 
  9217   0000FD                     DMAnCON1        equ	253	;# 
  9218   0000FE                     DMAnAIRQ        equ	254	;# 
  9219   0000FF                     DMAnSIRQ        equ	255	;# 
  9220   000200                     PPSLOCK         equ	512	;# 
  9221   000201                     RA0PPS          equ	513	;# 
  9222   000202                     RA1PPS          equ	514	;# 
  9223   000203                     RA2PPS          equ	515	;# 
  9224   000205                     RA4PPS          equ	517	;# 
  9225   000206                     RA5PPS          equ	518	;# 
  9226   00020D                     RB4PPS          equ	525	;# 
  9227   00020E                     RB5PPS          equ	526	;# 
  9228   00020F                     RB6PPS          equ	527	;# 
  9229   000210                     RB7PPS          equ	528	;# 
  9230   000211                     RC0PPS          equ	529	;# 
  9231   000212                     RC1PPS          equ	530	;# 
  9232   000213                     RC2PPS          equ	531	;# 
  9233   000214                     RC3PPS          equ	532	;# 
  9234   000215                     RC4PPS          equ	533	;# 
  9235   000216                     RC5PPS          equ	534	;# 
  9236   000217                     RC6PPS          equ	535	;# 
  9237   000218                     RC7PPS          equ	536	;# 
  9238   00023E                     INT0PPS         equ	574	;# 
  9239   00023F                     INT1PPS         equ	575	;# 
  9240   000240                     INT2PPS         equ	576	;# 
  9241   000241                     T0CKIPPS        equ	577	;# 
  9242   000242                     T1CKIPPS        equ	578	;# 
  9243   000243                     T1GPPS          equ	579	;# 
  9244   000244                     T3CKIPPS        equ	580	;# 
  9245   000245                     T3GPPS          equ	581	;# 
  9246   000248                     T2INPPS         equ	584	;# 
  9247   000249                     T4INPPS         equ	585	;# 
  9248   00024F                     CCP1PPS         equ	591	;# 
  9249   000251                     PWM1ERSPPS      equ	593	;# 
  9250   000252                     PWM2ERSPPS      equ	594	;# 
  9251   000253                     PWM3ERSPPS      equ	595	;# 
  9252   000257                     PWMIN0PPS       equ	599	;# 
  9253   000258                     PWMIN1PPS       equ	600	;# 
  9254   000259                     SMT1WINPPS      equ	601	;# 
  9255   00025A                     SMT1SIGPPS      equ	602	;# 
  9256   00025B                     CWG1PPS         equ	603	;# 
  9257   00025B                     CWG1INPPS       equ	603	;# 
  9258   00025E                     MD1CARLPPS      equ	606	;# 
  9259   00025E                     MDCARLPPS       equ	606	;# 
  9260   00025F                     MD1CARHPPS      equ	607	;# 
  9261   00025F                     MDCARHPPS       equ	607	;# 
  9262   000260                     MD1SRCPPS       equ	608	;# 
  9263   000260                     MDSRCPPS        equ	608	;# 
  9264   000261                     CLCIN0PPS       equ	609	;# 
  9265   000262                     CLCIN1PPS       equ	610	;# 
  9266   000263                     CLCIN2PPS       equ	611	;# 
  9267   000264                     CLCIN3PPS       equ	612	;# 
  9268   000269                     ADACTPPS        equ	617	;# 
  9269   00026A                     SPI1SCKPPS      equ	618	;# 
  9270   00026B                     SPI1SDIPPS      equ	619	;# 
  9271   00026C                     SPI1SSPPS       equ	620	;# 
  9272   00026D                     SPI2SCKPPS      equ	621	;# 
  9273   00026E                     SPI2SDIPPS      equ	622	;# 
  9274   00026F                     SPI2SSPPS       equ	623	;# 
  9275   000270                     I2C1SDAPPS      equ	624	;# 
  9276   000271                     I2C1SCLPPS      equ	625	;# 
  9277   000272                     U1RXPPS         equ	626	;# 
  9278   000273                     U1CTSPPS        equ	627	;# 
  9279   000274                     U2RXPPS         equ	628	;# 
  9280   000275                     U2CTSPPS        equ	629	;# 
  9281   000276                     U3RXPPS         equ	630	;# 
  9282   000277                     U3CTSPPS        equ	631	;# 
  9283   000286                     RB6I2C          equ	646	;# 
  9284   000287                     RB4I2C          equ	647	;# 
  9285   00028A                     I2C1RXB         equ	650	;# 
  9286   00028B                     I2C1TXB         equ	651	;# 
  9287   00028C                     I2C1CNTL        equ	652	;# 
  9288   00028D                     I2C1CNTH        equ	653	;# 
  9289   00028E                     I2C1ADB0        equ	654	;# 
  9290   00028F                     I2C1ADB1        equ	655	;# 
  9291   000290                     I2C1ADR0        equ	656	;# 
  9292   000291                     I2C1ADR1        equ	657	;# 
  9293   000292                     I2C1ADR2        equ	658	;# 
  9294   000293                     I2C1ADR3        equ	659	;# 
  9295   000294                     I2C1CON0        equ	660	;# 
  9296   000295                     I2C1CON1        equ	661	;# 
  9297   000296                     I2C1CON2        equ	662	;# 
  9298   000297                     I2C1ERR         equ	663	;# 
  9299   000298                     I2C1STAT0       equ	664	;# 
  9300   000299                     I2C1STAT1       equ	665	;# 
  9301   00029A                     I2C1PIR         equ	666	;# 
  9302   00029B                     I2C1PIE         equ	667	;# 
  9303   00029C                     I2C1BTO         equ	668	;# 
  9304   00029D                     I2C1BAUD        equ	669	;# 
  9305   00029E                     I2C1CLK         equ	670	;# 
  9306   00029F                     I2C1BTOC        equ	671	;# 
  9307   0002A1                     U1RXB           equ	673	;# 
  9308   0002A1                     U1RXBL          equ	673	;# 
  9309   0002A2                     U1RXCHK         equ	674	;# 
  9310   0002A3                     U1TXB           equ	675	;# 
  9311   0002A3                     U1TXBL          equ	675	;# 
  9312   0002A4                     U1TXCHK         equ	676	;# 
  9313   0002A5                     U1P1            equ	677	;# 
  9314   0002A5                     U1P1L           equ	677	;# 
  9315   0002A6                     U1P1H           equ	678	;# 
  9316   0002A7                     U1P2            equ	679	;# 
  9317   0002A7                     U1P2L           equ	679	;# 
  9318   0002A8                     U1P2H           equ	680	;# 
  9319   0002A9                     U1P3            equ	681	;# 
  9320   0002A9                     U1P3L           equ	681	;# 
  9321   0002AA                     U1P3H           equ	682	;# 
  9322   0002AB                     U1CON0          equ	683	;# 
  9323   0002AC                     U1CON1          equ	684	;# 
  9324   0002AD                     U1CON2          equ	685	;# 
  9325   0002AE                     U1BRG           equ	686	;# 
  9326   0002AE                     U1BRGL          equ	686	;# 
  9327   0002AF                     U1BRGH          equ	687	;# 
  9328   0002B0                     U1FIFO          equ	688	;# 
  9329   0002B1                     U1UIR           equ	689	;# 
  9330   0002B2                     U1ERRIR         equ	690	;# 
  9331   0002B3                     U1ERRIE         equ	691	;# 
  9332   0002B4                     U2RXB           equ	692	;# 
  9333   0002B4                     U2RXBL          equ	692	;# 
  9334   0002B6                     U2TXB           equ	694	;# 
  9335   0002B6                     U2TXBL          equ	694	;# 
  9336   0002B8                     U2P1            equ	696	;# 
  9337   0002B8                     U2P1L           equ	696	;# 
  9338   0002BA                     U2P2            equ	698	;# 
  9339   0002BA                     U2P2L           equ	698	;# 
  9340   0002BC                     U2P3            equ	700	;# 
  9341   0002BC                     U2P3L           equ	700	;# 
  9342   0002BE                     U2CON0          equ	702	;# 
  9343   0002BF                     U2CON1          equ	703	;# 
  9344   0002C0                     U2CON2          equ	704	;# 
  9345   0002C1                     U2BRG           equ	705	;# 
  9346   0002C1                     U2BRGL          equ	705	;# 
  9347   0002C2                     U2BRGH          equ	706	;# 
  9348   0002C3                     U2FIFO          equ	707	;# 
  9349   0002C4                     U2UIR           equ	708	;# 
  9350   0002C5                     U2ERRIR         equ	709	;# 
  9351   0002C6                     U2ERRIE         equ	710	;# 
  9352   0002C7                     U3RXB           equ	711	;# 
  9353   0002C7                     U3RXBL          equ	711	;# 
  9354   0002C9                     U3TXB           equ	713	;# 
  9355   0002C9                     U3TXBL          equ	713	;# 
  9356   0002CB                     U3P1            equ	715	;# 
  9357   0002CB                     U3P1L           equ	715	;# 
  9358   0002CD                     U3P2            equ	717	;# 
  9359   0002CD                     U3P2L           equ	717	;# 
  9360   0002CF                     U3P3            equ	719	;# 
  9361   0002CF                     U3P3L           equ	719	;# 
  9362   0002D1                     U3CON0          equ	721	;# 
  9363   0002D2                     U3CON1          equ	722	;# 
  9364   0002D3                     U3CON2          equ	723	;# 
  9365   0002D4                     U3BRG           equ	724	;# 
  9366   0002D4                     U3BRGL          equ	724	;# 
  9367   0002D5                     U3BRGH          equ	725	;# 
  9368   0002D6                     U3FIFO          equ	726	;# 
  9369   0002D7                     U3UIR           equ	727	;# 
  9370   0002D8                     U3ERRIR         equ	728	;# 
  9371   0002D9                     U3ERRIE         equ	729	;# 
  9372   000300                     SMT1TMR         equ	768	;# 
  9373   000300                     SMT1TMRL        equ	768	;# 
  9374   000301                     SMT1TMRH        equ	769	;# 
  9375   000302                     SMT1TMRU        equ	770	;# 
  9376   000303                     SMT1CPR         equ	771	;# 
  9377   000303                     SMT1CPRL        equ	771	;# 
  9378   000304                     SMT1CPRH        equ	772	;# 
  9379   000305                     SMT1CPRU        equ	773	;# 
  9380   000306                     SMT1CPW         equ	774	;# 
  9381   000306                     SMT1CPWL        equ	774	;# 
  9382   000307                     SMT1CPWH        equ	775	;# 
  9383   000308                     SMT1CPWU        equ	776	;# 
  9384   000309                     SMT1PR          equ	777	;# 
  9385   000309                     SMT1PRL         equ	777	;# 
  9386   00030A                     SMT1PRH         equ	778	;# 
  9387   00030B                     SMT1PRU         equ	779	;# 
  9388   00030C                     SMT1CON0        equ	780	;# 
  9389   00030D                     SMT1CON1        equ	781	;# 
  9390   00030E                     SMT1STAT        equ	782	;# 
  9391   00030F                     SMT1CLK         equ	783	;# 
  9392   000310                     SMT1SIG         equ	784	;# 
  9393   000311                     SMT1WIN         equ	785	;# 
  9394   000312                     TMR1            equ	786	;# 
  9395   000312                     TMR1L           equ	786	;# 
  9396   000313                     TMR1H           equ	787	;# 
  9397   000314                     T1CON           equ	788	;# 
  9398   000314                     TMR1CON         equ	788	;# 
  9399   000315                     T1GCON          equ	789	;# 
  9400   000315                     TMR1GCON        equ	789	;# 
  9401   000316                     T1GATE          equ	790	;# 
  9402   000316                     TMR1GATE        equ	790	;# 
  9403   000317                     T1CLK           equ	791	;# 
  9404   000317                     TMR1CLK         equ	791	;# 
  9405   000317                     PR1             equ	791	;# 
  9406   000318                     TMR0L           equ	792	;# 
  9407   000318                     TMR0            equ	792	;# 
  9408   000319                     TMR0H           equ	793	;# 
  9409   000319                     PR0             equ	793	;# 
  9410   00031A                     T0CON0          equ	794	;# 
  9411   00031B                     T0CON1          equ	795	;# 
  9412   00031C                     T2TMR           equ	796	;# 
  9413   00031C                     TMR2            equ	796	;# 
  9414   00031D                     T2PR            equ	797	;# 
  9415   00031D                     PR2             equ	797	;# 
  9416   00031E                     T2CON           equ	798	;# 
  9417   00031F                     T2HLT           equ	799	;# 
  9418   000320                     T2CLKCON        equ	800	;# 
  9419   000320                     T2CLK           equ	800	;# 
  9420   000321                     T2RST           equ	801	;# 
  9421   000323                     TMR3            equ	803	;# 
  9422   000323                     TMR3L           equ	803	;# 
  9423   000324                     TMR3H           equ	804	;# 
  9424   000325                     T3CON           equ	805	;# 
  9425   000325                     TMR3CON         equ	805	;# 
  9426   000326                     T3GCON          equ	806	;# 
  9427   000326                     TMR3GCON        equ	806	;# 
  9428   000327                     T3GATE          equ	807	;# 
  9429   000327                     TMR3GATE        equ	807	;# 
  9430   000328                     T3CLK           equ	808	;# 
  9431   000328                     TMR3CLK         equ	808	;# 
  9432   000328                     PR3             equ	808	;# 
  9433   000329                     T4TMR           equ	809	;# 
  9434   000329                     TMR4            equ	809	;# 
  9435   00032A                     T4PR            equ	810	;# 
  9436   00032A                     PR4             equ	810	;# 
  9437   00032B                     T4CON           equ	811	;# 
  9438   00032C                     T4HLT           equ	812	;# 
  9439   00032D                     T4CLKCON        equ	813	;# 
  9440   00032D                     T4CLK           equ	813	;# 
  9441   00032E                     T4RST           equ	814	;# 
  9442   000340                     CCPR1           equ	832	;# 
  9443   000340                     CCPR1L          equ	832	;# 
  9444   000341                     CCPR1H          equ	833	;# 
  9445   000342                     CCP1CON         equ	834	;# 
  9446   000343                     CCP1CAP         equ	835	;# 
  9447   00034C                     CCPTMRS0        equ	844	;# 
  9448   00034E                     CRCDATA         equ	846	;# 
  9449   00034E                     CRCDATAL        equ	846	;# 
  9450   00034F                     CRCDATAH        equ	847	;# 
  9451   000350                     CRCDATAU        equ	848	;# 
  9452   000351                     CRCDATAT        equ	849	;# 
  9453   000352                     CRCOUT          equ	850	;# 
  9454   000352                     CRCSHFT         equ	850	;# 
  9455   000352                     CRCXOR          equ	850	;# 
  9456   000352                     CRCOUTL         equ	850	;# 
  9457   000352                     CRCSHFTL        equ	850	;# 
  9458   000352                     CRCSHIFTL       equ	850	;# 
  9459   000352                     CRCXORL         equ	850	;# 
  9460   000353                     CRCOUTH         equ	851	;# 
  9461   000353                     CRCSHFTH        equ	851	;# 
  9462   000353                     CRCSHIFTH       equ	851	;# 
  9463   000353                     CRCXORH         equ	851	;# 
  9464   000354                     CRCOUTU         equ	852	;# 
  9465   000354                     CRCSHFTU        equ	852	;# 
  9466   000354                     CRCSHIFTU       equ	852	;# 
  9467   000354                     CRCXORU         equ	852	;# 
  9468   000355                     CRCOUTT         equ	853	;# 
  9469   000355                     CRCSHFTT        equ	853	;# 
  9470   000355                     CRCSHIFTT       equ	853	;# 
  9471   000355                     CRCXORT         equ	853	;# 
  9472   000356                     CRCCON0         equ	854	;# 
  9473   000357                     CRCCON1         equ	855	;# 
  9474   000358                     CRCCON2         equ	856	;# 
  9475   00035A                     SCANLADR        equ	858	;# 
  9476   00035A                     SCANLADRL       equ	858	;# 
  9477   00035B                     SCANLADRH       equ	859	;# 
  9478   00035C                     SCANLADRU       equ	860	;# 
  9479   00035D                     SCANHADR        equ	861	;# 
  9480   00035D                     SCANHADRL       equ	861	;# 
  9481   00035E                     SCANHADRH       equ	862	;# 
  9482   00035F                     SCANHADRU       equ	863	;# 
  9483   000360                     SCANCON0        equ	864	;# 
  9484   000361                     SCANTRIG        equ	865	;# 
  9485   000367                     IPR0            equ	871	;# 
  9486   000368                     IPR1            equ	872	;# 
  9487   000369                     IPR2            equ	873	;# 
  9488   00036A                     IPR3            equ	874	;# 
  9489   00036B                     IPR4            equ	875	;# 
  9490   00036C                     IPR5            equ	876	;# 
  9491   00036D                     IPR6            equ	877	;# 
  9492   00036E                     IPR7            equ	878	;# 
  9493   00036F                     IPR8            equ	879	;# 
  9494   000370                     IPR9            equ	880	;# 
  9495   000371                     IPR10           equ	881	;# 
  9496   000373                     STATUS_CSHAD    equ	883	;# 
  9497   000374                     WREG_CSHAD      equ	884	;# 
  9498   000375                     BSR_CSHAD       equ	885	;# 
  9499   000376                     SHADCON         equ	886	;# 
  9500   000377                     STATUS_SHAD     equ	887	;# 
  9501   000378                     WREG_SHAD       equ	888	;# 
  9502   000379                     BSR_SHAD        equ	889	;# 
  9503   00037A                     PCLATH_SHAD     equ	890	;# 
  9504   00037B                     PCLATU_SHAD     equ	891	;# 
  9505   00037C                     FSR0SH          equ	892	;# 
  9506   00037C                     FSR0L_SHAD      equ	892	;# 
  9507   00037D                     FSR0H_SHAD      equ	893	;# 
  9508   00037E                     FSR1SH          equ	894	;# 
  9509   00037E                     FSR1L_SHAD      equ	894	;# 
  9510   00037F                     FSR1H_SHAD      equ	895	;# 
  9511   000380                     FSR2SH          equ	896	;# 
  9512   000380                     FSR2L_SHAD      equ	896	;# 
  9513   000381                     FSR2H_SHAD      equ	897	;# 
  9514   000382                     PRODSH          equ	898	;# 
  9515   000382                     PRODL_SHAD      equ	898	;# 
  9516   000383                     PRODH_SHAD      equ	899	;# 
  9517   0003BC                     CWG1CLK         equ	956	;# 
  9518   0003BC                     CWG1CLKCON      equ	956	;# 
  9519   0003BD                     CWG1ISM         equ	957	;# 
  9520   0003BD                     CWG1DAT         equ	957	;# 
  9521   0003BE                     CWG1DBR         equ	958	;# 
  9522   0003BF                     CWG1DBF         equ	959	;# 
  9523   0003C0                     CWG1CON0        equ	960	;# 
  9524   0003C1                     CWG1CON1        equ	961	;# 
  9525   0003C2                     CWG1AS0         equ	962	;# 
  9526   0003C3                     CWG1AS1         equ	963	;# 
  9527   0003C4                     CWG1STR         equ	964	;# 
  9528   0003D7                     FVRCON          equ	983	;# 
  9529   0003D8                     ADCPCON         equ	984	;# 
  9530   0003D8                     ADCP            equ	984	;# 
  9531   0003D9                     ADLTH           equ	985	;# 
  9532   0003D9                     ADLTHL          equ	985	;# 
  9533   0003DA                     ADLTHH          equ	986	;# 
  9534   0003DB                     ADUTH           equ	987	;# 
  9535   0003DB                     ADUTHL          equ	987	;# 
  9536   0003DC                     ADUTHH          equ	988	;# 
  9537   0003DD                     ADERR           equ	989	;# 
  9538   0003DD                     ADERRL          equ	989	;# 
  9539   0003DE                     ADERRH          equ	990	;# 
  9540   0003DF                     ADSTPT          equ	991	;# 
  9541   0003DF                     ADSTPTL         equ	991	;# 
  9542   0003E0                     ADSTPTH         equ	992	;# 
  9543   0003E1                     ADFLTR          equ	993	;# 
  9544   0003E1                     ADFLTRL         equ	993	;# 
  9545   0003E2                     ADFLTRH         equ	994	;# 
  9546   0003E3                     ADACC           equ	995	;# 
  9547   0003E3                     ADACCL          equ	995	;# 
  9548   0003E4                     ADACCH          equ	996	;# 
  9549   0003E5                     ADACCU          equ	997	;# 
  9550   0003E6                     ADCNT           equ	998	;# 
  9551   0003E7                     ADRPT           equ	999	;# 
  9552   0003E8                     ADPREV          equ	1000	;# 
  9553   0003E8                     ADPREVL         equ	1000	;# 
  9554   0003E9                     ADPREVH         equ	1001	;# 
  9555   0003EA                     ADRES           equ	1002	;# 
  9556   0003EA                     ADRESL          equ	1002	;# 
  9557   0003EB                     ADRESH          equ	1003	;# 
  9558   0003EC                     ADPCH           equ	1004	;# 
  9559   0003EE                     ADACQ           equ	1006	;# 
  9560   0003EE                     ADACQL          equ	1006	;# 
  9561   0003EF                     ADACQH          equ	1007	;# 
  9562   0003F0                     ADCAP           equ	1008	;# 
  9563   0003F1                     ADPRE           equ	1009	;# 
  9564   0003F1                     ADPREL          equ	1009	;# 
  9565   0003F2                     ADPREH          equ	1010	;# 
  9566   0003F3                     ADCON0          equ	1011	;# 
  9567   0003F4                     ADCON1          equ	1012	;# 
  9568   0003F5                     ADCON2          equ	1013	;# 
  9569   0003F6                     ADCON3          equ	1014	;# 
  9570   0003F7                     ADSTAT          equ	1015	;# 
  9571   0003F8                     ADREF           equ	1016	;# 
  9572   0003F9                     ADACT           equ	1017	;# 
  9573   0003FA                     ADCLK           equ	1018	;# 
  9574   000400                     ANSELA          equ	1024	;# 
  9575   000401                     WPUA            equ	1025	;# 
  9576   000402                     ODCONA          equ	1026	;# 
  9577   000403                     SLRCONA         equ	1027	;# 
  9578   000404                     INLVLA          equ	1028	;# 
  9579   000405                     IOCAP           equ	1029	;# 
  9580   000406                     IOCAN           equ	1030	;# 
  9581   000407                     IOCAF           equ	1031	;# 
  9582   000408                     ANSELB          equ	1032	;# 
  9583   000409                     WPUB            equ	1033	;# 
  9584   00040A                     ODCONB          equ	1034	;# 
  9585   00040B                     SLRCONB         equ	1035	;# 
  9586   00040C                     INLVLB          equ	1036	;# 
  9587   00040D                     IOCBP           equ	1037	;# 
  9588   00040E                     IOCBN           equ	1038	;# 
  9589   00040F                     IOCBF           equ	1039	;# 
  9590   000410                     ANSELC          equ	1040	;# 
  9591   000411                     WPUC            equ	1041	;# 
  9592   000412                     ODCONC          equ	1042	;# 
  9593   000413                     SLRCONC         equ	1043	;# 
  9594   000414                     INLVLC          equ	1044	;# 
  9595   000415                     IOCCP           equ	1045	;# 
  9596   000416                     IOCCN           equ	1046	;# 
  9597   000417                     IOCCF           equ	1047	;# 
  9598   000440                     NCO1ACC         equ	1088	;# 
  9599   000440                     NCO1ACCL        equ	1088	;# 
  9600   000441                     NCO1ACCH        equ	1089	;# 
  9601   000442                     NCO1ACCU        equ	1090	;# 
  9602   000443                     NCO1INC         equ	1091	;# 
  9603   000443                     NCO1INCL        equ	1091	;# 
  9604   000444                     NCO1INCH        equ	1092	;# 
  9605   000445                     NCO1INCU        equ	1093	;# 
  9606   000446                     NCO1CON         equ	1094	;# 
  9607   000447                     NCO1CLK         equ	1095	;# 
  9608   000458                     FSCMCON         equ	1112	;# 
  9609   000459                     IVTLOCK         equ	1113	;# 
  9610   00045A                     IVTAD           equ	1114	;# 
  9611   00045A                     IVTADL          equ	1114	;# 
  9612   00045B                     IVTADH          equ	1115	;# 
  9613   00045C                     IVTADU          equ	1116	;# 
  9614   00045D                     IVTBASE         equ	1117	;# 
  9615   00045D                     IVTBASEL        equ	1117	;# 
  9616   00045E                     IVTBASEH        equ	1118	;# 
  9617   00045F                     IVTBASEU        equ	1119	;# 
  9618   000460                     PWM1ERS         equ	1120	;# 
  9619   000461                     PWM1CLK         equ	1121	;# 
  9620   000462                     PWM1LDS         equ	1122	;# 
  9621   000463                     PWM1PR          equ	1123	;# 
  9622   000463                     PWM1PRL         equ	1123	;# 
  9623   000464                     PWM1PRH         equ	1124	;# 
  9624   000465                     PWM1CPRE        equ	1125	;# 
  9625   000466                     PWM1PIPOS       equ	1126	;# 
  9626   000467                     PWM1GIR         equ	1127	;# 
  9627   000468                     PWM1GIE         equ	1128	;# 
  9628   000469                     PWM1CON         equ	1129	;# 
  9629   00046A                     PWM1S1CFG       equ	1130	;# 
  9630   00046B                     PWM1S1P1        equ	1131	;# 
  9631   00046B                     PWM1S1P1L       equ	1131	;# 
  9632   00046C                     PWM1S1P1H       equ	1132	;# 
  9633   00046D                     PWM1S1P2        equ	1133	;# 
  9634   00046D                     PWM1S1P2L       equ	1133	;# 
  9635   00046E                     PWM1S1P2H       equ	1134	;# 
  9636   00046F                     PWM2ERS         equ	1135	;# 
  9637   000470                     PWM2CLK         equ	1136	;# 
  9638   000471                     PWM2LDS         equ	1137	;# 
  9639   000472                     PWM2PR          equ	1138	;# 
  9640   000472                     PWM2PRL         equ	1138	;# 
  9641   000473                     PWM2PRH         equ	1139	;# 
  9642   000474                     PWM2CPRE        equ	1140	;# 
  9643   000475                     PWM2PIPOS       equ	1141	;# 
  9644   000476                     PWM2GIR         equ	1142	;# 
  9645   000477                     PWM2GIE         equ	1143	;# 
  9646   000478                     PWM2CON         equ	1144	;# 
  9647   000479                     PWM2S1CFG       equ	1145	;# 
  9648   00047A                     PWM2S1P1        equ	1146	;# 
  9649   00047A                     PWM2S1P1L       equ	1146	;# 
  9650   00047B                     PWM2S1P1H       equ	1147	;# 
  9651   00047C                     PWM2S1P2        equ	1148	;# 
  9652   00047C                     PWM2S1P2L       equ	1148	;# 
  9653   00047D                     PWM2S1P2H       equ	1149	;# 
  9654   00047E                     PWM3ERS         equ	1150	;# 
  9655   00047F                     PWM3CLK         equ	1151	;# 
  9656   000480                     PWM3LDS         equ	1152	;# 
  9657   000481                     PWM3PR          equ	1153	;# 
  9658   000481                     PWM3PRL         equ	1153	;# 
  9659   000482                     PWM3PRH         equ	1154	;# 
  9660   000483                     PWM3CPRE        equ	1155	;# 
  9661   000484                     PWM3PIPOS       equ	1156	;# 
  9662   000485                     PWM3GIR         equ	1157	;# 
  9663   000486                     PWM3GIE         equ	1158	;# 
  9664   000487                     PWM3CON         equ	1159	;# 
  9665   000488                     PWM3S1CFG       equ	1160	;# 
  9666   000489                     PWM3S1P1        equ	1161	;# 
  9667   000489                     PWM3S1P1L       equ	1161	;# 
  9668   00048A                     PWM3S1P1H       equ	1162	;# 
  9669   00048B                     PWM3S1P2        equ	1163	;# 
  9670   00048B                     PWM3S1P2L       equ	1163	;# 
  9671   00048C                     PWM3S1P2H       equ	1164	;# 
  9672   00049C                     PWMLOAD         equ	1180	;# 
  9673   00049D                     PWMEN           equ	1181	;# 
  9674   0004A8                     PIE0            equ	1192	;# 
  9675   0004A9                     PIE1            equ	1193	;# 
  9676   0004AA                     PIE2            equ	1194	;# 
  9677   0004AB                     PIE3            equ	1195	;# 
  9678   0004AC                     PIE4            equ	1196	;# 
  9679   0004AD                     PIE5            equ	1197	;# 
  9680   0004AE                     PIE6            equ	1198	;# 
  9681   0004AF                     PIE7            equ	1199	;# 
  9682   0004B0                     PIE8            equ	1200	;# 
  9683   0004B1                     PIE9            equ	1201	;# 
  9684   0004B2                     PIE10           equ	1202	;# 
  9685   0004B3                     PIR0            equ	1203	;# 
  9686   0004B4                     PIR1            equ	1204	;# 
  9687   0004B5                     PIR2            equ	1205	;# 
  9688   0004B6                     PIR3            equ	1206	;# 
  9689   0004B7                     PIR4            equ	1207	;# 
  9690   0004B8                     PIR5            equ	1208	;# 
  9691   0004B9                     PIR6            equ	1209	;# 
  9692   0004BA                     PIR7            equ	1210	;# 
  9693   0004BB                     PIR8            equ	1211	;# 
  9694   0004BC                     PIR9            equ	1212	;# 
  9695   0004BD                     PIR10           equ	1213	;# 
  9696   0004BE                     LATA            equ	1214	;# 
  9697   0004BF                     LATB            equ	1215	;# 
  9698   0004C0                     LATC            equ	1216	;# 
  9699   0004C6                     TRISA           equ	1222	;# 
  9700   0004C7                     TRISB           equ	1223	;# 
  9701   0004C8                     TRISC           equ	1224	;# 
  9702   0004CE                     PORTA           equ	1230	;# 
  9703   0004CF                     PORTB           equ	1231	;# 
  9704   0004D0                     PORTC           equ	1232	;# 
  9705   0004D6                     INTCON0         equ	1238	;# 
  9706   0004D7                     INTCON1         equ	1239	;# 
  9707   0004D8                     STATUS          equ	1240	;# 
  9708   0004D9                     FSR2            equ	1241	;# 
  9709   0004D9                     FSR2L           equ	1241	;# 
  9710   0004DA                     FSR2H           equ	1242	;# 
  9711   0004DB                     PLUSW2          equ	1243	;# 
  9712   0004DC                     PREINC2         equ	1244	;# 
  9713   0004DD                     POSTDEC2        equ	1245	;# 
  9714   0004DE                     POSTINC2        equ	1246	;# 
  9715   0004DF                     INDF2           equ	1247	;# 
  9716   0004E0                     BSR             equ	1248	;# 
  9717   0004E1                     FSR1            equ	1249	;# 
  9718   0004E1                     FSR1L           equ	1249	;# 
  9719   0004E2                     FSR1H           equ	1250	;# 
  9720   0004E3                     PLUSW1          equ	1251	;# 
  9721   0004E4                     PREINC1         equ	1252	;# 
  9722   0004E5                     POSTDEC1        equ	1253	;# 
  9723   0004E6                     POSTINC1        equ	1254	;# 
  9724   0004E7                     INDF1           equ	1255	;# 
  9725   0004E8                     WREG            equ	1256	;# 
  9726   0004E9                     FSR0            equ	1257	;# 
  9727   0004E9                     FSR0L           equ	1257	;# 
  9728   0004EA                     FSR0H           equ	1258	;# 
  9729   0004EB                     PLUSW0          equ	1259	;# 
  9730   0004EC                     PREINC0         equ	1260	;# 
  9731   0004ED                     POSTDEC0        equ	1261	;# 
  9732   0004EE                     POSTINC0        equ	1262	;# 
  9733   0004EF                     INDF0           equ	1263	;# 
  9734   0004F0                     PCON0           equ	1264	;# 
  9735   0004F1                     PCON1           equ	1265	;# 
  9736   0004F2                     CPUDOZE         equ	1266	;# 
  9737   0004F3                     PROD            equ	1267	;# 
  9738   0004F3                     PRODL           equ	1267	;# 
  9739   0004F4                     PRODH           equ	1268	;# 
  9740   0004F5                     TABLAT          equ	1269	;# 
  9741   0004F6                     TBLPTR          equ	1270	;# 
  9742   0004F6                     TBLPTRL         equ	1270	;# 
  9743   0004F7                     TBLPTRH         equ	1271	;# 
  9744   0004F8                     TBLPTRU         equ	1272	;# 
  9745   0004F9                     PCLAT           equ	1273	;# 
  9746   0004F9                     PCL             equ	1273	;# 
  9747   0004FA                     PCLATH          equ	1274	;# 
  9748   0004FB                     PCLATU          equ	1275	;# 
  9749   0004FC                     STKPTR          equ	1276	;# 
  9750   0004FD                     TOS             equ	1277	;# 
  9751   0004FD                     TOSL            equ	1277	;# 
  9752   0004FE                     TOSH            equ	1278	;# 
  9753   0004FF                     TOSU            equ	1279	;# 
  9754                           
  9755 ;; Function _PWM1_PHASE_A_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
  9756   000000                     _PWM1_PHASE_A_Slice1Output1_DefaultInterruptHandler equ	0
  9757                           
  9758 ;; Function _PWM1_PHASE_A_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
  9759   000000                     _PWM1_PHASE_A_Slice1Output2_DefaultInterruptHandler equ	0
  9760                           
  9761 ;; Function _PWM1_PHASE_A_Period_DefaultInterruptHandler is unused but had its address taken
  9762   000000                     _PWM1_PHASE_A_Period_DefaultInterruptHandler equ	0
  9763                           
  9764 ;; Function _GATE_DefaultInterruptHandler is unused but had its address taken
  9765   000000                     _GATE_DefaultInterruptHandler equ	0
  9766                           
  9767 ;; Function _PHOTOCELL_DefaultInterruptHandler is unused but had its address taken
  9768   000000                     _PHOTOCELL_DefaultInterruptHandler equ	0
  9769                           
  9770 ;; Function _BUTTON_DefaultInterruptHandler is unused but had its address taken
  9771   000000                     _BUTTON_DefaultInterruptHandler equ	0
  9772                           
  9773 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  9774   000000                     _INT0_DefaultInterruptHandler equ	0
  9775                           
  9776 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  9777   000000                     _INT1_DefaultInterruptHandler equ	0
  9778                           
  9779 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  9780   000000                     _INT2_DefaultInterruptHandler equ	0
  9781                           
  9782 ;; Function _TMR0_PeriodCountSet is unused but had its address taken
  9783   000000                     _TMR0_PeriodCountSet equ	0
  9784                           
  9785 ;; Function _TMR2_PeriodCountSet is unused but had its address taken
  9786   000000                     _TMR2_PeriodCountSet equ	0
  9787                           
  9788 ;; Function _UART1_Deinitialize is unused but had its address taken
  9789   000000                     _UART1_Deinitialize equ	0
  9790                           
  9791 ;; Function _UART1_TransmitEnable is unused but had its address taken
  9792   000000                     _UART1_TransmitEnable equ	0
  9793                           
  9794 ;; Function _UART1_TransmitDisable is unused but had its address taken
  9795   000000                     _UART1_TransmitDisable equ	0
  9796                           
  9797 ;; Function _UART1_AutoBaudSet is unused but had its address taken
  9798   000000                     _UART1_AutoBaudSet equ	0
  9799                           
  9800 ;; Function _UART1_AutoBaudQuery is unused but had its address taken
  9801   000000                     _UART1_AutoBaudQuery equ	0
  9802                           
  9803 ;; Function _UART1_IsRxReady is unused but had its address taken
  9804   000000                     _UART1_IsRxReady equ	0
  9805                           
  9806 ;; Function _UART1_IsTxDone is unused but had its address taken
  9807   000000                     _UART1_IsTxDone equ	0
  9808                           
  9809 ;; Function _UART1_ErrorGet is unused but had its address taken
  9810   000000                     _UART1_ErrorGet equ	0
  9811                           
  9812 ;; Function _UART1_Read is unused but had its address taken
  9813   000000                     _UART1_Read     equ	0
  9814                           
  9815 ;; Function _UART1_DefaultFramingErrorCallback is unused but had its address taken
  9816   000000                     _UART1_DefaultFramingErrorCallback equ	0
  9817                           
  9818 ;; Function _UART1_DefaultOverrunErrorCallback is unused but had its address taken
  9819   000000                     _UART1_DefaultOverrunErrorCallback equ	0
  9820                           
  9821 ;; Function _UART1_DefaultParityErrorCallback is unused but had its address taken
  9822   000000                     _UART1_DefaultParityErrorCallback equ	0
  9823                           
  9824                           	psect	idataCOMRAM
  9825   00367E                     __pidataCOMRAM:
  9826                           	callstack 0
  9827                           
  9828                           ;initializer for _gateState
  9829   00367E  02                 	db	2
  9830                           
  9831                           	psect	idataBANK5
  9832   003328                     __pidataBANK5:
  9833                           	callstack 0
  9834                           
  9835                           ;initializer for _menuOptionNames
  9836   003328  93                 	db	low STR_21
  9837   003329  7F                 	db	high STR_21
  9838   00332A  6F                 	db	low STR_22
  9839   00332B  7F                 	db	high STR_22
  9840   00332C  87                 	db	low STR_23
  9841   00332D  7F                 	db	high STR_23
  9842   00332E  7B                 	db	low STR_24
  9843   00332F  7F                 	db	high STR_24
  9844   003330  61                 	db	low STR_25
  9845   003331  7F                 	db	high STR_25
  9846                           
  9847                           ;initializer for Menu_AdjustTime@F14581
  9848   003332  54                 	db	84
  9849   003333  4D                 	db	77
  9850   003334  45                 	db	69
  9851   003335  20                 	db	32
  9852   003336  00                 	db	0
  9853                           
  9854                           ;initializer for Menu_AdjustOvercurrent@F14577
  9855   003337  4F                 	db	79
  9856   003338  56                 	db	86
  9857   003339  52                 	db	82
  9858   00333A  20                 	db	32
  9859   00333B  00                 	db	0
  9860                           
  9861                           ;initializer for Menu_AdjustSpeed@F14573
  9862   00333C  53                 	db	83
  9863   00333D  50                 	db	80
  9864   00333E  44                 	db	68
  9865   00333F  20                 	db	32
  9866   003340  00                 	db	0
  9867                           
  9868                           ;initializer for Menu_PrintCurrentOption@F14568
  9869   003341  2D                 	db	45
  9870   003342  2D                 	db	45
  9871   003343  2D                 	db	45
  9872   003344  2D                 	db	45
  9873   003345  00                 	db	0
  9874                           
  9875                           ;initializer for _allChars
  9876   003346  F0                 	db	low STR_19
  9877   003347  7E                 	db	high STR_19
  9878                           
  9879                           ;initializer for _lastConfigMode
  9880   003348  0001               	dw	1
  9881                           
  9882                           ;initializer for _pwmPeriod
  9883   00334A  0C7F               	dw	3199
  9884                           
  9885                           ;initializer for _lastGateState
  9886   00334C  0002               	dw	2
  9887                           
  9888                           ;initializer for _overcurrentThreshold
  9889   00334E  1388               	dw	5000
  9890                           
  9891                           ;initializer for _speedLevel
  9892   003350  02                 	db	2
  9893                           
  9894                           	psect	mediumconst
  9895   007E5A                     __pmediumconst:
  9896                           	callstack 0
  9897   007E5A  00                 	db	0
  9898   007E5B                     _UART1:
  9899                           	callstack 0
  9900   007E5B  F6                 	db	low _UART1_Initialize
  9901   007E5C  28                 	db	high _UART1_Initialize
  9902   007E5D  00                 	db	0
  9903   007E5E  00                 	db	0
  9904   007E5F  00                 	db	0
  9905   007E60  00                 	db	0
  9906   007E61  52                 	db	low _UART1_Write
  9907   007E62  33                 	db	high _UART1_Write
  9908   007E63  00                 	db	0
  9909   007E64  00                 	db	0
  9910   007E65  C8                 	db	low _UART1_IsTxReady
  9911   007E66  30                 	db	high _UART1_IsTxReady
  9912   007E67  00                 	db	0
  9913   007E68  00                 	db	0
  9914   007E69  00                 	db	0
  9915   007E6A  00                 	db	0
  9916   007E6B  00                 	db	0
  9917   007E6C  00                 	db	0
  9918   007E6D  00                 	db	0
  9919   007E6E  00                 	db	0
  9920   007E6F  00                 	db	0
  9921   007E70  00                 	db	0
  9922   007E71  00                 	db	0
  9923   007E72  00                 	db	0
  9924   007E73  00                 	db	0
  9925   007E74  00                 	db	0
  9926   007E75  00                 	db	0
  9927   007E76  00                 	db	0
  9928   007E77  00                 	db	0
  9929   007E78  00                 	db	0
  9930   007E79  00                 	db	0
  9931   007E7A  00                 	db	0
  9932   007E7B  00                 	db	0
  9933   007E7C  00                 	db	0
  9934   007E7D  00                 	db	0
  9935   007E7E  00                 	db	0
  9936   007E7F  00                 	db	0
  9937   007E80  00                 	db	0
  9938   007E81  00                 	db	0
  9939   007E82  00                 	db	0
  9940   007E83  68                 	db	low _UART1_FramingErrorCallbackRegister
  9941   007E84  34                 	db	high _UART1_FramingErrorCallbackRegister
  9942   007E85  4A                 	db	low _UART1_OverrunErrorCallbackRegister
  9943   007E86  34                 	db	high _UART1_OverrunErrorCallbackRegister
  9944   007E87  2C                 	db	low _UART1_ParityErrorCallbackRegister
  9945   007E88  34                 	db	high _UART1_ParityErrorCallbackRegister
  9946   007E89  00                 	db	0
  9947   007E8A  00                 	db	0
  9948   007E8B                     __end_of_UART1:
  9949                           	callstack 0
  9950   007E8B                     _segments:
  9951                           	callstack 0
  9952   007E8B  3F                 	db	63
  9953   007E8C  06                 	db	6
  9954   007E8D  5B                 	db	91
  9955   007E8E  4F                 	db	79
  9956   007E8F  66                 	db	102
  9957   007E90  6D                 	db	109
  9958   007E91  7D                 	db	125
  9959   007E92  07                 	db	7
  9960   007E93  7F                 	db	127
  9961   007E94  6F                 	db	111
  9962   007E95  00                 	db	0
  9963   007E96  40                 	db	64
  9964   007E97  7C                 	db	124
  9965   007E98  50                 	db	80
  9966   007E99  48                 	db	72
  9967   007E9A  63                 	db	99
  9968   007E9B  77                 	db	119
  9969   007E9C  7C                 	db	124
  9970   007E9D  39                 	db	57
  9971   007E9E  5E                 	db	94
  9972   007E9F  79                 	db	121
  9973   007EA0  71                 	db	113
  9974   007EA1  7C                 	db	124
  9975   007EA2  76                 	db	118
  9976   007EA3  06                 	db	6
  9977   007EA4  1E                 	db	30
  9978   007EA5  76                 	db	118
  9979   007EA6  38                 	db	56
  9980   007EA7  37                 	db	55
  9981   007EA8  54                 	db	84
  9982   007EA9  3F                 	db	63
  9983   007EAA  73                 	db	115
  9984   007EAB  67                 	db	103
  9985   007EAC  50                 	db	80
  9986   007EAD  6D                 	db	109
  9987   007EAE  78                 	db	120
  9988   007EAF  3E                 	db	62
  9989   007EB0  3E                 	db	62
  9990   007EB1  2A                 	db	42
  9991   007EB2  76                 	db	118
  9992   007EB3  6E                 	db	110
  9993   007EB4  5B                 	db	91
  9994   007EB5                     __end_of_segments:
  9995                           	callstack 0
  9996   007EB5                     Motor_UpdateSpeedLevel@F14403:
  9997                           	callstack 0
  9998   007EB5  03E8               	dw	1000
  9999   007EB7  05DC               	dw	1500
 10000   007EB9  07D0               	dw	2000
 10001   007EBB  09C4               	dw	2500
 10002   007EBD  0BB8               	dw	3000
 10003   007EBF  0DAC               	dw	3500
 10004   007EC1  0FA0               	dw	4000
 10005   007EC3  1194               	dw	4500
 10006   007EC5  1388               	dw	5000
 10007   007EC7                     __end_ofMotor_UpdateSpeedLevel@F14403:
 10008                           	callstack 0
 10009   007EC7                     UART1_WriteHexDigit@F14450:
 10010                           	callstack 0
 10011   007EC7  30                 	db	48
 10012   007EC8  31                 	db	49
 10013   007EC9  32                 	db	50
 10014   007ECA  33                 	db	51
 10015   007ECB  34                 	db	52
 10016   007ECC  35                 	db	53
 10017   007ECD  36                 	db	54
 10018   007ECE  37                 	db	55
 10019   007ECF  38                 	db	56
 10020   007ED0  39                 	db	57
 10021   007ED1  41                 	db	65
 10022   007ED2  42                 	db	66
 10023   007ED3  43                 	db	67
 10024   007ED4  44                 	db	68
 10025   007ED5  45                 	db	69
 10026   007ED6  46                 	db	70
 10027   007ED7  00                 	db	0
 10028   007ED8                     __end_ofUART1_WriteHexDigit@F14450:
 10029                           	callstack 0
 10030   007ED8                     _Timer2:
 10031                           	callstack 0
 10032   007ED8  FE                 	db	low _TMR2_Initialize
 10033   007ED9  32                 	db	high _TMR2_Initialize
 10034   007EDA  4A                 	db	low _TMR2_Start
 10035   007EDB  36                 	db	high _TMR2_Start
 10036   007EDC  44                 	db	low _TMR2_Stop
 10037   007EDD  36                 	db	high _TMR2_Stop
 10038   007EDE  00                 	db	0
 10039   007EDF  00                 	db	0
 10040   007EE0  5E                 	db	low _TMR2_OverflowCallbackRegister
 10041   007EE1  35                 	db	high _TMR2_OverflowCallbackRegister
 10042   007EE2  00                 	db	0
 10043   007EE3  00                 	db	0
 10044   007EE4                     __end_of_Timer2:
 10045                           	callstack 0
 10046   007EE4                     _Timer0:
 10047                           	callstack 0
 10048   007EE4  70                 	db	low _TMR0_Initialize
 10049   007EE5  31                 	db	high _TMR0_Initialize
 10050   007EE6  56                 	db	low _TMR0_Start
 10051   007EE7  36                 	db	high _TMR0_Start
 10052   007EE8  50                 	db	low _TMR0_Stop
 10053   007EE9  36                 	db	high _TMR0_Stop
 10054   007EEA  00                 	db	0
 10055   007EEB  00                 	db	0
 10056   007EEC  68                 	db	low _TMR0_OverflowCallbackRegister
 10057   007EED  35                 	db	high _TMR0_OverflowCallbackRegister
 10058   007EEE  00                 	db	0
 10059   007EEF  00                 	db	0
 10060   007EF0                     __end_of_Timer0:
 10061                           	callstack 0
 10062   007EF0                     STR_19:
 10063   007EF0  30                 	db	48	;'0'
 10064   007EF1  31                 	db	49	;'1'
 10065   007EF2  32                 	db	50	;'2'
 10066   007EF3  33                 	db	51	;'3'
 10067   007EF4  34                 	db	52	;'4'
 10068   007EF5  35                 	db	53	;'5'
 10069   007EF6  36                 	db	54	;'6'
 10070   007EF7  37                 	db	55	;'7'
 10071   007EF8  38                 	db	56	;'8'
 10072   007EF9  39                 	db	57	;'9'
 10073   007EFA  20                 	db	32
 10074   007EFB  2D                 	db	45
 10075   007EFC  62                 	db	98	;'b'
 10076   007EFD  72                 	db	114	;'r'
 10077   007EFE  3D                 	db	61	;'='
 10078   007EFF  2A                 	db	42
 10079   007F00  41                 	db	65	;'A'
 10080   007F01  42                 	db	66	;'B'
 10081   007F02  43                 	db	67	;'C'
 10082   007F03  44                 	db	68	;'D'
 10083   007F04  45                 	db	69	;'E'
 10084   007F05  46                 	db	70	;'F'
 10085   007F06  47                 	db	71	;'G'
 10086   007F07  48                 	db	72	;'H'
 10087   007F08  49                 	db	73	;'I'
 10088   007F09  4A                 	db	74	;'J'
 10089   007F0A  4B                 	db	75	;'K'
 10090   007F0B  4C                 	db	76	;'L'
 10091   007F0C  4D                 	db	77	;'M'
 10092   007F0D  4E                 	db	78	;'N'
 10093   007F0E  4F                 	db	79	;'O'
 10094   007F0F  50                 	db	80	;'P'
 10095   007F10  51                 	db	81	;'Q'
 10096   007F11  52                 	db	82	;'R'
 10097   007F12  53                 	db	83	;'S'
 10098   007F13  54                 	db	84	;'T'
 10099   007F14  55                 	db	85	;'U'
 10100   007F15  56                 	db	86	;'V'
 10101   007F16  57                 	db	87	;'W'
 10102   007F17  58                 	db	88	;'X'
 10103   007F18  59                 	db	89	;'Y'
 10104   007F19  5A                 	db	90	;'Z'
 10105   007F1A  00                 	db	0
 10106   007F1B                     STR_3:
 10107   007F1B  4F                 	db	79	;'O'
 10108   007F1C  76                 	db	118	;'v'
 10109   007F1D  65                 	db	101	;'e'
 10110   007F1E  72                 	db	114	;'r'
 10111   007F1F  63                 	db	99	;'c'
 10112   007F20  75                 	db	117	;'u'
 10113   007F21  72                 	db	114	;'r'
 10114   007F22  72                 	db	114	;'r'
 10115   007F23  65                 	db	101	;'e'
 10116   007F24  6E                 	db	110	;'n'
 10117   007F25  74                 	db	116	;'t'
 10118   007F26  20                 	db	32
 10119   007F27  64                 	db	100	;'d'
 10120   007F28  65                 	db	101	;'e'
 10121   007F29  74                 	db	116	;'t'
 10122   007F2A  65                 	db	101	;'e'
 10123   007F2B  63                 	db	99	;'c'
 10124   007F2C  74                 	db	116	;'t'
 10125   007F2D  65                 	db	101	;'e'
 10126   007F2E  64                 	db	100	;'d'
 10127   007F2F  21                 	db	33
 10128   007F30  20                 	db	32
 10129   007F31  53                 	db	83	;'S'
 10130   007F32  74                 	db	116	;'t'
 10131   007F33  6F                 	db	111	;'o'
 10132   007F34  70                 	db	112	;'p'
 10133   007F35  70                 	db	112	;'p'
 10134   007F36  69                 	db	105	;'i'
 10135   007F37  6E                 	db	110	;'n'
 10136   007F38  67                 	db	103	;'g'
 10137   007F39  20                 	db	32
 10138   007F3A  6D                 	db	109	;'m'
 10139   007F3B  6F                 	db	111	;'o'
 10140   007F3C  74                 	db	116	;'t'
 10141   007F3D  6F                 	db	111	;'o'
 10142   007F3E  72                 	db	114	;'r'
 10143   007F3F  21                 	db	33
 10144   007F40  21                 	db	33
 10145   007F41  21                 	db	33
 10146   007F42  0D                 	db	13
 10147   007F43  0A                 	db	10
 10148   007F44  00                 	db	0
 10149   007F45                     STR_6:
 10150   007F45  49                 	db	73	;'I'
 10151   007F46  6E                 	db	110	;'n'
 10152   007F47  74                 	db	116	;'t'
 10153   007F48  65                 	db	101	;'e'
 10154   007F49  72                 	db	114	;'r'
 10155   007F4A  73                 	db	115	;'s'
 10156   007F4B  68                 	db	104	;'h'
 10157   007F4C  69                 	db	105	;'i'
 10158   007F4D  70                 	db	112	;'p'
 10159   007F4E  20                 	db	32
 10160   007F4F  70                 	db	112	;'p'
 10161   007F50  72                 	db	114	;'r'
 10162   007F51  6F                 	db	111	;'o'
 10163   007F52  6A                 	db	106	;'j'
 10164   007F53  65                 	db	101	;'e'
 10165   007F54  63                 	db	99	;'c'
 10166   007F55  74                 	db	116	;'t'
 10167   007F56  20                 	db	32
 10168   007F57  73                 	db	115	;'s'
 10169   007F58  74                 	db	116	;'t'
 10170   007F59  61                 	db	97	;'a'
 10171   007F5A  72                 	db	114	;'r'
 10172   007F5B  74                 	db	116	;'t'
 10173   007F5C  65                 	db	101	;'e'
 10174   007F5D  64                 	db	100	;'d'
 10175   007F5E  0D                 	db	13
 10176   007F5F  0A                 	db	10
 10177   007F60  00                 	db	0
 10178   007F61                     STR_25:
 10179   007F61  53                 	db	83	;'S'
 10180   007F62  61                 	db	97	;'a'
 10181   007F63  76                 	db	118	;'v'
 10182   007F64  65                 	db	101	;'e'
 10183   007F65  20                 	db	32
 10184   007F66  61                 	db	97	;'a'
 10185   007F67  6E                 	db	110	;'n'
 10186   007F68  64                 	db	100	;'d'
 10187   007F69  20                 	db	32
 10188   007F6A  45                 	db	69	;'E'
 10189   007F6B  78                 	db	120	;'x'
 10190   007F6C  69                 	db	105	;'i'
 10191   007F6D  74                 	db	116	;'t'
 10192   007F6E  00                 	db	0
 10193   007F6F                     STR_22:
 10194   007F6F  43                 	db	67	;'C'
 10195   007F70  6F                 	db	111	;'o'
 10196   007F71  6E                 	db	110	;'n'
 10197   007F72  66                 	db	102	;'f'
 10198   007F73  69                 	db	105	;'i'
 10199   007F74  67                 	db	103	;'g'
 10200   007F75  20                 	db	32
 10201   007F76  4D                 	db	77	;'M'
 10202   007F77  6F                 	db	111	;'o'
 10203   007F78  64                 	db	100	;'d'
 10204   007F79  65                 	db	101	;'e'
 10205   007F7A  00                 	db	0
 10206   007F7B                     STR_24:
 10207   007F7B  54                 	db	84	;'T'
 10208   007F7C  69                 	db	105	;'i'
 10209   007F7D  6D                 	db	109	;'m'
 10210   007F7E  65                 	db	101	;'e'
 10211   007F7F  20                 	db	32
 10212   007F80  43                 	db	67	;'C'
 10213   007F81  6F                 	db	111	;'o'
 10214   007F82  6E                 	db	110	;'n'
 10215   007F83  66                 	db	102	;'f'
 10216   007F84  69                 	db	105	;'i'
 10217   007F85  67                 	db	103	;'g'
 10218   007F86  00                 	db	0
 10219   007F87                     STR_23:
 10220   007F87  4F                 	db	79	;'O'
 10221   007F88  76                 	db	118	;'v'
 10222   007F89  65                 	db	101	;'e'
 10223   007F8A  72                 	db	114	;'r'
 10224   007F8B  63                 	db	99	;'c'
 10225   007F8C  75                 	db	117	;'u'
 10226   007F8D  72                 	db	114	;'r'
 10227   007F8E  72                 	db	114	;'r'
 10228   007F8F  65                 	db	101	;'e'
 10229   007F90  6E                 	db	110	;'n'
 10230   007F91  74                 	db	116	;'t'
 10231   007F92  00                 	db	0
 10232   007F93                     STR_21:
 10233   007F93  53                 	db	83	;'S'
 10234   007F94  65                 	db	101	;'e'
 10235   007F95  74                 	db	116	;'t'
 10236   007F96  20                 	db	32
 10237   007F97  53                 	db	83	;'S'
 10238   007F98  70                 	db	112	;'p'
 10239   007F99  65                 	db	101	;'e'
 10240   007F9A  65                 	db	101	;'e'
 10241   007F9B  64                 	db	100	;'d'
 10242   007F9C  00                 	db	0
 10243   007F9D                     STR_1:
 10244   007F9D  43                 	db	67	;'C'
 10245   007F9E  75                 	db	117	;'u'
 10246   007F9F  72                 	db	114	;'r'
 10247   007FA0  72                 	db	114	;'r'
 10248   007FA1  65                 	db	101	;'e'
 10249   007FA2  6E                 	db	110	;'n'
 10250   007FA3  74                 	db	116	;'t'
 10251   007FA4  3A                 	db	58	;':'
 10252   007FA5  20                 	db	32
 10253   007FA6  00                 	db	0
 10254   007FA7                     STR_28:
 10255   007FA7  4F                 	db	79	;'O'
 10256   007FA8  56                 	db	86	;'V'
 10257   007FA9  52                 	db	82	;'R'
 10258   007FAA  43                 	db	67	;'C'
 10259   007FAB  00                 	db	0
 10260   007FAC                     STR_26:
 10261   007FAC  53                 	db	83	;'S'
 10262   007FAD  50                 	db	80	;'P'
 10263   007FAE  45                 	db	69	;'E'
 10264   007FAF  44                 	db	68	;'D'
 10265   007FB0  00                 	db	0
 10266   007FB1                     STR_29:
 10267   007FB1  54                 	db	84	;'T'
 10268   007FB2  49                 	db	73	;'I'
 10269   007FB3  4D                 	db	77	;'M'
 10270   007FB4  45                 	db	69	;'E'
 10271   007FB5  00                 	db	0
 10272   007FB6                     STR_30:
 10273   007FB6  53                 	db	83	;'S'
 10274   007FB7  41                 	db	65	;'A'
 10275   007FB8  56                 	db	86	;'V'
 10276   007FB9  45                 	db	69	;'E'
 10277   007FBA  00                 	db	0
 10278   007FBB                     STR_27:
 10279   007FBB  43                 	db	67	;'C'
 10280   007FBC  4F                 	db	79	;'O'
 10281   007FBD  4E                 	db	78	;'N'
 10282   007FBE  46                 	db	70	;'F'
 10283   007FBF  00                 	db	0
 10284   007FC0                     STR_36:
 10285   007FC0  4D                 	db	77	;'M'
 10286   007FC1  4F                 	db	79	;'O'
 10287   007FC2  54                 	db	84	;'T'
 10288   007FC3  52                 	db	82	;'R'
 10289   007FC4  00                 	db	0
 10290   007FC5                     STR_7:
 10291   007FC5  20                 	db	32
 10292   007FC6  20                 	db	32
 10293   007FC7  20                 	db	32
 10294   007FC8  20                 	db	32
 10295   007FC9  00                 	db	0
 10296   007FCA                     STR_8:
 10297   007FCA  45                 	db	69	;'E'
 10298   007FCB  4D                 	db	77	;'M'
 10299   007FCC  52                 	db	82	;'R'
 10300   007FCD  47                 	db	71	;'G'
 10301   007FCE  00                 	db	0
 10302   007FCF                     STR_11:
 10303   007FCF  43                 	db	67	;'C'
 10304   007FD0  4C                 	db	76	;'L'
 10305   007FD1  46                 	db	70	;'F'
 10306   007FD2  4C                 	db	76	;'L'
 10307   007FD3  00                 	db	0
 10308   007FD4                     STR_9:
 10309   007FD4  4F                 	db	79	;'O'
 10310   007FD5  50                 	db	80	;'P'
 10311   007FD6  46                 	db	70	;'F'
 10312   007FD7  4C                 	db	76	;'L'
 10313   007FD8  00                 	db	0
 10314   007FD9                     STR_12:
 10315   007FD9  43                 	db	67	;'C'
 10316   007FDA  4C                 	db	76	;'L'
 10317   007FDB  53                 	db	83	;'S'
 10318   007FDC  4C                 	db	76	;'L'
 10319   007FDD  00                 	db	0
 10320   007FDE                     STR_10:
 10321   007FDE  4F                 	db	79	;'O'
 10322   007FDF  50                 	db	80	;'P'
 10323   007FE0  53                 	db	83	;'S'
 10324   007FE1  4C                 	db	76	;'L'
 10325   007FE2  00                 	db	0
 10326   007FE3                     STR_14:
 10327   007FE3  53                 	db	83	;'S'
 10328   007FE4  54                 	db	84	;'T'
 10329   007FE5  4F                 	db	79	;'O'
 10330   007FE6  50                 	db	80	;'P'
 10331   007FE7  00                 	db	0
 10332   007FE8  20                 	db	32
 10333   007FE9  41                 	db	65	;'A'
 10334   007FEA  0D                 	db	13
 10335   007FEB  0A                 	db	10
 10336   007FEC  00                 	db	0
 10337   007FED                     STR_2:
 10338   007FED  6D                 	db	109	;'m'
 10339   007FEE  41                 	db	65	;'A'
 10340   007FEF  0D                 	db	13
 10341   007FF0  0A                 	db	10
 10342   007FF1  00                 	db	0
 10343   007FF2                     STR_34:
 10344   007FF2  53                 	db	83	;'S'
 10345   007FF3  50                 	db	80	;'P'
 10346   007FF4  44                 	db	68	;'D'
 10347   007FF5  00                 	db	0
 10348   007FF6                     STR_40:
 10349   007FF6  54                 	db	84	;'T'
 10350   007FF7  49                 	db	73	;'I'
 10351   007FF8  4D                 	db	77	;'M'
 10352   007FF9  00                 	db	0
 10353   007FFA                     STR_38:
 10354   007FFA  4F                 	db	79	;'O'
 10355   007FFB  56                 	db	86	;'V'
 10356   007FFC  52                 	db	82	;'R'
 10357   007FFD  00                 	db	0
 10358   007FD4                     STR_16          equ	STR_9
 10359   007FCF                     STR_18          equ	STR_11
 10360   007FBB                     STR_32          equ	STR_27
 10361   007F9D                     STR_4           equ	STR_1
 10362   007FC5                     STR_13          equ	STR_7
 10363   007FC5                     STR_15          equ	STR_7
 10364   007FC5                     STR_17          equ	STR_7
 10365   007FC5                     STR_20          equ	STR_7
 10366   007FC5                     STR_31          equ	STR_7
 10367   007FC5                     STR_33          equ	STR_7
 10368   007FC5                     STR_35          equ	STR_7
 10369   007FC5                     STR_37          equ	STR_7
 10370   007FC5                     STR_39          equ	STR_7
 10371   007FC5                     STR_41          equ	STR_7
 10372   007FC5                     STR_42          equ	STR_7
 10373   007FFE  00                 	db	0	; dummy byte at the end
 10374   000002                     __activetblptr  equ	2
 10375                           
 10376                           	psect	nvBANK5
 10377   0005C6                     __pnvBANK5:
 10378                           	callstack 0
 10379   0005C6                     _TMR2_OverflowCallback:
 10380                           	callstack 0
 10381   0005C6                     	ds	2
 10382   0005C8                     _TMR0_OverflowCallback:
 10383                           	callstack 0
 10384   0005C8                     	ds	2
 10385   0005CA                     _ENTER_InterruptHandler:
 10386                           	callstack 0
 10387   0005CA                     	ds	2
 10388   0005CC                     _BUTTON_InterruptHandler:
 10389                           	callstack 0
 10390   0005CC                     	ds	2
 10391   0005CE                     _PHOTOCELL_InterruptHandler:
 10392                           	callstack 0
 10393   0005CE                     	ds	2
 10394   0005D0                     _GATE_InterruptHandler:
 10395                           	callstack 0
 10396   0005D0                     	ds	2
 10397   0005D2                     _UP_InterruptHandler:
 10398                           	callstack 0
 10399   0005D2                     	ds	2
 10400   0005D4                     _BACK_InterruptHandler:
 10401                           	callstack 0
 10402   0005D4                     	ds	2
 10403   0005D6                     _DOWN_InterruptHandler:
 10404                           	callstack 0
 10405   0005D6                     	ds	2
 10406   0005D8                     _PWM1_PHASE_A_Period_InterruptHandler:
 10407                           	callstack 0
 10408   0005D8                     	ds	2
 10409   0005DA                     _PWM1_PHASE_A_Slice1Output2_InterruptHandler:
 10410                           	callstack 0
 10411   0005DA                     	ds	2
 10412   0005DC                     _PWM1_PHASE_A_Slice1Output1_InterruptHandler:
 10413                           	callstack 0
 10414   0005DC                     	ds	2
 10415   0005DE                     _ADCC_ADI_InterruptHandler:
 10416                           	callstack 0
 10417   0005DE                     	ds	2
 10418   000043                     _NVMADR         set	67
 10419   0000AC                     _ACTCON         set	172
 10420   0000B0                     _OSCTUNE        set	176
 10421   0000B1                     _OSCFRQ         set	177
 10422   0000B3                     _OSCEN          set	179
 10423   0000AF                     _OSCCON3        set	175
 10424   0000AD                     _OSCCON1        set	173
 10425   000046                     _NVMDATL        set	70
 10426   000042                     _NVMLOCK        set	66
 10427   000041                     _NVMCON1bits    set	65
 10428   000040                     _NVMCON0bits    set	64
 10429   0002B0                     _U1FIFObits     set	688
 10430   0002B2                     _U1ERRIRbits    set	690
 10431   0002B1                     _U1UIRbits      set	689
 10432   0002AB                     _U1CON0bits     set	683
 10433   0002AC                     _U1CON1bits     set	684
 10434   0002B3                     _U1ERRIE        set	691
 10435   0002B2                     _U1ERRIR        set	690
 10436   0002B1                     _U1UIR          set	689
 10437   0002B0                     _U1FIFO         set	688
 10438   0002AF                     _U1BRGH         set	687
 10439   0002AE                     _U1BRGL         set	686
 10440   0002AD                     _U1CON2         set	685
 10441   0002AC                     _U1CON1         set	684
 10442   0002AB                     _U1CON0         set	683
 10443   0002AA                     _U1P3H          set	682
 10444   0002A9                     _U1P3L          set	681
 10445   0002A8                     _U1P2H          set	680
 10446   0002A7                     _U1P2L          set	679
 10447   0002A6                     _U1P1H          set	678
 10448   0002A5                     _U1P1L          set	677
 10449   0002A4                     _U1TXCHK        set	676
 10450   0002A3                     _U1TXB          set	675
 10451   0002A2                     _U1RXCHK        set	674
 10452   0002A1                     _U1RXB          set	673
 10453   000210                     _RB7PPS         set	528
 10454   00020F                     _RB6PPS         set	527
 10455   000272                     _U1RXPPS        set	626
 10456   000286                     _RB6I2C         set	646
 10457   000287                     _RB4I2C         set	647
 10458   00031D                     _PR2            set	797
 10459   00031C                     _TMR2           set	796
 10460   00031E                     _T2CONbits      set	798
 10461   000321                     _T2RSTbits      set	801
 10462   00031F                     _T2HLTbits      set	799
 10463   00031E                     _T2CON          set	798
 10464   00031C                     _T2TMR          set	796
 10465   00031D                     _T2PR           set	797
 10466   000321                     _T2RST          set	801
 10467   00031F                     _T2HLT          set	799
 10468   000320                     _T2CLKCON       set	800
 10469   00031A                     _T0CON0bits     set	794
 10470   00031A                     _T0CON0         set	794
 10471   00031B                     _T0CON1         set	795
 10472   000318                     _TMR0L          set	792
 10473   000319                     _TMR0H          set	793
 10474   0003F4                     _ADCON1bits     set	1012
 10475   0003DD                     _ADERRL         set	989
 10476   0003DE                     _ADERRH         set	990
 10477   0003E8                     _ADPREVL        set	1000
 10478   0003E9                     _ADPREVH        set	1001
 10479   0003E1                     _ADFLTRL        set	993
 10480   0003E2                     _ADFLTRH        set	994
 10481   0003F7                     _ADSTATbits     set	1015
 10482   0003E3                     _ADACCL         set	995
 10483   0003E4                     _ADACCH         set	996
 10484   0003F5                     _ADCON2bits     set	1013
 10485   0003E6                     _ADCNT          set	998
 10486   0003F6                     _ADCON3bits     set	1014
 10487   0003EA                     _ADRESL         set	1002
 10488   0003EB                     _ADRESH         set	1003
 10489   0003F3                     _ADCON0bits     set	1011
 10490   0003F3                     _ADCON0         set	1011
 10491   0003FA                     _ADCLK          set	1018
 10492   0003F9                     _ADACT          set	1017
 10493   0003F8                     _ADREF          set	1016
 10494   0003F7                     _ADSTAT         set	1015
 10495   0003F6                     _ADCON3         set	1014
 10496   0003F5                     _ADCON2         set	1013
 10497   0003F4                     _ADCON1         set	1012
 10498   0003F2                     _ADPREH         set	1010
 10499   0003F1                     _ADPREL         set	1009
 10500   0003F0                     _ADCAP          set	1008
 10501   0003EF                     _ADACQH         set	1007
 10502   0003EE                     _ADACQL         set	1006
 10503   0003EC                     _ADPCH          set	1004
 10504   0003E7                     _ADRPT          set	999
 10505   0003E5                     _ADACCU         set	997
 10506   0003E0                     _ADSTPTH        set	992
 10507   0003DF                     _ADSTPTL        set	991
 10508   0003DC                     _ADUTHH         set	988
 10509   0003DB                     _ADUTHL         set	987
 10510   0003DA                     _ADLTHH         set	986
 10511   0003D9                     _ADLTHL         set	985
 10512   002683                     _RC3            set	9859
 10513   002684                     _RC4            set	9860
 10514   002644                     _TRISC4         set	9796
 10515   002643                     _TRISC3         set	9795
 10516   0004C0                     _LATCbits       set	1216
 10517   0004B6                     _PIR3bits       set	1206
 10518   0004AB                     _PIE3bits       set	1195
 10519   0004B3                     _PIR0bits       set	1203
 10520   0004BD                     _PIR10bits      set	1213
 10521   0004B9                     _PIR6bits       set	1209
 10522   0004D0                     _PORTCbits      set	1232
 10523   0004CF                     _PORTBbits      set	1231
 10524   0004CE                     _PORTAbits      set	1230
 10525   000417                     _IOCCFbits      set	1047
 10526   00040F                     _IOCBFbits      set	1039
 10527   000407                     _IOCAFbits      set	1031
 10528   0004A8                     _PIE0bits       set	1192
 10529   000417                     _IOCCF          set	1047
 10530   000416                     _IOCCN          set	1046
 10531   000415                     _IOCCP          set	1045
 10532   00040F                     _IOCBF          set	1039
 10533   00040E                     _IOCBN          set	1038
 10534   00040D                     _IOCBP          set	1037
 10535   000407                     _IOCAF          set	1031
 10536   000406                     _IOCAN          set	1030
 10537   000405                     _IOCAP          set	1029
 10538   000414                     _INLVLC         set	1044
 10539   00040C                     _INLVLB         set	1036
 10540   000404                     _INLVLA         set	1028
 10541   000413                     _SLRCONC        set	1043
 10542   00040B                     _SLRCONB        set	1035
 10543   000403                     _SLRCONA        set	1027
 10544   000411                     _WPUC           set	1041
 10545   000409                     _WPUB           set	1033
 10546   000401                     _WPUA           set	1025
 10547   000410                     _ANSELC         set	1040
 10548   000408                     _ANSELB         set	1032
 10549   000400                     _ANSELA         set	1024
 10550   0004C8                     _TRISC          set	1224
 10551   0004C7                     _TRISB          set	1223
 10552   0004C6                     _TRISA          set	1222
 10553   000412                     _ODCONC         set	1042
 10554   00040A                     _ODCONB         set	1034
 10555   000402                     _ODCONA         set	1026
 10556   0004C0                     _LATC           set	1216
 10557   0004BF                     _LATB           set	1215
 10558   0004BE                     _LATA           set	1214
 10559   000468                     _PWM1GIEbits    set	1128
 10560   000469                     _PWM1CONbits    set	1129
 10561   000469                     _PWM1CON        set	1129
 10562   0004AC                     _PIE4bits       set	1196
 10563   000467                     _PWM1GIRbits    set	1127
 10564   0004B7                     _PIR4bits       set	1207
 10565   00046E                     _PWM1S1P2H      set	1134
 10566   00046D                     _PWM1S1P2L      set	1133
 10567   00046C                     _PWM1S1P1H      set	1132
 10568   00046B                     _PWM1S1P1L      set	1131
 10569   00046A                     _PWM1S1CFG      set	1130
 10570   000468                     _PWM1GIE        set	1128
 10571   000467                     _PWM1GIR        set	1127
 10572   000466                     _PWM1PIPOS      set	1126
 10573   000465                     _PWM1CPRE       set	1125
 10574   000464                     _PWM1PRH        set	1124
 10575   000463                     _PWM1PRL        set	1123
 10576   000462                     _PWM1LDS        set	1122
 10577   000461                     _PWM1CLK        set	1121
 10578   000460                     _PWM1ERS        set	1120
 10579   0004D6                     _INTCON0bits    set	1238
 10580   0004B5                     _PIR2bits       set	1205
 10581   0004A9                     _PIE1bits       set	1193
 10582   0004B4                     _PIR1bits       set	1204
 10583                           
 10584                           ; #config settings
 10585                           
 10586                           	psect	cinit
 10587   002BB8                     __pcinit:
 10588                           	callstack 0
 10589   002BB8                     start_initialization:
 10590                           	callstack 0
 10591   002BB8                     __initialization:
 10592                           	callstack 0
 10593                           
 10594                           ; Initialize objects allocated to BANK5 (41 bytes)
 10595                           ; load TBLPTR registers with __pidataBANK5
 10596   002BB8  0E28               	movlw	low __pidataBANK5
 10597   002BBA  6EF6               	movwf	tblptrl,c
 10598   002BBC  0E33               	movlw	high __pidataBANK5
 10599   002BBE  6EF7               	movwf	tblptrh,c
 10600   002BC0  0E00               	movlw	low (__pidataBANK5 shr (0+16))
 10601   002BC2  6EF8               	movwf	tblptru,c
 10602   002BC4  EE01  F19D         	lfsr	0,__pdataBANK5
 10603   002BC8  EE10 F029          	lfsr	1,41
 10604   002BCC                     copy_data0:
 10605   002BCC  0009               	tblrd		*+
 10606   002BCE  C4F5 F4EE          	movff	tablat,postinc0
 10607   002BD2  50E5               	movf	postdec1,w,c
 10608   002BD4  50E1               	movf	fsr1l,w,c
 10609   002BD6  E1FA               	bnz	copy_data0
 10610                           
 10611                           ; Initialize objects allocated to COMRAM (1 bytes)
 10612                           ; load TBLPTR registers with __pidataCOMRAM
 10613   002BD8  0E7E               	movlw	low __pidataCOMRAM
 10614   002BDA  6EF6               	movwf	tblptrl,c
 10615   002BDC  0E36               	movlw	high __pidataCOMRAM
 10616   002BDE  6EF7               	movwf	tblptrh,c
 10617   002BE0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
 10618   002BE2  6EF8               	movwf	tblptru,c
 10619   002BE4  0009               	tblrd		*+	;fetch initializer
 10620   002BE6  C4F5 F55D          	movff	tablat,__pdataCOMRAM
 10621                           
 10622                           ; Clear objects allocated to BANK5 (61 bytes)
 10623   002BEA  EE01  F160         	lfsr	0,__pbssBANK5
 10624   002BEE  0E3D               	movlw	61
 10625   002BF0                     clear_0:
 10626   002BF0  6AEE               	clrf	postinc0,c
 10627   002BF2  06E8               	decf	wreg,f,c
 10628   002BF4  E1FD               	bnz	clear_0
 10629                           
 10630                           ; Clear objects allocated to COMRAM (2 bytes)
 10631   002BF6  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
 10632   002BF8  6A5B               	clrf	__pbssCOMRAM& (0+255),c
 10633                           
 10634                           ;
 10635                           ; Setup IVTBASE
 10636                           ;
 10637   00045D                     IVTBASEL        equ	1117
 10638   00045E                     IVTBASEH        equ	1118
 10639   00045F                     IVTBASEU        equ	1119
 10640   002BFA  0104               	movlb	4
 10641   002BFC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
 10642   002BFE  6F5D               	movwf	93,b
 10643   002C00  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
 10644   002C02  6F5E               	movwf	94,b
 10645   002C04  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
 10646   002C06  6F5F               	movwf	95,b
 10647   002C08                     end_of_initialization:
 10648                           	callstack 0
 10649   002C08                     __end_of__initialization:
 10650                           	callstack 0
 10651   002C08  0E00               	movlw	low (__Lmediumconst shr (0+16))
 10652   002C0A  6EF8               	movwf	tblptru,c
 10653   002C0C  0100               	movlb	0
 10654   002C0E  EFF6  F019         	goto	_main	;jump to C main() function
 10655                           
 10656                           	psect	bssCOMRAM
 10657   00055B                     __pbssCOMRAM:
 10658                           	callstack 0
 10659   00055B                     _systemState:
 10660                           	callstack 0
 10661   00055B                     	ds	1
 10662   00055C                     _motorState:
 10663                           	callstack 0
 10664   00055C                     	ds	1
 10665                           
 10666                           	psect	dataCOMRAM
 10667   00055D                     __pdataCOMRAM:
 10668                           	callstack 0
 10669   00055D                     _gateState:
 10670                           	callstack 0
 10671   00055D                     	ds	1
 10672                           
 10673                           	psect	bssBANK5
 10674   000560                     __pbssBANK5:
 10675                           	callstack 0
 10676   000560                     _timer0Elapsed_ms:
 10677                           	callstack 0
 10678   000560                     	ds	2
 10679   000562                     _slowdownTimeClose_ms:
 10680                           	callstack 0
 10681   000562                     	ds	2
 10682   000564                     _slowdownTimeOpen_ms:
 10683                           	callstack 0
 10684   000564                     	ds	2
 10685   000566                     _lastMotorState:
 10686                           	callstack 0
 10687   000566                     	ds	2
 10688   000568                     _UART1_ParityErrorHandler:
 10689                           	callstack 0
 10690   000568                     	ds	2
 10691   00056A                     _UART1_OverrunErrorHandler:
 10692                           	callstack 0
 10693   00056A                     	ds	2
 10694   00056C                     _UART1_FramingErrorHandler:
 10695                           	callstack 0
 10696   00056C                     	ds	2
 10697   00056E                     _uart1RxLastError:
 10698                           	callstack 0
 10699   00056E                     	ds	2
 10700   000570                     TMR2_ISR@CountCallBack:
 10701                           	callstack 0
 10702   000570                     	ds	2
 10703   000572                     _gateCloseFullMs:
 10704                           	callstack 0
 10705   000572                     	ds	2
 10706   000574                     _gateOpenFullMs:
 10707                           	callstack 0
 10708   000574                     	ds	2
 10709   000576                     _timerTMR0ReloadVal16bit:
 10710                           	callstack 0
 10711   000576                     	ds	2
 10712   000578                     _timeAuto:
 10713                           	callstack 0
 10714   000578                     	ds	2
 10715   00057A                     _timer0_ms:
 10716                           	callstack 0
 10717   00057A                     	ds	2
 10718   00057C                     _INT2_InterruptHandler:
 10719                           	callstack 0
 10720   00057C                     	ds	2
 10721   00057E                     _INT1_InterruptHandler:
 10722                           	callstack 0
 10723   00057E                     	ds	2
 10724   000580                     _INT0_InterruptHandler:
 10725                           	callstack 0
 10726   000580                     	ds	2
 10727   000582                     _closeFullDuration:
 10728                           	callstack 0
 10729   000582                     	ds	2
 10730   000584                     _openFullDuration:
 10731                           	callstack 0
 10732   000584                     	ds	2
 10733   000586                     _buttonHoldTimeMs:
 10734                           	callstack 0
 10735   000586                     	ds	2
 10736   000588                     _gateOpenTimerMs:
 10737                           	callstack 0
 10738   000588                     	ds	2
 10739   00058A                     _emergencyFlag:
 10740                           	callstack 0
 10741   00058A                     	ds	2
 10742   00058C                     _motorIsRunning:
 10743                           	callstack 0
 10744   00058C                     	ds	2
 10745   00058E                     _userRequest:
 10746                           	callstack 0
 10747   00058E                     	ds	2
 10748   000590                     _currentReadings:
 10749                           	callstack 0
 10750   000590                     	ds	2
 10751   000592                     _currentOption:
 10752                           	callstack 0
 10753   000592                     	ds	1
 10754   000593                     _TM1637_Brightness:
 10755                           	callstack 0
 10756   000593                     	ds	1
 10757   000594                     _timeoutCloseFull:
 10758                           	callstack 0
 10759   000594                     	ds	1
 10760   000595                     _timeoutOpenFull:
 10761                           	callstack 0
 10762   000595                     	ds	1
 10763   000596                     _timeoutToClose:
 10764                           	callstack 0
 10765   000596                     	ds	1
 10766   000597                     _configMode:
 10767                           	callstack 0
 10768   000597                     	ds	1
 10769   000598                     _buttonPressedFlag:
 10770                           	callstack 0
 10771   000598                     	ds	1
 10772   000599                     _configDone:
 10773                           	callstack 0
 10774   000599                     	ds	1
 10775   00059A                     _configFlag:
 10776                           	callstack 0
 10777   00059A                     	ds	1
 10778   00059B                     _menuMode:
 10779                           	callstack 0
 10780   00059B                     	ds	1
 10781   00059C                     _overcurrentFlag:
 10782                           	callstack 0
 10783   00059C                     	ds	1
 10784                           
 10785                           	psect	dataBANK5
 10786   00059D                     __pdataBANK5:
 10787                           	callstack 0
 10788   00059D                     	ds	10
 10789   0005A7                     Menu_AdjustTime@F14581:
 10790                           	callstack 0
 10791   0005A7                     	ds	5
 10792   0005AC                     Menu_AdjustOvercurrent@F14577:
 10793                           	callstack 0
 10794   0005AC                     	ds	5
 10795   0005B1                     Menu_AdjustSpeed@F14573:
 10796                           	callstack 0
 10797   0005B1                     	ds	5
 10798   0005B6                     Menu_PrintCurrentOption@F14568:
 10799                           	callstack 0
 10800   0005B6                     	ds	5
 10801   0005BB                     _allChars:
 10802                           	callstack 0
 10803   0005BB                     	ds	2
 10804   0005BD                     _lastConfigMode:
 10805                           	callstack 0
 10806   0005BD                     	ds	2
 10807   0005BF                     _pwmPeriod:
 10808                           	callstack 0
 10809   0005BF                     	ds	2
 10810   0005C1                     _lastGateState:
 10811                           	callstack 0
 10812   0005C1                     	ds	2
 10813   0005C3                     _overcurrentThreshold:
 10814                           	callstack 0
 10815   0005C3                     	ds	2
 10816   0005C5                     _speedLevel:
 10817                           	callstack 0
 10818   0005C5                     	ds	1
 10819                           
 10820                           	psect	cstackBANK5
 10821   0005E0                     __pcstackBANK5:
 10822                           	callstack 0
 10823   0005E0                     ??_INTERRUPT_InterruptManager:
 10824                           
 10825                           ; 1 bytes @ 0x0
 10826   0005E0                     	ds	6
 10827   0005E6                     _UART1_IsTxReady$2738:
 10828                           	callstack 0
 10829   0005E6                     writeByte@data:
 10830                           	callstack 0
 10831   0005E6                     ADCC_SetADIInterruptHandler@InterruptHandler:
 10832                           	callstack 0
 10833   0005E6                     PWM1_PHASE_A_Slice1Output1_SetInterruptHandler@InterruptHandler:
 10834                           	callstack 0
 10835   0005E6                     PWM1_PHASE_A_Slice1Output2_SetInterruptHandler@InterruptHandler:
 10836                           	callstack 0
 10837   0005E6                     PWM1_PHASE_A_Period_SetInterruptHandler@InterruptHandler:
 10838                           	callstack 0
 10839   0005E6                     DOWN_SetInterruptHandler@InterruptHandler:
 10840                           	callstack 0
 10841   0005E6                     BACK_SetInterruptHandler@InterruptHandler:
 10842                           	callstack 0
 10843   0005E6                     UP_SetInterruptHandler@InterruptHandler:
 10844                           	callstack 0
 10845   0005E6                     GATE_SetInterruptHandler@InterruptHandler:
 10846                           	callstack 0
 10847   0005E6                     PHOTOCELL_SetInterruptHandler@InterruptHandler:
 10848                           	callstack 0
 10849   0005E6                     BUTTON_SetInterruptHandler@InterruptHandler:
 10850                           	callstack 0
 10851   0005E6                     ENTER_SetInterruptHandler@InterruptHandler:
 10852                           	callstack 0
 10853   0005E6                     INT0_SetInterruptHandler@InterruptHandler:
 10854                           	callstack 0
 10855   0005E6                     INT1_SetInterruptHandler@InterruptHandler:
 10856                           	callstack 0
 10857   0005E6                     INT2_SetInterruptHandler@InterruptHandler:
 10858                           	callstack 0
 10859   0005E6                     TMR0_OverflowCallbackRegister@CallbackHandler:
 10860                           	callstack 0
 10861   0005E6                     TMR2_OverflowCallbackRegister@InterruptHandler:
 10862                           	callstack 0
 10863   0005E6                     UART1_FramingErrorCallbackRegister@callbackHandler:
 10864                           	callstack 0
 10865   0005E6                     UART1_OverrunErrorCallbackRegister@callbackHandler:
 10866                           	callstack 0
 10867   0005E6                     UART1_ParityErrorCallbackRegister@callbackHandler:
 10868                           	callstack 0
 10869   0005E6                     DEBUG_PRINT_INT@debug$F2824@value:
 10870                           	callstack 0
 10871   0005E6                     EEPROM_Read@DFM_ADDR:
 10872                           	callstack 0
 10873   0005E6                     ??_findChar:
 10874                           
 10875                           ; 1 bytes @ 0x6
 10876   0005E6                     	ds	1
 10877   0005E7                     UART1_Write@txData:
 10878                           	callstack 0
 10879   0005E7                     writeByte@i:
 10880                           	callstack 0
 10881   0005E7                     
 10882                           ; 1 bytes @ 0x7
 10883   0005E7                     	ds	1
 10884   0005E8                     putch@txData:
 10885                           	callstack 0
 10886   0005E8                     setBrightness@br:
 10887                           	callstack 0
 10888   0005E8                     findChar@ch:
 10889                           	callstack 0
 10890   0005E8                     ??_TMR0_Initialize:
 10891   0005E8                     
 10892                           ; 1 bytes @ 0x8
 10893   0005E8                     	ds	1
 10894   0005E9                     ?_EEPROM_ReadUInt16:
 10895                           	callstack 0
 10896   0005E9                     findChar@i:
 10897                           	callstack 0
 10898   0005E9                     UART1_WriteString@str:
 10899                           	callstack 0
 10900   0005E9                     EEPROM_ReadUInt16@addr:
 10901                           	callstack 0
 10902   0005E9                     
 10903                           ; 1 bytes @ 0x9
 10904   0005E9                     	ds	1
 10905   0005EA                     displayChar@pos:
 10906                           	callstack 0
 10907                           
 10908                           ; 1 bytes @ 0xA
 10909   0005EA                     	ds	1
 10910   0005EB                     displayChar@dotFlag:
 10911                           	callstack 0
 10912   0005EB                     
 10913                           ; 1 bytes @ 0xB
 10914   0005EB                     	ds	1
 10915   0005EC                     ??_EEPROM_ReadUInt16:
 10916   0005EC                     ??_displayChar:
 10917                           
 10918                           ; 1 bytes @ 0xC
 10919   0005EC                     	ds	2
 10920   0005EE                     EEPROM_ReadUInt16@low:
 10921                           	callstack 0
 10922   0005EE                     displayChar@ch:
 10923                           	callstack 0
 10924                           
 10925                           ; 1 bytes @ 0xE
 10926   0005EE                     	ds	1
 10927   0005EF                     EEPROM_ReadUInt16@high:
 10928                           	callstack 0
 10929   0005EF                     displayChar@data:
 10930                           	callstack 0
 10931                           
 10932                           ; 1 bytes @ 0xF
 10933   0005EF                     	ds	1
 10934   0005F0                     displayString@str:
 10935                           	callstack 0
 10936   0005F0                     
 10937                           ; 1 bytes @ 0x10
 10938   0005F0                     	ds	2
 10939   0005F2                     displayString@startPos:
 10940                           	callstack 0
 10941                           
 10942                           ; 1 bytes @ 0x12
 10943   0005F2                     	ds	1
 10944   0005F3                     ??_displayString:
 10945                           
 10946                           ; 1 bytes @ 0x13
 10947   0005F3                     	ds	2
 10948   0005F5                     displayString@pos:
 10949                           	callstack 0
 10950                           
 10951                           ; 1 bytes @ 0x15
 10952   0005F5                     	ds	1
 10953   0005F6                     displayString@dotFlag:
 10954                           	callstack 0
 10955                           
 10956                           ; 1 bytes @ 0x16
 10957   0005F6                     	ds	1
 10958   0005F7                     
 10959                           ; 1 bytes @ 0x17
 10960                           
 10961                           	psect	cstackCOMRAM
 10962   000501                     __pcstackCOMRAM:
 10963                           	callstack 0
 10964   000501                     ?_abs:
 10965                           	callstack 0
 10966   000501                     ?_ADCC_GetConversionResult:
 10967                           	callstack 0
 10968   000501                     ?___lwdiv:
 10969                           	callstack 0
 10970   000501                     ?___lwmod:
 10971                           	callstack 0
 10972   000501                     ?___fladd:
 10973                           	callstack 0
 10974   000501                     ?___xxtofl:
 10975                           	callstack 0
 10976   000501                     ADCC_StartConversion@channel:
 10977                           	callstack 0
 10978   000501                     i2_UART1_IsTxReady$2738:
 10979                           	callstack 0
 10980   000501                     i2writeByte@data:
 10981                           	callstack 0
 10982   000501                     DEBUG_PRINT_INT@debug$F660@value:
 10983                           	callstack 0
 10984   000501                     PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue:
 10985                           	callstack 0
 10986   000501                     DEBUG_PRINT_INT@debug$F3089@value:
 10987                           	callstack 0
 10988   000501                     ___lwdiv@dividend:
 10989                           	callstack 0
 10990   000501                     ___lwmod@dividend:
 10991                           	callstack 0
 10992   000501                     abs@a:
 10993                           	callstack 0
 10994   000501                     strcpy@dest:
 10995                           	callstack 0
 10996   000501                     EEPROM_Write@DFM_ADDR:
 10997                           	callstack 0
 10998   000501                     ___fladd@b:
 10999                           	callstack 0
 11000   000501                     ___xxtofl@val:
 11001                           	callstack 0
 11002   000501                     Motor_UpdateSpeedLevel@speedTable:
 11003                           	callstack 0
 11004   000501                     ??i2_findChar:
 11005                           
 11006                           ; 1 bytes @ 0x0
 11007   000501                     	ds	1
 11008   000502                     i2UART1_Write@txData:
 11009                           	callstack 0
 11010   000502                     i2writeByte@i:
 11011                           	callstack 0
 11012   000502                     
 11013                           ; 1 bytes @ 0x1
 11014   000502                     	ds	1
 11015   000503                     i2putch@txData:
 11016                           	callstack 0
 11017   000503                     i2findChar@ch:
 11018                           	callstack 0
 11019   000503                     ___lwdiv@divisor:
 11020                           	callstack 0
 11021   000503                     ___lwmod@divisor:
 11022                           	callstack 0
 11023   000503                     strcpy@src:
 11024                           	callstack 0
 11025   000503                     ??_abs:
 11026   000503                     ??_ADCC_GetConversionResult:
 11027   000503                     
 11028                           ; 1 bytes @ 0x2
 11029   000503                     	ds	1
 11030   000504                     EEPROM_Write@data:
 11031                           	callstack 0
 11032   000504                     i2findChar@i:
 11033                           	callstack 0
 11034   000504                     i2UART1_WriteString@str:
 11035                           	callstack 0
 11036                           
 11037                           ; 2 bytes @ 0x3
 11038   000504                     	ds	1
 11039   000505                     EEPROM_Write@globalInterruptBitValue:
 11040                           	callstack 0
 11041   000505                     ___lwmod@counter:
 11042                           	callstack 0
 11043   000505                     i2displayChar@pos:
 11044                           	callstack 0
 11045   000505                     ___lwdiv@quotient:
 11046                           	callstack 0
 11047   000505                     strcpy@d:
 11048                           	callstack 0
 11049   000505                     ___fladd@a:
 11050                           	callstack 0
 11051   000505                     ??___xxtofl:
 11052                           
 11053                           ; 1 bytes @ 0x4
 11054   000505                     	ds	1
 11055   000506                     i2displayChar@dotFlag:
 11056                           	callstack 0
 11057   000506                     EEPROM_WriteUInt16@addr:
 11058                           	callstack 0
 11059   000506                     
 11060                           ; 1 bytes @ 0x5
 11061   000506                     	ds	1
 11062   000507                     ___lwdiv@counter:
 11063                           	callstack 0
 11064   000507                     ??i2_displayChar:
 11065                           
 11066                           ; 1 bytes @ 0x6
 11067   000507                     	ds	1
 11068   000508                     UART1_WriteUInt@value:
 11069                           	callstack 0
 11070   000508                     printInt@value:
 11071                           	callstack 0
 11072                           
 11073                           ; 2 bytes @ 0x7
 11074   000508                     	ds	1
 11075   000509                     ___xxtofl@sign:
 11076                           	callstack 0
 11077   000509                     i2displayChar@ch:
 11078                           	callstack 0
 11079   000509                     EEPROM_WriteUInt16@value:
 11080                           	callstack 0
 11081   000509                     ??___fladd:
 11082                           
 11083                           ; 1 bytes @ 0x8
 11084   000509                     	ds	1
 11085   00050A                     ___xxtofl@exp:
 11086                           	callstack 0
 11087   00050A                     i2displayChar@data:
 11088                           	callstack 0
 11089   00050A                     UART1_WriteUInt@buffer:
 11090                           	callstack 0
 11091   00050A                     printInt@buf:
 11092                           	callstack 0
 11093   00050A                     
 11094                           ; 1 bytes @ 0x9
 11095   00050A                     	ds	1
 11096   00050B                     i2displayString@str:
 11097                           	callstack 0
 11098   00050B                     ___xxtofl@arg:
 11099                           	callstack 0
 11100   00050B                     ??_EEPROM_WriteUInt16:
 11101                           
 11102                           ; 1 bytes @ 0xA
 11103   00050B                     	ds	2
 11104   00050D                     ___fladd@signs:
 11105                           	callstack 0
 11106   00050D                     i2displayString@startPos:
 11107                           	callstack 0
 11108                           
 11109                           ; 1 bytes @ 0xC
 11110   00050D                     	ds	1
 11111   00050E                     ___fladd@aexp:
 11112                           	callstack 0
 11113   00050E                     ??i2_displayString:
 11114                           
 11115                           ; 1 bytes @ 0xD
 11116   00050E                     	ds	1
 11117   00050F                     EEPROM_WriteUInt16@byte:
 11118                           	callstack 0
 11119   00050F                     ___fladd@bexp:
 11120                           	callstack 0
 11121                           
 11122                           ; 1 bytes @ 0xE
 11123   00050F                     	ds	1
 11124   000510                     EEPROM_WriteUInt16@i:
 11125                           	callstack 0
 11126   000510                     UART1_WriteUInt@i:
 11127                           	callstack 0
 11128   000510                     ___fladd@grs:
 11129                           	callstack 0
 11130   000510                     i2displayString@pos:
 11131                           	callstack 0
 11132                           
 11133                           ; 1 bytes @ 0xF
 11134   000510                     	ds	1
 11135   000511                     ?___fldiv:
 11136                           	callstack 0
 11137   000511                     i2displayString@dotFlag:
 11138                           	callstack 0
 11139   000511                     ___fldiv@b:
 11140                           	callstack 0
 11141   000511                     
 11142                           ; 1 bytes @ 0x10
 11143   000511                     	ds	1
 11144   000512                     SetGate@dutyCycle:
 11145                           	callstack 0
 11146   000512                     Menu_AdjustOvercurrent@label:
 11147                           	callstack 0
 11148   000512                     Menu_AdjustTime@label:
 11149                           	callstack 0
 11150   000512                     ??_configOpenGate:
 11151   000512                     ??_Menu_PrintCurrentOption:
 11152   000512                     
 11153                           ; 1 bytes @ 0x11
 11154   000512                     	ds	1
 11155   000513                     Menu_AdjustSpeed@label:
 11156                           	callstack 0
 11157   000513                     
 11158                           ; 1 bytes @ 0x12
 11159   000513                     	ds	1
 11160   000514                     printInt@i:
 11161                           	callstack 0
 11162   000514                     SetGate@timerStart:
 11163                           	callstack 0
 11164   000514                     Menu_PrintCurrentOption@shortLabel:
 11165                           	callstack 0
 11166                           
 11167                           ; 5 bytes @ 0x13
 11168   000514                     	ds	1
 11169   000515                     ___fldiv@a:
 11170                           	callstack 0
 11171                           
 11172                           ; 4 bytes @ 0x14
 11173   000515                     	ds	1
 11174   000516                     SetGate@displayMsg:
 11175                           	callstack 0
 11176                           
 11177                           ; 2 bytes @ 0x15
 11178   000516                     	ds	1
 11179   000517                     Menu_AdjustOvercurrent@increase:
 11180                           	callstack 0
 11181   000517                     Menu_AdjustTime@increase:
 11182                           	callstack 0
 11183                           
 11184                           ; 1 bytes @ 0x16
 11185   000517                     	ds	1
 11186   000518                     SetGate@direction:
 11187                           	callstack 0
 11188   000518                     Menu_AdjustSpeed@increase:
 11189                           	callstack 0
 11190   000518                     
 11191                           ; 1 bytes @ 0x17
 11192   000518                     	ds	1
 11193   000519                     ??_DOWN_ISR:
 11194   000519                     ??_BACK_ISR:
 11195   000519                     ??_UP_ISR:
 11196   000519                     ??_Menu_HandleEnterPress:
 11197   000519                     ??___fldiv:
 11198   000519                     ??_OpenGate:
 11199   000519                     ??_CloseGateSlow:
 11200                           
 11201                           ; 1 bytes @ 0x18
 11202   000519                     	ds	2
 11203   00051B                     _OpenGate$2951:
 11204                           	callstack 0
 11205   00051B                     ??_ENTER_ISR:
 11206   00051B                     ??_HandleConfigMode:
 11207                           
 11208                           ; 1 bytes @ 0x1A
 11209   00051B                     	ds	2
 11210   00051D                     ___fldiv@rem:
 11211                           	callstack 0
 11212   00051D                     ??_HandleMotorState:
 11213   00051D                     ??_HandleButtonMenuConfig:
 11214                           
 11215                           ; 1 bytes @ 0x1C
 11216   00051D                     	ds	2
 11217   00051F                     ??_EmergencyOpen:
 11218                           
 11219                           ; 1 bytes @ 0x1E
 11220   00051F                     	ds	2
 11221   000521                     ___fldiv@sign:
 11222                           	callstack 0
 11223   000521                     ??_GATE_ISR:
 11224   000521                     ??_PHOTOCELL_ISR:
 11225   000521                     ??_BUTTON_ISR:
 11226   000521                     
 11227                           ; 1 bytes @ 0x20
 11228   000521                     	ds	1
 11229   000522                     ___fldiv@new_exp:
 11230                           	callstack 0
 11231                           
 11232                           ; 2 bytes @ 0x21
 11233   000522                     	ds	1
 11234   000523                     
 11235                           ; 1 bytes @ 0x22
 11236   000523                     	ds	1
 11237   000524                     ___fldiv@grs:
 11238                           	callstack 0
 11239                           
 11240                           ; 4 bytes @ 0x23
 11241   000524                     	ds	4
 11242   000528                     ___fldiv@bexp:
 11243                           	callstack 0
 11244                           
 11245                           ; 1 bytes @ 0x27
 11246   000528                     	ds	1
 11247   000529                     ___fldiv@aexp:
 11248                           	callstack 0
 11249                           
 11250                           ; 1 bytes @ 0x28
 11251   000529                     	ds	1
 11252   00052A                     ?___flmul:
 11253                           	callstack 0
 11254   00052A                     ___flmul@b:
 11255                           	callstack 0
 11256                           
 11257                           ; 4 bytes @ 0x29
 11258   00052A                     	ds	4
 11259   00052E                     ___flmul@a:
 11260                           	callstack 0
 11261                           
 11262                           ; 4 bytes @ 0x2D
 11263   00052E                     	ds	4
 11264   000532                     ??___flmul:
 11265                           
 11266                           ; 1 bytes @ 0x31
 11267   000532                     	ds	4
 11268   000536                     ___flmul@sign:
 11269                           	callstack 0
 11270                           
 11271                           ; 1 bytes @ 0x35
 11272   000536                     	ds	1
 11273   000537                     ___flmul@grs:
 11274                           	callstack 0
 11275                           
 11276                           ; 4 bytes @ 0x36
 11277   000537                     	ds	4
 11278   00053B                     ___flmul@aexp:
 11279                           	callstack 0
 11280                           
 11281                           ; 1 bytes @ 0x3A
 11282   00053B                     	ds	1
 11283   00053C                     ___flmul@bexp:
 11284                           	callstack 0
 11285                           
 11286                           ; 1 bytes @ 0x3B
 11287   00053C                     	ds	1
 11288   00053D                     ___flmul@prod:
 11289                           	callstack 0
 11290                           
 11291                           ; 4 bytes @ 0x3C
 11292   00053D                     	ds	4
 11293   000541                     ___flmul@temp:
 11294                           	callstack 0
 11295                           
 11296                           ; 2 bytes @ 0x40
 11297   000541                     	ds	2
 11298   000543                     ?___fltol:
 11299                           	callstack 0
 11300   000543                     ___fltol@f1:
 11301                           	callstack 0
 11302                           
 11303                           ; 4 bytes @ 0x42
 11304   000543                     	ds	4
 11305   000547                     ??___fltol:
 11306                           
 11307                           ; 1 bytes @ 0x46
 11308   000547                     	ds	4
 11309   00054B                     ___fltol@sign1:
 11310                           	callstack 0
 11311                           
 11312                           ; 1 bytes @ 0x4A
 11313   00054B                     	ds	1
 11314   00054C                     ___fltol@exp1:
 11315                           	callstack 0
 11316                           
 11317                           ; 1 bytes @ 0x4B
 11318   00054C                     	ds	1
 11319   00054D                     CheckOverCurrent@voltage:
 11320                           	callstack 0
 11321   00054D                     
 11322                           ; 1 bytes @ 0x4C
 11323   00054D                     	ds	4
 11324   000551                     CheckOverCurrent@current_A:
 11325                           	callstack 0
 11326                           
 11327                           ; 4 bytes @ 0x50
 11328   000551                     	ds	4
 11329   000555                     CheckOverCurrent@adc:
 11330                           	callstack 0
 11331                           
 11332                           ; 2 bytes @ 0x54
 11333   000555                     	ds	2
 11334   000557                     CheckOverCurrent@current_mA:
 11335                           	callstack 0
 11336                           
 11337                           ; 2 bytes @ 0x56
 11338   000557                     	ds	2
 11339   000559                     CheckOverCurrent@current:
 11340                           	callstack 0
 11341                           
 11342                           ; 2 bytes @ 0x58
 11343   000559                     	ds	2
 11344   00055B                     
 11345                           ; 1 bytes @ 0x5A
 11346 ;;
 11347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 11348 ;;
 11349 ;; *************** function _main *****************
 11350 ;; Defined at:
 11351 ;;		line 82 in file "main.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  2  1313[None  ] int 
 11358 ;; Registers used:
 11359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11368 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11369 ;;Total ram usage:        0 bytes
 11370 ;; Hardware stack levels required when called: 17
 11371 ;; This function calls:
 11372 ;;		_SYSTEM_Initialize
 11373 ;;		_UART1_WriteString
 11374 ;;		_projectInitialize
 11375 ;; This function is called by:
 11376 ;;		Startup code after reset
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text0
 11381   0033EC                     __ptext0:
 11382                           	callstack 0
 11383   0033EC                     _main:
 11384                           	callstack 110
 11385   0033EC                     
 11386                           ;main.c: 83:     SYSTEM_Initialize();
 11387   0033EC  EC6A  F019         	call	_SYSTEM_Initialize	;wreg free
 11388   0033F0                     
 11389                           ;main.c: 91:     (INTCON0bits.GIE = 1);
 11390   0033F0  8ED6               	bsf	214,7,c	;volatile
 11391   0033F2                     
 11392                           ;main.c: 93:     projectInitialize();
 11393   0033F2  ECA4  F008         	call	_projectInitialize	;wreg free
 11394   0033F6                     
 11395                           ;main.c: 99:     UART1_WriteString("Intership project started\r\n");
 11396   0033F6  0E45               	movlw	low STR_6
 11397   0033F8  0105               	movlb	5	; () banked
 11398   0033FA  6FE9               	movwf	UART1_WriteString@str& (0+255),b
 11399   0033FC  0E7F               	movlw	high STR_6
 11400   0033FE  6FEA               	movwf	(UART1_WriteString@str+1)& (0+255),b
 11401   003400  EC48  F018         	call	_UART1_WriteString	;wreg free
 11402   003404                     l1314:
 11403   003404  EF02  F01A         	goto	l1314
 11404   003408  EF0D  F000         	goto	start
 11405   00340C                     __end_of_main:
 11406                           	callstack 0
 11407                           
 11408 ;; *************** function _projectInitialize *****************
 11409 ;; Defined at:
 11410 ;;		line 48 in file "main.c"
 11411 ;; Parameters:    Size  Location     Type
 11412 ;;		None
 11413 ;; Auto vars:     Size  Location     Type
 11414 ;;		None
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  1    wreg      void 
 11417 ;; Registers used:
 11418 ;;		wreg, status,2, status,0, cstack
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11424 ;;      Params:         0       0       0       0       0       0       0       0       0
 11425 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11426 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11427 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11428 ;;Total ram usage:        0 bytes
 11429 ;; Hardware stack levels used: 1
 11430 ;; Hardware stack levels required when called: 15
 11431 ;; This function calls:
 11432 ;;		_DEBUG_PRINT_INT@debug$F2824
 11433 ;;		_EEPROM_ReadUInt16
 11434 ;; This function is called by:
 11435 ;;		_main
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text1
 11440   001148                     __ptext1:
 11441                           	callstack 0
 11442   001148                     _projectInitialize:
 11443                           	callstack 111
 11444   001148                     
 11445                           ;main.c: 51:     speedLevel = EEPROM_ReadUInt16(0x380006);
 11446   001148  0E06               	movlw	6
 11447   00114A  0105               	movlb	5	; () banked
 11448   00114C  6FE9               	movwf	EEPROM_ReadUInt16@addr& (0+255),b
 11449   00114E  0E00               	movlw	0
 11450   001150  6FEA               	movwf	(EEPROM_ReadUInt16@addr+1)& (0+255),b
 11451   001152  0E38               	movlw	56
 11452   001154  6FEB               	movwf	(EEPROM_ReadUInt16@addr+2)& (0+255),b
 11453   001156  EC0D  F018         	call	_EEPROM_ReadUInt16	;wreg free
 11454   00115A  0105               	movlb	5	; () banked
 11455   00115C  51E9               	movf	?_EEPROM_ReadUInt16& (0+255),w,b
 11456   00115E  6FC5               	movwf	_speedLevel& (0+255),b
 11457                           
 11458                           ;main.c: 52:     openFullDuration = EEPROM_ReadUInt16(0x380000);
 11459   001160  0E00               	movlw	0
 11460   001162  6FE9               	movwf	EEPROM_ReadUInt16@addr& (0+255),b
 11461   001164  0E00               	movlw	0
 11462   001166  6FEA               	movwf	(EEPROM_ReadUInt16@addr+1)& (0+255),b
 11463   001168  0E38               	movlw	56
 11464   00116A  6FEB               	movwf	(EEPROM_ReadUInt16@addr+2)& (0+255),b
 11465   00116C  EC0D  F018         	call	_EEPROM_ReadUInt16	;wreg free
 11466   001170  C5E9  F584         	movff	?_EEPROM_ReadUInt16,_openFullDuration	;volatile
 11467   001174  C5EA  F585         	movff	?_EEPROM_ReadUInt16+1,_openFullDuration+1	;volatile
 11468                           
 11469                           ;main.c: 53:     closeFullDuration = EEPROM_ReadUInt16(0x380002);
 11470   001178  0E02               	movlw	2
 11471   00117A  0105               	movlb	5	; () banked
 11472   00117C  6FE9               	movwf	EEPROM_ReadUInt16@addr& (0+255),b
 11473   00117E  0E00               	movlw	0
 11474   001180  6FEA               	movwf	(EEPROM_ReadUInt16@addr+1)& (0+255),b
 11475   001182  0E38               	movlw	56
 11476   001184  6FEB               	movwf	(EEPROM_ReadUInt16@addr+2)& (0+255),b
 11477   001186  EC0D  F018         	call	_EEPROM_ReadUInt16	;wreg free
 11478   00118A  C5E9  F582         	movff	?_EEPROM_ReadUInt16,_closeFullDuration	;volatile
 11479   00118E  C5EA  F583         	movff	?_EEPROM_ReadUInt16+1,_closeFullDuration+1	;volatile
 11480                           
 11481                           ;main.c: 54:     overcurrentThreshold = EEPROM_ReadUInt16(0x380004);
 11482   001192  0E04               	movlw	4
 11483   001194  0105               	movlb	5	; () banked
 11484   001196  6FE9               	movwf	EEPROM_ReadUInt16@addr& (0+255),b
 11485   001198  0E00               	movlw	0
 11486   00119A  6FEA               	movwf	(EEPROM_ReadUInt16@addr+1)& (0+255),b
 11487   00119C  0E38               	movlw	56
 11488   00119E  6FEB               	movwf	(EEPROM_ReadUInt16@addr+2)& (0+255),b
 11489   0011A0  EC0D  F018         	call	_EEPROM_ReadUInt16	;wreg free
 11490   0011A4  C5E9  F5C3         	movff	?_EEPROM_ReadUInt16,_overcurrentThreshold	;volatile
 11491   0011A8  C5EA  F5C4         	movff	?_EEPROM_ReadUInt16+1,_overcurrentThreshold+1	;volatile
 11492                           
 11493                           ;main.c: 55:     timeAuto = EEPROM_ReadUInt16(0x380008);
 11494   0011AC  0E08               	movlw	8
 11495   0011AE  0105               	movlb	5	; () banked
 11496   0011B0  6FE9               	movwf	EEPROM_ReadUInt16@addr& (0+255),b
 11497   0011B2  0E00               	movlw	0
 11498   0011B4  6FEA               	movwf	(EEPROM_ReadUInt16@addr+1)& (0+255),b
 11499   0011B6  0E38               	movlw	56
 11500   0011B8  6FEB               	movwf	(EEPROM_ReadUInt16@addr+2)& (0+255),b
 11501   0011BA  EC0D  F018         	call	_EEPROM_ReadUInt16	;wreg free
 11502   0011BE  C5E9  F578         	movff	?_EEPROM_ReadUInt16,_timeAuto	;volatile
 11503   0011C2  C5EA  F579         	movff	?_EEPROM_ReadUInt16+1,_timeAuto+1	;volatile
 11504   0011C6                     
 11505                           ;main.c: 57:     DEBUG_PRINT_INT(speedLevel);
 11506   0011C6  C5C5  F5E6         	movff	_speedLevel,DEBUG_PRINT_INT@debug$F2824@value
 11507   0011CA  0105               	movlb	5	; () banked
 11508   0011CC  6BE7               	clrf	(DEBUG_PRINT_INT@debug$F2824@value+1)& (0+255),b
 11509   0011CE  EC34  F01B         	call	_DEBUG_PRINT_INT@debug$F2824	;wreg free
 11510   0011D2                     
 11511                           ;main.c: 59:     DEBUG_PRINT_INT(openFullDuration);
 11512   0011D2  C584  F5E6         	movff	_openFullDuration,DEBUG_PRINT_INT@debug$F2824@value	;volatile
 11513   0011D6  C585  F5E7         	movff	_openFullDuration+1,DEBUG_PRINT_INT@debug$F2824@value+1	;volatile
 11514   0011DA  EC34  F01B         	call	_DEBUG_PRINT_INT@debug$F2824	;wreg free
 11515   0011DE                     
 11516                           ;main.c: 61:     DEBUG_PRINT_INT(closeFullDuration);
 11517   0011DE  C582  F5E6         	movff	_closeFullDuration,DEBUG_PRINT_INT@debug$F2824@value	;volatile
 11518   0011E2  C583  F5E7         	movff	_closeFullDuration+1,DEBUG_PRINT_INT@debug$F2824@value+1	;volatile
 11519   0011E6  EC34  F01B         	call	_DEBUG_PRINT_INT@debug$F2824	;wreg free
 11520   0011EA                     
 11521                           ;main.c: 63:     DEBUG_PRINT_INT(overcurrentThreshold);
 11522   0011EA  C5C3  F5E6         	movff	_overcurrentThreshold,DEBUG_PRINT_INT@debug$F2824@value	;volatile
 11523   0011EE  C5C4  F5E7         	movff	_overcurrentThreshold+1,DEBUG_PRINT_INT@debug$F2824@value+1	;volatile
 11524   0011F2  EC34  F01B         	call	_DEBUG_PRINT_INT@debug$F2824	;wreg free
 11525   0011F6                     
 11526                           ;main.c: 65:     DEBUG_PRINT_INT(timeAuto);
 11527   0011F6  C578  F5E6         	movff	_timeAuto,DEBUG_PRINT_INT@debug$F2824@value	;volatile
 11528   0011FA  C579  F5E7         	movff	_timeAuto+1,DEBUG_PRINT_INT@debug$F2824@value+1	;volatile
 11529   0011FE  EC34  F01B         	call	_DEBUG_PRINT_INT@debug$F2824	;wreg free
 11530                           
 11531                           ;main.c: 68:     if (openFullDuration != 0xFFFF && closeFullDuration != 0xFFFF && speedL
      +                          evel != 0xFF && overcurrentThreshold != 0xFFFF && timeAuto != 0xFFFF) {
 11532   001202  0105               	movlb	5	; () banked
 11533   001204  2984               	incf	_openFullDuration& (0+255),w,b	;volatile
 11534   001206  E108               	bnz	u6470
 11535   001208  2985               	incf	(_openFullDuration+1)& (0+255),w,b	;volatile
 11536   00120A  B4D8               	btfsc	status,2,c
 11537   00120C  EF0A  F009         	goto	u6471
 11538   001210  EF0C  F009         	goto	u6470
 11539   001214                     u6471:
 11540   001214  EF36  F009         	goto	l6986
 11541   001218                     u6470:
 11542   001218                     
 11543                           ; BSR set to: 5
 11544   001218  2982               	incf	_closeFullDuration& (0+255),w,b	;volatile
 11545   00121A  E108               	bnz	u6480
 11546   00121C  2983               	incf	(_closeFullDuration+1)& (0+255),w,b	;volatile
 11547   00121E  B4D8               	btfsc	status,2,c
 11548   001220  EF14  F009         	goto	u6481
 11549   001224  EF16  F009         	goto	u6480
 11550   001228                     u6481:
 11551   001228  EF36  F009         	goto	l6986
 11552   00122C                     u6480:
 11553   00122C                     
 11554                           ; BSR set to: 5
 11555   00122C  29C5               	incf	_speedLevel& (0+255),w,b
 11556   00122E  B4D8               	btfsc	status,2,c
 11557   001230  EF1C  F009         	goto	u6491
 11558   001234  EF1E  F009         	goto	u6490
 11559   001238                     u6491:
 11560   001238  EF36  F009         	goto	l6986
 11561   00123C                     u6490:
 11562   00123C                     
 11563                           ; BSR set to: 5
 11564   00123C  29C3               	incf	_overcurrentThreshold& (0+255),w,b	;volatile
 11565   00123E  E108               	bnz	u6500
 11566   001240  29C4               	incf	(_overcurrentThreshold+1)& (0+255),w,b	;volatile
 11567   001242  B4D8               	btfsc	status,2,c
 11568   001244  EF26  F009         	goto	u6501
 11569   001248  EF28  F009         	goto	u6500
 11570   00124C                     u6501:
 11571   00124C  EF36  F009         	goto	l6986
 11572   001250                     u6500:
 11573   001250                     
 11574                           ; BSR set to: 5
 11575   001250  2978               	incf	_timeAuto& (0+255),w,b	;volatile
 11576   001252  E108               	bnz	u6510
 11577   001254  2979               	incf	(_timeAuto+1)& (0+255),w,b	;volatile
 11578   001256  B4D8               	btfsc	status,2,c
 11579   001258  EF30  F009         	goto	u6511
 11580   00125C  EF32  F009         	goto	u6510
 11581   001260                     u6511:
 11582   001260  EF36  F009         	goto	l6986
 11583   001264                     u6510:
 11584   001264                     
 11585                           ; BSR set to: 5
 11586                           ;main.c: 69:         configDone = 1;
 11587   001264  0E01               	movlw	1
 11588   001266  6F99               	movwf	_configDone& (0+255),b	;volatile
 11589                           
 11590                           ;main.c: 70:     } else {
 11591   001268  EF4A  F009         	goto	l1309
 11592   00126C                     l6986:
 11593                           
 11594                           ; BSR set to: 5
 11595                           ;main.c: 71:         speedLevel = 6;
 11596   00126C  0E06               	movlw	6
 11597   00126E  6FC5               	movwf	_speedLevel& (0+255),b
 11598                           
 11599                           ;main.c: 72:         openFullDuration = 2000;
 11600   001270  0E07               	movlw	7
 11601   001272  6F85               	movwf	(_openFullDuration+1)& (0+255),b	;volatile
 11602   001274  0ED0               	movlw	208
 11603   001276  6F84               	movwf	_openFullDuration& (0+255),b	;volatile
 11604                           
 11605                           ;main.c: 73:         closeFullDuration = 3000;
 11606   001278  0E0B               	movlw	11
 11607   00127A  6F83               	movwf	(_closeFullDuration+1)& (0+255),b	;volatile
 11608   00127C  0EB8               	movlw	184
 11609   00127E  6F82               	movwf	_closeFullDuration& (0+255),b	;volatile
 11610                           
 11611                           ;main.c: 74:         overcurrentThreshold = 5000;
 11612   001280  0E13               	movlw	19
 11613   001282  6FC4               	movwf	(_overcurrentThreshold+1)& (0+255),b	;volatile
 11614   001284  0E88               	movlw	136
 11615   001286  6FC3               	movwf	_overcurrentThreshold& (0+255),b	;volatile
 11616                           
 11617                           ;main.c: 75:         timeAuto = 2000;
 11618   001288  0E07               	movlw	7
 11619   00128A  6F79               	movwf	(_timeAuto+1)& (0+255),b	;volatile
 11620   00128C  0ED0               	movlw	208
 11621   00128E  6F78               	movwf	_timeAuto& (0+255),b	;volatile
 11622                           
 11623                           ;main.c: 77:         configDone = 1;
 11624   001290  0E01               	movlw	1
 11625   001292  6F99               	movwf	_configDone& (0+255),b	;volatile
 11626   001294                     l1309:
 11627                           
 11628                           ; BSR set to: 5
 11629   001294  0012               	return		;funcret
 11630   001296                     __end_of_projectInitialize:
 11631                           	callstack 0
 11632                           
 11633 ;; *************** function _EEPROM_ReadUInt16 *****************
 11634 ;; Defined at:
 11635 ;;		line 32 in file "mcc_generated_files/nvm/src/nvm.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;  addr            3    9[BANK5 ] unsigned um
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;  high            1   15[BANK5 ] unsigned char 
 11640 ;;  low             1   14[BANK5 ] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  2    9[BANK5 ] unsigned short 
 11643 ;; Registers used:
 11644 ;;		wreg, status,2, status,0, cstack
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11650 ;;      Params:         0       3       0       0       0       0       0       0       0
 11651 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11652 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11653 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11654 ;;Total ram usage:        7 bytes
 11655 ;; Hardware stack levels used: 1
 11656 ;; Hardware stack levels required when called: 14
 11657 ;; This function calls:
 11658 ;;		_EEPROM_Read
 11659 ;; This function is called by:
 11660 ;;		_projectInitialize
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           	psect	text2
 11665   00301A                     __ptext2:
 11666                           	callstack 0
 11667   00301A                     _EEPROM_ReadUInt16:
 11668                           	callstack 111
 11669   00301A                     
 11670                           ;mcc_generated_files/nvm/src/nvm.c: 33:     uint8_t low = EEPROM_Read(addr);
 11671   00301A  C5E9  F5E6         	movff	EEPROM_ReadUInt16@addr,EEPROM_Read@DFM_ADDR
 11672   00301E  C5EA  F5E7         	movff	EEPROM_ReadUInt16@addr+1,EEPROM_Read@DFM_ADDR+1
 11673   003022  C5EB  F5E8         	movff	EEPROM_ReadUInt16@addr+2,EEPROM_Read@DFM_ADDR+2
 11674   003026  EC8D  F017         	call	_EEPROM_Read	;wreg free
 11675   00302A  0105               	movlb	5	; () banked
 11676   00302C  6FEE               	movwf	EEPROM_ReadUInt16@low& (0+255),b
 11677   00302E                     
 11678                           ; BSR set to: 5
 11679                           ;mcc_generated_files/nvm/src/nvm.c: 34:     uint8_t high = EEPROM_Read(addr + 1);
 11680   00302E  0E01               	movlw	1
 11681   003030  25E9               	addwf	EEPROM_ReadUInt16@addr& (0+255),w,b
 11682   003032  6FE6               	movwf	EEPROM_Read@DFM_ADDR& (0+255),b
 11683   003034  0E00               	movlw	0
 11684   003036  21EA               	addwfc	(EEPROM_ReadUInt16@addr+1)& (0+255),w,b
 11685   003038  6FE7               	movwf	(EEPROM_Read@DFM_ADDR+1)& (0+255),b
 11686   00303A  0E00               	movlw	0
 11687   00303C  21EB               	addwfc	(EEPROM_ReadUInt16@addr+2)& (0+255),w,b
 11688   00303E  6FE8               	movwf	(EEPROM_Read@DFM_ADDR+2)& (0+255),b
 11689   003040  EC8D  F017         	call	_EEPROM_Read	;wreg free
 11690   003044  0105               	movlb	5	; () banked
 11691   003046  6FEF               	movwf	EEPROM_ReadUInt16@high& (0+255),b
 11692   003048                     
 11693                           ; BSR set to: 5
 11694                           ;mcc_generated_files/nvm/src/nvm.c: 35:     return ((uint16_t)high << 8) | low;
 11695   003048  51EF               	movf	EEPROM_ReadUInt16@high& (0+255),w,b
 11696   00304A  6FEC               	movwf	??_EEPROM_ReadUInt16& (0+255),b
 11697   00304C  51EE               	movf	EEPROM_ReadUInt16@low& (0+255),w,b
 11698   00304E  6FE9               	movwf	?_EEPROM_ReadUInt16& (0+255),b
 11699   003050  C5EC  F5EA         	movff	??_EEPROM_ReadUInt16,?_EEPROM_ReadUInt16+1
 11700   003054                     
 11701                           ; BSR set to: 5
 11702   003054  0012               	return		;funcret
 11703   003056                     __end_of_EEPROM_ReadUInt16:
 11704                           	callstack 0
 11705                           
 11706 ;; *************** function _EEPROM_Read *****************
 11707 ;; Defined at:
 11708 ;;		line 39 in file "mcc_generated_files/nvm/src/nvm.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  DFM_ADDR        3    6[BANK5 ] unsigned um
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;		None
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      unsigned char 
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11722 ;;      Params:         0       3       0       0       0       0       0       0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11725 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11726 ;;Total ram usage:        3 bytes
 11727 ;; Hardware stack levels used: 1
 11728 ;; Hardware stack levels required when called: 13
 11729 ;; This function calls:
 11730 ;;		_NVM_IsBusy
 11731 ;; This function is called by:
 11732 ;;		_EEPROM_ReadUInt16
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text3
 11737   002F1A                     __ptext3:
 11738                           	callstack 0
 11739   002F1A                     _EEPROM_Read:
 11740                           	callstack 111
 11741   002F1A                     l5672:
 11742   002F1A  EC60  F01A         	call	_NVM_IsBusy	;wreg free
 11743   002F1E  0900               	iorlw	0
 11744   002F20  A4D8               	btfss	status,2,c
 11745   002F22  EF95  F017         	goto	u4521
 11746   002F26  EF97  F017         	goto	u4520
 11747   002F2A                     u4521:
 11748   002F2A  EF8D  F017         	goto	l5672
 11749   002F2E                     u4520:
 11750   002F2E                     
 11751                           ;mcc_generated_files/nvm/src/nvm.c: 42:     NVMADR = DFM_ADDR;
 11752   002F2E  C5E6  F043         	movff	EEPROM_Read@DFM_ADDR,67	;volatile
 11753   002F32  C5E7  F044         	movff	EEPROM_Read@DFM_ADDR+1,68	;volatile
 11754   002F36  C5E8  F045         	movff	EEPROM_Read@DFM_ADDR+2,69	;volatile
 11755   002F3A                     
 11756                           ;mcc_generated_files/nvm/src/nvm.c: 43:     NVMCON1bits.NVMCMD = 0x00;
 11757   002F3A  0EF8               	movlw	-8
 11758   002F3C  0100               	movlb	0	; () banked
 11759   002F3E  1741               	andwf	65,f,b	;volsfr
 11760   002F40                     
 11761                           ; BSR set to: 0
 11762                           ;mcc_generated_files/nvm/src/nvm.c: 44:     NVMCON0bits.GO = 1;
 11763   002F40  8140               	bsf	64,0,b	;volatile
 11764   002F42                     l5678:
 11765   002F42  EC60  F01A         	call	_NVM_IsBusy	;wreg free
 11766   002F46  0900               	iorlw	0
 11767   002F48  A4D8               	btfss	status,2,c
 11768   002F4A  EFA9  F017         	goto	u4531
 11769   002F4E  EFAB  F017         	goto	u4530
 11770   002F52                     u4531:
 11771   002F52  EFA1  F017         	goto	l5678
 11772   002F56                     u4530:
 11773   002F56                     
 11774                           ;mcc_generated_files/nvm/src/nvm.c: 48:     return NVMDATL;
 11775   002F56  0100               	movlb	0	; () banked
 11776   002F58  5146               	movf	70,w,b	;volatile
 11777   002F5A                     
 11778                           ; BSR set to: 0
 11779   002F5A  0012               	return		;funcret
 11780   002F5C                     __end_of_EEPROM_Read:
 11781                           	callstack 0
 11782                           
 11783 ;; *************** function _NVM_IsBusy *****************
 11784 ;; Defined at:
 11785 ;;		line 18 in file "mcc_generated_files/nvm/src/nvm.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;		None
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;		None
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1    wreg      _Bool 
 11792 ;; Registers used:
 11793 ;;		wreg
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11799 ;;      Params:         0       0       0       0       0       0       0       0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11802 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11803 ;;Total ram usage:        0 bytes
 11804 ;; Hardware stack levels used: 1
 11805 ;; Hardware stack levels required when called: 12
 11806 ;; This function calls:
 11807 ;;		Nothing
 11808 ;; This function is called by:
 11809 ;;		_EEPROM_Read
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text4
 11814   0034C0                     __ptext4:
 11815                           	callstack 0
 11816   0034C0                     _NVM_IsBusy:
 11817                           	callstack 111
 11818   0034C0                     
 11819                           ;mcc_generated_files/nvm/src/nvm.c: 19:     return NVMCON0bits.GO;
 11820   0034C0  0100               	movlb	0	; () banked
 11821   0034C2  B140               	btfsc	64,0,b	;volatile
 11822   0034C4  EF66  F01A         	goto	u3971
 11823   0034C8  EF69  F01A         	goto	u3970
 11824   0034CC                     u3971:
 11825   0034CC  0E01               	movlw	1
 11826   0034CE  EF6A  F01A         	goto	u3976
 11827   0034D2                     u3970:
 11828   0034D2  0E00               	movlw	0
 11829   0034D4                     u3976:
 11830   0034D4                     
 11831                           ; BSR set to: 0
 11832   0034D4  0012               	return		;funcret
 11833   0034D6                     __end_of_NVM_IsBusy:
 11834                           	callstack 0
 11835                           
 11836 ;; *************** function _DEBUG_PRINT_INT@debug$F2824 *****************
 11837 ;; Defined at:
 11838 ;;		line 50 in file "./debug.h"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;  value           2    6[BANK5 ] unsigned short 
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;		None
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      void 
 11845 ;; Registers used:
 11846 ;;		None
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11852 ;;      Params:         0       2       0       0       0       0       0       0       0
 11853 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11854 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11855 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11856 ;;Total ram usage:        2 bytes
 11857 ;; Hardware stack levels used: 1
 11858 ;; Hardware stack levels required when called: 12
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_projectInitialize
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text5
 11867   003668                     __ptext5:
 11868                           	callstack 0
 11869   003668                     _DEBUG_PRINT_INT@debug$F2824:
 11870                           	callstack 113
 11871   003668  0012               	return		;funcret
 11872   00366A                     __end_of_DEBUG_PRINT_INT@debug$F2824:
 11873                           	callstack 0
 11874                           
 11875 ;; *************** function _UART1_WriteString *****************
 11876 ;; Defined at:
 11877 ;;		line 294 in file "mcc_generated_files/uart/src/uart1.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  str             2    9[BANK5 ] PTR const unsigned char 
 11880 ;;		 -> STR_6(28), STR_5(5), STR_4(10), STR_3(42), 
 11881 ;;		 -> STR_2(5), STR_1(10), 
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;		None
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      void 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11893 ;;      Params:         0       2       0       0       0       0       0       0       0
 11894 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11896 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11897 ;;Total ram usage:        2 bytes
 11898 ;; Hardware stack levels used: 1
 11899 ;; Hardware stack levels required when called: 15
 11900 ;; This function calls:
 11901 ;;		_putch
 11902 ;; This function is called by:
 11903 ;;		_main
 11904 ;;		_printCurrent
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text6
 11909   003090                     __ptext6:
 11910                           	callstack 0
 11911   003090                     _UART1_WriteString:
 11912                           	callstack 111
 11913   003090                     
 11914                           ;mcc_generated_files/uart/src/uart1.c: 295:     while (*str != '\0') {
 11915   003090  EF55  F018         	goto	l6874
 11916   003094                     l6870:
 11917                           
 11918                           ;mcc_generated_files/uart/src/uart1.c: 296:         putch(*str++);
 11919   003094  C5E9  F4F6         	movff	UART1_WriteString@str,tblptrl
 11920   003098  C5EA  F4F7         	movff	UART1_WriteString@str+1,tblptrh
 11921   00309C                     	if	0	;tblptru may be non-zero
 11922   00309C                     	endif
 11923   00309C                     	if	0	;tblptru may be non-zero
 11924   00309C                     	endif
 11925   00309C  0008               	tblrd		*
 11926   00309E  50F5               	movf	tablat,w,c
 11927   0030A0  ECE5  F019         	call	_putch
 11928   0030A4  0105               	movlb	5	; () banked
 11929   0030A6  4BE9               	infsnz	UART1_WriteString@str& (0+255),f,b
 11930   0030A8  2BEA               	incf	(UART1_WriteString@str+1)& (0+255),f,b
 11931   0030AA                     l6874:
 11932                           
 11933                           ;mcc_generated_files/uart/src/uart1.c: 295:     while (*str != '\0') {
 11934   0030AA  C5E9  F4F6         	movff	UART1_WriteString@str,tblptrl
 11935   0030AE  C5EA  F4F7         	movff	UART1_WriteString@str+1,tblptrh
 11936   0030B2                     	if	0	;tblptru may be non-zero
 11937   0030B2                     	endif
 11938   0030B2                     	if	0	;tblptru may be non-zero
 11939   0030B2                     	endif
 11940   0030B2  0008               	tblrd		*
 11941   0030B4  50F5               	movf	tablat,w,c
 11942   0030B6  0900               	iorlw	0
 11943   0030B8  A4D8               	btfss	status,2,c
 11944   0030BA  EF61  F018         	goto	u6291
 11945   0030BE  EF63  F018         	goto	u6290
 11946   0030C2                     u6291:
 11947   0030C2  EF4A  F018         	goto	l6870
 11948   0030C6                     u6290:
 11949   0030C6  0012               	return		;funcret
 11950   0030C8                     __end_of_UART1_WriteString:
 11951                           	callstack 0
 11952                           
 11953 ;; *************** function _putch *****************
 11954 ;; Defined at:
 11955 ;;		line 329 in file "mcc_generated_files/uart/src/uart1.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;  txData          1    wreg     unsigned char 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  txData          1    8[BANK5 ] unsigned char 
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  1    wreg      void 
 11962 ;; Registers used:
 11963 ;;		wreg, status,2, cstack
 11964 ;; Tracked objects:
 11965 ;;		On entry : 0/0
 11966 ;;		On exit  : 0/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 11969 ;;      Params:         0       0       0       0       0       0       0       0       0
 11970 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11971 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11972 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11973 ;;Total ram usage:        1 bytes
 11974 ;; Hardware stack levels used: 1
 11975 ;; Hardware stack levels required when called: 14
 11976 ;; This function calls:
 11977 ;;		_UART1_IsTxReady
 11978 ;;		_UART1_Write
 11979 ;; This function is called by:
 11980 ;;		_UART1_WriteString
 11981 ;;		_UART1_WriteHexDigit
 11982 ;;		_printString
 11983 ;;		_printCurrent
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text7
 11988   0033CA                     __ptext7:
 11989                           	callstack 0
 11990   0033CA                     _putch:
 11991                           	callstack 111
 11992                           
 11993                           ;incstack = 0
 11994                           ;putch@txData stored from wreg
 11995   0033CA  0105               	movlb	5	; () banked
 11996   0033CC  6FE8               	movwf	putch@txData& (0+255),b
 11997   0033CE                     l6862:
 11998   0033CE  EC64  F018         	call	_UART1_IsTxReady	;wreg free
 11999   0033D2  0900               	iorlw	0
 12000   0033D4  B4D8               	btfsc	status,2,c
 12001   0033D6  EFEF  F019         	goto	u6281
 12002   0033DA  EFF1  F019         	goto	u6280
 12003   0033DE                     u6281:
 12004   0033DE  EFE7  F019         	goto	l6862
 12005   0033E2                     u6280:
 12006   0033E2                     
 12007                           ;mcc_generated_files/uart/src/uart1.c: 332:     return UART1_Write(txData);;	Return valu
      +                          e of _putch is never used
 12008   0033E2  0105               	movlb	5	; () banked
 12009   0033E4  51E8               	movf	putch@txData& (0+255),w,b
 12010   0033E6  ECA9  F019         	call	_UART1_Write
 12011   0033EA  0012               	return		;funcret
 12012   0033EC                     __end_of_putch:
 12013                           	callstack 0
 12014                           
 12015 ;; *************** function _UART1_Write *****************
 12016 ;; Defined at:
 12017 ;;		line 287 in file "mcc_generated_files/uart/src/uart1.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;  txData          1    wreg     unsigned char 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  txData          1    7[BANK5 ] unsigned char 
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  1    wreg      void 
 12024 ;; Registers used:
 12025 ;;		wreg, status,2, cstack
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 0/0
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12031 ;;      Params:         0       0       0       0       0       0       0       0       0
 12032 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12033 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12034 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12035 ;;Total ram usage:        1 bytes
 12036 ;; Hardware stack levels used: 1
 12037 ;; Hardware stack levels required when called: 13
 12038 ;; This function calls:
 12039 ;;		_UART1_IsTxReady
 12040 ;; This function is called by:
 12041 ;;		_putch
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text8
 12046   003352                     __ptext8:
 12047                           	callstack 0
 12048   003352                     _UART1_Write:
 12049                           	callstack 0
 12050   0000D7                     INTSTAT_ADDR    equ	215
 12051                           
 12052                           ;Skip over the trampoline to the duplicate function for level 2
 12053   003352  AED7               	btfss	215,7,c
 12054   003354  EFAE  F019         	goto	_UART1_Write$intlevel0
 12055   003358  EF52  F01A         	goto	i2_UART1_Write
 12056   00335C                     _UART1_Write$intlevel0:
 12057                           	callstack 111
 12058                           
 12059                           ;incstack = 0
 12060                           ;UART1_Write@txData stored from wreg
 12061   00335C  0105               	movlb	5	; () banked
 12062   00335E  6FE7               	movwf	UART1_Write@txData& (0+255),b
 12063   003360                     l5892:
 12064   003360  EC64  F018         	call	_UART1_IsTxReady	;wreg free
 12065   003364  0900               	iorlw	0
 12066   003366  B4D8               	btfsc	status,2,c
 12067   003368  EFB8  F019         	goto	u4761
 12068   00336C  EFBA  F019         	goto	u4760
 12069   003370                     u4761:
 12070   003370  EFB0  F019         	goto	l5892
 12071   003374                     u4760:
 12072   003374                     
 12073                           ;mcc_generated_files/uart/src/uart1.c: 290:     U1TXB = txData;
 12074   003374  C5E7  F2A3         	movff	UART1_Write@txData,675	;volatile
 12075   003378  0012               	return		;funcret
 12076   00337A                     __end_of_UART1_Write:
 12077                           	callstack 0
 12078                           
 12079 ;; *************** function _UART1_IsTxReady *****************
 12080 ;; Defined at:
 12081 ;;		line 247 in file "mcc_generated_files/uart/src/uart1.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;		None
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;		None
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  1    wreg      _Bool 
 12088 ;; Registers used:
 12089 ;;		wreg, status,2
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12095 ;;      Params:         0       0       0       0       0       0       0       0       0
 12096 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12097 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12098 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12099 ;;Total ram usage:        1 bytes
 12100 ;; Hardware stack levels used: 1
 12101 ;; Hardware stack levels required when called: 12
 12102 ;; This function calls:
 12103 ;;		Nothing
 12104 ;; This function is called by:
 12105 ;;		_UART1_Write
 12106 ;;		_putch
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           	psect	text9
 12111   0030C8                     __ptext9:
 12112                           	callstack 0
 12113   0030C8                     _UART1_IsTxReady:
 12114                           	callstack 0
 12115                           
 12116                           ;Skip over the trampoline to the duplicate function for level 2
 12117   0030C8  AED7               	btfss	215,7,c
 12118   0030CA  EF69  F018         	goto	_UART1_IsTxReady$intlevel0
 12119   0030CE  EFD1  F019         	goto	i2_UART1_IsTxReady
 12120   0030D2                     _UART1_IsTxReady$intlevel0:
 12121                           	callstack 111
 12122   0030D2                     
 12123                           ;mcc_generated_files/uart/src/uart1.c: 249:     return (_Bool)(U1FIFObits.TXBE && U1CON0
      +                          bits.TXEN);
 12124   0030D2  0105               	movlb	5	; () banked
 12125   0030D4  6BE6               	clrf	_UART1_IsTxReady$2738& (0+255),b
 12126   0030D6  0102               	movlb	2	; () banked
 12127   0030D8  ABB0               	btfss	176,5,b	;volatile
 12128   0030DA  EF71  F018         	goto	u3981
 12129   0030DE  EF73  F018         	goto	u3980
 12130   0030E2                     u3981:
 12131   0030E2  EF7D  F018         	goto	l1177
 12132   0030E6                     u3980:
 12133   0030E6                     
 12134                           ; BSR set to: 2
 12135   0030E6  ABAB               	btfss	171,5,b	;volatile
 12136   0030E8  EF78  F018         	goto	u3991
 12137   0030EC  EF7A  F018         	goto	u3990
 12138   0030F0                     u3991:
 12139   0030F0  EF7D  F018         	goto	l1177
 12140   0030F4                     u3990:
 12141   0030F4                     
 12142                           ; BSR set to: 2
 12143   0030F4  0E01               	movlw	1
 12144   0030F6  0105               	movlb	5	; () banked
 12145   0030F8  6FE6               	movwf	_UART1_IsTxReady$2738& (0+255),b
 12146   0030FA                     l1177:
 12147   0030FA  0105               	movlb	5	; () banked
 12148   0030FC  51E6               	movf	_UART1_IsTxReady$2738& (0+255),w,b
 12149   0030FE                     
 12150                           ; BSR set to: 5
 12151   0030FE  0012               	return		;funcret
 12152   003100                     __end_of_UART1_IsTxReady:
 12153                           	callstack 0
 12154                           
 12155 ;; *************** function _SYSTEM_Initialize *****************
 12156 ;; Defined at:
 12157 ;;		line 41 in file "mcc_generated_files/system/src/system.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12174 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12175 ;;Total ram usage:        0 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; Hardware stack levels required when called: 16
 12178 ;; This function calls:
 12179 ;;		_ADCC_Initialize
 12180 ;;		_CLOCK_Initialize
 12181 ;;		_INTERRUPT_Initialize
 12182 ;;		_NVM_Initialize
 12183 ;;		_PIN_MANAGER_Initialize
 12184 ;;		_PWM1_PHASE_A_Initialize
 12185 ;;		_TM1637_init
 12186 ;;		_TMR0_Initialize
 12187 ;;		_TMR2_Initialize
 12188 ;;		_UART1_Initialize
 12189 ;; This function is called by:
 12190 ;;		_main
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text10
 12195   0032D4                     __ptext10:
 12196                           	callstack 0
 12197   0032D4                     _SYSTEM_Initialize:
 12198                           	callstack 110
 12199   0032D4                     
 12200                           ;mcc_generated_files/system/src/system.c: 43:     CLOCK_Initialize();
 12201   0032D4  EC81  F01A         	call	_CLOCK_Initialize	;wreg free
 12202   0032D8                     
 12203                           ;mcc_generated_files/system/src/system.c: 44:     PIN_MANAGER_Initialize();
 12204   0032D8  ECA4  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
 12205   0032DC                     
 12206                           ;mcc_generated_files/system/src/system.c: 45:     ADCC_Initialize();
 12207   0032DC  EC5E  F016         	call	_ADCC_Initialize	;wreg free
 12208   0032E0                     
 12209                           ;mcc_generated_files/system/src/system.c: 46:     NVM_Initialize();
 12210   0032E0  EC1C  F01B         	call	_NVM_Initialize	;wreg free
 12211   0032E4                     
 12212                           ;mcc_generated_files/system/src/system.c: 47:     PWM1_PHASE_A_Initialize();
 12213   0032E4  EC7D  F015         	call	_PWM1_PHASE_A_Initialize	;wreg free
 12214   0032E8                     
 12215                           ;mcc_generated_files/system/src/system.c: 48:     TMR0_Initialize();
 12216   0032E8  ECB8  F018         	call	_TMR0_Initialize	;wreg free
 12217   0032EC                     
 12218                           ;mcc_generated_files/system/src/system.c: 49:     TMR2_Initialize();
 12219   0032EC  EC7F  F019         	call	_TMR2_Initialize	;wreg free
 12220   0032F0                     
 12221                           ;mcc_generated_files/system/src/system.c: 50:     UART1_Initialize();
 12222   0032F0  EC7B  F014         	call	_UART1_Initialize	;wreg free
 12223   0032F4                     
 12224                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 12225   0032F4  EC2B  F018         	call	_INTERRUPT_Initialize	;wreg free
 12226   0032F8                     
 12227                           ;mcc_generated_files/system/src/system.c: 52:     TM1637_init();
 12228   0032F8  ECBD  F019         	call	_TM1637_init	;wreg free
 12229   0032FC  0012               	return		;funcret
 12230   0032FE                     __end_of_SYSTEM_Initialize:
 12231                           	callstack 0
 12232                           
 12233 ;; *************** function _UART1_Initialize *****************
 12234 ;; Defined at:
 12235 ;;		line 95 in file "mcc_generated_files/uart/src/uart1.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;		None
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1    wreg      void 
 12242 ;; Registers used:
 12243 ;;		wreg, status,2, status,0, cstack
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12249 ;;      Params:         0       0       0       0       0       0       0       0       0
 12250 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12251 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12252 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12253 ;;Total ram usage:        0 bytes
 12254 ;; Hardware stack levels used: 1
 12255 ;; Hardware stack levels required when called: 13
 12256 ;; This function calls:
 12257 ;;		_UART1_FramingErrorCallbackRegister
 12258 ;;		_UART1_OverrunErrorCallbackRegister
 12259 ;;		_UART1_ParityErrorCallbackRegister
 12260 ;; This function is called by:
 12261 ;;		_SYSTEM_Initialize
 12262 ;; This function uses a non-reentrant model
 12263 ;;
 12264                           
 12265                           	psect	text11
 12266   0028F6                     __ptext11:
 12267                           	callstack 0
 12268   0028F6                     _UART1_Initialize:
 12269                           	callstack 112
 12270   0028F6                     
 12271                           ;mcc_generated_files/uart/src/uart1.c: 101:     U1RXB = 0x0;
 12272   0028F6  0102               	movlb	2	; () banked
 12273   0028F8  6BA1               	clrf	161,b	;volatile
 12274                           
 12275                           ;mcc_generated_files/uart/src/uart1.c: 103:     U1RXCHK = 0x0;
 12276   0028FA  6BA2               	clrf	162,b	;volatile
 12277                           
 12278                           ;mcc_generated_files/uart/src/uart1.c: 105:     U1TXB = 0x0;
 12279   0028FC  6BA3               	clrf	163,b	;volatile
 12280                           
 12281                           ;mcc_generated_files/uart/src/uart1.c: 107:     U1TXCHK = 0x0;
 12282   0028FE  6BA4               	clrf	164,b	;volatile
 12283                           
 12284                           ;mcc_generated_files/uart/src/uart1.c: 109:     U1P1L = 0x0;
 12285   002900  6BA5               	clrf	165,b	;volatile
 12286                           
 12287                           ;mcc_generated_files/uart/src/uart1.c: 111:     U1P1H = 0x0;
 12288   002902  6BA6               	clrf	166,b	;volatile
 12289                           
 12290                           ;mcc_generated_files/uart/src/uart1.c: 113:     U1P2L = 0x0;
 12291   002904  6BA7               	clrf	167,b	;volatile
 12292                           
 12293                           ;mcc_generated_files/uart/src/uart1.c: 115:     U1P2H = 0x0;
 12294   002906  6BA8               	clrf	168,b	;volatile
 12295                           
 12296                           ;mcc_generated_files/uart/src/uart1.c: 117:     U1P3L = 0x0;
 12297   002908  6BA9               	clrf	169,b	;volatile
 12298                           
 12299                           ;mcc_generated_files/uart/src/uart1.c: 119:     U1P3H = 0x0;
 12300   00290A  6BAA               	clrf	170,b	;volatile
 12301   00290C                     
 12302                           ; BSR set to: 2
 12303                           ;mcc_generated_files/uart/src/uart1.c: 121:     U1CON0 = 0xB0;
 12304   00290C  0EB0               	movlw	176
 12305   00290E  6FAB               	movwf	171,b	;volatile
 12306                           
 12307                           ;mcc_generated_files/uart/src/uart1.c: 123:     U1CON1 = 0x80;
 12308   002910  0E80               	movlw	128
 12309   002912  6FAC               	movwf	172,b	;volatile
 12310                           
 12311                           ;mcc_generated_files/uart/src/uart1.c: 125:     U1CON2 = 0x8;
 12312   002914  0E08               	movlw	8
 12313   002916  6FAD               	movwf	173,b	;volatile
 12314                           
 12315                           ;mcc_generated_files/uart/src/uart1.c: 127:     U1BRGL = 0x82;
 12316   002918  0E82               	movlw	130
 12317   00291A  6FAE               	movwf	174,b	;volatile
 12318                           
 12319                           ;mcc_generated_files/uart/src/uart1.c: 129:     U1BRGH = 0x6;
 12320   00291C  0E06               	movlw	6
 12321   00291E  6FAF               	movwf	175,b	;volatile
 12322                           
 12323                           ;mcc_generated_files/uart/src/uart1.c: 131:     U1FIFO = 0x2E;
 12324   002920  0E2E               	movlw	46
 12325   002922  6FB0               	movwf	176,b	;volatile
 12326   002924                     
 12327                           ; BSR set to: 2
 12328                           ;mcc_generated_files/uart/src/uart1.c: 133:     U1UIR = 0x0;
 12329   002924  6BB1               	clrf	177,b	;volatile
 12330                           
 12331                           ;mcc_generated_files/uart/src/uart1.c: 135:     U1ERRIR = 0x80;
 12332   002926  0E80               	movlw	128
 12333   002928  6FB2               	movwf	178,b	;volatile
 12334   00292A                     
 12335                           ; BSR set to: 2
 12336                           ;mcc_generated_files/uart/src/uart1.c: 137:     U1ERRIE = 0x0;
 12337   00292A  6BB3               	clrf	179,b	;volatile
 12338   00292C                     
 12339                           ; BSR set to: 2
 12340                           ;mcc_generated_files/uart/src/uart1.c: 139:     UART1_FramingErrorCallbackRegister(UART1
      +                          _DefaultFramingErrorCallback);
 12341   00292C  0E00               	movlw	0
 12342   00292E  0105               	movlb	5	; () banked
 12343   002930  6FE6               	movwf	UART1_FramingErrorCallbackRegister@callbackHandler& (0+255),b
 12344   002932  0E00               	movlw	0
 12345   002934  6FE7               	movwf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)& (0+255),b
 12346   002936  EC34  F01A         	call	_UART1_FramingErrorCallbackRegister	;wreg free
 12347   00293A                     
 12348                           ;mcc_generated_files/uart/src/uart1.c: 140:     UART1_OverrunErrorCallbackRegister(UART1
      +                          _DefaultOverrunErrorCallback);
 12349   00293A  0E00               	movlw	0
 12350   00293C  0105               	movlb	5	; () banked
 12351   00293E  6FE6               	movwf	UART1_OverrunErrorCallbackRegister@callbackHandler& (0+255),b
 12352   002940  0E00               	movlw	0
 12353   002942  6FE7               	movwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)& (0+255),b
 12354   002944  EC25  F01A         	call	_UART1_OverrunErrorCallbackRegister	;wreg free
 12355   002948                     
 12356                           ;mcc_generated_files/uart/src/uart1.c: 141:     UART1_ParityErrorCallbackRegister(UART1_
      +                          DefaultParityErrorCallback);
 12357   002948  0E00               	movlw	0
 12358   00294A  0105               	movlb	5	; () banked
 12359   00294C  6FE6               	movwf	UART1_ParityErrorCallbackRegister@callbackHandler& (0+255),b
 12360   00294E  0E00               	movlw	0
 12361   002950  6FE7               	movwf	(UART1_ParityErrorCallbackRegister@callbackHandler+1)& (0+255),b
 12362   002952  EC16  F01A         	call	_UART1_ParityErrorCallbackRegister	;wreg free
 12363   002956                     
 12364                           ;mcc_generated_files/uart/src/uart1.c: 143:     uart1RxLastError.status = 0;
 12365   002956  0E00               	movlw	0
 12366   002958  0105               	movlb	5	; () banked
 12367   00295A  6F6F               	movwf	(_uart1RxLastError+1)& (0+255),b	;volatile
 12368   00295C  0E00               	movlw	0
 12369   00295E  6F6E               	movwf	_uart1RxLastError& (0+255),b	;volatile
 12370   002960                     
 12371                           ; BSR set to: 5
 12372   002960  0012               	return		;funcret
 12373   002962                     __end_of_UART1_Initialize:
 12374                           	callstack 0
 12375                           
 12376 ;; *************** function _UART1_ParityErrorCallbackRegister *****************
 12377 ;; Defined at:
 12378 ;;		line 367 in file "mcc_generated_files/uart/src/uart1.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  callbackHand    2    6[BANK5 ] PTR FTN()void 
 12381 ;;		 -> UART1_DefaultParityErrorCallback(1), 
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;		None
 12384 ;; Return value:  Size  Location     Type
 12385 ;;                  1    wreg      void 
 12386 ;; Registers used:
 12387 ;;		wreg, status,2, status,0
 12388 ;; Tracked objects:
 12389 ;;		On entry : 0/0
 12390 ;;		On exit  : 0/0
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12393 ;;      Params:         0       2       0       0       0       0       0       0       0
 12394 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12395 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12396 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12397 ;;Total ram usage:        2 bytes
 12398 ;; Hardware stack levels used: 1
 12399 ;; Hardware stack levels required when called: 12
 12400 ;; This function calls:
 12401 ;;		Nothing
 12402 ;; This function is called by:
 12403 ;;		_UART1_Initialize
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407                           	psect	text12
 12408   00342C                     __ptext12:
 12409                           	callstack 0
 12410   00342C                     _UART1_ParityErrorCallbackRegister:
 12411                           	callstack 112
 12412   00342C                     
 12413                           ;mcc_generated_files/uart/src/uart1.c: 367: void UART1_ParityErrorCallbackRegister(void 
      +                          (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 368: {;mcc_generated_fi
      +                          les/uart/src/uart1.c: 369:     if(((void*)0) != callbackHandler)
 12414   00342C  0105               	movlb	5	; () banked
 12415   00342E  51E6               	movf	UART1_ParityErrorCallbackRegister@callbackHandler& (0+255),w,b
 12416   003430  11E7               	iorwf	(UART1_ParityErrorCallbackRegister@callbackHandler+1)& (0+255),w,b
 12417   003432  B4D8               	btfsc	status,2,c
 12418   003434  EF1E  F01A         	goto	u4751
 12419   003438  EF20  F01A         	goto	u4750
 12420   00343C                     u4751:
 12421   00343C  EF24  F01A         	goto	l1248
 12422   003440                     u4750:
 12423   003440                     
 12424                           ; BSR set to: 5
 12425                           ;mcc_generated_files/uart/src/uart1.c: 370:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          371:         UART1_ParityErrorHandler = callbackHandler;
 12426   003440  C5E6  F568         	movff	UART1_ParityErrorCallbackRegister@callbackHandler,_UART1_ParityErrorHandler
 12427   003444  C5E7  F569         	movff	UART1_ParityErrorCallbackRegister@callbackHandler+1,_UART1_ParityErrorHandler+1
 12428   003448                     l1248:
 12429                           
 12430                           ; BSR set to: 5
 12431   003448  0012               	return		;funcret
 12432   00344A                     __end_of_UART1_ParityErrorCallbackRegister:
 12433                           	callstack 0
 12434                           
 12435 ;; *************** function _UART1_OverrunErrorCallbackRegister *****************
 12436 ;; Defined at:
 12437 ;;		line 359 in file "mcc_generated_files/uart/src/uart1.c"
 12438 ;; Parameters:    Size  Location     Type
 12439 ;;  callbackHand    2    6[BANK5 ] PTR FTN()void 
 12440 ;;		 -> UART1_DefaultOverrunErrorCallback(1), 
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;		None
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  1    wreg      void 
 12445 ;; Registers used:
 12446 ;;		wreg, status,2, status,0
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12452 ;;      Params:         0       2       0       0       0       0       0       0       0
 12453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12454 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12455 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12456 ;;Total ram usage:        2 bytes
 12457 ;; Hardware stack levels used: 1
 12458 ;; Hardware stack levels required when called: 12
 12459 ;; This function calls:
 12460 ;;		Nothing
 12461 ;; This function is called by:
 12462 ;;		_UART1_Initialize
 12463 ;; This function uses a non-reentrant model
 12464 ;;
 12465                           
 12466                           	psect	text13
 12467   00344A                     __ptext13:
 12468                           	callstack 0
 12469   00344A                     _UART1_OverrunErrorCallbackRegister:
 12470                           	callstack 112
 12471   00344A                     
 12472                           ;mcc_generated_files/uart/src/uart1.c: 359: void UART1_OverrunErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 360: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 361:     if(((void*)0) != callbackHandler)
 12473   00344A  0105               	movlb	5	; () banked
 12474   00344C  51E6               	movf	UART1_OverrunErrorCallbackRegister@callbackHandler& (0+255),w,b
 12475   00344E  11E7               	iorwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)& (0+255),w,b
 12476   003450  B4D8               	btfsc	status,2,c
 12477   003452  EF2D  F01A         	goto	u4741
 12478   003456  EF2F  F01A         	goto	u4740
 12479   00345A                     u4741:
 12480   00345A  EF33  F01A         	goto	l1244
 12481   00345E                     u4740:
 12482   00345E                     
 12483                           ; BSR set to: 5
 12484                           ;mcc_generated_files/uart/src/uart1.c: 362:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          363:         UART1_OverrunErrorHandler = callbackHandler;
 12485   00345E  C5E6  F56A         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler,_UART1_OverrunErrorHandler
 12486   003462  C5E7  F56B         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler+1,_UART1_OverrunErrorHandler+1
 12487   003466                     l1244:
 12488                           
 12489                           ; BSR set to: 5
 12490   003466  0012               	return		;funcret
 12491   003468                     __end_of_UART1_OverrunErrorCallbackRegister:
 12492                           	callstack 0
 12493                           
 12494 ;; *************** function _UART1_FramingErrorCallbackRegister *****************
 12495 ;; Defined at:
 12496 ;;		line 351 in file "mcc_generated_files/uart/src/uart1.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  callbackHand    2    6[BANK5 ] PTR FTN()void 
 12499 ;;		 -> UART1_DefaultFramingErrorCallback(1), 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;		None
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  1    wreg      void 
 12504 ;; Registers used:
 12505 ;;		wreg, status,2, status,0
 12506 ;; Tracked objects:
 12507 ;;		On entry : 0/0
 12508 ;;		On exit  : 0/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12511 ;;      Params:         0       2       0       0       0       0       0       0       0
 12512 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12513 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12514 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12515 ;;Total ram usage:        2 bytes
 12516 ;; Hardware stack levels used: 1
 12517 ;; Hardware stack levels required when called: 12
 12518 ;; This function calls:
 12519 ;;		Nothing
 12520 ;; This function is called by:
 12521 ;;		_UART1_Initialize
 12522 ;; This function uses a non-reentrant model
 12523 ;;
 12524                           
 12525                           	psect	text14
 12526   003468                     __ptext14:
 12527                           	callstack 0
 12528   003468                     _UART1_FramingErrorCallbackRegister:
 12529                           	callstack 112
 12530   003468                     
 12531                           ;mcc_generated_files/uart/src/uart1.c: 351: void UART1_FramingErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 352: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 353:     if(((void*)0) != callbackHandler)
 12532   003468  0105               	movlb	5	; () banked
 12533   00346A  51E6               	movf	UART1_FramingErrorCallbackRegister@callbackHandler& (0+255),w,b
 12534   00346C  11E7               	iorwf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)& (0+255),w,b
 12535   00346E  B4D8               	btfsc	status,2,c
 12536   003470  EF3C  F01A         	goto	u4731
 12537   003474  EF3E  F01A         	goto	u4730
 12538   003478                     u4731:
 12539   003478  EF42  F01A         	goto	l1240
 12540   00347C                     u4730:
 12541   00347C                     
 12542                           ; BSR set to: 5
 12543                           ;mcc_generated_files/uart/src/uart1.c: 354:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          355:         UART1_FramingErrorHandler = callbackHandler;
 12544   00347C  C5E6  F56C         	movff	UART1_FramingErrorCallbackRegister@callbackHandler,_UART1_FramingErrorHandler
 12545   003480  C5E7  F56D         	movff	UART1_FramingErrorCallbackRegister@callbackHandler+1,_UART1_FramingErrorHandler+1
 12546   003484                     l1240:
 12547                           
 12548                           ; BSR set to: 5
 12549   003484  0012               	return		;funcret
 12550   003486                     __end_of_UART1_FramingErrorCallbackRegister:
 12551                           	callstack 0
 12552                           
 12553 ;; *************** function _TMR2_Initialize *****************
 12554 ;; Defined at:
 12555 ;;		line 22 in file "mcc_generated_files/timer/src/tmr2.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;		None
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;		None
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  1    wreg      void 
 12562 ;; Registers used:
 12563 ;;		wreg, status,2, status,0, cstack
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/0
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12569 ;;      Params:         0       0       0       0       0       0       0       0       0
 12570 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12571 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12572 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12573 ;;Total ram usage:        0 bytes
 12574 ;; Hardware stack levels used: 1
 12575 ;; Hardware stack levels required when called: 13
 12576 ;; This function calls:
 12577 ;;		_TMR2_OverflowCallbackRegister
 12578 ;; This function is called by:
 12579 ;;		_SYSTEM_Initialize
 12580 ;; This function uses a non-reentrant model
 12581 ;;
 12582                           
 12583                           	psect	text15
 12584   0032FE                     __ptext15:
 12585                           	callstack 0
 12586   0032FE                     _TMR2_Initialize:
 12587                           	callstack 112
 12588   0032FE                     
 12589                           ;mcc_generated_files/timer/src/tmr2.c: 26:     T2CLKCON = 0x1;
 12590   0032FE  0E01               	movlw	1
 12591   003300  0103               	movlb	3	; () banked
 12592   003302  6F20               	movwf	32,b	;volatile
 12593   003304                     
 12594                           ; BSR set to: 3
 12595                           ;mcc_generated_files/timer/src/tmr2.c: 28:     T2HLT = 0x0;
 12596   003304  6B1F               	clrf	31,b	;volatile
 12597   003306                     
 12598                           ; BSR set to: 3
 12599                           ;mcc_generated_files/timer/src/tmr2.c: 30:     T2RST = 0x0;
 12600   003306  6B21               	clrf	33,b	;volatile
 12601                           
 12602                           ;mcc_generated_files/timer/src/tmr2.c: 32:     T2PR = 0xEA;
 12603   003308  0EEA               	movlw	234
 12604   00330A  6F1D               	movwf	29,b	;volatile
 12605   00330C                     
 12606                           ; BSR set to: 3
 12607                           ;mcc_generated_files/timer/src/tmr2.c: 34:     T2TMR = 0x0;
 12608   00330C  6B1C               	clrf	28,b	;volatile
 12609   00330E                     
 12610                           ; BSR set to: 3
 12611                           ;mcc_generated_files/timer/src/tmr2.c: 37:     TMR2_OverflowCallbackRegister(TMR2_Defaul
      +                          tOverflowCallback);
 12612   00330E  0E6C               	movlw	low _TMR2_DefaultOverflowCallback
 12613   003310  0105               	movlb	5	; () banked
 12614   003312  6FE6               	movwf	TMR2_OverflowCallbackRegister@InterruptHandler& (0+255),b
 12615   003314  0E36               	movlw	high _TMR2_DefaultOverflowCallback
 12616   003316  6FE7               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler+1)& (0+255),b
 12617   003318  ECAF  F01A         	call	_TMR2_OverflowCallbackRegister	;wreg free
 12618   00331C                     
 12619                           ;mcc_generated_files/timer/src/tmr2.c: 40:     PIR3bits.TMR2IF = 0;
 12620   00331C  96B6               	bcf	182,3,c	;volatile
 12621   00331E                     
 12622                           ;mcc_generated_files/timer/src/tmr2.c: 42:     PIE3bits.TMR2IE = 1;
 12623   00331E  86AB               	bsf	171,3,c	;volatile
 12624   003320                     
 12625                           ;mcc_generated_files/timer/src/tmr2.c: 44:     T2CON = 0x7F;
 12626   003320  0E7F               	movlw	127
 12627   003322  0103               	movlb	3	; () banked
 12628   003324  6F1E               	movwf	30,b	;volatile
 12629   003326                     
 12630                           ; BSR set to: 3
 12631   003326  0012               	return		;funcret
 12632   003328                     __end_of_TMR2_Initialize:
 12633                           	callstack 0
 12634                           
 12635 ;; *************** function _TMR2_OverflowCallbackRegister *****************
 12636 ;; Defined at:
 12637 ;;		line 87 in file "mcc_generated_files/timer/src/tmr2.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 12640 ;;		 -> TMR2_DefaultOverflowCallback(1), TMR0_DefaultOverflowCallback(1), 
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;		None
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  1    wreg      void 
 12645 ;; Registers used:
 12646 ;;		wreg, status,2, status,0
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12652 ;;      Params:         0       2       0       0       0       0       0       0       0
 12653 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12654 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12655 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12656 ;;Total ram usage:        2 bytes
 12657 ;; Hardware stack levels used: 1
 12658 ;; Hardware stack levels required when called: 12
 12659 ;; This function calls:
 12660 ;;		Nothing
 12661 ;; This function is called by:
 12662 ;;		_TMR2_Initialize
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           	psect	text16
 12667   00355E                     __ptext16:
 12668                           	callstack 0
 12669   00355E                     _TMR2_OverflowCallbackRegister:
 12670                           	callstack 112
 12671   00355E                     
 12672                           ;mcc_generated_files/timer/src/tmr2.c: 88:     TMR2_OverflowCallback = InterruptHandler;
 12673   00355E  C5E6  F5C6         	movff	TMR2_OverflowCallbackRegister@InterruptHandler,_TMR2_OverflowCallback
 12674   003562  C5E7  F5C7         	movff	TMR2_OverflowCallbackRegister@InterruptHandler+1,_TMR2_OverflowCallback+1
 12675   003566  0012               	return		;funcret
 12676   003568                     __end_of_TMR2_OverflowCallbackRegister:
 12677                           	callstack 0
 12678                           
 12679 ;; *************** function _TMR0_Initialize *****************
 12680 ;; Defined at:
 12681 ;;		line 73 in file "mcc_generated_files/timer/src/tmr0.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;		None
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;		None
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      void 
 12688 ;; Registers used:
 12689 ;;		wreg, status,2, status,0, cstack
 12690 ;; Tracked objects:
 12691 ;;		On entry : 0/0
 12692 ;;		On exit  : 0/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12695 ;;      Params:         0       0       0       0       0       0       0       0       0
 12696 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12697 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12698 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12699 ;;Total ram usage:        2 bytes
 12700 ;; Hardware stack levels used: 1
 12701 ;; Hardware stack levels required when called: 13
 12702 ;; This function calls:
 12703 ;;		_TMR0_OverflowCallbackRegister
 12704 ;; This function is called by:
 12705 ;;		_SYSTEM_Initialize
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           	psect	text17
 12710   003170                     __ptext17:
 12711                           	callstack 0
 12712   003170                     _TMR0_Initialize:
 12713                           	callstack 112
 12714   003170                     
 12715                           ;mcc_generated_files/timer/src/tmr0.c: 76:     TMR0H = 0x6;
 12716   003170  0E06               	movlw	6
 12717   003172  0103               	movlb	3	; () banked
 12718   003174  6F19               	movwf	25,b	;volatile
 12719   003176                     
 12720                           ; BSR set to: 3
 12721                           ;mcc_generated_files/timer/src/tmr0.c: 79:     TMR0L = 0x0;
 12722   003176  6B18               	clrf	24,b	;volatile
 12723                           
 12724                           ;mcc_generated_files/timer/src/tmr0.c: 82:     T0CON1 = 0x70;
 12725   003178  0E70               	movlw	112
 12726   00317A  6F1B               	movwf	27,b	;volatile
 12727                           
 12728                           ;mcc_generated_files/timer/src/tmr0.c: 85:     timerTMR0ReloadVal16bit = ((uint16_t) TMR
      +                          0H << 8) | TMR0L;
 12729   00317C  5119               	movf	25,w,b	;volatile
 12730   00317E  0105               	movlb	5	; () banked
 12731   003180  6FE8               	movwf	??_TMR0_Initialize& (0+255),b
 12732   003182  0103               	movlb	3	; () banked
 12733   003184  5118               	movf	24,w,b	;volatile
 12734   003186  0105               	movlb	5	; () banked
 12735   003188  6F76               	movwf	_timerTMR0ReloadVal16bit& (0+255),b	;volatile
 12736   00318A  C5E8  F577         	movff	??_TMR0_Initialize,_timerTMR0ReloadVal16bit+1	;volatile
 12737   00318E                     
 12738                           ; BSR set to: 5
 12739                           ;mcc_generated_files/timer/src/tmr0.c: 88:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
 12740   00318E  0E6A               	movlw	low _TMR0_DefaultOverflowCallback
 12741   003190  6FE6               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler& (0+255),b
 12742   003192  0E36               	movlw	high _TMR0_DefaultOverflowCallback
 12743   003194  6FE7               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)& (0+255),b
 12744   003196  ECB4  F01A         	call	_TMR0_OverflowCallbackRegister	;wreg free
 12745   00319A                     
 12746                           ;mcc_generated_files/timer/src/tmr0.c: 91:     PIR3bits.TMR0IF = 0;
 12747   00319A  9EB6               	bcf	182,7,c	;volatile
 12748   00319C                     
 12749                           ;mcc_generated_files/timer/src/tmr0.c: 94:     PIE3bits.TMR0IE = 1;
 12750   00319C  8EAB               	bsf	171,7,c	;volatile
 12751   00319E                     
 12752                           ;mcc_generated_files/timer/src/tmr0.c: 97:     T0CON0 = 0x10;
 12753   00319E  0E10               	movlw	16
 12754   0031A0  0103               	movlb	3	; () banked
 12755   0031A2  6F1A               	movwf	26,b	;volatile
 12756   0031A4                     
 12757                           ; BSR set to: 3
 12758   0031A4  0012               	return		;funcret
 12759   0031A6                     __end_of_TMR0_Initialize:
 12760                           	callstack 0
 12761                           
 12762 ;; *************** function _TMR0_OverflowCallbackRegister *****************
 12763 ;; Defined at:
 12764 ;;		line 184 in file "mcc_generated_files/timer/src/tmr0.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;  CallbackHand    2    6[BANK5 ] PTR FTN()void 
 12767 ;;		 -> TMR2_DefaultOverflowCallback(1), TMR0_DefaultOverflowCallback(1), 
 12768 ;; Auto vars:     Size  Location     Type
 12769 ;;		None
 12770 ;; Return value:  Size  Location     Type
 12771 ;;                  1    wreg      void 
 12772 ;; Registers used:
 12773 ;;		wreg, status,2, status,0
 12774 ;; Tracked objects:
 12775 ;;		On entry : 0/0
 12776 ;;		On exit  : 0/0
 12777 ;;		Unchanged: 0/0
 12778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12779 ;;      Params:         0       2       0       0       0       0       0       0       0
 12780 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12781 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12782 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12783 ;;Total ram usage:        2 bytes
 12784 ;; Hardware stack levels used: 1
 12785 ;; Hardware stack levels required when called: 12
 12786 ;; This function calls:
 12787 ;;		Nothing
 12788 ;; This function is called by:
 12789 ;;		_TMR0_Initialize
 12790 ;; This function uses a non-reentrant model
 12791 ;;
 12792                           
 12793                           	psect	text18
 12794   003568                     __ptext18:
 12795                           	callstack 0
 12796   003568                     _TMR0_OverflowCallbackRegister:
 12797                           	callstack 112
 12798   003568                     
 12799                           ;mcc_generated_files/timer/src/tmr0.c: 185:     TMR0_OverflowCallback = CallbackHandler;
 12800   003568  C5E6  F5C8         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
 12801   00356C  C5E7  F5C9         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
 12802   003570  0012               	return		;funcret
 12803   003572                     __end_of_TMR0_OverflowCallbackRegister:
 12804                           	callstack 0
 12805                           
 12806 ;; *************** function _TM1637_init *****************
 12807 ;; Defined at:
 12808 ;;		line 94 in file "tm1637.c"
 12809 ;; Parameters:    Size  Location     Type
 12810 ;;		None
 12811 ;; Auto vars:     Size  Location     Type
 12812 ;;		None
 12813 ;; Return value:  Size  Location     Type
 12814 ;;                  1    wreg      void 
 12815 ;; Registers used:
 12816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12817 ;; Tracked objects:
 12818 ;;		On entry : 0/0
 12819 ;;		On exit  : 0/0
 12820 ;;		Unchanged: 0/0
 12821 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12822 ;;      Params:         0       0       0       0       0       0       0       0       0
 12823 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12824 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12825 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12826 ;;Total ram usage:        0 bytes
 12827 ;; Hardware stack levels used: 1
 12828 ;; Hardware stack levels required when called: 15
 12829 ;; This function calls:
 12830 ;;		_displayString
 12831 ;;		_setBrightness
 12832 ;; This function is called by:
 12833 ;;		_SYSTEM_Initialize
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text19
 12838   00337A                     __ptext19:
 12839                           	callstack 0
 12840   00337A                     _TM1637_init:
 12841                           	callstack 110
 12842   00337A                     
 12843                           ;tm1637.c: 96:     TRISC3 = 0;
 12844   00337A  96C8               	bcf	1224,3,c	;volatile
 12845                           
 12846                           ;tm1637.c: 97:     TRISC4 = 0;
 12847   00337C  98C8               	bcf	1224,4,c	;volatile
 12848                           
 12849                           ;tm1637.c: 98:     RC4 = 1;
 12850   00337E  88D0               	bsf	1232,4,c	;volatile
 12851                           
 12852                           ;tm1637.c: 99:     RC3 = 1;
 12853   003380  86D0               	bsf	1232,3,c	;volatile
 12854   003382                     
 12855                           ;tm1637.c: 100:     displayString("    ", 0);
 12856   003382  0EC5               	movlw	low STR_7
 12857   003384  0105               	movlb	5	; () banked
 12858   003386  6FF0               	movwf	displayString@str& (0+255),b
 12859   003388  0E7F               	movlw	high STR_7
 12860   00338A  6FF1               	movwf	(displayString@str+1)& (0+255),b
 12861   00338C  0E00               	movlw	0
 12862   00338E  6FF2               	movwf	displayString@startPos& (0+255),b
 12863   003390  ECCC  F00B         	call	_displayString	;wreg free
 12864   003394                     
 12865                           ;tm1637.c: 101:     TM1637_Brightness = 4;
 12866   003394  0E04               	movlw	4
 12867   003396  0105               	movlb	5	; () banked
 12868   003398  6F93               	movwf	_TM1637_Brightness& (0+255),b
 12869   00339A                     
 12870                           ; BSR set to: 5
 12871                           ;tm1637.c: 102:     setBrightness(TM1637_Brightness);
 12872   00339A  5193               	movf	_TM1637_Brightness& (0+255),w,b
 12873   00339C  EC3D  F019         	call	_setBrightness
 12874   0033A0  0012               	return		;funcret
 12875   0033A2                     __end_of_TM1637_init:
 12876                           	callstack 0
 12877                           
 12878 ;; *************** function _setBrightness *****************
 12879 ;; Defined at:
 12880 ;;		line 165 in file "tm1637.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  br              1    wreg     unsigned char 
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  br              1    8[BANK5 ] unsigned char 
 12885 ;; Return value:  Size  Location     Type
 12886 ;;                  1    wreg      void 
 12887 ;; Registers used:
 12888 ;;		wreg, status,2, status,0, cstack
 12889 ;; Tracked objects:
 12890 ;;		On entry : 0/0
 12891 ;;		On exit  : 0/0
 12892 ;;		Unchanged: 0/0
 12893 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12894 ;;      Params:         0       0       0       0       0       0       0       0       0
 12895 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12896 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12897 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12898 ;;Total ram usage:        1 bytes
 12899 ;; Hardware stack levels used: 1
 12900 ;; Hardware stack levels required when called: 13
 12901 ;; This function calls:
 12902 ;;		_start
 12903 ;;		_stop
 12904 ;;		_writeByte
 12905 ;; This function is called by:
 12906 ;;		_TM1637_init
 12907 ;;		_displayON
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           	psect	text20
 12912   00327A                     __ptext20:
 12913                           	callstack 0
 12914   00327A                     _setBrightness:
 12915                           	callstack 111
 12916                           
 12917                           ;incstack = 0
 12918                           ;setBrightness@br stored from wreg
 12919   00327A  0105               	movlb	5	; () banked
 12920   00327C  6FE8               	movwf	setBrightness@br& (0+255),b
 12921   00327E                     
 12922                           ;tm1637.c: 165: void setBrightness(uint8_t br);tm1637.c: 166: {;tm1637.c: 167:     if (b
      +                          r < 7)
 12923   00327E  0E07               	movlw	7
 12924   003280  0105               	movlb	5	; () banked
 12925   003282  61E8               	cpfslt	setBrightness@br& (0+255),b
 12926   003284  EF46  F019         	goto	u4841
 12927   003288  EF48  F019         	goto	u4840
 12928   00328C                     u4841:
 12929   00328C  EF53  F019         	goto	l1559
 12930   003290                     u4840:
 12931   003290                     
 12932                           ; BSR set to: 5
 12933                           ;tm1637.c: 168:     {;tm1637.c: 169:         TM1637_Brightness = br;
 12934   003290  C5E8  F593         	movff	setBrightness@br,_TM1637_Brightness
 12935   003294                     
 12936                           ; BSR set to: 5
 12937                           ;tm1637.c: 170:         start();
 12938   003294  ECBE  F01A         	call	_start	;wreg free
 12939   003298                     
 12940                           ;tm1637.c: 171:             writeByte(0b10001000 | br);
 12941   003298  0105               	movlb	5	; () banked
 12942   00329A  51E8               	movf	setBrightness@br& (0+255),w,b
 12943   00329C  0988               	iorlw	136
 12944   00329E  EC34  F016         	call	_writeByte
 12945   0032A2                     
 12946                           ;tm1637.c: 172:         stop();
 12947   0032A2  ECB9  F01A         	call	_stop	;wreg free
 12948   0032A6                     l1559:
 12949   0032A6  0012               	return		;funcret
 12950   0032A8                     __end_of_setBrightness:
 12951                           	callstack 0
 12952                           
 12953 ;; *************** function _displayString *****************
 12954 ;; Defined at:
 12955 ;;		line 224 in file "tm1637.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;  str             2   16[BANK5 ] PTR const unsigned char 
 12958 ;;		 -> STR_42(5), STR_41(5), STR_40(4), STR_39(5), 
 12959 ;;		 -> STR_38(4), STR_37(5), STR_36(5), STR_35(5), 
 12960 ;;		 -> STR_34(4), STR_33(5), STR_32(5), STR_31(5), 
 12961 ;;		 -> Menu_AdjustTime@label(5), Menu_AdjustOvercurrent@label(5), Menu_AdjustSpeed@label(5), Menu_PrintCurrentOption@sh
      +ortLabel(5), 
 12962 ;;		 -> displayNumber@str(8), STR_20(5), STR_18(5), STR_17(5), 
 12963 ;;		 -> STR_16(5), STR_15(5), STR_14(5), STR_13(5), 
 12964 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(5), 
 12965 ;;		 -> STR_8(5), STR_7(5), 
 12966 ;;  startPos        1   18[BANK5 ] unsigned char 
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;  dotFlag         1   22[BANK5 ] unsigned char 
 12969 ;;  pos             1   21[BANK5 ] unsigned char 
 12970 ;; Return value:  Size  Location     Type
 12971 ;;                  1    wreg      void 
 12972 ;; Registers used:
 12973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12974 ;; Tracked objects:
 12975 ;;		On entry : 0/0
 12976 ;;		On exit  : 0/0
 12977 ;;		Unchanged: 0/0
 12978 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 12979 ;;      Params:         0       3       0       0       0       0       0       0       0
 12980 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12981 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12982 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12983 ;;Total ram usage:        7 bytes
 12984 ;; Hardware stack levels used: 1
 12985 ;; Hardware stack levels required when called: 14
 12986 ;; This function calls:
 12987 ;;		_displayChar
 12988 ;; This function is called by:
 12989 ;;		_TM1637_init
 12990 ;;		_displayNumber
 12991 ;; This function uses a non-reentrant model
 12992 ;;
 12993                           
 12994                           	psect	text21
 12995   001798                     __ptext21:
 12996                           	callstack 0
 12997   001798                     _displayString:
 12998                           	callstack 110
 12999   001798                     
 13000                           ;tm1637.c: 224: void displayString(const char str[], uint8_t startPos);tm1637.c: 225: {;
      +                          tm1637.c: 226:     uint8_t pos = startPos;
 13001   001798  C5F2  F5F5         	movff	displayString@startPos,displayString@pos
 13002                           
 13003                           ;tm1637.c: 227:     uint8_t dotFlag = 0;
 13004   00179C  0105               	movlb	5	; () banked
 13005   00179E  6BF6               	clrf	displayString@dotFlag& (0+255),b
 13006                           
 13007                           ;tm1637.c: 228:     while (pos <= 3 && *str)
 13008   0017A0  EF19  F00C         	goto	l5908
 13009   0017A4                     l5896:
 13010                           
 13011                           ;tm1637.c: 229:     {;tm1637.c: 230:         if (*(str+1) == '.')
 13012   0017A4  0E01               	movlw	1
 13013   0017A6  0105               	movlb	5	; () banked
 13014   0017A8  25F0               	addwf	displayString@str& (0+255),w,b
 13015   0017AA  6FF3               	movwf	??_displayString& (0+255),b
 13016   0017AC  0E00               	movlw	0
 13017   0017AE  21F1               	addwfc	(displayString@str+1)& (0+255),w,b
 13018   0017B0  6FF4               	movwf	(??_displayString+1)& (0+255),b
 13019   0017B2  C5F3  F4F6         	movff	??_displayString,tblptrl
 13020   0017B6  C5F4  F4F7         	movff	??_displayString+1,tblptrh
 13021   0017BA  6AF8               	clrf	tblptru,c
 13022   0017BC  0E0D               	movlw	(high __ramtop+-1)
 13023   0017BE  64F7               	cpfsgt	tblptrh,c
 13024   0017C0  D003               	bra	u4777
 13025   0017C2  0008               	tblrd		*
 13026   0017C4  50F5               	movf	tablat,w,c
 13027   0017C6  D005               	bra	u4770
 13028   0017C8                     u4777:
 13029   0017C8  C4F6 F4E9          	movff	tblptrl,fsr0l
 13030   0017CC  C4F7 F4EA          	movff	tblptrh,fsr0h
 13031   0017D0  50EF               	movf	indf0,w,c
 13032   0017D2                     u4770:
 13033   0017D2  0A2E               	xorlw	46
 13034   0017D4  A4D8               	btfss	status,2,c
 13035   0017D6  EFEF  F00B         	goto	u4781
 13036   0017DA  EFF1  F00B         	goto	u4780
 13037   0017DE                     u4781:
 13038   0017DE  EFF4  F00B         	goto	l5900
 13039   0017E2                     u4780:
 13040   0017E2                     
 13041                           ;tm1637.c: 231:             dotFlag = 1;
 13042   0017E2  0E01               	movlw	1
 13043   0017E4  0105               	movlb	5	; () banked
 13044   0017E6  6FF6               	movwf	displayString@dotFlag& (0+255),b
 13045   0017E8                     l5900:
 13046                           
 13047                           ;tm1637.c: 232:         displayChar(*str, pos, dotFlag);
 13048   0017E8  C5F5  F5EA         	movff	displayString@pos,displayChar@pos
 13049   0017EC  C5F6  F5EB         	movff	displayString@dotFlag,displayChar@dotFlag
 13050   0017F0  C5F0  F4F6         	movff	displayString@str,tblptrl
 13051   0017F4  C5F1  F4F7         	movff	displayString@str+1,tblptrh
 13052   0017F8  6AF8               	clrf	tblptru,c
 13053   0017FA  0E0D               	movlw	(high __ramtop+-1)
 13054   0017FC  64F7               	cpfsgt	tblptrh,c
 13055   0017FE  D003               	bra	u4797
 13056   001800  0008               	tblrd		*
 13057   001802  50F5               	movf	tablat,w,c
 13058   001804  D005               	bra	u4790
 13059   001806                     u4797:
 13060   001806  C4F6 F4E9          	movff	tblptrl,fsr0l
 13061   00180A  C4F7 F4EA          	movff	tblptrh,fsr0h
 13062   00180E  50EF               	movf	indf0,w,c
 13063   001810                     u4790:
 13064   001810  ECE7  F012         	call	_displayChar
 13065   001814                     
 13066                           ;tm1637.c: 233:         if (dotFlag)
 13067   001814  0105               	movlb	5	; () banked
 13068   001816  51F6               	movf	displayString@dotFlag& (0+255),w,b
 13069   001818  B4D8               	btfsc	status,2,c
 13070   00181A  EF11  F00C         	goto	u4801
 13071   00181E  EF13  F00C         	goto	u4800
 13072   001822                     u4801:
 13073   001822  EF16  F00C         	goto	l1583
 13074   001826                     u4800:
 13075   001826                     
 13076                           ; BSR set to: 5
 13077                           ;tm1637.c: 234:         {;tm1637.c: 235:             str++;
 13078   001826  4BF0               	infsnz	displayString@str& (0+255),f,b
 13079   001828  2BF1               	incf	(displayString@str+1)& (0+255),f,b
 13080   00182A                     
 13081                           ; BSR set to: 5
 13082                           ;tm1637.c: 236:             dotFlag = 0;
 13083   00182A  6BF6               	clrf	displayString@dotFlag& (0+255),b
 13084   00182C                     l1583:
 13085                           
 13086                           ; BSR set to: 5
 13087                           ;tm1637.c: 238:         str++;
 13088   00182C  4BF0               	infsnz	displayString@str& (0+255),f,b
 13089   00182E  2BF1               	incf	(displayString@str+1)& (0+255),f,b
 13090                           
 13091                           ;tm1637.c: 239:         pos++;
 13092   001830  2BF5               	incf	displayString@pos& (0+255),f,b
 13093   001832                     l5908:
 13094                           
 13095                           ; BSR set to: 5
 13096                           ;tm1637.c: 228:     while (pos <= 3 && *str)
 13097   001832  0E04               	movlw	4
 13098   001834  61F5               	cpfslt	displayString@pos& (0+255),b
 13099   001836  EF1F  F00C         	goto	u4811
 13100   00183A  EF21  F00C         	goto	u4810
 13101   00183E                     u4811:
 13102   00183E  EF39  F00C         	goto	l1587
 13103   001842                     u4810:
 13104   001842                     
 13105                           ; BSR set to: 5
 13106   001842  C5F0  F4F6         	movff	displayString@str,tblptrl
 13107   001846  C5F1  F4F7         	movff	displayString@str+1,tblptrh
 13108   00184A  6AF8               	clrf	tblptru,c
 13109   00184C  0E0D               	movlw	(high __ramtop+-1)
 13110   00184E  64F7               	cpfsgt	tblptrh,c
 13111   001850  D003               	bra	u4827
 13112   001852  0008               	tblrd		*
 13113   001854  50F5               	movf	tablat,w,c
 13114   001856  D005               	bra	u4820
 13115   001858                     u4827:
 13116   001858  C4F6 F4E9          	movff	tblptrl,fsr0l
 13117   00185C  C4F7 F4EA          	movff	tblptrh,fsr0h
 13118   001860  50EF               	movf	indf0,w,c
 13119   001862                     u4820:
 13120   001862  0900               	iorlw	0
 13121   001864  A4D8               	btfss	status,2,c
 13122   001866  EF37  F00C         	goto	u4831
 13123   00186A  EF39  F00C         	goto	u4830
 13124   00186E                     u4831:
 13125   00186E  EFD2  F00B         	goto	l5896
 13126   001872                     u4830:
 13127   001872                     l1587:
 13128   001872  0012               	return		;funcret
 13129   001874                     __end_of_displayString:
 13130                           	callstack 0
 13131                           
 13132 ;; *************** function _displayChar *****************
 13133 ;; Defined at:
 13134 ;;		line 205 in file "tm1637.c"
 13135 ;; Parameters:    Size  Location     Type
 13136 ;;  ch              1    wreg     unsigned char 
 13137 ;;  pos             1   10[BANK5 ] unsigned char 
 13138 ;;  dotFlag         1   11[BANK5 ] unsigned char 
 13139 ;; Auto vars:     Size  Location     Type
 13140 ;;  ch              1   14[BANK5 ] unsigned char 
 13141 ;;  data            1   15[BANK5 ] unsigned char 
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  1    wreg      void 
 13144 ;; Registers used:
 13145 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13146 ;; Tracked objects:
 13147 ;;		On entry : 0/0
 13148 ;;		On exit  : 0/0
 13149 ;;		Unchanged: 0/0
 13150 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13151 ;;      Params:         0       2       0       0       0       0       0       0       0
 13152 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13153 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13154 ;;      Totals:         0       6       0       0       0       0       0       0       0
 13155 ;;Total ram usage:        6 bytes
 13156 ;; Hardware stack levels used: 1
 13157 ;; Hardware stack levels required when called: 13
 13158 ;; This function calls:
 13159 ;;		_findChar
 13160 ;;		_start
 13161 ;;		_stop
 13162 ;;		_writeByte
 13163 ;; This function is called by:
 13164 ;;		_displayString
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text22
 13169   0025CE                     __ptext22:
 13170                           	callstack 0
 13171   0025CE                     _displayChar:
 13172                           	callstack 110
 13173                           
 13174                           ;incstack = 0
 13175                           ;displayChar@ch stored from wreg
 13176   0025CE  0105               	movlb	5	; () banked
 13177   0025D0  6FEE               	movwf	displayChar@ch& (0+255),b
 13178   0025D2                     
 13179                           ;tm1637.c: 208:     data = segments[findChar(ch)];
 13180   0025D2  0105               	movlb	5	; () banked
 13181   0025D4  51EE               	movf	displayChar@ch& (0+255),w,b
 13182   0025D6  EC71  F012         	call	_findChar
 13183   0025DA  0105               	movlb	5	; () banked
 13184   0025DC  6FEC               	movwf	??_displayChar& (0+255),b
 13185   0025DE  6BED               	clrf	(??_displayChar+1)& (0+255),b
 13186   0025E0  0E8B               	movlw	low _segments
 13187   0025E2  25EC               	addwf	??_displayChar& (0+255),w,b
 13188   0025E4  6EF6               	movwf	tblptrl,c
 13189   0025E6  0E7E               	movlw	high _segments
 13190   0025E8  21ED               	addwfc	(??_displayChar+1)& (0+255),w,b
 13191   0025EA  6EF7               	movwf	tblptrh,c
 13192   0025EC                     	if	0	;There are less than 3 active tblptr bytes
 13193   0025EC                     	endif
 13194   0025EC  0008               	tblrd		*
 13195   0025EE  C4F5 F5EF          	movff	tablat,displayChar@data
 13196   0025F2                     
 13197                           ; BSR set to: 5
 13198                           ;tm1637.c: 209:     if (pos > 3) return;
 13199   0025F2  0E03               	movlw	3
 13200   0025F4  65EA               	cpfsgt	displayChar@pos& (0+255),b
 13201   0025F6  EFFF  F012         	goto	u4291
 13202   0025FA  EF01  F013         	goto	u4290
 13203   0025FE                     u4291:
 13204   0025FE  EF03  F013         	goto	l5520
 13205   002602                     u4290:
 13206   002602  EF20  F013         	goto	l1576
 13207   002606                     l5520:
 13208                           
 13209                           ; BSR set to: 5
 13210                           ;tm1637.c: 210:     if (dotFlag)
 13211   002606  51EB               	movf	displayChar@dotFlag& (0+255),w,b
 13212   002608  B4D8               	btfsc	status,2,c
 13213   00260A  EF09  F013         	goto	u4301
 13214   00260E  EF0B  F013         	goto	u4300
 13215   002612                     u4301:
 13216   002612  EF0C  F013         	goto	l5524
 13217   002616                     u4300:
 13218   002616                     
 13219                           ; BSR set to: 5
 13220                           ;tm1637.c: 211:         data |= 0b10000000;
 13221   002616  8FEF               	bsf	displayChar@data& (0+255),7,b
 13222   002618                     l5524:
 13223                           
 13224                           ; BSR set to: 5
 13225                           ;tm1637.c: 213:     start();
 13226   002618  ECBE  F01A         	call	_start	;wreg free
 13227   00261C                     
 13228                           ;tm1637.c: 214:         writeByte(0b01000100);
 13229   00261C  0E44               	movlw	68
 13230   00261E  EC34  F016         	call	_writeByte
 13231   002622                     
 13232                           ;tm1637.c: 215:     stop();
 13233   002622  ECB9  F01A         	call	_stop	;wreg free
 13234   002626                     
 13235                           ;tm1637.c: 217:     start();
 13236   002626  ECBE  F01A         	call	_start	;wreg free
 13237   00262A                     
 13238                           ;tm1637.c: 218:         writeByte(0b11000000 | pos);
 13239   00262A  0105               	movlb	5	; () banked
 13240   00262C  51EA               	movf	displayChar@pos& (0+255),w,b
 13241   00262E  09C0               	iorlw	192
 13242   002630  EC34  F016         	call	_writeByte
 13243   002634                     
 13244                           ;tm1637.c: 219:         writeByte(data);
 13245   002634  0105               	movlb	5	; () banked
 13246   002636  51EF               	movf	displayChar@data& (0+255),w,b
 13247   002638  EC34  F016         	call	_writeByte
 13248   00263C                     
 13249                           ;tm1637.c: 220:     stop();
 13250   00263C  ECB9  F01A         	call	_stop	;wreg free
 13251   002640                     l1576:
 13252   002640  0012               	return		;funcret
 13253   002642                     __end_of_displayChar:
 13254                           	callstack 0
 13255                           
 13256 ;; *************** function _writeByte *****************
 13257 ;; Defined at:
 13258 ;;		line 132 in file "tm1637.c"
 13259 ;; Parameters:    Size  Location     Type
 13260 ;;  data            1    wreg     unsigned char 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;  data            1    6[BANK5 ] unsigned char 
 13263 ;;  i               1    7[BANK5 ] unsigned char 
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      void 
 13266 ;; Registers used:
 13267 ;;		wreg, status,2, status,0
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13273 ;;      Params:         0       0       0       0       0       0       0       0       0
 13274 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13275 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13276 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13277 ;;Total ram usage:        2 bytes
 13278 ;; Hardware stack levels used: 1
 13279 ;; Hardware stack levels required when called: 12
 13280 ;; This function calls:
 13281 ;;		Nothing
 13282 ;; This function is called by:
 13283 ;;		_setBrightness
 13284 ;;		_displayChar
 13285 ;;		_displayOFF
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text23
 13290   002C68                     __ptext23:
 13291                           	callstack 0
 13292   002C68                     _writeByte:
 13293                           	callstack 111
 13294                           
 13295                           ;incstack = 0
 13296                           ;writeByte@data stored from wreg
 13297   002C68  0105               	movlb	5	; () banked
 13298   002C6A  6FE6               	movwf	writeByte@data& (0+255),b
 13299   002C6C                     
 13300                           ;tm1637.c: 132: void writeByte(uint8_t data);tm1637.c: 133: {;tm1637.c: 134:     uint8_t
      +                           i;;tm1637.c: 135:     for(i = 0; i < 8; i++)
 13301   002C6C  0105               	movlb	5	; () banked
 13302   002C6E  6BE7               	clrf	writeByte@i& (0+255),b
 13303   002C70                     l1552:
 13304                           
 13305                           ; BSR set to: 5
 13306                           ;tm1637.c: 136:     {;tm1637.c: 137:         RC3 = 0;
 13307   002C70  96D0               	bcf	1232,3,c	;volatile
 13308                           
 13309                           ;tm1637.c: 139:         RC4 = data & 0x01;
 13310   002C72  B1E6               	btfsc	writeByte@data& (0+255),0,b
 13311   002C74  EF3E  F016         	goto	u3841
 13312   002C78  EF41  F016         	goto	u3840
 13313   002C7C                     u3841:
 13314   002C7C  88D0               	bsf	1232,4,c	;volatile
 13315   002C7E  EF42  F016         	goto	u3855
 13316   002C82                     u3840:
 13317   002C82  98D0               	bcf	1232,4,c	;volatile
 13318   002C84                     u3855:
 13319   002C84                     
 13320                           ;tm1637.c: 141:         data >>= 1;
 13321   002C84  0105               	movlb	5	; () banked
 13322   002C86  90D8               	bcf	status,0,c
 13323   002C88  33E6               	rrcf	writeByte@data& (0+255),f,b
 13324   002C8A                     
 13325                           ; BSR set to: 5
 13326                           ;tm1637.c: 142:         RC3 = 1;
 13327   002C8A  86D0               	bsf	1232,3,c	;volatile
 13328   002C8C                     
 13329                           ; BSR set to: 5
 13330                           ;tm1637.c: 144:     }
 13331   002C8C  2BE7               	incf	writeByte@i& (0+255),f,b
 13332   002C8E                     
 13333                           ; BSR set to: 5
 13334   002C8E  0E07               	movlw	7
 13335   002C90  65E7               	cpfsgt	writeByte@i& (0+255),b
 13336   002C92  EF4D  F016         	goto	u3861
 13337   002C96  EF4F  F016         	goto	u3860
 13338   002C9A                     u3861:
 13339   002C9A  EF38  F016         	goto	l1552
 13340   002C9E                     u3860:
 13341   002C9E                     
 13342                           ; BSR set to: 5
 13343                           ;tm1637.c: 145:     RC3 = 0;
 13344   002C9E  96D0               	bcf	1232,3,c	;volatile
 13345                           
 13346                           ;tm1637.c: 147:     RC4 = 1;
 13347   002CA0  88D0               	bsf	1232,4,c	;volatile
 13348                           
 13349                           ;tm1637.c: 149:     RC3 = 1;
 13350   002CA2  86D0               	bsf	1232,3,c	;volatile
 13351                           
 13352                           ;tm1637.c: 151:     TRISC4 = 1;
 13353   002CA4  88C8               	bsf	1224,4,c	;volatile
 13354                           
 13355                           ;tm1637.c: 154:     if (RC4 == 0)
 13356   002CA6  B8D0               	btfsc	1232,4,c	;volatile
 13357   002CA8  EF58  F016         	goto	u3871
 13358   002CAC  EF5A  F016         	goto	u3870
 13359   002CB0                     u3871:
 13360   002CB0  EF5C  F016         	goto	l1554
 13361   002CB4                     u3870:
 13362   002CB4                     
 13363                           ; BSR set to: 5
 13364                           ;tm1637.c: 155:     {;tm1637.c: 156:         TRISC4 = 0;
 13365   002CB4  98C8               	bcf	1224,4,c	;volatile
 13366                           
 13367                           ;tm1637.c: 158:         RC4 = 0;
 13368   002CB6  98D0               	bcf	1232,4,c	;volatile
 13369   002CB8                     l1554:
 13370                           
 13371                           ; BSR set to: 5
 13372                           ;tm1637.c: 161:     TRISC4 = 0;
 13373   002CB8  98C8               	bcf	1224,4,c	;volatile
 13374   002CBA                     
 13375                           ; BSR set to: 5
 13376   002CBA  0012               	return		;funcret
 13377   002CBC                     __end_of_writeByte:
 13378                           	callstack 0
 13379                           
 13380 ;; *************** function _stop *****************
 13381 ;; Defined at:
 13382 ;;		line 119 in file "tm1637.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;		None
 13385 ;; Auto vars:     Size  Location     Type
 13386 ;;		None
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  1    wreg      void 
 13389 ;; Registers used:
 13390 ;;		None
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13396 ;;      Params:         0       0       0       0       0       0       0       0       0
 13397 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13399 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13400 ;;Total ram usage:        0 bytes
 13401 ;; Hardware stack levels used: 1
 13402 ;; Hardware stack levels required when called: 12
 13403 ;; This function calls:
 13404 ;;		Nothing
 13405 ;; This function is called by:
 13406 ;;		_setBrightness
 13407 ;;		_displayChar
 13408 ;;		_displayOFF
 13409 ;; This function uses a non-reentrant model
 13410 ;;
 13411                           
 13412                           	psect	text24
 13413   003572                     __ptext24:
 13414                           	callstack 0
 13415   003572                     _stop:
 13416                           	callstack 111
 13417   003572                     
 13418                           ;tm1637.c: 121:     RC3 = 0;
 13419   003572  96D0               	bcf	1232,3,c	;volatile
 13420                           
 13421                           ;tm1637.c: 123:     RC4 = 0;
 13422   003574  98D0               	bcf	1232,4,c	;volatile
 13423                           
 13424                           ;tm1637.c: 125:     RC3 = 1;
 13425   003576  86D0               	bsf	1232,3,c	;volatile
 13426                           
 13427                           ;tm1637.c: 127:     RC4 = 1;
 13428   003578  88D0               	bsf	1232,4,c	;volatile
 13429   00357A  0012               	return		;funcret
 13430   00357C                     __end_of_stop:
 13431                           	callstack 0
 13432                           
 13433 ;; *************** function _start *****************
 13434 ;; Defined at:
 13435 ;;		line 106 in file "tm1637.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;		None
 13438 ;; Auto vars:     Size  Location     Type
 13439 ;;		None
 13440 ;; Return value:  Size  Location     Type
 13441 ;;                  1    wreg      void 
 13442 ;; Registers used:
 13443 ;;		None
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/0
 13446 ;;		On exit  : 0/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13449 ;;      Params:         0       0       0       0       0       0       0       0       0
 13450 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13452 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13453 ;;Total ram usage:        0 bytes
 13454 ;; Hardware stack levels used: 1
 13455 ;; Hardware stack levels required when called: 12
 13456 ;; This function calls:
 13457 ;;		Nothing
 13458 ;; This function is called by:
 13459 ;;		_setBrightness
 13460 ;;		_displayChar
 13461 ;;		_displayOFF
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465                           	psect	text25
 13466   00357C                     __ptext25:
 13467                           	callstack 0
 13468   00357C                     _start:
 13469                           	callstack 111
 13470   00357C                     
 13471                           ;tm1637.c: 108:     RC3 = 1;
 13472   00357C  86D0               	bsf	1232,3,c	;volatile
 13473                           
 13474                           ;tm1637.c: 110:     RC4 = 1;
 13475   00357E  88D0               	bsf	1232,4,c	;volatile
 13476                           
 13477                           ;tm1637.c: 112:     RC4 = 0;
 13478   003580  98D0               	bcf	1232,4,c	;volatile
 13479                           
 13480                           ;tm1637.c: 114:     RC3 = 0;
 13481   003582  96D0               	bcf	1232,3,c	;volatile
 13482   003584  0012               	return		;funcret
 13483   003586                     __end_of_start:
 13484                           	callstack 0
 13485                           
 13486 ;; *************** function _findChar *****************
 13487 ;; Defined at:
 13488 ;;		line 192 in file "tm1637.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  ch              1    wreg     unsigned char 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  ch              1    8[BANK5 ] unsigned char 
 13493 ;;  i               1    9[BANK5 ] unsigned char 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      unsigned char 
 13496 ;; Registers used:
 13497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0
 13504 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13505 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13506 ;;      Totals:         0       4       0       0       0       0       0       0       0
 13507 ;;Total ram usage:        4 bytes
 13508 ;; Hardware stack levels used: 1
 13509 ;; Hardware stack levels required when called: 12
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_displayChar
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text26
 13518   0024E2                     __ptext26:
 13519                           	callstack 0
 13520   0024E2                     _findChar:
 13521                           	callstack 110
 13522                           
 13523                           ;incstack = 0
 13524                           ;findChar@ch stored from wreg
 13525   0024E2  0105               	movlb	5	; () banked
 13526   0024E4  6FE8               	movwf	findChar@ch& (0+255),b
 13527   0024E6                     
 13528                           ;tm1637.c: 192: uint8_t findChar(char ch);tm1637.c: 193: {;tm1637.c: 194:     if (ch >= 
      +                          '0' && ch <= '9')
 13529   0024E6  0E2F               	movlw	47
 13530   0024E8  0105               	movlb	5	; () banked
 13531   0024EA  65E8               	cpfsgt	findChar@ch& (0+255),b
 13532   0024EC  EF7A  F012         	goto	u3881
 13533   0024F0  EF7C  F012         	goto	u3880
 13534   0024F4                     u3881:
 13535   0024F4  EF88  F012         	goto	l5314
 13536   0024F8                     u3880:
 13537   0024F8                     
 13538                           ; BSR set to: 5
 13539   0024F8  0E3A               	movlw	58
 13540   0024FA  61E8               	cpfslt	findChar@ch& (0+255),b
 13541   0024FC  EF82  F012         	goto	u3891
 13542   002500  EF84  F012         	goto	u3890
 13543   002504                     u3891:
 13544   002504  EF88  F012         	goto	l5314
 13545   002508                     u3890:
 13546   002508                     
 13547                           ; BSR set to: 5
 13548                           ;tm1637.c: 195:         return ch - '0';
 13549   002508  51E8               	movf	findChar@ch& (0+255),w,b
 13550   00250A  0FD0               	addlw	208
 13551   00250C  EFAB  F012         	goto	l1569
 13552   002510                     l5314:
 13553                           
 13554                           ; BSR set to: 5
 13555                           ;tm1637.c: 197:     for(uint8_t i = 10; i < sizeof(segments); i++)
 13556   002510  0E0A               	movlw	10
 13557   002512  6FE9               	movwf	findChar@i& (0+255),b
 13558   002514                     l5320:
 13559                           
 13560                           ; BSR set to: 5
 13561                           ;tm1637.c: 198:         if (ch == allChars[i])
 13562   002514  51E9               	movf	findChar@i& (0+255),w,b
 13563   002516  25BB               	addwf	_allChars& (0+255),w,b
 13564   002518  6FE6               	movwf	??_findChar& (0+255),b
 13565   00251A  0E00               	movlw	0
 13566   00251C  21BC               	addwfc	(_allChars+1)& (0+255),w,b
 13567   00251E  6FE7               	movwf	(??_findChar+1)& (0+255),b
 13568   002520  C5E6  F4F6         	movff	??_findChar,tblptrl
 13569   002524  C5E7  F4F7         	movff	??_findChar+1,tblptrh
 13570   002528                     	if	0	;tblptru may be non-zero
 13571   002528                     	endif
 13572   002528                     	if	0	;tblptru may be non-zero
 13573   002528                     	endif
 13574   002528  0008               	tblrd		*
 13575   00252A  50F5               	movf	tablat,w,c
 13576   00252C  19E8               	xorwf	findChar@ch& (0+255),w,b
 13577   00252E  A4D8               	btfss	status,2,c
 13578   002530  EF9C  F012         	goto	u3901
 13579   002534  EF9E  F012         	goto	u3900
 13580   002538                     u3901:
 13581   002538  EFA1  F012         	goto	l5326
 13582   00253C                     u3900:
 13583   00253C                     
 13584                           ; BSR set to: 5
 13585                           ;tm1637.c: 199:             return i;
 13586   00253C  51E9               	movf	findChar@i& (0+255),w,b
 13587   00253E  EFAB  F012         	goto	l1569
 13588   002542                     l5326:
 13589                           
 13590                           ; BSR set to: 5
 13591   002542  2BE9               	incf	findChar@i& (0+255),f,b
 13592   002544                     
 13593                           ; BSR set to: 5
 13594   002544  0E29               	movlw	41
 13595   002546  65E9               	cpfsgt	findChar@i& (0+255),b
 13596   002548  EFA8  F012         	goto	u3911
 13597   00254C  EFAA  F012         	goto	u3910
 13598   002550                     u3911:
 13599   002550  EF8A  F012         	goto	l5320
 13600   002554                     u3910:
 13601   002554                     
 13602                           ; BSR set to: 5
 13603                           ;tm1637.c: 201:     return 10;
 13604   002554  0E0A               	movlw	10
 13605   002556                     l1569:
 13606                           
 13607                           ; BSR set to: 5
 13608   002556  0012               	return		;funcret
 13609   002558                     __end_of_findChar:
 13610                           	callstack 0
 13611                           
 13612 ;; *************** function _PWM1_PHASE_A_Initialize *****************
 13613 ;; Defined at:
 13614 ;;		line 50 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		wreg, status,2, status,0, cstack
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13631 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13632 ;;Total ram usage:        0 bytes
 13633 ;; Hardware stack levels used: 1
 13634 ;; Hardware stack levels required when called: 13
 13635 ;; This function calls:
 13636 ;;		_PWM1_PHASE_A_Period_SetInterruptHandler
 13637 ;;		_PWM1_PHASE_A_Slice1Output1_SetInterruptHandler
 13638 ;;		_PWM1_PHASE_A_Slice1Output2_SetInterruptHandler
 13639 ;; This function is called by:
 13640 ;;		_SYSTEM_Initialize
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text27
 13645   002AFA                     __ptext27:
 13646                           	callstack 0
 13647   002AFA                     _PWM1_PHASE_A_Initialize:
 13648                           	callstack 112
 13649   002AFA                     
 13650                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 53:     PWM1ERS = 0x0;
 13651   002AFA  6A60               	clrf	96,c	;volatile
 13652   002AFC                     
 13653                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 56:     PWM1CLK = 0x2;
 13654   002AFC  0E02               	movlw	2
 13655   002AFE  6E61               	movwf	97,c	;volatile
 13656   002B00                     
 13657                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 59:     PWM1LDS = 0x0;
 13658   002B00  6A62               	clrf	98,c	;volatile
 13659                           
 13660                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 62:     PWM1PRL = 0x7F;
 13661   002B02  0E7F               	movlw	127
 13662   002B04  6E63               	movwf	99,c	;volatile
 13663                           
 13664                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 65:     PWM1PRH = 0xC;
 13665   002B06  0E0C               	movlw	12
 13666   002B08  6E64               	movwf	100,c	;volatile
 13667   002B0A                     
 13668                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 68:     PWM1CPRE = 0x0;
 13669   002B0A  6A65               	clrf	101,c	;volatile
 13670   002B0C                     
 13671                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 71:     PWM1PIPOS = 0x0;
 13672   002B0C  6A66               	clrf	102,c	;volatile
 13673   002B0E                     
 13674                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 74:     PWM1GIR = 0x0;
 13675   002B0E  6A67               	clrf	103,c	;volatile
 13676   002B10                     
 13677                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 77:     PWM1GIE = 0x0;
 13678   002B10  6A68               	clrf	104,c	;volatile
 13679                           
 13680                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 80:     PWM1S1CFG = 0x2;
 13681   002B12  0E02               	movlw	2
 13682   002B14  6E6A               	movwf	106,c	;volatile
 13683                           
 13684                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 83:     PWM1S1P1L = 0x40;
 13685   002B16  0E40               	movlw	64
 13686   002B18  6E6B               	movwf	107,c	;volatile
 13687                           
 13688                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 86:     PWM1S1P1H = 0x6;
 13689   002B1A  0E06               	movlw	6
 13690   002B1C  6E6C               	movwf	108,c	;volatile
 13691   002B1E                     
 13692                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 89:     PWM1S1P2L = 0x0;
 13693   002B1E  6A6D               	clrf	109,c	;volatile
 13694   002B20                     
 13695                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 92:     PWM1S1P2H = 0x0;
 13696   002B20  6A6E               	clrf	110,c	;volatile
 13697   002B22                     
 13698                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 95:     PIR4bits.PWM1PIF = 0;
 13699   002B22  9CB7               	bcf	183,6,c	;volatile
 13700   002B24                     
 13701                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 98:     PIR4bits.PWM1IF = 0;
 13702   002B24  9EB7               	bcf	183,7,c	;volatile
 13703   002B26                     
 13704                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 101:     PWM1GIRbits.S1P1IF = 0;
 13705   002B26  9067               	bcf	103,0,c	;volatile
 13706   002B28                     
 13707                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 104:     PWM1GIRbits.S1P2IF = 0;
 13708   002B28  9267               	bcf	103,1,c	;volatile
 13709   002B2A                     
 13710                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 107:     PIE4bits.PWM1IE = 0;
 13711   002B2A  9EAC               	bcf	172,7,c	;volatile
 13712   002B2C                     
 13713                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 110:     PIE4bits.PWM1PIE = 0;
 13714   002B2C  9CAC               	bcf	172,6,c	;volatile
 13715   002B2E                     
 13716                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 113:     PWM1_PHASE_A_Slice1Output1_SetInterr
      +                          uptHandler(PWM1_PHASE_A_Slice1Output1_DefaultInterruptHandler);
 13717   002B2E  0E00               	movlw	0
 13718   002B30  0105               	movlb	5	; () banked
 13719   002B32  6FE6               	movwf	PWM1_PHASE_A_Slice1Output1_SetInterruptHandler@InterruptHandler& (0+255),b
 13720   002B34  0E00               	movlw	0
 13721   002B36  6FE7               	movwf	(PWM1_PHASE_A_Slice1Output1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13722   002B38  ECC8  F01A         	call	_PWM1_PHASE_A_Slice1Output1_SetInterruptHandler	;wreg free
 13723   002B3C                     
 13724                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 114:     PWM1_PHASE_A_Slice1Output2_SetInterr
      +                          uptHandler(PWM1_PHASE_A_Slice1Output2_DefaultInterruptHandler);
 13725   002B3C  0E00               	movlw	0
 13726   002B3E  0105               	movlb	5	; () banked
 13727   002B40  6FE6               	movwf	PWM1_PHASE_A_Slice1Output2_SetInterruptHandler@InterruptHandler& (0+255),b
 13728   002B42  0E00               	movlw	0
 13729   002B44  6FE7               	movwf	(PWM1_PHASE_A_Slice1Output2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13730   002B46  ECC3  F01A         	call	_PWM1_PHASE_A_Slice1Output2_SetInterruptHandler	;wreg free
 13731   002B4A                     
 13732                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 115:     PWM1_PHASE_A_Period_SetInterruptHand
      +                          ler(PWM1_PHASE_A_Period_DefaultInterruptHandler);
 13733   002B4A  0E00               	movlw	0
 13734   002B4C  0105               	movlb	5	; () banked
 13735   002B4E  6FE6               	movwf	PWM1_PHASE_A_Period_SetInterruptHandler@InterruptHandler& (0+255),b
 13736   002B50  0E00               	movlw	0
 13737   002B52  6FE7               	movwf	(PWM1_PHASE_A_Period_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 13738   002B54  ECCD  F01A         	call	_PWM1_PHASE_A_Period_SetInterruptHandler	;wreg free
 13739   002B58                     
 13740                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 118:     PWM1CON = 0x00;
 13741   002B58  6A69               	clrf	105,c	;volatile
 13742   002B5A  0012               	return		;funcret
 13743   002B5C                     __end_of_PWM1_PHASE_A_Initialize:
 13744                           	callstack 0
 13745                           
 13746 ;; *************** function _PWM1_PHASE_A_Slice1Output2_SetInterruptHandler *****************
 13747 ;; Defined at:
 13748 ;;		line 194 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 13751 ;;		 -> PWM1_PHASE_A_Slice1Output2_DefaultInterruptHandler(1), 
 13752 ;; Auto vars:     Size  Location     Type
 13753 ;;		None
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  1    wreg      void 
 13756 ;; Registers used:
 13757 ;;		wreg, status,2, status,0
 13758 ;; Tracked objects:
 13759 ;;		On entry : 0/0
 13760 ;;		On exit  : 0/0
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13763 ;;      Params:         0       2       0       0       0       0       0       0       0
 13764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13765 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13766 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13767 ;;Total ram usage:        2 bytes
 13768 ;; Hardware stack levels used: 1
 13769 ;; Hardware stack levels required when called: 12
 13770 ;; This function calls:
 13771 ;;		Nothing
 13772 ;; This function is called by:
 13773 ;;		_PWM1_PHASE_A_Initialize
 13774 ;; This function uses a non-reentrant model
 13775 ;;
 13776                           
 13777                           	psect	text28
 13778   003586                     __ptext28:
 13779                           	callstack 0
 13780   003586                     _PWM1_PHASE_A_Slice1Output2_SetInterruptHandler:
 13781                           	callstack 112
 13782   003586                     
 13783                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 194: void PWM1_PHASE_A_Slice1Output2_SetInter
      +                          ruptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 1
      +                          95: {;mcc_generated_files/pwm/src/pwm1_16bit.c: 196:     PWM1_PHASE_A_Slice1Output2_Inte
      +                          rruptHandler = InterruptHandler;
 13784   003586  C5E6  F5DA         	movff	PWM1_PHASE_A_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM1_PHASE_A_Sli
      +                          ce1Output2_InterruptHandler
 13785   00358A  C5E7  F5DB         	movff	PWM1_PHASE_A_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM1_PHASE_A_S
      +                          lice1Output2_InterruptHandler+1
 13786   00358E  0012               	return		;funcret
 13787   003590                     __end_of_PWM1_PHASE_A_Slice1Output2_SetInterruptHandler:
 13788                           	callstack 0
 13789                           
 13790 ;; *************** function _PWM1_PHASE_A_Slice1Output1_SetInterruptHandler *****************
 13791 ;; Defined at:
 13792 ;;		line 189 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 13795 ;;		 -> PWM1_PHASE_A_Slice1Output1_DefaultInterruptHandler(1), 
 13796 ;; Auto vars:     Size  Location     Type
 13797 ;;		None
 13798 ;; Return value:  Size  Location     Type
 13799 ;;                  1    wreg      void 
 13800 ;; Registers used:
 13801 ;;		wreg, status,2, status,0
 13802 ;; Tracked objects:
 13803 ;;		On entry : 0/0
 13804 ;;		On exit  : 0/0
 13805 ;;		Unchanged: 0/0
 13806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13807 ;;      Params:         0       2       0       0       0       0       0       0       0
 13808 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13810 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13811 ;;Total ram usage:        2 bytes
 13812 ;; Hardware stack levels used: 1
 13813 ;; Hardware stack levels required when called: 12
 13814 ;; This function calls:
 13815 ;;		Nothing
 13816 ;; This function is called by:
 13817 ;;		_PWM1_PHASE_A_Initialize
 13818 ;; This function uses a non-reentrant model
 13819 ;;
 13820                           
 13821                           	psect	text29
 13822   003590                     __ptext29:
 13823                           	callstack 0
 13824   003590                     _PWM1_PHASE_A_Slice1Output1_SetInterruptHandler:
 13825                           	callstack 112
 13826   003590                     
 13827                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 189: void PWM1_PHASE_A_Slice1Output1_SetInter
      +                          ruptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 1
      +                          90: {;mcc_generated_files/pwm/src/pwm1_16bit.c: 191:     PWM1_PHASE_A_Slice1Output1_Inte
      +                          rruptHandler = InterruptHandler;
 13828   003590  C5E6  F5DC         	movff	PWM1_PHASE_A_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM1_PHASE_A_Sli
      +                          ce1Output1_InterruptHandler
 13829   003594  C5E7  F5DD         	movff	PWM1_PHASE_A_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM1_PHASE_A_S
      +                          lice1Output1_InterruptHandler+1
 13830   003598  0012               	return		;funcret
 13831   00359A                     __end_of_PWM1_PHASE_A_Slice1Output1_SetInterruptHandler:
 13832                           	callstack 0
 13833                           
 13834 ;; *************** function _PWM1_PHASE_A_Period_SetInterruptHandler *****************
 13835 ;; Defined at:
 13836 ;;		line 199 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 13839 ;;		 -> PWM1_PHASE_A_Period_DefaultInterruptHandler(1), 
 13840 ;; Auto vars:     Size  Location     Type
 13841 ;;		None
 13842 ;; Return value:  Size  Location     Type
 13843 ;;                  1    wreg      void 
 13844 ;; Registers used:
 13845 ;;		wreg, status,2, status,0
 13846 ;; Tracked objects:
 13847 ;;		On entry : 0/0
 13848 ;;		On exit  : 0/0
 13849 ;;		Unchanged: 0/0
 13850 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13851 ;;      Params:         0       2       0       0       0       0       0       0       0
 13852 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13853 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13854 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13855 ;;Total ram usage:        2 bytes
 13856 ;; Hardware stack levels used: 1
 13857 ;; Hardware stack levels required when called: 12
 13858 ;; This function calls:
 13859 ;;		Nothing
 13860 ;; This function is called by:
 13861 ;;		_PWM1_PHASE_A_Initialize
 13862 ;; This function uses a non-reentrant model
 13863 ;;
 13864                           
 13865                           	psect	text30
 13866   00359A                     __ptext30:
 13867                           	callstack 0
 13868   00359A                     _PWM1_PHASE_A_Period_SetInterruptHandler:
 13869                           	callstack 112
 13870   00359A                     
 13871                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 199: void PWM1_PHASE_A_Period_SetInterruptHan
      +                          dler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 200: {;m
      +                          cc_generated_files/pwm/src/pwm1_16bit.c: 201:     PWM1_PHASE_A_Period_InterruptHandler =
      +                           InterruptHandler;
 13872   00359A  C5E6  F5D8         	movff	PWM1_PHASE_A_Period_SetInterruptHandler@InterruptHandler,_PWM1_PHASE_A_Period_Int
      +                          erruptHandler
 13873   00359E  C5E7  F5D9         	movff	PWM1_PHASE_A_Period_SetInterruptHandler@InterruptHandler+1,_PWM1_PHASE_A_Period_I
      +                          nterruptHandler+1
 13874   0035A2  0012               	return		;funcret
 13875   0035A4                     __end_of_PWM1_PHASE_A_Period_SetInterruptHandler:
 13876                           	callstack 0
 13877                           
 13878 ;; *************** function _PIN_MANAGER_Initialize *****************
 13879 ;; Defined at:
 13880 ;;		line 63 in file "mcc_generated_files/system/src/pins.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;		None
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;		None
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  1    wreg      void 
 13887 ;; Registers used:
 13888 ;;		wreg, status,2, status,0, cstack
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 13894 ;;      Params:         0       0       0       0       0       0       0       0       0
 13895 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13897 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13898 ;;Total ram usage:        0 bytes
 13899 ;; Hardware stack levels used: 1
 13900 ;; Hardware stack levels required when called: 13
 13901 ;; This function calls:
 13902 ;;		_BACK_SetInterruptHandler
 13903 ;;		_BUTTON_SetInterruptHandler
 13904 ;;		_DOWN_SetInterruptHandler
 13905 ;;		_ENTER_SetInterruptHandler
 13906 ;;		_GATE_SetInterruptHandler
 13907 ;;		_PHOTOCELL_SetInterruptHandler
 13908 ;;		_UP_SetInterruptHandler
 13909 ;; This function is called by:
 13910 ;;		_SYSTEM_Initialize
 13911 ;; This function uses a non-reentrant model
 13912 ;;
 13913                           
 13914                           	psect	text31
 13915   001948                     __ptext31:
 13916                           	callstack 0
 13917   001948                     _PIN_MANAGER_Initialize:
 13918                           	callstack 112
 13919   001948                     
 13920                           ;mcc_generated_files/system/src/pins.c: 67:     LATA = 0x0;
 13921   001948  6ABE               	clrf	190,c	;volatile
 13922                           
 13923                           ;mcc_generated_files/system/src/pins.c: 68:     LATB = 0x0;
 13924   00194A  6ABF               	clrf	191,c	;volatile
 13925                           
 13926                           ;mcc_generated_files/system/src/pins.c: 69:     LATC = 0x0;
 13927   00194C  6AC0               	clrf	192,c	;volatile
 13928                           
 13929                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
 13930   00194E  0104               	movlb	4	; () banked
 13931   001950  6B02               	clrf	2,b	;volatile
 13932                           
 13933                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
 13934   001952  6B0A               	clrf	10,b	;volatile
 13935                           
 13936                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
 13937   001954  6B12               	clrf	18,b	;volatile
 13938   001956                     
 13939                           ; BSR set to: 4
 13940                           ;mcc_generated_files/system/src/pins.c: 80:     TRISA = 0x3F;
 13941   001956  0E3F               	movlw	63
 13942   001958  6EC6               	movwf	198,c	;volatile
 13943                           
 13944                           ;mcc_generated_files/system/src/pins.c: 81:     TRISB = 0x30;
 13945   00195A  0E30               	movlw	48
 13946   00195C  6EC7               	movwf	199,c	;volatile
 13947                           
 13948                           ;mcc_generated_files/system/src/pins.c: 82:     TRISC = 0x27;
 13949   00195E  0E27               	movlw	39
 13950   001960  6EC8               	movwf	200,c	;volatile
 13951                           
 13952                           ;mcc_generated_files/system/src/pins.c: 87:     ANSELA = 0x23;
 13953   001962  0E23               	movlw	35
 13954   001964  6F00               	movwf	0,b	;volatile
 13955                           
 13956                           ;mcc_generated_files/system/src/pins.c: 88:     ANSELB = 0x80;
 13957   001966  0E80               	movlw	128
 13958   001968  6F08               	movwf	8,b	;volatile
 13959   00196A                     
 13960                           ; BSR set to: 4
 13961                           ;mcc_generated_files/system/src/pins.c: 89:     ANSELC = 0x0;
 13962   00196A  6B10               	clrf	16,b	;volatile
 13963   00196C                     
 13964                           ; BSR set to: 4
 13965                           ;mcc_generated_files/system/src/pins.c: 94:     WPUA = 0x0;
 13966   00196C  6B01               	clrf	1,b	;volatile
 13967   00196E                     
 13968                           ; BSR set to: 4
 13969                           ;mcc_generated_files/system/src/pins.c: 95:     WPUB = 0x0;
 13970   00196E  6B09               	clrf	9,b	;volatile
 13971   001970                     
 13972                           ; BSR set to: 4
 13973                           ;mcc_generated_files/system/src/pins.c: 96:     WPUC = 0x0;
 13974   001970  6B11               	clrf	17,b	;volatile
 13975                           
 13976                           ;mcc_generated_files/system/src/pins.c: 102:     SLRCONA = 0x37;
 13977   001972  0E37               	movlw	55
 13978   001974  6F03               	movwf	3,b	;volatile
 13979                           
 13980                           ;mcc_generated_files/system/src/pins.c: 103:     SLRCONB = 0xF0;
 13981   001976  0EF0               	movlw	240
 13982   001978  6F0B               	movwf	11,b	;volatile
 13983   00197A                     
 13984                           ; BSR set to: 4
 13985                           ;mcc_generated_files/system/src/pins.c: 104:     SLRCONC = 0xFF;
 13986   00197A  6913               	setf	19,b	;volatile
 13987                           
 13988                           ;mcc_generated_files/system/src/pins.c: 109:     INLVLA = 0x3F;
 13989   00197C  0E3F               	movlw	63
 13990   00197E  6F04               	movwf	4,b	;volatile
 13991                           
 13992                           ;mcc_generated_files/system/src/pins.c: 110:     INLVLB = 0xF0;
 13993   001980  0EF0               	movlw	240
 13994   001982  6F0C               	movwf	12,b	;volatile
 13995   001984                     
 13996                           ; BSR set to: 4
 13997                           ;mcc_generated_files/system/src/pins.c: 111:     INLVLC = 0xFF;
 13998   001984  6914               	setf	20,b	;volatile
 13999   001986                     
 14000                           ; BSR set to: 4
 14001                           ;mcc_generated_files/system/src/pins.c: 116:     RB4I2C = 0x0;
 14002   001986  0102               	movlb	2	; () banked
 14003   001988  6B87               	clrf	135,b	;volatile
 14004   00198A                     
 14005                           ; BSR set to: 2
 14006                           ;mcc_generated_files/system/src/pins.c: 117:     RB6I2C = 0x0;
 14007   00198A  6B86               	clrf	134,b	;volatile
 14008                           
 14009                           ;mcc_generated_files/system/src/pins.c: 121:     U1RXPPS = 0xD;
 14010   00198C  0E0D               	movlw	13
 14011   00198E  6F72               	movwf	114,b	;volatile
 14012                           
 14013                           ;mcc_generated_files/system/src/pins.c: 122:     RB6PPS = 0x10;
 14014   001990  0E10               	movlw	16
 14015   001992  6F0F               	movwf	15,b	;volatile
 14016                           
 14017                           ;mcc_generated_files/system/src/pins.c: 123:     RB7PPS = 0x0A;
 14018   001994  0E0A               	movlw	10
 14019   001996  6F10               	movwf	16,b	;volatile
 14020   001998                     
 14021                           ; BSR set to: 2
 14022                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAP = 0x0;
 14023   001998  0104               	movlb	4	; () banked
 14024   00199A  6B05               	clrf	5,b	;volatile
 14025                           
 14026                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAN = 0x14;
 14027   00199C  0E14               	movlw	20
 14028   00199E  6F06               	movwf	6,b	;volatile
 14029   0019A0                     
 14030                           ; BSR set to: 4
 14031                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAF = 0x0;
 14032   0019A0  6B07               	clrf	7,b	;volatile
 14033   0019A2                     
 14034                           ; BSR set to: 4
 14035                           ;mcc_generated_files/system/src/pins.c: 131:     IOCBP = 0x0;
 14036   0019A2  6B0D               	clrf	13,b	;volatile
 14037                           
 14038                           ;mcc_generated_files/system/src/pins.c: 132:     IOCBN = 0x10;
 14039   0019A4  0E10               	movlw	16
 14040   0019A6  6F0E               	movwf	14,b	;volatile
 14041   0019A8                     
 14042                           ; BSR set to: 4
 14043                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBF = 0x0;
 14044   0019A8  6B0F               	clrf	15,b	;volatile
 14045   0019AA                     
 14046                           ; BSR set to: 4
 14047                           ;mcc_generated_files/system/src/pins.c: 134:     IOCCP = 0x0;
 14048   0019AA  6B15               	clrf	21,b	;volatile
 14049                           
 14050                           ;mcc_generated_files/system/src/pins.c: 135:     IOCCN = 0x27;
 14051   0019AC  0E27               	movlw	39
 14052   0019AE  6F16               	movwf	22,b	;volatile
 14053   0019B0                     
 14054                           ; BSR set to: 4
 14055                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCF = 0x0;
 14056   0019B0  6B17               	clrf	23,b	;volatile
 14057   0019B2                     
 14058                           ; BSR set to: 4
 14059                           ;mcc_generated_files/system/src/pins.c: 138:     DOWN_SetInterruptHandler(DOWN_DefaultIn
      +                          terruptHandler);
 14060   0019B2  0E76               	movlw	low _DOWN_DefaultInterruptHandler
 14061   0019B4  0105               	movlb	5	; () banked
 14062   0019B6  6FE6               	movwf	DOWN_SetInterruptHandler@InterruptHandler& (0+255),b
 14063   0019B8  0E36               	movlw	high _DOWN_DefaultInterruptHandler
 14064   0019BA  6FE7               	movwf	(DOWN_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14065   0019BC  ECE6  F01A         	call	_DOWN_SetInterruptHandler	;wreg free
 14066   0019C0                     
 14067                           ;mcc_generated_files/system/src/pins.c: 139:     BACK_SetInterruptHandler(BACK_DefaultIn
      +                          terruptHandler);
 14068   0019C0  0E7A               	movlw	low _BACK_DefaultInterruptHandler
 14069   0019C2  0105               	movlb	5	; () banked
 14070   0019C4  6FE6               	movwf	BACK_SetInterruptHandler@InterruptHandler& (0+255),b
 14071   0019C6  0E36               	movlw	high _BACK_DefaultInterruptHandler
 14072   0019C8  6FE7               	movwf	(BACK_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14073   0019CA  ECF0  F01A         	call	_BACK_SetInterruptHandler	;wreg free
 14074   0019CE                     
 14075                           ;mcc_generated_files/system/src/pins.c: 140:     UP_SetInterruptHandler(UP_DefaultInterr
      +                          uptHandler);
 14076   0019CE  0E6E               	movlw	low _UP_DefaultInterruptHandler
 14077   0019D0  0105               	movlb	5	; () banked
 14078   0019D2  6FE6               	movwf	UP_SetInterruptHandler@InterruptHandler& (0+255),b
 14079   0019D4  0E36               	movlw	high _UP_DefaultInterruptHandler
 14080   0019D6  6FE7               	movwf	(UP_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14081   0019D8  ECD2  F01A         	call	_UP_SetInterruptHandler	;wreg free
 14082   0019DC                     
 14083                           ;mcc_generated_files/system/src/pins.c: 141:     GATE_SetInterruptHandler(GATE_DefaultIn
      +                          terruptHandler);
 14084   0019DC  0E00               	movlw	0
 14085   0019DE  0105               	movlb	5	; () banked
 14086   0019E0  6FE6               	movwf	GATE_SetInterruptHandler@InterruptHandler& (0+255),b
 14087   0019E2  0E00               	movlw	0
 14088   0019E4  6FE7               	movwf	(GATE_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14089   0019E6  ECDC  F01A         	call	_GATE_SetInterruptHandler	;wreg free
 14090   0019EA                     
 14091                           ;mcc_generated_files/system/src/pins.c: 142:     PHOTOCELL_SetInterruptHandler(PHOTOCELL
      +                          _DefaultInterruptHandler);
 14092   0019EA  0E00               	movlw	0
 14093   0019EC  0105               	movlb	5	; () banked
 14094   0019EE  6FE6               	movwf	PHOTOCELL_SetInterruptHandler@InterruptHandler& (0+255),b
 14095   0019F0  0E00               	movlw	0
 14096   0019F2  6FE7               	movwf	(PHOTOCELL_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14097   0019F4  ECD7  F01A         	call	_PHOTOCELL_SetInterruptHandler	;wreg free
 14098   0019F8                     
 14099                           ;mcc_generated_files/system/src/pins.c: 143:     BUTTON_SetInterruptHandler(BUTTON_Defau
      +                          ltInterruptHandler);
 14100   0019F8  0E00               	movlw	0
 14101   0019FA  0105               	movlb	5	; () banked
 14102   0019FC  6FE6               	movwf	BUTTON_SetInterruptHandler@InterruptHandler& (0+255),b
 14103   0019FE  0E00               	movlw	0
 14104   001A00  6FE7               	movwf	(BUTTON_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14105   001A02  ECEB  F01A         	call	_BUTTON_SetInterruptHandler	;wreg free
 14106   001A06                     
 14107                           ;mcc_generated_files/system/src/pins.c: 144:     ENTER_SetInterruptHandler(ENTER_Default
      +                          InterruptHandler);
 14108   001A06  0E74               	movlw	low _ENTER_DefaultInterruptHandler
 14109   001A08  0105               	movlb	5	; () banked
 14110   001A0A  6FE6               	movwf	ENTER_SetInterruptHandler@InterruptHandler& (0+255),b
 14111   001A0C  0E36               	movlw	high _ENTER_DefaultInterruptHandler
 14112   001A0E  6FE7               	movwf	(ENTER_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14113   001A10  ECE1  F01A         	call	_ENTER_SetInterruptHandler	;wreg free
 14114   001A14                     
 14115                           ;mcc_generated_files/system/src/pins.c: 147:     PIE0bits.IOCIE = 1;
 14116   001A14  8EA8               	bsf	168,7,c	;volatile
 14117   001A16  0012               	return		;funcret
 14118   001A18                     __end_of_PIN_MANAGER_Initialize:
 14119                           	callstack 0
 14120                           
 14121 ;; *************** function _UP_SetInterruptHandler *****************
 14122 ;; Defined at:
 14123 ;;		line 271 in file "mcc_generated_files/system/src/pins.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14126 ;;		 -> UP_DefaultInterruptHandler(1), 
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1    wreg      void 
 14131 ;; Registers used:
 14132 ;;		wreg, status,2, status,0
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14138 ;;      Params:         0       2       0       0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14141 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14142 ;;Total ram usage:        2 bytes
 14143 ;; Hardware stack levels used: 1
 14144 ;; Hardware stack levels required when called: 12
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_PIN_MANAGER_Initialize
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           	psect	text32
 14153   0035A4                     __ptext32:
 14154                           	callstack 0
 14155   0035A4                     _UP_SetInterruptHandler:
 14156                           	callstack 112
 14157   0035A4                     
 14158                           ;mcc_generated_files/system/src/pins.c: 272:     UP_InterruptHandler = InterruptHandler;
 14159   0035A4  C5E6  F5D2         	movff	UP_SetInterruptHandler@InterruptHandler,_UP_InterruptHandler
 14160   0035A8  C5E7  F5D3         	movff	UP_SetInterruptHandler@InterruptHandler+1,_UP_InterruptHandler+1
 14161   0035AC  0012               	return		;funcret
 14162   0035AE                     __end_of_UP_SetInterruptHandler:
 14163                           	callstack 0
 14164                           
 14165 ;; *************** function _PHOTOCELL_SetInterruptHandler *****************
 14166 ;; Defined at:
 14167 ;;		line 364 in file "mcc_generated_files/system/src/pins.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14170 ;;		 -> PHOTOCELL_DefaultInterruptHandler(1), 
 14171 ;; Auto vars:     Size  Location     Type
 14172 ;;		None
 14173 ;; Return value:  Size  Location     Type
 14174 ;;                  1    wreg      void 
 14175 ;; Registers used:
 14176 ;;		wreg, status,2, status,0
 14177 ;; Tracked objects:
 14178 ;;		On entry : 0/0
 14179 ;;		On exit  : 0/0
 14180 ;;		Unchanged: 0/0
 14181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14182 ;;      Params:         0       2       0       0       0       0       0       0       0
 14183 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14185 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14186 ;;Total ram usage:        2 bytes
 14187 ;; Hardware stack levels used: 1
 14188 ;; Hardware stack levels required when called: 12
 14189 ;; This function calls:
 14190 ;;		Nothing
 14191 ;; This function is called by:
 14192 ;;		_PIN_MANAGER_Initialize
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           	psect	text33
 14197   0035AE                     __ptext33:
 14198                           	callstack 0
 14199   0035AE                     _PHOTOCELL_SetInterruptHandler:
 14200                           	callstack 112
 14201   0035AE                     
 14202                           ;mcc_generated_files/system/src/pins.c: 365:     PHOTOCELL_InterruptHandler = InterruptH
      +                          andler;
 14203   0035AE  C5E6  F5CE         	movff	PHOTOCELL_SetInterruptHandler@InterruptHandler,_PHOTOCELL_InterruptHandler
 14204   0035B2  C5E7  F5CF         	movff	PHOTOCELL_SetInterruptHandler@InterruptHandler+1,_PHOTOCELL_InterruptHandler+1
 14205   0035B6  0012               	return		;funcret
 14206   0035B8                     __end_of_PHOTOCELL_SetInterruptHandler:
 14207                           	callstack 0
 14208                           
 14209 ;; *************** function _GATE_SetInterruptHandler *****************
 14210 ;; Defined at:
 14211 ;;		line 322 in file "mcc_generated_files/system/src/pins.c"
 14212 ;; Parameters:    Size  Location     Type
 14213 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14214 ;;		 -> GATE_DefaultInterruptHandler(1), 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;		None
 14217 ;; Return value:  Size  Location     Type
 14218 ;;                  1    wreg      void 
 14219 ;; Registers used:
 14220 ;;		wreg, status,2, status,0
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14226 ;;      Params:         0       2       0       0       0       0       0       0       0
 14227 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14228 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14229 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14230 ;;Total ram usage:        2 bytes
 14231 ;; Hardware stack levels used: 1
 14232 ;; Hardware stack levels required when called: 12
 14233 ;; This function calls:
 14234 ;;		Nothing
 14235 ;; This function is called by:
 14236 ;;		_PIN_MANAGER_Initialize
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           
 14240                           	psect	text34
 14241   0035B8                     __ptext34:
 14242                           	callstack 0
 14243   0035B8                     _GATE_SetInterruptHandler:
 14244                           	callstack 112
 14245   0035B8                     
 14246                           ;mcc_generated_files/system/src/pins.c: 323:     GATE_InterruptHandler = InterruptHandle
      +                          r;
 14247   0035B8  C5E6  F5D0         	movff	GATE_SetInterruptHandler@InterruptHandler,_GATE_InterruptHandler
 14248   0035BC  C5E7  F5D1         	movff	GATE_SetInterruptHandler@InterruptHandler+1,_GATE_InterruptHandler+1
 14249   0035C0  0012               	return		;funcret
 14250   0035C2                     __end_of_GATE_SetInterruptHandler:
 14251                           	callstack 0
 14252                           
 14253 ;; *************** function _ENTER_SetInterruptHandler *****************
 14254 ;; Defined at:
 14255 ;;		line 438 in file "mcc_generated_files/system/src/pins.c"
 14256 ;; Parameters:    Size  Location     Type
 14257 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14258 ;;		 -> ENTER_DefaultInterruptHandler(1), 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;		None
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  1    wreg      void 
 14263 ;; Registers used:
 14264 ;;		wreg, status,2, status,0
 14265 ;; Tracked objects:
 14266 ;;		On entry : 0/0
 14267 ;;		On exit  : 0/0
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14270 ;;      Params:         0       2       0       0       0       0       0       0       0
 14271 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14273 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14274 ;;Total ram usage:        2 bytes
 14275 ;; Hardware stack levels used: 1
 14276 ;; Hardware stack levels required when called: 12
 14277 ;; This function calls:
 14278 ;;		Nothing
 14279 ;; This function is called by:
 14280 ;;		_PIN_MANAGER_Initialize
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284                           	psect	text35
 14285   0035C2                     __ptext35:
 14286                           	callstack 0
 14287   0035C2                     _ENTER_SetInterruptHandler:
 14288                           	callstack 112
 14289   0035C2                     
 14290                           ;mcc_generated_files/system/src/pins.c: 439:     ENTER_InterruptHandler = InterruptHandl
      +                          er;
 14291   0035C2  C5E6  F5CA         	movff	ENTER_SetInterruptHandler@InterruptHandler,_ENTER_InterruptHandler
 14292   0035C6  C5E7  F5CB         	movff	ENTER_SetInterruptHandler@InterruptHandler+1,_ENTER_InterruptHandler+1
 14293   0035CA  0012               	return		;funcret
 14294   0035CC                     __end_of_ENTER_SetInterruptHandler:
 14295                           	callstack 0
 14296                           
 14297 ;; *************** function _DOWN_SetInterruptHandler *****************
 14298 ;; Defined at:
 14299 ;;		line 201 in file "mcc_generated_files/system/src/pins.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14302 ;;		 -> DOWN_DefaultInterruptHandler(1), 
 14303 ;; Auto vars:     Size  Location     Type
 14304 ;;		None
 14305 ;; Return value:  Size  Location     Type
 14306 ;;                  1    wreg      void 
 14307 ;; Registers used:
 14308 ;;		wreg, status,2, status,0
 14309 ;; Tracked objects:
 14310 ;;		On entry : 0/0
 14311 ;;		On exit  : 0/0
 14312 ;;		Unchanged: 0/0
 14313 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14314 ;;      Params:         0       2       0       0       0       0       0       0       0
 14315 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14316 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14317 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14318 ;;Total ram usage:        2 bytes
 14319 ;; Hardware stack levels used: 1
 14320 ;; Hardware stack levels required when called: 12
 14321 ;; This function calls:
 14322 ;;		Nothing
 14323 ;; This function is called by:
 14324 ;;		_PIN_MANAGER_Initialize
 14325 ;; This function uses a non-reentrant model
 14326 ;;
 14327                           
 14328                           	psect	text36
 14329   0035CC                     __ptext36:
 14330                           	callstack 0
 14331   0035CC                     _DOWN_SetInterruptHandler:
 14332                           	callstack 112
 14333   0035CC                     
 14334                           ;mcc_generated_files/system/src/pins.c: 202:     DOWN_InterruptHandler = InterruptHandle
      +                          r;
 14335   0035CC  C5E6  F5D6         	movff	DOWN_SetInterruptHandler@InterruptHandler,_DOWN_InterruptHandler
 14336   0035D0  C5E7  F5D7         	movff	DOWN_SetInterruptHandler@InterruptHandler+1,_DOWN_InterruptHandler+1
 14337   0035D4  0012               	return		;funcret
 14338   0035D6                     __end_of_DOWN_SetInterruptHandler:
 14339                           	callstack 0
 14340                           
 14341 ;; *************** function _BUTTON_SetInterruptHandler *****************
 14342 ;; Defined at:
 14343 ;;		line 405 in file "mcc_generated_files/system/src/pins.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14346 ;;		 -> BUTTON_DefaultInterruptHandler(1), 
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;		None
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		wreg, status,2, status,0
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14358 ;;      Params:         0       2       0       0       0       0       0       0       0
 14359 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14361 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14362 ;;Total ram usage:        2 bytes
 14363 ;; Hardware stack levels used: 1
 14364 ;; Hardware stack levels required when called: 12
 14365 ;; This function calls:
 14366 ;;		Nothing
 14367 ;; This function is called by:
 14368 ;;		_PIN_MANAGER_Initialize
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           	psect	text37
 14373   0035D6                     __ptext37:
 14374                           	callstack 0
 14375   0035D6                     _BUTTON_SetInterruptHandler:
 14376                           	callstack 112
 14377   0035D6                     
 14378                           ;mcc_generated_files/system/src/pins.c: 406:     BUTTON_InterruptHandler = InterruptHand
      +                          ler;
 14379   0035D6  C5E6  F5CC         	movff	BUTTON_SetInterruptHandler@InterruptHandler,_BUTTON_InterruptHandler
 14380   0035DA  C5E7  F5CD         	movff	BUTTON_SetInterruptHandler@InterruptHandler+1,_BUTTON_InterruptHandler+1
 14381   0035DE  0012               	return		;funcret
 14382   0035E0                     __end_of_BUTTON_SetInterruptHandler:
 14383                           	callstack 0
 14384                           
 14385 ;; *************** function _BACK_SetInterruptHandler *****************
 14386 ;; Defined at:
 14387 ;;		line 234 in file "mcc_generated_files/system/src/pins.c"
 14388 ;; Parameters:    Size  Location     Type
 14389 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14390 ;;		 -> BACK_DefaultInterruptHandler(1), 
 14391 ;; Auto vars:     Size  Location     Type
 14392 ;;		None
 14393 ;; Return value:  Size  Location     Type
 14394 ;;                  1    wreg      void 
 14395 ;; Registers used:
 14396 ;;		wreg, status,2, status,0
 14397 ;; Tracked objects:
 14398 ;;		On entry : 0/0
 14399 ;;		On exit  : 0/0
 14400 ;;		Unchanged: 0/0
 14401 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14402 ;;      Params:         0       2       0       0       0       0       0       0       0
 14403 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14405 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14406 ;;Total ram usage:        2 bytes
 14407 ;; Hardware stack levels used: 1
 14408 ;; Hardware stack levels required when called: 12
 14409 ;; This function calls:
 14410 ;;		Nothing
 14411 ;; This function is called by:
 14412 ;;		_PIN_MANAGER_Initialize
 14413 ;; This function uses a non-reentrant model
 14414 ;;
 14415                           
 14416                           	psect	text38
 14417   0035E0                     __ptext38:
 14418                           	callstack 0
 14419   0035E0                     _BACK_SetInterruptHandler:
 14420                           	callstack 112
 14421   0035E0                     
 14422                           ;mcc_generated_files/system/src/pins.c: 235:     BACK_InterruptHandler = InterruptHandle
      +                          r;
 14423   0035E0  C5E6  F5D4         	movff	BACK_SetInterruptHandler@InterruptHandler,_BACK_InterruptHandler
 14424   0035E4  C5E7  F5D5         	movff	BACK_SetInterruptHandler@InterruptHandler+1,_BACK_InterruptHandler+1
 14425   0035E8  0012               	return		;funcret
 14426   0035EA                     __end_of_BACK_SetInterruptHandler:
 14427                           	callstack 0
 14428                           
 14429 ;; *************** function _NVM_Initialize *****************
 14430 ;; Defined at:
 14431 ;;		line 14 in file "mcc_generated_files/nvm/src/nvm.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;		None
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;		None
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  1    wreg      void 
 14438 ;; Registers used:
 14439 ;;		cstack
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14445 ;;      Params:         0       0       0       0       0       0       0       0       0
 14446 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14447 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14448 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14449 ;;Total ram usage:        0 bytes
 14450 ;; Hardware stack levels used: 1
 14451 ;; Hardware stack levels required when called: 13
 14452 ;; This function calls:
 14453 ;;		_NVM_StatusClear
 14454 ;; This function is called by:
 14455 ;;		_SYSTEM_Initialize
 14456 ;; This function uses a non-reentrant model
 14457 ;;
 14458                           
 14459                           	psect	text39
 14460   003638                     __ptext39:
 14461                           	callstack 0
 14462   003638                     _NVM_Initialize:
 14463                           	callstack 112
 14464   003638                     
 14465                           ;mcc_generated_files/nvm/src/nvm.c: 15:     NVM_StatusClear();
 14466   003638  EC1F  F01B         	call	_NVM_StatusClear	;wreg free
 14467   00363C  0012               	return		;funcret
 14468   00363E                     __end_of_NVM_Initialize:
 14469                           	callstack 0
 14470                           
 14471 ;; *************** function _NVM_StatusClear *****************
 14472 ;; Defined at:
 14473 ;;		line 22 in file "mcc_generated_files/nvm/src/nvm.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;		None
 14476 ;; Auto vars:     Size  Location     Type
 14477 ;;		None
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  1    wreg      void 
 14480 ;; Registers used:
 14481 ;;		None
 14482 ;; Tracked objects:
 14483 ;;		On entry : 0/0
 14484 ;;		On exit  : 0/0
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14487 ;;      Params:         0       0       0       0       0       0       0       0       0
 14488 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14489 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14490 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14491 ;;Total ram usage:        0 bytes
 14492 ;; Hardware stack levels used: 1
 14493 ;; Hardware stack levels required when called: 12
 14494 ;; This function calls:
 14495 ;;		Nothing
 14496 ;; This function is called by:
 14497 ;;		_NVM_Initialize
 14498 ;; This function uses a non-reentrant model
 14499 ;;
 14500                           
 14501                           	psect	text40
 14502   00363E                     __ptext40:
 14503                           	callstack 0
 14504   00363E                     _NVM_StatusClear:
 14505                           	callstack 112
 14506   00363E                     
 14507                           ;mcc_generated_files/nvm/src/nvm.c: 23:     NVMCON1bits.WRERR = 0;
 14508   00363E  0100               	movlb	0	; () banked
 14509   003640  9F41               	bcf	65,7,b	;volsfr
 14510   003642                     
 14511                           ; BSR set to: 0
 14512   003642  0012               	return		;funcret
 14513   003644                     __end_of_NVM_StatusClear:
 14514                           	callstack 0
 14515                           
 14516 ;; *************** function _INTERRUPT_Initialize *****************
 14517 ;; Defined at:
 14518 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 14519 ;; Parameters:    Size  Location     Type
 14520 ;;		None
 14521 ;; Auto vars:     Size  Location     Type
 14522 ;;		None
 14523 ;; Return value:  Size  Location     Type
 14524 ;;                  1    wreg      void 
 14525 ;; Registers used:
 14526 ;;		wreg, status,2, status,0, cstack
 14527 ;; Tracked objects:
 14528 ;;		On entry : 0/0
 14529 ;;		On exit  : 0/0
 14530 ;;		Unchanged: 0/0
 14531 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14532 ;;      Params:         0       0       0       0       0       0       0       0       0
 14533 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14534 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14535 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14536 ;;Total ram usage:        0 bytes
 14537 ;; Hardware stack levels used: 1
 14538 ;; Hardware stack levels required when called: 13
 14539 ;; This function calls:
 14540 ;;		_INT0_SetInterruptHandler
 14541 ;;		_INT1_SetInterruptHandler
 14542 ;;		_INT2_SetInterruptHandler
 14543 ;; This function is called by:
 14544 ;;		_SYSTEM_Initialize
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548                           	psect	text41
 14549   003056                     __ptext41:
 14550                           	callstack 0
 14551   003056                     _INTERRUPT_Initialize:
 14552                           	callstack 112
 14553   003056                     
 14554                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 14555   003056  9AD6               	bcf	214,5,c	;volatile
 14556                           
 14557                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 14558   003058  90B4               	bcf	180,0,c	;volatile
 14559                           
 14560                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
 14561   00305A  80D6               	bsf	214,0,c	;volatile
 14562   00305C                     
 14563                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 14564   00305C  0E00               	movlw	0
 14565   00305E  0105               	movlb	5	; () banked
 14566   003060  6FE6               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 14567   003062  0E00               	movlw	0
 14568   003064  6FE7               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14569   003066  ECFF  F01A         	call	_INT0_SetInterruptHandler	;wreg free
 14570   00306A                     
 14571                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 14572   00306A  90B9               	bcf	185,0,c	;volatile
 14573   00306C                     
 14574                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 14575   00306C  82D6               	bsf	214,1,c	;volatile
 14576                           
 14577                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 14578   00306E  0E00               	movlw	0
 14579   003070  0105               	movlb	5	; () banked
 14580   003072  6FE6               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 14581   003074  0E00               	movlw	0
 14582   003076  6FE7               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14583   003078  ECFA  F01A         	call	_INT1_SetInterruptHandler	;wreg free
 14584   00307C                     
 14585                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 14586   00307C  90BD               	bcf	189,0,c	;volatile
 14587   00307E                     
 14588                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 14589   00307E  84D6               	bsf	214,2,c	;volatile
 14590                           
 14591                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 14592   003080  0E00               	movlw	0
 14593   003082  0105               	movlb	5	; () banked
 14594   003084  6FE6               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 14595   003086  0E00               	movlw	0
 14596   003088  6FE7               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14597   00308A  ECF5  F01A         	call	_INT2_SetInterruptHandler	;wreg free
 14598   00308E  0012               	return		;funcret
 14599   003090                     __end_of_INTERRUPT_Initialize:
 14600                           	callstack 0
 14601                           
 14602 ;; *************** function _INT2_SetInterruptHandler *****************
 14603 ;; Defined at:
 14604 ;;		line 175 in file "mcc_generated_files/system/src/interrupt.c"
 14605 ;; Parameters:    Size  Location     Type
 14606 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14607 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14608 ;; Auto vars:     Size  Location     Type
 14609 ;;		None
 14610 ;; Return value:  Size  Location     Type
 14611 ;;                  1    wreg      void 
 14612 ;; Registers used:
 14613 ;;		wreg, status,2, status,0
 14614 ;; Tracked objects:
 14615 ;;		On entry : 0/0
 14616 ;;		On exit  : 0/0
 14617 ;;		Unchanged: 0/0
 14618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14619 ;;      Params:         0       2       0       0       0       0       0       0       0
 14620 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14622 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14623 ;;Total ram usage:        2 bytes
 14624 ;; Hardware stack levels used: 1
 14625 ;; Hardware stack levels required when called: 12
 14626 ;; This function calls:
 14627 ;;		Nothing
 14628 ;; This function is called by:
 14629 ;;		_INTERRUPT_Initialize
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633                           	psect	text42
 14634   0035EA                     __ptext42:
 14635                           	callstack 0
 14636   0035EA                     _INT2_SetInterruptHandler:
 14637                           	callstack 112
 14638   0035EA                     
 14639                           ;mcc_generated_files/system/src/interrupt.c: 176:     INT2_InterruptHandler = InterruptH
      +                          andler;
 14640   0035EA  C5E6  F57C         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 14641   0035EE  C5E7  F57D         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 14642   0035F2  0012               	return		;funcret
 14643   0035F4                     __end_of_INT2_SetInterruptHandler:
 14644                           	callstack 0
 14645                           
 14646 ;; *************** function _INT1_SetInterruptHandler *****************
 14647 ;; Defined at:
 14648 ;;		line 149 in file "mcc_generated_files/system/src/interrupt.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14651 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14652 ;; Auto vars:     Size  Location     Type
 14653 ;;		None
 14654 ;; Return value:  Size  Location     Type
 14655 ;;                  1    wreg      void 
 14656 ;; Registers used:
 14657 ;;		wreg, status,2, status,0
 14658 ;; Tracked objects:
 14659 ;;		On entry : 0/0
 14660 ;;		On exit  : 0/0
 14661 ;;		Unchanged: 0/0
 14662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14663 ;;      Params:         0       2       0       0       0       0       0       0       0
 14664 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14666 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14667 ;;Total ram usage:        2 bytes
 14668 ;; Hardware stack levels used: 1
 14669 ;; Hardware stack levels required when called: 12
 14670 ;; This function calls:
 14671 ;;		Nothing
 14672 ;; This function is called by:
 14673 ;;		_INTERRUPT_Initialize
 14674 ;; This function uses a non-reentrant model
 14675 ;;
 14676                           
 14677                           	psect	text43
 14678   0035F4                     __ptext43:
 14679                           	callstack 0
 14680   0035F4                     _INT1_SetInterruptHandler:
 14681                           	callstack 112
 14682   0035F4                     
 14683                           ;mcc_generated_files/system/src/interrupt.c: 150:     INT1_InterruptHandler = InterruptH
      +                          andler;
 14684   0035F4  C5E6  F57E         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 14685   0035F8  C5E7  F57F         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 14686   0035FC  0012               	return		;funcret
 14687   0035FE                     __end_of_INT1_SetInterruptHandler:
 14688                           	callstack 0
 14689                           
 14690 ;; *************** function _INT0_SetInterruptHandler *****************
 14691 ;; Defined at:
 14692 ;;		line 123 in file "mcc_generated_files/system/src/interrupt.c"
 14693 ;; Parameters:    Size  Location     Type
 14694 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14695 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14696 ;; Auto vars:     Size  Location     Type
 14697 ;;		None
 14698 ;; Return value:  Size  Location     Type
 14699 ;;                  1    wreg      void 
 14700 ;; Registers used:
 14701 ;;		wreg, status,2, status,0
 14702 ;; Tracked objects:
 14703 ;;		On entry : 0/0
 14704 ;;		On exit  : 0/0
 14705 ;;		Unchanged: 0/0
 14706 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14707 ;;      Params:         0       2       0       0       0       0       0       0       0
 14708 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14709 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14710 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14711 ;;Total ram usage:        2 bytes
 14712 ;; Hardware stack levels used: 1
 14713 ;; Hardware stack levels required when called: 12
 14714 ;; This function calls:
 14715 ;;		Nothing
 14716 ;; This function is called by:
 14717 ;;		_INTERRUPT_Initialize
 14718 ;; This function uses a non-reentrant model
 14719 ;;
 14720                           
 14721                           	psect	text44
 14722   0035FE                     __ptext44:
 14723                           	callstack 0
 14724   0035FE                     _INT0_SetInterruptHandler:
 14725                           	callstack 112
 14726   0035FE                     
 14727                           ;mcc_generated_files/system/src/interrupt.c: 124:     INT0_InterruptHandler = InterruptH
      +                          andler;
 14728   0035FE  C5E6  F580         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 14729   003602  C5E7  F581         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 14730   003606  0012               	return		;funcret
 14731   003608                     __end_of_INT0_SetInterruptHandler:
 14732                           	callstack 0
 14733                           
 14734 ;; *************** function _CLOCK_Initialize *****************
 14735 ;; Defined at:
 14736 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 14737 ;; Parameters:    Size  Location     Type
 14738 ;;		None
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;		None
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      void 
 14743 ;; Registers used:
 14744 ;;		wreg, status,2
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14750 ;;      Params:         0       0       0       0       0       0       0       0       0
 14751 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14752 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14753 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14754 ;;Total ram usage:        0 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; Hardware stack levels required when called: 12
 14757 ;; This function calls:
 14758 ;;		Nothing
 14759 ;; This function is called by:
 14760 ;;		_SYSTEM_Initialize
 14761 ;; This function uses a non-reentrant model
 14762 ;;
 14763                           
 14764                           	psect	text45
 14765   003502                     __ptext45:
 14766                           	callstack 0
 14767   003502                     _CLOCK_Initialize:
 14768                           	callstack 113
 14769   003502                     
 14770                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 14771   003502  0E60               	movlw	96
 14772   003504  0100               	movlb	0	; () banked
 14773   003506  6FAD               	movwf	173,b	;volatile
 14774   003508                     
 14775                           ; BSR set to: 0
 14776                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 14777   003508  6BAF               	clrf	175,b	;volatile
 14778   00350A                     
 14779                           ; BSR set to: 0
 14780                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 14781   00350A  6BB3               	clrf	179,b	;volatile
 14782                           
 14783                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 14784   00350C  0E08               	movlw	8
 14785   00350E  6FB1               	movwf	177,b	;volatile
 14786   003510                     
 14787                           ; BSR set to: 0
 14788                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 14789   003510  6BB0               	clrf	176,b	;volatile
 14790   003512                     
 14791                           ; BSR set to: 0
 14792                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 14793   003512  6BAC               	clrf	172,b	;volatile
 14794   003514                     
 14795                           ; BSR set to: 0
 14796   003514  0012               	return		;funcret
 14797   003516                     __end_of_CLOCK_Initialize:
 14798                           	callstack 0
 14799                           
 14800 ;; *************** function _ADCC_Initialize *****************
 14801 ;; Defined at:
 14802 ;;		line 59 in file "mcc_generated_files/adc/src/adcc.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;		None
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;                  1    wreg      void 
 14809 ;; Registers used:
 14810 ;;		wreg, status,2, status,0, cstack
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14819 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14820 ;;Total ram usage:        0 bytes
 14821 ;; Hardware stack levels used: 1
 14822 ;; Hardware stack levels required when called: 13
 14823 ;; This function calls:
 14824 ;;		_ADCC_SetADIInterruptHandler
 14825 ;; This function is called by:
 14826 ;;		_SYSTEM_Initialize
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830                           	psect	text46
 14831   002CBC                     __ptext46:
 14832                           	callstack 0
 14833   002CBC                     _ADCC_Initialize:
 14834                           	callstack 112
 14835   002CBC                     
 14836                           ;mcc_generated_files/adc/src/adcc.c: 62:     ADLTHL = 0x0;
 14837   002CBC  0103               	movlb	3	; () banked
 14838   002CBE  6BD9               	clrf	217,b	;volatile
 14839                           
 14840                           ;mcc_generated_files/adc/src/adcc.c: 64:     ADLTHH = 0x0;
 14841   002CC0  6BDA               	clrf	218,b	;volatile
 14842                           
 14843                           ;mcc_generated_files/adc/src/adcc.c: 66:     ADUTHL = 0x0;
 14844   002CC2  6BDB               	clrf	219,b	;volatile
 14845                           
 14846                           ;mcc_generated_files/adc/src/adcc.c: 68:     ADUTHH = 0x0;
 14847   002CC4  6BDC               	clrf	220,b	;volatile
 14848                           
 14849                           ;mcc_generated_files/adc/src/adcc.c: 70:     ADSTPTL = 0x0;
 14850   002CC6  6BDF               	clrf	223,b	;volatile
 14851                           
 14852                           ;mcc_generated_files/adc/src/adcc.c: 72:     ADSTPTH = 0x0;
 14853   002CC8  6BE0               	clrf	224,b	;volatile
 14854                           
 14855                           ;mcc_generated_files/adc/src/adcc.c: 74:     ADACCU = 0x0;
 14856   002CCA  6BE5               	clrf	229,b	;volatile
 14857                           
 14858                           ;mcc_generated_files/adc/src/adcc.c: 76:     ADRPT = 0x0;
 14859   002CCC  6BE7               	clrf	231,b	;volatile
 14860   002CCE                     
 14861                           ; BSR set to: 3
 14862                           ;mcc_generated_files/adc/src/adcc.c: 78:     ADPCH = 0x5;
 14863   002CCE  0E05               	movlw	5
 14864   002CD0  6FEC               	movwf	236,b	;volatile
 14865                           
 14866                           ;mcc_generated_files/adc/src/adcc.c: 80:     ADACQL = 0x1;
 14867   002CD2  0E01               	movlw	1
 14868   002CD4  6FEE               	movwf	238,b	;volatile
 14869   002CD6                     
 14870                           ; BSR set to: 3
 14871                           ;mcc_generated_files/adc/src/adcc.c: 82:     ADACQH = 0x0;
 14872   002CD6  6BEF               	clrf	239,b	;volatile
 14873   002CD8                     
 14874                           ; BSR set to: 3
 14875                           ;mcc_generated_files/adc/src/adcc.c: 84:     ADCAP = 0x0;
 14876   002CD8  6BF0               	clrf	240,b	;volatile
 14877   002CDA                     
 14878                           ; BSR set to: 3
 14879                           ;mcc_generated_files/adc/src/adcc.c: 86:     ADPREL = 0x0;
 14880   002CDA  6BF1               	clrf	241,b	;volatile
 14881   002CDC                     
 14882                           ; BSR set to: 3
 14883                           ;mcc_generated_files/adc/src/adcc.c: 88:     ADPREH = 0x0;
 14884   002CDC  6BF2               	clrf	242,b	;volatile
 14885   002CDE                     
 14886                           ; BSR set to: 3
 14887                           ;mcc_generated_files/adc/src/adcc.c: 90:     ADCON1 = 0x0;
 14888   002CDE  6BF4               	clrf	244,b	;volatile
 14889                           
 14890                           ;mcc_generated_files/adc/src/adcc.c: 92:     ADCON2 = 0x10;
 14891   002CE0  0E10               	movlw	16
 14892   002CE2  6FF5               	movwf	245,b	;volatile
 14893   002CE4                     
 14894                           ; BSR set to: 3
 14895                           ;mcc_generated_files/adc/src/adcc.c: 94:     ADCON3 = 0x0;
 14896   002CE4  6BF6               	clrf	246,b	;volatile
 14897   002CE6                     
 14898                           ; BSR set to: 3
 14899                           ;mcc_generated_files/adc/src/adcc.c: 96:     ADSTAT = 0x0;
 14900   002CE6  6BF7               	clrf	247,b	;volatile
 14901   002CE8                     
 14902                           ; BSR set to: 3
 14903                           ;mcc_generated_files/adc/src/adcc.c: 98:     ADREF = 0x0;
 14904   002CE8  6BF8               	clrf	248,b	;volatile
 14905   002CEA                     
 14906                           ; BSR set to: 3
 14907                           ;mcc_generated_files/adc/src/adcc.c: 100:     ADACT = 0x0;
 14908   002CEA  6BF9               	clrf	249,b	;volatile
 14909                           
 14910                           ;mcc_generated_files/adc/src/adcc.c: 102:     ADCLK = 0x1F;
 14911   002CEC  0E1F               	movlw	31
 14912   002CEE  6FFA               	movwf	250,b	;volatile
 14913                           
 14914                           ;mcc_generated_files/adc/src/adcc.c: 104:     ADCON0 = 0x4;
 14915   002CF0  0E04               	movlw	4
 14916   002CF2  6FF3               	movwf	243,b	;volatile
 14917   002CF4                     
 14918                           ; BSR set to: 3
 14919                           ;mcc_generated_files/adc/src/adcc.c: 107:     PIR1bits.ADIF = 0;
 14920   002CF4  94B4               	bcf	180,2,c	;volatile
 14921   002CF6                     
 14922                           ; BSR set to: 3
 14923                           ;mcc_generated_files/adc/src/adcc.c: 109:     ADCC_SetADIInterruptHandler(ADCC_DefaultAD
      +                          I_ISR);
 14924   002CF6  0E7C               	movlw	low _ADCC_DefaultADI_ISR
 14925   002CF8  0105               	movlb	5	; () banked
 14926   002CFA  6FE6               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 14927   002CFC  0E36               	movlw	high _ADCC_DefaultADI_ISR
 14928   002CFE  6FE7               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 14929   002D00  EC04  F01B         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14930   002D04                     
 14931                           ;mcc_generated_files/adc/src/adcc.c: 111:     PIE1bits.ADIE = 1;
 14932   002D04  84A9               	bsf	169,2,c	;volatile
 14933   002D06                     
 14934                           ;mcc_generated_files/adc/src/adcc.c: 114:     PIR2bits.ADTIF = 0;
 14935   002D06  90B5               	bcf	181,0,c	;volatile
 14936   002D08                     
 14937                           ;mcc_generated_files/adc/src/adcc.c: 116:     ADCON0bits.ADON = 1;
 14938   002D08  0103               	movlb	3	; () banked
 14939   002D0A  8FF3               	bsf	243,7,b	;volatile
 14940   002D0C                     
 14941                           ; BSR set to: 3
 14942   002D0C  0012               	return		;funcret
 14943   002D0E                     __end_of_ADCC_Initialize:
 14944                           	callstack 0
 14945                           
 14946 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14947 ;; Defined at:
 14948 ;;		line 308 in file "mcc_generated_files/adc/src/adcc.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;  InterruptHan    2    6[BANK5 ] PTR FTN()void 
 14951 ;;		 -> ADCC_DefaultADI_ISR(1), 
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;		None
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  1    wreg      void 
 14956 ;; Registers used:
 14957 ;;		wreg, status,2, status,0
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 14963 ;;      Params:         0       2       0       0       0       0       0       0       0
 14964 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14965 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14966 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14967 ;;Total ram usage:        2 bytes
 14968 ;; Hardware stack levels used: 1
 14969 ;; Hardware stack levels required when called: 12
 14970 ;; This function calls:
 14971 ;;		Nothing
 14972 ;; This function is called by:
 14973 ;;		_ADCC_Initialize
 14974 ;; This function uses a non-reentrant model
 14975 ;;
 14976                           
 14977                           	psect	text47
 14978   003608                     __ptext47:
 14979                           	callstack 0
 14980   003608                     _ADCC_SetADIInterruptHandler:
 14981                           	callstack 112
 14982   003608                     
 14983                           ;mcc_generated_files/adc/src/adcc.c: 309:     ADCC_ADI_InterruptHandler = InterruptHandl
      +                          er;
 14984   003608  C5E6  F5DE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 14985   00360C  C5E7  F5DF         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 14986   003610  0012               	return		;funcret
 14987   003612                     __end_of_ADCC_SetADIInterruptHandler:
 14988                           	callstack 0
 14989                           
 14990 ;; *************** function _INTERRUPT_InterruptManager *****************
 14991 ;; Defined at:
 14992 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;		None
 14995 ;; Auto vars:     Size  Location     Type
 14996 ;;		None
 14997 ;; Return value:  Size  Location     Type
 14998 ;;                  1    wreg      void 
 14999 ;; Registers used:
 15000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15001 ;; Tracked objects:
 15002 ;;		On entry : 0/0
 15003 ;;		On exit  : 0/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15006 ;;      Params:         0       0       0       0       0       0       0       0       0
 15007 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15008 ;;      Temps:          0       6       0       0       0       0       0       0       0
 15009 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15010 ;;Total ram usage:        6 bytes
 15011 ;; Hardware stack levels used: 1
 15012 ;; Hardware stack levels required when called: 11
 15013 ;; This function calls:
 15014 ;;		_ADCC_ISR
 15015 ;;		_PIN_MANAGER_IOC
 15016 ;;		_TMR0_OverflowISR
 15017 ;;		_TMR2_ISR
 15018 ;; This function is called by:
 15019 ;;		Interrupt level 2
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           	psect	text48
 15024   001C68                     __ptext48:
 15025                           	callstack 0
 15026   001C68                     _INTERRUPT_InterruptManager:
 15027                           	callstack 110
 15028                           
 15029                           ;incstack = 0
 15030   001C68  C4FA F5E0          	movff	pclath,??_INTERRUPT_InterruptManager
 15031   001C6C  C4FB F5E1          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15032   001C70  C4F6 F5E2          	movff	tblptrl,??_INTERRUPT_InterruptManager+2
 15033   001C74  C4F7 F5E3          	movff	tblptrh,??_INTERRUPT_InterruptManager+3
 15034   001C78  C4F8 F5E4          	movff	tblptru,??_INTERRUPT_InterruptManager+4
 15035   001C7C  C4F5 F5E5          	movff	tablat,??_INTERRUPT_InterruptManager+5
 15036   001C80                     
 15037                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
 15038   001C80  AEA8               	btfss	168,7,c	;volatile
 15039   001C82  EF45  F00E         	goto	i2u662_41
 15040   001C86  EF47  F00E         	goto	i2u662_40
 15041   001C8A                     i2u662_41:
 15042   001C8A  EF52  F00E         	goto	i2l785
 15043   001C8E                     i2u662_40:
 15044   001C8E  AEB3               	btfss	179,7,c	;volatile
 15045   001C90  EF4C  F00E         	goto	i2u663_41
 15046   001C94  EF4E  F00E         	goto	i2u663_40
 15047   001C98                     i2u663_41:
 15048   001C98  EF52  F00E         	goto	i2l785
 15049   001C9C                     i2u663_40:
 15050   001C9C                     
 15051                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
 15052   001C9C  ECA6  F011         	call	_PIN_MANAGER_IOC	;wreg free
 15053                           
 15054                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
 15055   001CA0  EF88  F00E         	goto	i2l793
 15056   001CA4                     i2l785:
 15057   001CA4  A4A9               	btfss	169,2,c	;volatile
 15058   001CA6  EF57  F00E         	goto	i2u664_41
 15059   001CAA  EF59  F00E         	goto	i2u664_40
 15060   001CAE                     i2u664_41:
 15061   001CAE  EF64  F00E         	goto	i2l787
 15062   001CB2                     i2u664_40:
 15063   001CB2  A4B4               	btfss	180,2,c	;volatile
 15064   001CB4  EF5E  F00E         	goto	i2u665_41
 15065   001CB8  EF60  F00E         	goto	i2u665_40
 15066   001CBC                     i2u665_41:
 15067   001CBC  EF64  F00E         	goto	i2l787
 15068   001CC0                     i2u665_40:
 15069   001CC0                     
 15070                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         ADCC_ISR();
 15071   001CC0  ECD3  F018         	call	_ADCC_ISR	;wreg free
 15072                           
 15073                           ;mcc_generated_files/system/src/interrupt.c: 90:     }
 15074   001CC4  EF88  F00E         	goto	i2l793
 15075   001CC8                     i2l787:
 15076   001CC8  A6AB               	btfss	171,3,c	;volatile
 15077   001CCA  EF69  F00E         	goto	i2u666_41
 15078   001CCE  EF6B  F00E         	goto	i2u666_40
 15079   001CD2                     i2u666_41:
 15080   001CD2  EF76  F00E         	goto	i2l789
 15081   001CD6                     i2u666_40:
 15082   001CD6  A6B6               	btfss	182,3,c	;volatile
 15083   001CD8  EF70  F00E         	goto	i2u667_41
 15084   001CDC  EF72  F00E         	goto	i2u667_40
 15085   001CE0                     i2u667_41:
 15086   001CE0  EF76  F00E         	goto	i2l789
 15087   001CE4                     i2u667_40:
 15088   001CE4                     
 15089                           ;mcc_generated_files/system/src/interrupt.c: 92:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 93:         TMR2_ISR();
 15090   001CE4  ECAE  F015         	call	_TMR2_ISR	;wreg free
 15091                           
 15092                           ;mcc_generated_files/system/src/interrupt.c: 94:     }
 15093   001CE8  EF88  F00E         	goto	i2l793
 15094   001CEC                     i2l789:
 15095   001CEC  AEAB               	btfss	171,7,c	;volatile
 15096   001CEE  EF7B  F00E         	goto	i2u668_41
 15097   001CF2  EF7D  F00E         	goto	i2u668_40
 15098   001CF6                     i2u668_41:
 15099   001CF6  EF88  F00E         	goto	i2l788
 15100   001CFA                     i2u668_40:
 15101   001CFA  AEB6               	btfss	182,7,c	;volatile
 15102   001CFC  EF82  F00E         	goto	i2u669_41
 15103   001D00  EF84  F00E         	goto	i2u669_40
 15104   001D04                     i2u669_41:
 15105   001D04  EF88  F00E         	goto	i2l788
 15106   001D08                     i2u669_40:
 15107   001D08                     
 15108                           ;mcc_generated_files/system/src/interrupt.c: 96:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 97:         TMR0_OverflowISR();
 15109   001D08  ECAC  F012         	call	_TMR0_OverflowISR	;wreg free
 15110                           
 15111                           ;mcc_generated_files/system/src/interrupt.c: 98:     }
 15112   001D0C  EF88  F00E         	goto	i2l793
 15113   001D10                     i2l788:
 15114   001D10                     i2l793:
 15115   001D10  C5E5  F4F5         	movff	??_INTERRUPT_InterruptManager+5,tablat
 15116   001D14  C5E4  F4F8         	movff	??_INTERRUPT_InterruptManager+4,tblptru
 15117   001D18  C5E3  F4F7         	movff	??_INTERRUPT_InterruptManager+3,tblptrh
 15118   001D1C  C5E2  F4F6         	movff	??_INTERRUPT_InterruptManager+2,tblptrl
 15119   001D20  C5E1  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15120   001D24  C5E0  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 15121   001D28  0011               	retfie		f
 15122   001D2A                     __end_of_INTERRUPT_InterruptManager:
 15123                           	callstack 0
 15124                           
 15125 ;; *************** function _TMR2_ISR *****************
 15126 ;; Defined at:
 15127 ;;		line 75 in file "mcc_generated_files/timer/src/tmr2.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;		None
 15130 ;; Auto vars:     Size  Location     Type
 15131 ;;		None
 15132 ;; Return value:  Size  Location     Type
 15133 ;;                  1    wreg      void 
 15134 ;; Registers used:
 15135 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15136 ;; Tracked objects:
 15137 ;;		On entry : 0/0
 15138 ;;		On exit  : 0/0
 15139 ;;		Unchanged: 0/0
 15140 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15141 ;;      Params:         0       0       0       0       0       0       0       0       0
 15142 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15143 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15144 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15145 ;;Total ram usage:        0 bytes
 15146 ;; Hardware stack levels used: 1
 15147 ;; Hardware stack levels required when called: 1
 15148 ;; This function calls:
 15149 ;;		NULL
 15150 ;;		_ADCC_StartConversion
 15151 ;;		_TMR0_DefaultOverflowCallback
 15152 ;;		_TMR2_DefaultOverflowCallback
 15153 ;; This function is called by:
 15154 ;;		_INTERRUPT_InterruptManager
 15155 ;; This function uses a non-reentrant model
 15156 ;;
 15157                           
 15158                           	psect	text49
 15159   002B5C                     __ptext49:
 15160                           	callstack 0
 15161   002B5C                     _TMR2_ISR:
 15162                           	callstack 119
 15163   002B5C                     
 15164                           ;mcc_generated_files/timer/src/tmr2.c: 76:     static volatile unsigned int CountCallBac
      +                          k = 0;;mcc_generated_files/timer/src/tmr2.c: 77:     PIR3bits.TMR2IF = 0;
 15165   002B5C  96B6               	bcf	182,3,c	;volatile
 15166   002B5E                     
 15167                           ;mcc_generated_files/timer/src/tmr2.c: 78:     if (++CountCallBack >= 2) {
 15168   002B5E  0105               	movlb	5	; () banked
 15169   002B60  4B70               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
 15170   002B62  2B71               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 15171   002B64  5171               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 15172   002B66  E109               	bnz	i2u639_40
 15173   002B68  0E02               	movlw	2
 15174   002B6A  5D70               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
 15175   002B6C  A0D8               	btfss	status,0,c
 15176   002B6E  EFBB  F015         	goto	i2u639_41
 15177   002B72  EFBD  F015         	goto	i2u639_40
 15178   002B76                     i2u639_41:
 15179   002B76  EFDB  F015         	goto	i2l1021
 15180   002B7A                     i2u639_40:
 15181   002B7A                     
 15182                           ; BSR set to: 5
 15183                           ;mcc_generated_files/timer/src/tmr2.c: 79:         if (TMR2_OverflowCallback != ((void*)
      +                          0)) {
 15184   002B7A  51C6               	movf	_TMR2_OverflowCallback& (0+255),w,b
 15185   002B7C  11C7               	iorwf	(_TMR2_OverflowCallback+1)& (0+255),w,b
 15186   002B7E  B4D8               	btfsc	status,2,c
 15187   002B80  EFC4  F015         	goto	i2u640_41
 15188   002B84  EFC6  F015         	goto	i2u640_40
 15189   002B88                     i2u640_41:
 15190   002B88  EFD3  F015         	goto	i2l6940
 15191   002B8C                     i2u640_40:
 15192   002B8C                     
 15193                           ; BSR set to: 5
 15194                           ;mcc_generated_files/timer/src/tmr2.c: 80:             TMR2_OverflowCallback();
 15195   002B8C  D802               	call	i2u641_48
 15196   002B8E  EFD3  F015         	goto	i2u641_49
 15197   002B92                     i2u641_48:
 15198   002B92  0005               	push	
 15199   002B94  6EFA               	movwf	pclath,c
 15200   002B96  51C6               	movf	_TMR2_OverflowCallback& (0+255),w,b
 15201   002B98  6EFD               	movwf	tosl,c
 15202   002B9A  51C7               	movf	(_TMR2_OverflowCallback+1)& (0+255),w,b
 15203   002B9C  6EFE               	movwf	tosh,c
 15204   002B9E  50F8               	movf	tblptru,w,c
 15205   002BA0  6EFF               	movwf	tosu,c
 15206   002BA2  50FA               	movf	pclath,w,c
 15207   002BA4  0012               	return		;indir
 15208   002BA6                     i2u641_49:
 15209   002BA6                     i2l6940:
 15210                           
 15211                           ;mcc_generated_files/timer/src/tmr2.c: 82:         CountCallBack = 0;
 15212   002BA6  0E00               	movlw	0
 15213   002BA8  0105               	movlb	5	; () banked
 15214   002BAA  6F71               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
 15215   002BAC  0E00               	movlw	0
 15216   002BAE  6F70               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
 15217   002BB0                     
 15218                           ; BSR set to: 5
 15219                           ;mcc_generated_files/timer/src/tmr2.c: 83:         ADCC_StartConversion(channel_ANA5);
 15220   002BB0  0E05               	movlw	5
 15221   002BB2  ECA9  F01A         	call	_ADCC_StartConversion
 15222   002BB6                     i2l1021:
 15223   002BB6  0012               	return		;funcret
 15224   002BB8                     __end_of_TMR2_ISR:
 15225                           	callstack 0
 15226                           
 15227 ;; *************** function _ADCC_StartConversion *****************
 15228 ;; Defined at:
 15229 ;;		line 120 in file "mcc_generated_files/adc/src/adcc.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;  channel         1    wreg     enum E13532
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;  channel         1    0[COMRAM] enum E13532
 15234 ;; Return value:  Size  Location     Type
 15235 ;;                  1    wreg      void 
 15236 ;; Registers used:
 15237 ;;		wreg
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15243 ;;      Params:         0       0       0       0       0       0       0       0       0
 15244 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15245 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15246 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15247 ;;Total ram usage:        1 bytes
 15248 ;; Hardware stack levels used: 1
 15249 ;; This function calls:
 15250 ;;		Nothing
 15251 ;; This function is called by:
 15252 ;;		_TMR2_ISR
 15253 ;; This function uses a non-reentrant model
 15254 ;;
 15255                           
 15256                           	psect	text50
 15257   003552                     __ptext50:
 15258                           	callstack 0
 15259   003552                     _ADCC_StartConversion:
 15260                           	callstack 119
 15261                           
 15262                           ;incstack = 0
 15263                           ;ADCC_StartConversion@channel stored from wreg
 15264   003552  6E01               	movwf	ADCC_StartConversion@channel^(0+1280),c
 15265   003554                     
 15266                           ;mcc_generated_files/adc/src/adcc.c: 124:     ADPCH = channel;
 15267   003554  C501  F3EC         	movff	ADCC_StartConversion@channel,1004	;volatile
 15268   003558                     
 15269                           ;mcc_generated_files/adc/src/adcc.c: 127:     ADCON0bits.ADGO = 1;
 15270   003558  0103               	movlb	3	; () banked
 15271   00355A  81F3               	bsf	243,0,b	;volatile
 15272   00355C                     
 15273                           ; BSR set to: 3
 15274   00355C  0012               	return		;funcret
 15275   00355E                     __end_of_ADCC_StartConversion:
 15276                           	callstack 0
 15277                           
 15278 ;; *************** function _TMR0_OverflowISR *****************
 15279 ;; Defined at:
 15280 ;;		line 166 in file "mcc_generated_files/timer/src/tmr0.c"
 15281 ;; Parameters:    Size  Location     Type
 15282 ;;		None
 15283 ;; Auto vars:     Size  Location     Type
 15284 ;;		None
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  1    wreg      void 
 15287 ;; Registers used:
 15288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15294 ;;      Params:         0       0       0       0       0       0       0       0       0
 15295 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15297 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15298 ;;Total ram usage:        0 bytes
 15299 ;; Hardware stack levels used: 1
 15300 ;; Hardware stack levels required when called: 10
 15301 ;; This function calls:
 15302 ;;		NULL
 15303 ;;		_HandleAutoCloseTimeout
 15304 ;;		_HandleFullSpeedTransitions
 15305 ;;		_TMR0_DefaultOverflowCallback
 15306 ;;		_TMR0_Reload
 15307 ;;		_TMR2_DefaultOverflowCallback
 15308 ;;		_TrackConfigTiming
 15309 ;; This function is called by:
 15310 ;;		_INTERRUPT_InterruptManager
 15311 ;; This function uses a non-reentrant model
 15312 ;;
 15313                           
 15314                           	psect	text51
 15315   002558                     __ptext51:
 15316                           	callstack 0
 15317   002558                     _TMR0_OverflowISR:
 15318                           	callstack 110
 15319   002558                     
 15320                           ;mcc_generated_files/timer/src/tmr0.c: 168:     PIR3bits.TMR0IF = 0;
 15321   002558  9EB6               	bcf	182,7,c	;volatile
 15322   00255A                     
 15323                           ;mcc_generated_files/timer/src/tmr0.c: 170:     TMR0_Reload();
 15324   00255A  EC9B  F01A         	call	_TMR0_Reload	;wreg free
 15325   00255E                     
 15326                           ;mcc_generated_files/timer/src/tmr0.c: 172:     HandleAutoCloseTimeout();
 15327   00255E  ECAE  F017         	call	_HandleAutoCloseTimeout	;wreg free
 15328   002562                     
 15329                           ;mcc_generated_files/timer/src/tmr0.c: 173:     HandleFullSpeedTransitions();
 15330   002562  EC0B  F011         	call	_HandleFullSpeedTransitions	;wreg free
 15331   002566                     
 15332                           ;mcc_generated_files/timer/src/tmr0.c: 174:     if (configFlag && (configMode == CONFIG_
      +                          MODE_OPEN_FULL || configMode == CONFIG_MODE_CLOSE_FULL)) {
 15333   002566  0105               	movlb	5	; () banked
 15334   002568  519A               	movf	_configFlag& (0+255),w,b	;volatile
 15335   00256A  B4D8               	btfsc	status,2,c
 15336   00256C  EFBA  F012         	goto	i2u642_41
 15337   002570  EFBC  F012         	goto	i2u642_40
 15338   002574                     i2u642_41:
 15339   002574  EFCF  F012         	goto	i2l6960
 15340   002578                     i2u642_40:
 15341   002578                     
 15342                           ; BSR set to: 5
 15343   002578  0597               	decf	_configMode& (0+255),w,b	;volatile
 15344   00257A  B4D8               	btfsc	status,2,c
 15345   00257C  EFC2  F012         	goto	i2u643_41
 15346   002580  EFC4  F012         	goto	i2u643_40
 15347   002584                     i2u643_41:
 15348   002584  EFCD  F012         	goto	i2l6958
 15349   002588                     i2u643_40:
 15350   002588                     
 15351                           ; BSR set to: 5
 15352   002588  0E03               	movlw	3
 15353   00258A  1997               	xorwf	_configMode& (0+255),w,b	;volatile
 15354   00258C  A4D8               	btfss	status,2,c
 15355   00258E  EFCB  F012         	goto	i2u644_41
 15356   002592  EFCD  F012         	goto	i2u644_40
 15357   002596                     i2u644_41:
 15358   002596  EFCF  F012         	goto	i2l6960
 15359   00259A                     i2u644_40:
 15360   00259A                     i2l6958:
 15361                           
 15362                           ; BSR set to: 5
 15363                           ;mcc_generated_files/timer/src/tmr0.c: 175:         TrackConfigTiming();
 15364   00259A  EC18  F01B         	call	_TrackConfigTiming	;wreg free
 15365   00259E                     i2l6960:
 15366                           
 15367                           ;mcc_generated_files/timer/src/tmr0.c: 179:     if (TMR0_OverflowCallback) {
 15368   00259E  0105               	movlb	5	; () banked
 15369   0025A0  51C8               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15370   0025A2  11C9               	iorwf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15371   0025A4  B4D8               	btfsc	status,2,c
 15372   0025A6  EFD7  F012         	goto	i2u645_41
 15373   0025AA  EFD9  F012         	goto	i2u645_40
 15374   0025AE                     i2u645_41:
 15375   0025AE  EFE6  F012         	goto	i2l940
 15376   0025B2                     i2u645_40:
 15377   0025B2                     
 15378                           ; BSR set to: 5
 15379                           ;mcc_generated_files/timer/src/tmr0.c: 180:         TMR0_OverflowCallback();
 15380   0025B2  D802               	call	i2u646_48
 15381   0025B4  EFE6  F012         	goto	i2u646_49
 15382   0025B8                     i2u646_48:
 15383   0025B8  0005               	push	
 15384   0025BA  6EFA               	movwf	pclath,c
 15385   0025BC  51C8               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15386   0025BE  6EFD               	movwf	tosl,c
 15387   0025C0  51C9               	movf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15388   0025C2  6EFE               	movwf	tosh,c
 15389   0025C4  50F8               	movf	tblptru,w,c
 15390   0025C6  6EFF               	movwf	tosu,c
 15391   0025C8  50FA               	movf	pclath,w,c
 15392   0025CA  0012               	return		;indir
 15393   0025CC                     i2u646_49:
 15394   0025CC                     i2l940:
 15395   0025CC  0012               	return		;funcret
 15396   0025CE                     __end_of_TMR0_OverflowISR:
 15397                           	callstack 0
 15398                           
 15399 ;; *************** function _TrackConfigTiming *****************
 15400 ;; Defined at:
 15401 ;;		line 161 in file "mcc_generated_files/timer/src/tmr0.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;		None
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;		None
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		status,2, status,0
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15415 ;;      Params:         0       0       0       0       0       0       0       0       0
 15416 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15417 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15418 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15419 ;;Total ram usage:        0 bytes
 15420 ;; Hardware stack levels used: 1
 15421 ;; This function calls:
 15422 ;;		Nothing
 15423 ;; This function is called by:
 15424 ;;		_TMR0_OverflowISR
 15425 ;; This function uses a non-reentrant model
 15426 ;;
 15427                           
 15428                           	psect	text52
 15429   003630                     __ptext52:
 15430                           	callstack 0
 15431   003630                     _TrackConfigTiming:
 15432                           	callstack 119
 15433   003630                     
 15434                           ;mcc_generated_files/timer/src/tmr0.c: 162:     timer0_ms++;
 15435   003630  0105               	movlb	5	; () banked
 15436   003632  4B7A               	infsnz	_timer0_ms& (0+255),f,b	;volatile
 15437   003634  2B7B               	incf	(_timer0_ms+1)& (0+255),f,b	;volatile
 15438   003636                     
 15439                           ; BSR set to: 5
 15440   003636  0012               	return		;funcret
 15441   003638                     __end_of_TrackConfigTiming:
 15442                           	callstack 0
 15443                           
 15444 ;; *************** function _TMR0_DefaultOverflowCallback *****************
 15445 ;; Defined at:
 15446 ;;		line 188 in file "mcc_generated_files/timer/src/tmr0.c"
 15447 ;; Parameters:    Size  Location     Type
 15448 ;;		None
 15449 ;; Auto vars:     Size  Location     Type
 15450 ;;		None
 15451 ;; Return value:  Size  Location     Type
 15452 ;;                  1    wreg      void 
 15453 ;; Registers used:
 15454 ;;		None
 15455 ;; Tracked objects:
 15456 ;;		On entry : 0/0
 15457 ;;		On exit  : 0/0
 15458 ;;		Unchanged: 0/0
 15459 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15460 ;;      Params:         0       0       0       0       0       0       0       0       0
 15461 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15462 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15463 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15464 ;;Total ram usage:        0 bytes
 15465 ;; Hardware stack levels used: 1
 15466 ;; This function calls:
 15467 ;;		Nothing
 15468 ;; This function is called by:
 15469 ;;		_TMR0_Initialize
 15470 ;;		_TMR2_ISR
 15471 ;;		_TMR0_OverflowISR
 15472 ;; This function uses a non-reentrant model
 15473 ;;
 15474                           
 15475                           	psect	text53
 15476   00366A                     __ptext53:
 15477                           	callstack 0
 15478   00366A                     _TMR0_DefaultOverflowCallback:
 15479                           	callstack 119
 15480   00366A  0012               	return		;funcret
 15481   00366C                     __end_of_TMR0_DefaultOverflowCallback:
 15482                           	callstack 0
 15483                           
 15484 ;; *************** function _TMR2_DefaultOverflowCallback *****************
 15485 ;; Defined at:
 15486 ;;		line 91 in file "mcc_generated_files/timer/src/tmr2.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;		None
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		None
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used: 1
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		_TMR2_Initialize
 15510 ;;		_TMR2_ISR
 15511 ;;		_TMR0_OverflowISR
 15512 ;; This function uses a non-reentrant model
 15513 ;;
 15514                           
 15515                           	psect	text54
 15516   00366C                     __ptext54:
 15517                           	callstack 0
 15518   00366C                     _TMR2_DefaultOverflowCallback:
 15519                           	callstack 119
 15520   00366C  0012               	return		;funcret
 15521   00366E                     __end_of_TMR2_DefaultOverflowCallback:
 15522                           	callstack 0
 15523                           
 15524 ;; *************** function _TMR0_Reload *****************
 15525 ;; Defined at:
 15526 ;;		line 125 in file "mcc_generated_files/timer/src/tmr0.c"
 15527 ;; Parameters:    Size  Location     Type
 15528 ;;		None
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;		None
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  1    wreg      void 
 15533 ;; Registers used:
 15534 ;;		wreg, status,2
 15535 ;; Tracked objects:
 15536 ;;		On entry : 0/0
 15537 ;;		On exit  : 0/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15540 ;;      Params:         0       0       0       0       0       0       0       0       0
 15541 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15542 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15543 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15544 ;;Total ram usage:        0 bytes
 15545 ;; Hardware stack levels used: 1
 15546 ;; This function calls:
 15547 ;;		Nothing
 15548 ;; This function is called by:
 15549 ;;		_TMR0_OverflowISR
 15550 ;; This function uses a non-reentrant model
 15551 ;;
 15552                           
 15553                           	psect	text55
 15554   003536                     __ptext55:
 15555                           	callstack 0
 15556   003536                     _TMR0_Reload:
 15557                           	callstack 119
 15558   003536                     
 15559                           ;mcc_generated_files/timer/src/tmr0.c: 126:     TMR0H = timerTMR0ReloadVal16bit >> 8;
 15560   003536  0105               	movlb	5	; () banked
 15561   003538  5177               	movf	(_timerTMR0ReloadVal16bit+1)& (0+255),w,b	;volatile
 15562   00353A  0103               	movlb	3	; () banked
 15563   00353C  6F19               	movwf	25,b	;volatile
 15564   00353E                     
 15565                           ; BSR set to: 3
 15566                           ;mcc_generated_files/timer/src/tmr0.c: 127:     TMR0L = (uint8_t) timerTMR0ReloadVal16bi
      +                          t;
 15567   00353E  C576  F318         	movff	_timerTMR0ReloadVal16bit,792	;volatile
 15568   003542                     
 15569                           ; BSR set to: 3
 15570   003542  0012               	return		;funcret
 15571   003544                     __end_of_TMR0_Reload:
 15572                           	callstack 0
 15573                           
 15574 ;; *************** function _HandleFullSpeedTransitions *****************
 15575 ;; Defined at:
 15576 ;;		line 144 in file "mcc_generated_files/timer/src/tmr0.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      void 
 15583 ;; Registers used:
 15584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15593 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15594 ;;Total ram usage:        0 bytes
 15595 ;; Hardware stack levels used: 1
 15596 ;; Hardware stack levels required when called: 9
 15597 ;; This function calls:
 15598 ;;		_MotorControl
 15599 ;; This function is called by:
 15600 ;;		_TMR0_OverflowISR
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text56
 15605   002216                     __ptext56:
 15606                           	callstack 0
 15607   002216                     _HandleFullSpeedTransitions:
 15608                           	callstack 110
 15609   002216                     
 15610                           ;mcc_generated_files/timer/src/tmr0.c: 145:     if (openFullDuration && motorState == MO
      +                          TOR_OPEN_FULL && ++gateOpenFullMs >= openFullDuration) {
 15611   002216  0105               	movlb	5	; () banked
 15612   002218  5184               	movf	_openFullDuration& (0+255),w,b	;volatile
 15613   00221A  1185               	iorwf	(_openFullDuration+1)& (0+255),w,b	;volatile
 15614   00221C  B4D8               	btfsc	status,2,c
 15615   00221E  EF13  F011         	goto	i2u622_41
 15616   002222  EF15  F011         	goto	i2u622_40
 15617   002226                     i2u622_41:
 15618   002226  EF33  F011         	goto	i2l6848
 15619   00222A                     i2u622_40:
 15620   00222A                     
 15621                           ; BSR set to: 5
 15622   00222A  0E02               	movlw	2
 15623   00222C  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 15624   00222E  A4D8               	btfss	status,2,c
 15625   002230  EF1C  F011         	goto	i2u623_41
 15626   002234  EF1E  F011         	goto	i2u623_40
 15627   002238                     i2u623_41:
 15628   002238  EF33  F011         	goto	i2l6848
 15629   00223C                     i2u623_40:
 15630   00223C                     
 15631                           ; BSR set to: 5
 15632   00223C  4B74               	infsnz	_gateOpenFullMs& (0+255),f,b	;volatile
 15633   00223E  2B75               	incf	(_gateOpenFullMs+1)& (0+255),f,b	;volatile
 15634   002240  5184               	movf	_openFullDuration& (0+255),w,b	;volatile
 15635   002242  5D74               	subwf	_gateOpenFullMs& (0+255),w,b	;volatile
 15636   002244  5185               	movf	(_openFullDuration+1)& (0+255),w,b	;volatile
 15637   002246  5975               	subwfb	(_gateOpenFullMs+1)& (0+255),w,b	;volatile
 15638   002248  A0D8               	btfss	status,0,c
 15639   00224A  EF29  F011         	goto	i2u624_41
 15640   00224E  EF2B  F011         	goto	i2u624_40
 15641   002252                     i2u624_41:
 15642   002252  EF33  F011         	goto	i2l6848
 15643   002256                     i2u624_40:
 15644   002256                     
 15645                           ; BSR set to: 5
 15646                           ;mcc_generated_files/timer/src/tmr0.c: 147:         motorState = MOTOR_OPEN_SLOW;
 15647   002256  0E03               	movlw	3
 15648   002258  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 15649                           
 15650                           ;mcc_generated_files/timer/src/tmr0.c: 148:         gateOpenFullMs = 0;
 15651   00225A  0E00               	movlw	0
 15652   00225C  6F75               	movwf	(_gateOpenFullMs+1)& (0+255),b	;volatile
 15653   00225E  0E00               	movlw	0
 15654   002260  6F74               	movwf	_gateOpenFullMs& (0+255),b	;volatile
 15655   002262                     
 15656                           ; BSR set to: 5
 15657                           ;mcc_generated_files/timer/src/tmr0.c: 149:         MotorControl();
 15658   002262  ECCE  F017         	call	_MotorControl	;wreg free
 15659   002266                     i2l6848:
 15660                           
 15661                           ;mcc_generated_files/timer/src/tmr0.c: 152:     if (closeFullDuration && motorState == M
      +                          OTOR_CLOSE_FULL && ++gateCloseFullMs >= closeFullDuration) {
 15662   002266  0105               	movlb	5	; () banked
 15663   002268  5182               	movf	_closeFullDuration& (0+255),w,b	;volatile
 15664   00226A  1183               	iorwf	(_closeFullDuration+1)& (0+255),w,b	;volatile
 15665   00226C  B4D8               	btfsc	status,2,c
 15666   00226E  EF3B  F011         	goto	i2u625_41
 15667   002272  EF3D  F011         	goto	i2u625_40
 15668   002276                     i2u625_41:
 15669   002276  EF5B  F011         	goto	i2l930
 15670   00227A                     i2u625_40:
 15671   00227A                     
 15672                           ; BSR set to: 5
 15673   00227A  0E04               	movlw	4
 15674   00227C  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 15675   00227E  A4D8               	btfss	status,2,c
 15676   002280  EF44  F011         	goto	i2u626_41
 15677   002284  EF46  F011         	goto	i2u626_40
 15678   002288                     i2u626_41:
 15679   002288  EF5B  F011         	goto	i2l930
 15680   00228C                     i2u626_40:
 15681   00228C                     
 15682                           ; BSR set to: 5
 15683   00228C  4B72               	infsnz	_gateCloseFullMs& (0+255),f,b	;volatile
 15684   00228E  2B73               	incf	(_gateCloseFullMs+1)& (0+255),f,b	;volatile
 15685   002290  5182               	movf	_closeFullDuration& (0+255),w,b	;volatile
 15686   002292  5D72               	subwf	_gateCloseFullMs& (0+255),w,b	;volatile
 15687   002294  5183               	movf	(_closeFullDuration+1)& (0+255),w,b	;volatile
 15688   002296  5973               	subwfb	(_gateCloseFullMs+1)& (0+255),w,b	;volatile
 15689   002298  A0D8               	btfss	status,0,c
 15690   00229A  EF51  F011         	goto	i2u627_41
 15691   00229E  EF53  F011         	goto	i2u627_40
 15692   0022A2                     i2u627_41:
 15693   0022A2  EF5B  F011         	goto	i2l930
 15694   0022A6                     i2u627_40:
 15695   0022A6                     
 15696                           ; BSR set to: 5
 15697                           ;mcc_generated_files/timer/src/tmr0.c: 154:         motorState = MOTOR_CLOSE_SLOW;
 15698   0022A6  0E05               	movlw	5
 15699   0022A8  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 15700                           
 15701                           ;mcc_generated_files/timer/src/tmr0.c: 155:         gateCloseFullMs = 0;
 15702   0022AA  0E00               	movlw	0
 15703   0022AC  6F73               	movwf	(_gateCloseFullMs+1)& (0+255),b	;volatile
 15704   0022AE  0E00               	movlw	0
 15705   0022B0  6F72               	movwf	_gateCloseFullMs& (0+255),b	;volatile
 15706   0022B2                     
 15707                           ; BSR set to: 5
 15708                           ;mcc_generated_files/timer/src/tmr0.c: 156:         MotorControl();
 15709   0022B2  ECCE  F017         	call	_MotorControl	;wreg free
 15710   0022B6                     i2l930:
 15711   0022B6  0012               	return		;funcret
 15712   0022B8                     __end_of_HandleFullSpeedTransitions:
 15713                           	callstack 0
 15714                           
 15715 ;; *************** function _HandleAutoCloseTimeout *****************
 15716 ;; Defined at:
 15717 ;;		line 135 in file "mcc_generated_files/timer/src/tmr0.c"
 15718 ;; Parameters:    Size  Location     Type
 15719 ;;		None
 15720 ;; Auto vars:     Size  Location     Type
 15721 ;;		None
 15722 ;; Return value:  Size  Location     Type
 15723 ;;                  1    wreg      void 
 15724 ;; Registers used:
 15725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15726 ;; Tracked objects:
 15727 ;;		On entry : 0/0
 15728 ;;		On exit  : 0/0
 15729 ;;		Unchanged: 0/0
 15730 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15731 ;;      Params:         0       0       0       0       0       0       0       0       0
 15732 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15733 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15734 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15735 ;;Total ram usage:        0 bytes
 15736 ;; Hardware stack levels used: 1
 15737 ;; Hardware stack levels required when called: 9
 15738 ;; This function calls:
 15739 ;;		_MotorControl
 15740 ;; This function is called by:
 15741 ;;		_TMR0_OverflowISR
 15742 ;; This function uses a non-reentrant model
 15743 ;;
 15744                           
 15745                           	psect	text57
 15746   002F5C                     __ptext57:
 15747                           	callstack 0
 15748   002F5C                     _HandleAutoCloseTimeout:
 15749                           	callstack 110
 15750   002F5C                     
 15751                           ;mcc_generated_files/timer/src/tmr0.c: 136:     if (motorState == MOTOR_OPEN_WAIT_CLOSE 
      +                          && ++gateOpenTimerMs >= timeAuto) {
 15752   002F5C  0E06               	movlw	6
 15753   002F5E  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 15754   002F60  A4D8               	btfss	status,2,c
 15755   002F62  EFB5  F017         	goto	i2u620_41
 15756   002F66  EFB7  F017         	goto	i2u620_40
 15757   002F6A                     i2u620_41:
 15758   002F6A  EFCD  F017         	goto	i2l925
 15759   002F6E                     i2u620_40:
 15760   002F6E  0105               	movlb	5	; () banked
 15761   002F70  4B88               	infsnz	_gateOpenTimerMs& (0+255),f,b	;volatile
 15762   002F72  2B89               	incf	(_gateOpenTimerMs+1)& (0+255),f,b	;volatile
 15763   002F74  5178               	movf	_timeAuto& (0+255),w,b	;volatile
 15764   002F76  5D88               	subwf	_gateOpenTimerMs& (0+255),w,b	;volatile
 15765   002F78  5179               	movf	(_timeAuto+1)& (0+255),w,b	;volatile
 15766   002F7A  5989               	subwfb	(_gateOpenTimerMs+1)& (0+255),w,b	;volatile
 15767   002F7C  A0D8               	btfss	status,0,c
 15768   002F7E  EFC3  F017         	goto	i2u621_41
 15769   002F82  EFC5  F017         	goto	i2u621_40
 15770   002F86                     i2u621_41:
 15771   002F86  EFCD  F017         	goto	i2l925
 15772   002F8A                     i2u621_40:
 15773   002F8A                     
 15774                           ; BSR set to: 5
 15775                           ;mcc_generated_files/timer/src/tmr0.c: 137:         timeoutToClose = 1;
 15776   002F8A  0E01               	movlw	1
 15777   002F8C  6F96               	movwf	_timeoutToClose& (0+255),b	;volatile
 15778                           
 15779                           ;mcc_generated_files/timer/src/tmr0.c: 138:         gateOpenTimerMs = 0;
 15780   002F8E  0E00               	movlw	0
 15781   002F90  6F89               	movwf	(_gateOpenTimerMs+1)& (0+255),b	;volatile
 15782   002F92  0E00               	movlw	0
 15783   002F94  6F88               	movwf	_gateOpenTimerMs& (0+255),b	;volatile
 15784   002F96                     
 15785                           ; BSR set to: 5
 15786                           ;mcc_generated_files/timer/src/tmr0.c: 139:         MotorControl();
 15787   002F96  ECCE  F017         	call	_MotorControl	;wreg free
 15788   002F9A                     i2l925:
 15789   002F9A  0012               	return		;funcret
 15790   002F9C                     __end_of_HandleAutoCloseTimeout:
 15791                           	callstack 0
 15792                           
 15793 ;; *************** function _PIN_MANAGER_IOC *****************
 15794 ;; Defined at:
 15795 ;;		line 150 in file "mcc_generated_files/system/src/pins.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;		None
 15798 ;; Auto vars:     Size  Location     Type
 15799 ;;		None
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  1    wreg      void 
 15802 ;; Registers used:
 15803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15804 ;; Tracked objects:
 15805 ;;		On entry : 0/0
 15806 ;;		On exit  : 0/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15809 ;;      Params:         0       0       0       0       0       0       0       0       0
 15810 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15811 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15812 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15813 ;;Total ram usage:        0 bytes
 15814 ;; Hardware stack levels used: 1
 15815 ;; Hardware stack levels required when called: 10
 15816 ;; This function calls:
 15817 ;;		_BACK_ISR
 15818 ;;		_BUTTON_ISR
 15819 ;;		_DOWN_ISR
 15820 ;;		_ENTER_ISR
 15821 ;;		_GATE_ISR
 15822 ;;		_PHOTOCELL_ISR
 15823 ;;		_UP_ISR
 15824 ;; This function is called by:
 15825 ;;		_INTERRUPT_InterruptManager
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           	psect	text58
 15830   00234C                     __ptext58:
 15831                           	callstack 0
 15832   00234C                     _PIN_MANAGER_IOC:
 15833                           	callstack 110
 15834   00234C                     
 15835                           ;mcc_generated_files/system/src/pins.c: 152:     if (IOCAFbits.IOCAF2 == 1) {
 15836   00234C  0104               	movlb	4	; () banked
 15837   00234E  A507               	btfss	7,2,b	;volatile
 15838   002350  EFAC  F011         	goto	i2u632_41
 15839   002354  EFAE  F011         	goto	i2u632_40
 15840   002358                     i2u632_41:
 15841   002358  EFB0  F011         	goto	i2l6908
 15842   00235C                     i2u632_40:
 15843   00235C                     
 15844                           ; BSR set to: 4
 15845                           ;mcc_generated_files/system/src/pins.c: 153:         DOWN_ISR();
 15846   00235C  EC5B  F013         	call	_DOWN_ISR	;wreg free
 15847   002360                     i2l6908:
 15848                           
 15849                           ;mcc_generated_files/system/src/pins.c: 156:     if (IOCAFbits.IOCAF4 == 1) {
 15850   002360  0104               	movlb	4	; () banked
 15851   002362  A907               	btfss	7,4,b	;volatile
 15852   002364  EFB6  F011         	goto	i2u633_41
 15853   002368  EFB8  F011         	goto	i2u633_40
 15854   00236C                     i2u633_41:
 15855   00236C  EFBA  F011         	goto	i2l6912
 15856   002370                     i2u633_40:
 15857   002370                     
 15858                           ; BSR set to: 4
 15859                           ;mcc_generated_files/system/src/pins.c: 157:         BACK_ISR();
 15860   002370  EC95  F013         	call	_BACK_ISR	;wreg free
 15861   002374                     i2l6912:
 15862                           
 15863                           ;mcc_generated_files/system/src/pins.c: 160:     if (IOCBFbits.IOCBF4 == 1) {
 15864   002374  0104               	movlb	4	; () banked
 15865   002376  A90F               	btfss	15,4,b	;volatile
 15866   002378  EFC0  F011         	goto	i2u634_41
 15867   00237C  EFC2  F011         	goto	i2u634_40
 15868   002380                     i2u634_41:
 15869   002380  EFC4  F011         	goto	i2l6916
 15870   002384                     i2u634_40:
 15871   002384                     
 15872                           ; BSR set to: 4
 15873                           ;mcc_generated_files/system/src/pins.c: 161:         UP_ISR();
 15874   002384  EC21  F013         	call	_UP_ISR	;wreg free
 15875   002388                     i2l6916:
 15876                           
 15877                           ;mcc_generated_files/system/src/pins.c: 164:     if (IOCCFbits.IOCCF0 == 1) {
 15878   002388  0104               	movlb	4	; () banked
 15879   00238A  A117               	btfss	23,0,b	;volatile
 15880   00238C  EFCA  F011         	goto	i2u635_41
 15881   002390  EFCC  F011         	goto	i2u635_40
 15882   002394                     i2u635_41:
 15883   002394  EFCE  F011         	goto	i2l6920
 15884   002398                     i2u635_40:
 15885   002398                     
 15886                           ; BSR set to: 4
 15887                           ;mcc_generated_files/system/src/pins.c: 165:         GATE_ISR();
 15888   002398  EC59  F00B         	call	_GATE_ISR	;wreg free
 15889   00239C                     i2l6920:
 15890                           
 15891                           ;mcc_generated_files/system/src/pins.c: 168:     if (IOCCFbits.IOCCF1 == 1) {
 15892   00239C  0104               	movlb	4	; () banked
 15893   00239E  A317               	btfss	23,1,b	;volatile
 15894   0023A0  EFD4  F011         	goto	i2u636_41
 15895   0023A4  EFD6  F011         	goto	i2u636_40
 15896   0023A8                     i2u636_41:
 15897   0023A8  EFD8  F011         	goto	i2l6924
 15898   0023AC                     i2u636_40:
 15899   0023AC                     
 15900                           ; BSR set to: 4
 15901                           ;mcc_generated_files/system/src/pins.c: 169:         PHOTOCELL_ISR();
 15902   0023AC  EC52  F00F         	call	_PHOTOCELL_ISR	;wreg free
 15903   0023B0                     i2l6924:
 15904                           
 15905                           ;mcc_generated_files/system/src/pins.c: 172:     if (IOCCFbits.IOCCF2 == 1) {
 15906   0023B0  0104               	movlb	4	; () banked
 15907   0023B2  A517               	btfss	23,2,b	;volatile
 15908   0023B4  EFDE  F011         	goto	i2u637_41
 15909   0023B8  EFE0  F011         	goto	i2u637_40
 15910   0023BC                     i2u637_41:
 15911   0023BC  EFE2  F011         	goto	i2l6928
 15912   0023C0                     i2u637_40:
 15913   0023C0                     
 15914                           ; BSR set to: 4
 15915                           ;mcc_generated_files/system/src/pins.c: 173:         BUTTON_ISR();
 15916   0023C0  ECE6  F014         	call	_BUTTON_ISR	;wreg free
 15917   0023C4                     i2l6928:
 15918                           
 15919                           ;mcc_generated_files/system/src/pins.c: 176:     if (IOCCFbits.IOCCF5 == 1) {
 15920   0023C4  0104               	movlb	4	; () banked
 15921   0023C6  AB17               	btfss	23,5,b	;volatile
 15922   0023C8  EFE8  F011         	goto	i2u638_41
 15923   0023CC  EFEA  F011         	goto	i2u638_40
 15924   0023D0                     i2u638_41:
 15925   0023D0  EFEC  F011         	goto	i2l622
 15926   0023D4                     i2u638_40:
 15927   0023D4                     
 15928                           ; BSR set to: 4
 15929                           ;mcc_generated_files/system/src/pins.c: 177:         ENTER_ISR();
 15930   0023D4  EC19  F015         	call	_ENTER_ISR	;wreg free
 15931   0023D8                     i2l622:
 15932   0023D8  0012               	return		;funcret
 15933   0023DA                     __end_of_PIN_MANAGER_IOC:
 15934                           	callstack 0
 15935                           
 15936 ;; *************** function _UP_ISR *****************
 15937 ;; Defined at:
 15938 ;;		line 249 in file "mcc_generated_files/system/src/pins.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;		None
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;		None
 15943 ;; Return value:  Size  Location     Type
 15944 ;;                  1    wreg      void 
 15945 ;; Registers used:
 15946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15947 ;; Tracked objects:
 15948 ;;		On entry : 0/0
 15949 ;;		On exit  : 0/0
 15950 ;;		Unchanged: 0/0
 15951 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 15952 ;;      Params:         0       0       0       0       0       0       0       0       0
 15953 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15954 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15955 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15956 ;;Total ram usage:        2 bytes
 15957 ;; Hardware stack levels used: 1
 15958 ;; Hardware stack levels required when called: 5
 15959 ;; This function calls:
 15960 ;;		NULL
 15961 ;;		_Menu_HandleUp
 15962 ;;		_UP_DefaultInterruptHandler
 15963 ;; This function is called by:
 15964 ;;		_PIN_MANAGER_IOC
 15965 ;; This function uses a non-reentrant model
 15966 ;;
 15967                           
 15968                           	psect	text59
 15969   002642                     __ptext59:
 15970                           	callstack 0
 15971   002642                     _UP_ISR:
 15972                           	callstack 114
 15973   002642                     
 15974                           ;mcc_generated_files/system/src/pins.c: 251:      _delay((unsigned long)((20)*(64000000U
      +                          /4000.0)));
 15975   002642  0E02               	movlw	2
 15976   002644  6E1A               	movwf	(??_UP_ISR+1)^(0+1280),c
 15977   002646  0EA0               	movlw	160
 15978   002648  6E19               	movwf	??_UP_ISR^(0+1280),c
 15979   00264A  0E92               	movlw	146
 15980   00264C                     i2u692_47:
 15981   00264C  2EE8               	decfsz	wreg,f,c
 15982   00264E  D7FE               	bra	i2u692_47
 15983   002650  2E19               	decfsz	??_UP_ISR^(0+1280),f,c
 15984   002652  D7FC               	bra	i2u692_47
 15985   002654  2E1A               	decfsz	(??_UP_ISR+1)^(0+1280),f,c
 15986   002656  D7FA               	bra	i2u692_47
 15987   002658  D000               	nop2	
 15988   00265A                     i2l653:
 15989   00265A  B8CF               	btfsc	207,4,c	;volatile
 15990   00265C  EF32  F013         	goto	i2u595_41
 15991   002660  EF34  F013         	goto	i2u595_40
 15992   002664                     i2u595_41:
 15993   002664  EF2D  F013         	goto	i2l653
 15994   002668                     i2u595_40:
 15995   002668                     
 15996                           ;mcc_generated_files/system/src/pins.c: 253:     IOCBFbits.IOCBF4 = 0;
 15997   002668  0104               	movlb	4	; () banked
 15998   00266A  990F               	bcf	15,4,b	;volatile
 15999   00266C                     
 16000                           ; BSR set to: 4
 16001                           ;mcc_generated_files/system/src/pins.c: 255:     if (!menuMode)
 16002   00266C  0105               	movlb	5	; () banked
 16003   00266E  519B               	movf	_menuMode& (0+255),w,b	;volatile
 16004   002670  A4D8               	btfss	status,2,c
 16005   002672  EF3D  F013         	goto	i2u596_41
 16006   002676  EF3F  F013         	goto	i2u596_40
 16007   00267A                     i2u596_41:
 16008   00267A  EF41  F013         	goto	i2l6744
 16009   00267E                     i2u596_40:
 16010   00267E  EF5A  F013         	goto	i2l657
 16011   002682                     i2l6744:
 16012                           
 16013                           ; BSR set to: 5
 16014                           ;mcc_generated_files/system/src/pins.c: 259:     Menu_HandleUp();
 16015   002682  EC70  F00D         	call	_Menu_HandleUp	;wreg free
 16016   002686                     
 16017                           ;mcc_generated_files/system/src/pins.c: 262:     if (UP_InterruptHandler) {
 16018   002686  0105               	movlb	5	; () banked
 16019   002688  51D2               	movf	_UP_InterruptHandler& (0+255),w,b
 16020   00268A  11D3               	iorwf	(_UP_InterruptHandler+1)& (0+255),w,b
 16021   00268C  B4D8               	btfsc	status,2,c
 16022   00268E  EF4B  F013         	goto	i2u597_41
 16023   002692  EF4D  F013         	goto	i2u597_40
 16024   002696                     i2u597_41:
 16025   002696  EF5A  F013         	goto	i2l657
 16026   00269A                     i2u597_40:
 16027   00269A                     
 16028                           ; BSR set to: 5
 16029                           ;mcc_generated_files/system/src/pins.c: 263:         UP_InterruptHandler();
 16030   00269A  D802               	call	i2u598_48
 16031   00269C  EF5A  F013         	goto	i2u598_49
 16032   0026A0                     i2u598_48:
 16033   0026A0  0005               	push	
 16034   0026A2  6EFA               	movwf	pclath,c
 16035   0026A4  51D2               	movf	_UP_InterruptHandler& (0+255),w,b
 16036   0026A6  6EFD               	movwf	tosl,c
 16037   0026A8  51D3               	movf	(_UP_InterruptHandler+1)& (0+255),w,b
 16038   0026AA  6EFE               	movwf	tosh,c
 16039   0026AC  50F8               	movf	tblptru,w,c
 16040   0026AE  6EFF               	movwf	tosu,c
 16041   0026B0  50FA               	movf	pclath,w,c
 16042   0026B2  0012               	return		;indir
 16043   0026B4                     i2u598_49:
 16044   0026B4                     i2l657:
 16045   0026B4  0012               	return		;funcret
 16046   0026B6                     __end_of_UP_ISR:
 16047                           	callstack 0
 16048                           
 16049 ;; *************** function _UP_DefaultInterruptHandler *****************
 16050 ;; Defined at:
 16051 ;;		line 278 in file "mcc_generated_files/system/src/pins.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;		None
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;		None
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  1    wreg      void 
 16058 ;; Registers used:
 16059 ;;		None
 16060 ;; Tracked objects:
 16061 ;;		On entry : 0/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 16065 ;;      Params:         0       0       0       0       0       0       0       0       0
 16066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16069 ;;Total ram usage:        0 bytes
 16070 ;; Hardware stack levels used: 1
 16071 ;; This function calls:
 16072 ;;		Nothing
 16073 ;; This function is called by:
 16074 ;;		_PIN_MANAGER_Initialize
 16075 ;;		_UP_ISR
 16076 ;; This function uses a non-reentrant model
 16077 ;;
 16078                           
 16079                           	psect	text60
 16080   00366E                     __ptext60:
 16081                           	callstack 0
 16082   00366E                     _UP_DefaultInterruptHandler:
 16083                           	callstack 118
 16084   00366E  0012               	return		;funcret
 16085   003670                     __end_of_UP_DefaultInterruptHandler:
 16086                           	callstack 0
 16087                           
 16088 ;; *************** function _Menu_HandleUp *****************
 16089 ;; Defined at:
 16090 ;;		line 244 in file "menu.c"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;		None
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      void 
 16097 ;; Registers used:
 16098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 16104 ;;      Params:         0       0       0       0       0       0       0       0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16106 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16107 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16108 ;;Total ram usage:        0 bytes
 16109 ;; Hardware stack levels used: 1
 16110 ;; Hardware stack levels required when called: 4
 16111 ;; This function calls:
 16112 ;;		_Menu_AdjustOvercurrent
 16113 ;;		_Menu_AdjustSpeed
 16114 ;;		_Menu_AdjustTime
 16115 ;;		_Menu_PrintCurrentOption
 16116 ;; This function is called by:
 16117 ;;		_UP_ISR
 16118 ;; This function uses a non-reentrant model
 16119 ;;
 16120                           
 16121                           	psect	text61
 16122   001AE0                     __ptext61:
 16123                           	callstack 0
 16124   001AE0                     _Menu_HandleUp:
 16125                           	callstack 114
 16126   001AE0                     
 16127                           ;menu.c: 245:     if (systemState == STATE_MENU) {
 16128   001AE0  045B               	decf	_systemState^(0+1280),w,c	;volatile
 16129   001AE2  A4D8               	btfss	status,2,c
 16130   001AE4  EF76  F00D         	goto	i2u463_41
 16131   001AE8  EF78  F00D         	goto	i2u463_40
 16132   001AEC                     i2u463_41:
 16133   001AEC  EF8A  F00D         	goto	i2l5752
 16134   001AF0                     i2u463_40:
 16135   001AF0                     
 16136                           ;menu.c: 246:         if (currentOption == 0) {
 16137   001AF0  0105               	movlb	5	; () banked
 16138   001AF2  5192               	movf	_currentOption& (0+255),w,b
 16139   001AF4  A4D8               	btfss	status,2,c
 16140   001AF6  EF7F  F00D         	goto	i2u464_41
 16141   001AFA  EF81  F00D         	goto	i2u464_40
 16142   001AFE                     i2u464_41:
 16143   001AFE  EF85  F00D         	goto	i2l5748
 16144   001B02                     i2u464_40:
 16145   001B02                     
 16146                           ; BSR set to: 5
 16147                           ;menu.c: 247:             currentOption = MENU_OPTION_COUNT - 1;
 16148   001B02  0E04               	movlw	4
 16149   001B04  6F92               	movwf	_currentOption& (0+255),b
 16150                           
 16151                           ;menu.c: 248:         } else {
 16152   001B06  EF86  F00D         	goto	i2l5750
 16153   001B0A                     i2l5748:
 16154                           
 16155                           ; BSR set to: 5
 16156                           ;menu.c: 249:             currentOption--;
 16157   001B0A  0792               	decf	_currentOption& (0+255),f,b
 16158   001B0C                     i2l5750:
 16159                           
 16160                           ; BSR set to: 5
 16161                           ;menu.c: 251:         Menu_PrintCurrentOption();
 16162   001B0C  ECE3  F00A         	call	_Menu_PrintCurrentOption	;wreg free
 16163                           
 16164                           ;menu.c: 252:     } else if (systemState == STATE_CONFIG && currentOption == MENU_OPTION
      +                          _OVERCURRENT) {
 16165   001B10  EFD1  F00D         	goto	i2l1727
 16166   001B14                     i2l5752:
 16167   001B14  0E02               	movlw	2
 16168   001B16  185B               	xorwf	_systemState^(0+1280),w,c	;volatile
 16169   001B18  A4D8               	btfss	status,2,c
 16170   001B1A  EF91  F00D         	goto	i2u465_41
 16171   001B1E  EF93  F00D         	goto	i2u465_40
 16172   001B22                     i2u465_41:
 16173   001B22  EFA2  F00D         	goto	i2l5758
 16174   001B26                     i2u465_40:
 16175   001B26  0E02               	movlw	2
 16176   001B28  0105               	movlb	5	; () banked
 16177   001B2A  1992               	xorwf	_currentOption& (0+255),w,b
 16178   001B2C  A4D8               	btfss	status,2,c
 16179   001B2E  EF9B  F00D         	goto	i2u466_41
 16180   001B32  EF9D  F00D         	goto	i2u466_40
 16181   001B36                     i2u466_41:
 16182   001B36  EFA2  F00D         	goto	i2l5758
 16183   001B3A                     i2u466_40:
 16184   001B3A                     
 16185                           ; BSR set to: 5
 16186                           ;menu.c: 253:         Menu_AdjustOvercurrent(1);
 16187   001B3A  0E01               	movlw	1
 16188   001B3C  EC05  F010         	call	_Menu_AdjustOvercurrent
 16189                           
 16190                           ;menu.c: 254:     } else if (systemState == STATE_CONFIG && currentOption == MENU_OPTION
      +                          _SPEED) {
 16191   001B40  EFD1  F00D         	goto	i2l1727
 16192   001B44                     i2l5758:
 16193   001B44  0E02               	movlw	2
 16194   001B46  185B               	xorwf	_systemState^(0+1280),w,c	;volatile
 16195   001B48  A4D8               	btfss	status,2,c
 16196   001B4A  EFA9  F00D         	goto	i2u467_41
 16197   001B4E  EFAB  F00D         	goto	i2u467_40
 16198   001B52                     i2u467_41:
 16199   001B52  EFB9  F00D         	goto	i2l5764
 16200   001B56                     i2u467_40:
 16201   001B56  0105               	movlb	5	; () banked
 16202   001B58  5192               	movf	_currentOption& (0+255),w,b
 16203   001B5A  A4D8               	btfss	status,2,c
 16204   001B5C  EFB2  F00D         	goto	i2u468_41
 16205   001B60  EFB4  F00D         	goto	i2u468_40
 16206   001B64                     i2u468_41:
 16207   001B64  EFB9  F00D         	goto	i2l5764
 16208   001B68                     i2u468_40:
 16209   001B68                     
 16210                           ; BSR set to: 5
 16211                           ;menu.c: 255:         Menu_AdjustSpeed(1);
 16212   001B68  0E01               	movlw	1
 16213   001B6A  EC5C  F011         	call	_Menu_AdjustSpeed
 16214                           
 16215                           ;menu.c: 256:     } else if (systemState == STATE_CONFIG && currentOption == MENU_OPTION
      +                          _TIME) {
 16216   001B6E  EFD1  F00D         	goto	i2l1727
 16217   001B72                     i2l5764:
 16218   001B72  0E02               	movlw	2
 16219   001B74  185B               	xorwf	_systemState^(0+1280),w,c	;volatile
 16220   001B76  A4D8               	btfss	status,2,c
 16221   001B78  EFC0  F00D         	goto	i2u469_41
 16222   001B7C  EFC2  F00D         	goto	i2u469_40
 16223   001B80                     i2u469_41:
 16224   001B80  EFD1  F00D         	goto	i2l1723
 16225   001B84                     i2u469_40:
 16226   001B84  0E03               	movlw	3
 16227   001B86  0105               	movlb	5	; () banked
 16228   001B88  1992               	xorwf	_currentOption& (0+255),w,b
 16229   001B8A  A4D8               	btfss	status,2,c
 16230   001B8C  EFCA  F00D         	goto	i2u470_41
 16231   001B90  EFCC  F00D         	goto	i2u470_40
 16232   001B94                     i2u470_41:
 16233   001B94  EFD1  F00D         	goto	i2l1723
 16234   001B98                     i2u470_40:
 16235   001B98                     
 16236                           ; BSR set to: 5
 16237                           ;menu.c: 257:         Menu_AdjustTime(1);
 16238   001B98  0E01               	movlw	1
 16239   001B9A  ECAD  F00F         	call	_Menu_AdjustTime
 16240   001B9E  EFD1  F00D         	goto	i2l1727
 16241   001BA2                     i2l1723:
 16242   001BA2                     i2l1727:
 16243   001BA2  0012               	return		;funcret
 16244   001BA4                     __end_of_Menu_HandleUp:
 16245                           	callstack 0
 16246                           
 16247 ;; *************** function _PHOTOCELL_ISR *****************
 16248 ;; Defined at:
 16249 ;;		line 337 in file "mcc_generated_files/system/src/pins.c"
 16250 ;; Parameters:    Size  Location     Type
 16251 ;;		None
 16252 ;; Auto vars:     Size  Location     Type
 16253 ;;		None
 16254 ;; Return value:  Size  Location     Type
 16255 ;;                  1    wreg      void 
 16256 ;; Registers used:
 16257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16258 ;; Tracked objects:
 16259 ;;		On entry : 0/0
 16260 ;;		On exit  : 0/0
 16261 ;;		Unchanged: 0/0
 16262 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 16263 ;;      Params:         0       0       0       0       0       0       0       0       0
 16264 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16265 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16266 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16267 ;;Total ram usage:        2 bytes
 16268 ;; Hardware stack levels used: 1
 16269 ;; Hardware stack levels required when called: 9
 16270 ;; This function calls:
 16271 ;;		_MotorControl
 16272 ;; This function is called by:
 16273 ;;		_PIN_MANAGER_IOC
 16274 ;; This function uses a non-reentrant model
 16275 ;;
 16276                           
 16277                           	psect	text62
 16278   001EA4                     __ptext62:
 16279                           	callstack 0
 16280   001EA4                     _PHOTOCELL_ISR:
 16281                           	callstack 110
 16282   001EA4                     
 16283                           ;mcc_generated_files/system/src/pins.c: 339:      _delay((unsigned long)((20)*(64000000U
      +                          /4000.0)));
 16284   001EA4  0E02               	movlw	2
 16285   001EA6  6E22               	movwf	(??_PHOTOCELL_ISR+1)^(0+1280),c
 16286   001EA8  0EA0               	movlw	160
 16287   001EAA  6E21               	movwf	??_PHOTOCELL_ISR^(0+1280),c
 16288   001EAC  0E92               	movlw	146
 16289   001EAE                     i2u693_47:
 16290   001EAE  2EE8               	decfsz	wreg,f,c
 16291   001EB0  D7FE               	bra	i2u693_47
 16292   001EB2  2E21               	decfsz	??_PHOTOCELL_ISR^(0+1280),f,c
 16293   001EB4  D7FC               	bra	i2u693_47
 16294   001EB6  2E22               	decfsz	(??_PHOTOCELL_ISR+1)^(0+1280),f,c
 16295   001EB8  D7FA               	bra	i2u693_47
 16296   001EBA  D000               	nop2	
 16297   001EBC                     i2l683:
 16298   001EBC  B2D0               	btfsc	208,1,c	;volatile
 16299   001EBE  EF63  F00F         	goto	i2u608_41
 16300   001EC2  EF65  F00F         	goto	i2u608_40
 16301   001EC6                     i2u608_41:
 16302   001EC6  EF5E  F00F         	goto	i2l683
 16303   001ECA                     i2u608_40:
 16304   001ECA                     
 16305                           ;mcc_generated_files/system/src/pins.c: 341:     IOCCFbits.IOCCF1 = 0;
 16306   001ECA  0104               	movlb	4	; () banked
 16307   001ECC  9317               	bcf	23,1,b	;volatile
 16308   001ECE                     
 16309                           ; BSR set to: 4
 16310                           ;mcc_generated_files/system/src/pins.c: 343:     if (configFlag)
 16311   001ECE  0105               	movlb	5	; () banked
 16312   001ED0  519A               	movf	_configFlag& (0+255),w,b	;volatile
 16313   001ED2  B4D8               	btfsc	status,2,c
 16314   001ED4  EF6E  F00F         	goto	i2u609_41
 16315   001ED8  EF70  F00F         	goto	i2u609_40
 16316   001EDC                     i2u609_41:
 16317   001EDC  EF72  F00F         	goto	i2l686
 16318   001EE0                     i2u609_40:
 16319   001EE0  EFAC  F00F         	goto	i2l687
 16320   001EE4                     i2l686:
 16321                           
 16322                           ; BSR set to: 5
 16323                           ;mcc_generated_files/system/src/pins.c: 346:     if (!PORTCbits.RC1) {
 16324   001EE4  B2D0               	btfsc	208,1,c	;volatile
 16325   001EE6  EF77  F00F         	goto	i2u610_41
 16326   001EEA  EF79  F00F         	goto	i2u610_40
 16327   001EEE                     i2u610_41:
 16328   001EEE  EFAA  F00F         	goto	i2l6798
 16329   001EF2                     i2u610_40:
 16330   001EF2                     
 16331                           ; BSR set to: 5
 16332                           ;mcc_generated_files/system/src/pins.c: 347:         _delay((unsigned long)((20)*(640000
      +                          00U/4000.0)));
 16333   001EF2  0E02               	movlw	2
 16334   001EF4  6E22               	movwf	(??_PHOTOCELL_ISR+1)^(0+1280),c
 16335   001EF6  0EA0               	movlw	160
 16336   001EF8  6E21               	movwf	??_PHOTOCELL_ISR^(0+1280),c
 16337   001EFA  0E92               	movlw	146
 16338   001EFC                     i2u694_47:
 16339   001EFC  2EE8               	decfsz	wreg,f,c
 16340   001EFE  D7FE               	bra	i2u694_47
 16341   001F00  2E21               	decfsz	??_PHOTOCELL_ISR^(0+1280),f,c
 16342   001F02  D7FC               	bra	i2u694_47
 16343   001F04  2E22               	decfsz	(??_PHOTOCELL_ISR+1)^(0+1280),f,c
 16344   001F06  D7FA               	bra	i2u694_47
 16345   001F08  D000               	nop2	
 16346   001F0A                     
 16347                           ;mcc_generated_files/system/src/pins.c: 349:         if (motorState == MOTOR_CLOSE_FULL 
      +                          || motorState == MOTOR_CLOSE_SLOW) {
 16348   001F0A  0E04               	movlw	4
 16349   001F0C  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 16350   001F0E  B4D8               	btfsc	status,2,c
 16351   001F10  EF8C  F00F         	goto	i2u611_41
 16352   001F14  EF8E  F00F         	goto	i2u611_40
 16353   001F18                     i2u611_41:
 16354   001F18  EF97  F00F         	goto	i2l6792
 16355   001F1C                     i2u611_40:
 16356   001F1C  0E05               	movlw	5
 16357   001F1E  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 16358   001F20  A4D8               	btfss	status,2,c
 16359   001F22  EF95  F00F         	goto	i2u612_41
 16360   001F26  EF97  F00F         	goto	i2u612_40
 16361   001F2A                     i2u612_41:
 16362   001F2A  EF9C  F00F         	goto	i2l6794
 16363   001F2E                     i2u612_40:
 16364   001F2E                     i2l6792:
 16365                           
 16366                           ;mcc_generated_files/system/src/pins.c: 350:             emergencyFlag = 1;
 16367   001F2E  0E00               	movlw	0
 16368   001F30  0105               	movlb	5	; () banked
 16369   001F32  6F8B               	movwf	(_emergencyFlag+1)& (0+255),b	;volatile
 16370   001F34  0E01               	movlw	1
 16371   001F36  6F8A               	movwf	_emergencyFlag& (0+255),b	;volatile
 16372   001F38                     i2l6794:
 16373   001F38  0E06               	movlw	6
 16374   001F3A  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 16375   001F3C  A4D8               	btfss	status,2,c
 16376   001F3E  EFA3  F00F         	goto	i2u613_41
 16377   001F42  EFA5  F00F         	goto	i2u613_40
 16378   001F46                     i2u613_41:
 16379   001F46  EFAA  F00F         	goto	i2l6798
 16380   001F4A                     i2u613_40:
 16381   001F4A                     
 16382                           ;mcc_generated_files/system/src/pins.c: 353:             gateOpenTimerMs = 0;
 16383   001F4A  0E00               	movlw	0
 16384   001F4C  0105               	movlb	5	; () banked
 16385   001F4E  6F89               	movwf	(_gateOpenTimerMs+1)& (0+255),b	;volatile
 16386   001F50  0E00               	movlw	0
 16387   001F52  6F88               	movwf	_gateOpenTimerMs& (0+255),b	;volatile
 16388   001F54                     i2l6798:
 16389                           
 16390                           ;mcc_generated_files/system/src/pins.c: 357:     MotorControl();
 16391   001F54  ECCE  F017         	call	_MotorControl	;wreg free
 16392   001F58                     i2l687:
 16393   001F58  0012               	return		;funcret
 16394   001F5A                     __end_of_PHOTOCELL_ISR:
 16395                           	callstack 0
 16396                           
 16397 ;; *************** function _GATE_ISR *****************
 16398 ;; Defined at:
 16399 ;;		line 286 in file "mcc_generated_files/system/src/pins.c"
 16400 ;; Parameters:    Size  Location     Type
 16401 ;;		None
 16402 ;; Auto vars:     Size  Location     Type
 16403 ;;		None
 16404 ;; Return value:  Size  Location     Type
 16405 ;;                  1    wreg      void 
 16406 ;; Registers used:
 16407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16408 ;; Tracked objects:
 16409 ;;		On entry : 0/0
 16410 ;;		On exit  : 0/0
 16411 ;;		Unchanged: 0/0
 16412 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 16413 ;;      Params:         0       0       0       0       0       0       0       0       0
 16414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16415 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16416 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16417 ;;Total ram usage:        2 bytes
 16418 ;; Hardware stack levels used: 1
 16419 ;; Hardware stack levels required when called: 9
 16420 ;; This function calls:
 16421 ;;		_MotorControl
 16422 ;; This function is called by:
 16423 ;;		_PIN_MANAGER_IOC
 16424 ;; This function uses a non-reentrant model
 16425 ;;
 16426                           
 16427                           	psect	text63
 16428   0016B2                     __ptext63:
 16429                           	callstack 0
 16430   0016B2                     _GATE_ISR:
 16431                           	callstack 110
 16432   0016B2                     
 16433                           ;mcc_generated_files/system/src/pins.c: 288:      _delay((unsigned long)((20)*(64000000U
      +                          /4000.0)));
 16434   0016B2  0E02               	movlw	2
 16435   0016B4  6E22               	movwf	(??_GATE_ISR+1)^(0+1280),c
 16436   0016B6  0EA0               	movlw	160
 16437   0016B8  6E21               	movwf	??_GATE_ISR^(0+1280),c
 16438   0016BA  0E92               	movlw	146
 16439   0016BC                     i2u695_47:
 16440   0016BC  2EE8               	decfsz	wreg,f,c
 16441   0016BE  D7FE               	bra	i2u695_47
 16442   0016C0  2E21               	decfsz	??_GATE_ISR^(0+1280),f,c
 16443   0016C2  D7FC               	bra	i2u695_47
 16444   0016C4  2E22               	decfsz	(??_GATE_ISR+1)^(0+1280),f,c
 16445   0016C6  D7FA               	bra	i2u695_47
 16446   0016C8  D000               	nop2	
 16447   0016CA                     i2l667:
 16448   0016CA  B0D0               	btfsc	208,0,c	;volatile
 16449   0016CC  EF6A  F00B         	goto	i2u599_41
 16450   0016D0  EF6C  F00B         	goto	i2u599_40
 16451   0016D4                     i2u599_41:
 16452   0016D4  EF65  F00B         	goto	i2l667
 16453   0016D8                     i2u599_40:
 16454   0016D8                     
 16455                           ;mcc_generated_files/system/src/pins.c: 290:     IOCCFbits.IOCCF0 = 0;
 16456   0016D8  0104               	movlb	4	; () banked
 16457   0016DA  9117               	bcf	23,0,b	;volatile
 16458   0016DC                     
 16459                           ; BSR set to: 4
 16460                           ;mcc_generated_files/system/src/pins.c: 292:     if (menuMode && userRequest)
 16461   0016DC  0105               	movlb	5	; () banked
 16462   0016DE  519B               	movf	_menuMode& (0+255),w,b	;volatile
 16463   0016E0  B4D8               	btfsc	status,2,c
 16464   0016E2  EF75  F00B         	goto	i2u600_41
 16465   0016E6  EF77  F00B         	goto	i2u600_40
 16466   0016EA                     i2u600_41:
 16467   0016EA  EF82  F00B         	goto	i2l6758
 16468   0016EE                     i2u600_40:
 16469   0016EE                     
 16470                           ; BSR set to: 5
 16471   0016EE  518E               	movf	_userRequest& (0+255),w,b	;volatile
 16472   0016F0  118F               	iorwf	(_userRequest+1)& (0+255),w,b	;volatile
 16473   0016F2  B4D8               	btfsc	status,2,c
 16474   0016F4  EF7E  F00B         	goto	i2u601_41
 16475   0016F8  EF80  F00B         	goto	i2u601_40
 16476   0016FC                     i2u601_41:
 16477   0016FC  EF82  F00B         	goto	i2l6758
 16478   001700                     i2u601_40:
 16479   001700  EFCB  F00B         	goto	i2l671
 16480   001704                     i2l6758:
 16481                           
 16482                           ; BSR set to: 5
 16483                           ;mcc_generated_files/system/src/pins.c: 296:     if (motorState == MOTOR_OPEN_SLOW && mo
      +                          torIsRunning) {
 16484   001704  0E03               	movlw	3
 16485   001706  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 16486   001708  A4D8               	btfss	status,2,c
 16487   00170A  EF89  F00B         	goto	i2u602_41
 16488   00170E  EF8B  F00B         	goto	i2u602_40
 16489   001712                     i2u602_41:
 16490   001712  EF98  F00B         	goto	i2l6764
 16491   001716                     i2u602_40:
 16492   001716                     
 16493                           ; BSR set to: 5
 16494   001716  518C               	movf	_motorIsRunning& (0+255),w,b	;volatile
 16495   001718  118D               	iorwf	(_motorIsRunning+1)& (0+255),w,b	;volatile
 16496   00171A  B4D8               	btfsc	status,2,c
 16497   00171C  EF92  F00B         	goto	i2u603_41
 16498   001720  EF94  F00B         	goto	i2u603_40
 16499   001724                     i2u603_41:
 16500   001724  EF98  F00B         	goto	i2l6764
 16501   001728                     i2u603_40:
 16502   001728                     
 16503                           ; BSR set to: 5
 16504                           ;mcc_generated_files/system/src/pins.c: 297:         gateState = GATE_OPEN;
 16505   001728  0E01               	movlw	1
 16506   00172A  6E5D               	movwf	_gateState^(0+1280),c	;volatile
 16507                           
 16508                           ;mcc_generated_files/system/src/pins.c: 298:         motorState = MOTOR_OPEN_WAIT_CLOSE;
 16509   00172C  0E06               	movlw	6
 16510   00172E  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 16511   001730                     i2l6764:
 16512                           
 16513                           ; BSR set to: 5
 16514                           ;mcc_generated_files/system/src/pins.c: 302:     if (motorState == MOTOR_CLOSE_SLOW && m
      +                          otorIsRunning) {
 16515   001730  0E05               	movlw	5
 16516   001732  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 16517   001734  A4D8               	btfss	status,2,c
 16518   001736  EF9F  F00B         	goto	i2u604_41
 16519   00173A  EFA1  F00B         	goto	i2u604_40
 16520   00173E                     i2u604_41:
 16521   00173E  EFAC  F00B         	goto	i2l6770
 16522   001742                     i2u604_40:
 16523   001742                     
 16524                           ; BSR set to: 5
 16525   001742  518C               	movf	_motorIsRunning& (0+255),w,b	;volatile
 16526   001744  118D               	iorwf	(_motorIsRunning+1)& (0+255),w,b	;volatile
 16527   001746  B4D8               	btfsc	status,2,c
 16528   001748  EFA8  F00B         	goto	i2u605_41
 16529   00174C  EFAA  F00B         	goto	i2u605_40
 16530   001750                     i2u605_41:
 16531   001750  EFAC  F00B         	goto	i2l6770
 16532   001754                     i2u605_40:
 16533   001754                     
 16534                           ; BSR set to: 5
 16535                           ;mcc_generated_files/system/src/pins.c: 303:         gateState = GATE_CLOSE;
 16536   001754  0E02               	movlw	2
 16537   001756  6E5D               	movwf	_gateState^(0+1280),c	;volatile
 16538   001758                     i2l6770:
 16539                           
 16540                           ; BSR set to: 5
 16541                           ;mcc_generated_files/system/src/pins.c: 307:     if (emergencyFlag && motorIsRunning) {
 16542   001758  518A               	movf	_emergencyFlag& (0+255),w,b	;volatile
 16543   00175A  118B               	iorwf	(_emergencyFlag+1)& (0+255),w,b	;volatile
 16544   00175C  B4D8               	btfsc	status,2,c
 16545   00175E  EFB3  F00B         	goto	i2u606_41
 16546   001762  EFB5  F00B         	goto	i2u606_40
 16547   001766                     i2u606_41:
 16548   001766  EFC6  F00B         	goto	i2l6776
 16549   00176A                     i2u606_40:
 16550   00176A                     
 16551                           ; BSR set to: 5
 16552   00176A  518C               	movf	_motorIsRunning& (0+255),w,b	;volatile
 16553   00176C  118D               	iorwf	(_motorIsRunning+1)& (0+255),w,b	;volatile
 16554   00176E  B4D8               	btfsc	status,2,c
 16555   001770  EFBC  F00B         	goto	i2u607_41
 16556   001774  EFBE  F00B         	goto	i2u607_40
 16557   001778                     i2u607_41:
 16558   001778  EFC6  F00B         	goto	i2l6776
 16559   00177C                     i2u607_40:
 16560   00177C                     
 16561                           ; BSR set to: 5
 16562                           ;mcc_generated_files/system/src/pins.c: 308:         gateState = GATE_OPEN;
 16563   00177C  0E01               	movlw	1
 16564   00177E  6E5D               	movwf	_gateState^(0+1280),c	;volatile
 16565                           
 16566                           ;mcc_generated_files/system/src/pins.c: 309:         motorState = MOTOR_OPEN_WAIT_CLOSE;
 16567   001780  0E06               	movlw	6
 16568   001782  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 16569                           
 16570                           ;mcc_generated_files/system/src/pins.c: 311:         emergencyFlag = 0;
 16571   001784  0E00               	movlw	0
 16572   001786  6F8B               	movwf	(_emergencyFlag+1)& (0+255),b	;volatile
 16573   001788  0E00               	movlw	0
 16574   00178A  6F8A               	movwf	_emergencyFlag& (0+255),b	;volatile
 16575   00178C                     i2l6776:
 16576                           
 16577                           ; BSR set to: 5
 16578                           ;mcc_generated_files/system/src/pins.c: 314:     lastGateState = gateState;
 16579   00178C  C55D  F5C1         	movff	_gateState,_lastGateState	;volatile
 16580   001790  6BC2               	clrf	(_lastGateState+1)& (0+255),b
 16581   001792                     
 16582                           ; BSR set to: 5
 16583                           ;mcc_generated_files/system/src/pins.c: 315:     MotorControl();
 16584   001792  ECCE  F017         	call	_MotorControl	;wreg free
 16585   001796                     i2l671:
 16586   001796  0012               	return		;funcret
 16587   001798                     __end_of_GATE_ISR:
 16588                           	callstack 0
 16589                           
 16590 ;; *************** function _ENTER_ISR *****************
 16591 ;; Defined at:
 16592 ;;		line 420 in file "mcc_generated_files/system/src/pins.c"
 16593 ;; Parameters:    Size  Location     Type
 16594 ;;		None
 16595 ;; Auto vars:     Size  Location     Type
 16596 ;;		None
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  1    wreg      void 
 16599 ;; Registers used:
 16600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 16606 ;;      Params:         0       0       0       0       0       0       0       0       0
 16607 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16608 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16609 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16610 ;;Total ram usage:        2 bytes
 16611 ;; Hardware stack levels used: 1
 16612 ;; Hardware stack levels required when called: 5
 16613 ;; This function calls:
 16614 ;;		NULL
 16615 ;;		_ENTER_DefaultInterruptHandler
 16616 ;;		_Menu_HandleEnterPress
 16617 ;; This function is called by:
 16618 ;;		_PIN_MANAGER_IOC
 16619 ;; This function uses a non-reentrant model
 16620 ;;
 16621                           
 16622                           	psect	text64
 16623   002A32                     __ptext64:
 16624                           	callstack 0
 16625   002A32                     _ENTER_ISR:
 16626                           	callstack 114
 16627   002A32                     
 16628                           ;mcc_generated_files/system/src/pins.c: 422:      _delay((unsigned long)((20)*(64000000U
      +                          /4000.0)));
 16629   002A32  0E02               	movlw	2
 16630   002A34  6E1C               	movwf	(??_ENTER_ISR+1)^(0+1280),c
 16631   002A36  0EA0               	movlw	160
 16632   002A38  6E1B               	movwf	??_ENTER_ISR^(0+1280),c
 16633   002A3A  0E92               	movlw	146
 16634   002A3C                     i2u696_47:
 16635   002A3C  2EE8               	decfsz	wreg,f,c
 16636   002A3E  D7FE               	bra	i2u696_47
 16637   002A40  2E1B               	decfsz	??_ENTER_ISR^(0+1280),f,c
 16638   002A42  D7FC               	bra	i2u696_47
 16639   002A44  2E1C               	decfsz	(??_ENTER_ISR+1)^(0+1280),f,c
 16640   002A46  D7FA               	bra	i2u696_47
 16641   002A48  D000               	nop2	
 16642   002A4A                     i2l717:
 16643   002A4A  BAD0               	btfsc	208,5,c	;volatile
 16644   002A4C  EF2A  F015         	goto	i2u617_41
 16645   002A50  EF2C  F015         	goto	i2u617_40
 16646   002A54                     i2u617_41:
 16647   002A54  EF25  F015         	goto	i2l717
 16648   002A58                     i2u617_40:
 16649   002A58                     
 16650                           ;mcc_generated_files/system/src/pins.c: 424:     IOCCFbits.IOCCF5 = 0;
 16651   002A58  0104               	movlb	4	; () banked
 16652   002A5A  9B17               	bcf	23,5,b	;volatile
 16653   002A5C                     
 16654                           ; BSR set to: 4
 16655                           ;mcc_generated_files/system/src/pins.c: 425:     menuMode = 1;
 16656   002A5C  0E01               	movlw	1
 16657   002A5E  0105               	movlb	5	; () banked
 16658   002A60  6F9B               	movwf	_menuMode& (0+255),b	;volatile
 16659   002A62                     
 16660                           ; BSR set to: 5
 16661                           ;mcc_generated_files/system/src/pins.c: 428:     Menu_HandleEnterPress();
 16662   002A62  ECF6  F007         	call	_Menu_HandleEnterPress	;wreg free
 16663   002A66                     
 16664                           ;mcc_generated_files/system/src/pins.c: 429:     if (ENTER_InterruptHandler) {
 16665   002A66  0105               	movlb	5	; () banked
 16666   002A68  51CA               	movf	_ENTER_InterruptHandler& (0+255),w,b
 16667   002A6A  11CB               	iorwf	(_ENTER_InterruptHandler+1)& (0+255),w,b
 16668   002A6C  B4D8               	btfsc	status,2,c
 16669   002A6E  EF3B  F015         	goto	i2u618_41
 16670   002A72  EF3D  F015         	goto	i2u618_40
 16671   002A76                     i2u618_41:
 16672   002A76  EF4A  F015         	goto	i2l721
 16673   002A7A                     i2u618_40:
 16674   002A7A                     
 16675                           ; BSR set to: 5
 16676                           ;mcc_generated_files/system/src/pins.c: 430:         ENTER_InterruptHandler();
 16677   002A7A  D802               	call	i2u619_48
 16678   002A7C  EF4A  F015         	goto	i2u619_49
 16679   002A80                     i2u619_48:
 16680   002A80  0005               	push	
 16681   002A82  6EFA               	movwf	pclath,c
 16682   002A84  51CA               	movf	_ENTER_InterruptHandler& (0+255),w,b
 16683   002A86  6EFD               	movwf	tosl,c
 16684   002A88  51CB               	movf	(_ENTER_InterruptHandler+1)& (0+255),w,b
 16685   002A8A  6EFE               	movwf	tosh,c
 16686   002A8C  50F8               	movf	tblptru,w,c
 16687   002A8E  6EFF               	movwf	tosu,c
 16688   002A90  50FA               	movf	pclath,w,c
 16689   002A92  0012               	return		;indir
 16690   002A94                     i2u619_49:
 16691   002A94                     i2l721:
 16692   002A94  0012               	return		;funcret
 16693   002A96                     __end_of_ENTER_ISR:
 16694                           	callstack 0
 16695                           
 16696 ;; *************** function _Menu_HandleEnterPress *****************
 16697 ;; Defined at:
 16698 ;;		line 186 in file "menu.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;		None
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;		None
 16703 ;; Return value:  Size  Location     Type
 16704 ;;                  1    wreg      void 
 16705 ;; Registers used:
 16706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 16712 ;;      Params:         0       0       0       0       0       0       0       0       0
 16713 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16714 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16715 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16716 ;;Total ram usage:        2 bytes
 16717 ;; Hardware stack levels used: 1
 16718 ;; Hardware stack levels required when called: 4
 16719 ;; This function calls:
 16720 ;;		_Menu_PrintCurrentOption
 16721 ;;		_Menu_SaveSettings
 16722 ;;		i2_displayString
 16723 ;; This function is called by:
 16724 ;;		_ENTER_ISR
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text65
 16729   000FEC                     __ptext65:
 16730                           	callstack 0
 16731   000FEC                     _Menu_HandleEnterPress:
 16732                           	callstack 114
 16733   000FEC                     
 16734                           ;menu.c: 189:     configFlag = 1;
 16735   000FEC  0E01               	movlw	1
 16736   000FEE  0105               	movlb	5	; () banked
 16737   000FF0  6F9A               	movwf	_configFlag& (0+255),b	;volatile
 16738                           
 16739                           ;menu.c: 190:     switch (systemState) {
 16740   000FF2  EF8E  F008         	goto	i2l5854
 16741   000FF6                     i2l5820:
 16742                           
 16743                           ; BSR set to: 5
 16744                           ;menu.c: 192:             systemState = STATE_MENU;
 16745   000FF6  0E01               	movlw	1
 16746   000FF8  6E5B               	movwf	_systemState^(0+1280),c	;volatile
 16747   000FFA                     
 16748                           ; BSR set to: 5
 16749                           ;menu.c: 194:             displayString("    ", 0);
 16750   000FFA  0EC5               	movlw	low STR_7
 16751   000FFC  6E0B               	movwf	i2displayString@str^(0+1280),c
 16752   000FFE  0E7F               	movlw	high STR_7
 16753   001000  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16754   001002  0E00               	movlw	0
 16755   001004  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16756   001006  EC3A  F00C         	call	i2_displayString	;wreg free
 16757   00100A                     
 16758                           ;menu.c: 195:             displayString("CONF", 0);
 16759   00100A  0EBB               	movlw	low STR_27
 16760   00100C  6E0B               	movwf	i2displayString@str^(0+1280),c
 16761   00100E  0E7F               	movlw	high STR_27
 16762   001010  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16763   001012  0E00               	movlw	0
 16764   001014  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16765   001016  EC3A  F00C         	call	i2_displayString	;wreg free
 16766   00101A                     
 16767                           ;menu.c: 196:             Menu_PrintCurrentOption();
 16768   00101A  ECE3  F00A         	call	_Menu_PrintCurrentOption	;wreg free
 16769                           
 16770                           ;menu.c: 197:             break;
 16771   00101E  EFA3  F008         	goto	i2l1715
 16772   001022                     i2l5828:
 16773                           
 16774                           ; BSR set to: 5
 16775                           ;menu.c: 200:             systemState = STATE_CONFIG;
 16776   001022  0E02               	movlw	2
 16777   001024  6E5B               	movwf	_systemState^(0+1280),c	;volatile
 16778                           
 16779                           ;menu.c: 206:             switch (currentOption) {
 16780   001026  EF6D  F008         	goto	i2l5850
 16781   00102A                     i2l5830:
 16782                           
 16783                           ; BSR set to: 5
 16784                           ;menu.c: 209:                     displayString("    ", 0);
 16785   00102A  0EC5               	movlw	low STR_7
 16786   00102C  6E0B               	movwf	i2displayString@str^(0+1280),c
 16787   00102E  0E7F               	movlw	high STR_7
 16788   001030  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16789   001032  0E00               	movlw	0
 16790   001034  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16791   001036  EC3A  F00C         	call	i2_displayString	;wreg free
 16792                           
 16793                           ;menu.c: 210:                     displayString("SPD", 0);
 16794   00103A  0EF2               	movlw	low STR_34
 16795   00103C  6E0B               	movwf	i2displayString@str^(0+1280),c
 16796   00103E  0E7F               	movlw	high STR_34
 16797   001040  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16798   001042  0E00               	movlw	0
 16799   001044  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16800   001046  EC3A  F00C         	call	i2_displayString	;wreg free
 16801                           
 16802                           ;menu.c: 211:                     break;
 16803   00104A  EFA3  F008         	goto	i2l1715
 16804   00104E                     i2l5832:
 16805                           
 16806                           ; BSR set to: 5
 16807                           ;menu.c: 214:                     displayString("    ", 0);
 16808   00104E  0EC5               	movlw	low STR_7
 16809   001050  6E0B               	movwf	i2displayString@str^(0+1280),c
 16810   001052  0E7F               	movlw	high STR_7
 16811   001054  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16812   001056  0E00               	movlw	0
 16813   001058  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16814   00105A  EC3A  F00C         	call	i2_displayString	;wreg free
 16815                           
 16816                           ;menu.c: 215:                     displayString("MOTR", 0);
 16817   00105E  0EC0               	movlw	low STR_36
 16818   001060  6E0B               	movwf	i2displayString@str^(0+1280),c
 16819   001062  0E7F               	movlw	high STR_36
 16820   001064  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16821   001066  0E00               	movlw	0
 16822   001068  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16823   00106A  EC3A  F00C         	call	i2_displayString	;wreg free
 16824                           
 16825                           ;menu.c: 216:                     break;
 16826   00106E  EFA3  F008         	goto	i2l1715
 16827   001072                     i2l5834:
 16828                           
 16829                           ; BSR set to: 5
 16830                           ;menu.c: 220:                     displayString("    ", 0);
 16831   001072  0EC5               	movlw	low STR_7
 16832   001074  6E0B               	movwf	i2displayString@str^(0+1280),c
 16833   001076  0E7F               	movlw	high STR_7
 16834   001078  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16835   00107A  0E00               	movlw	0
 16836   00107C  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16837   00107E  EC3A  F00C         	call	i2_displayString	;wreg free
 16838                           
 16839                           ;menu.c: 221:                     displayString("OVR", 0);
 16840   001082  0EFA               	movlw	low STR_38
 16841   001084  6E0B               	movwf	i2displayString@str^(0+1280),c
 16842   001086  0E7F               	movlw	high STR_38
 16843   001088  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16844   00108A  0E00               	movlw	0
 16845   00108C  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16846   00108E  EC3A  F00C         	call	i2_displayString	;wreg free
 16847                           
 16848                           ;menu.c: 222:                     break;
 16849   001092  EFA3  F008         	goto	i2l1715
 16850   001096                     i2l5836:
 16851                           
 16852                           ; BSR set to: 5
 16853                           ;menu.c: 226:                     displayString("    ", 0);
 16854   001096  0EC5               	movlw	low STR_7
 16855   001098  6E0B               	movwf	i2displayString@str^(0+1280),c
 16856   00109A  0E7F               	movlw	high STR_7
 16857   00109C  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16858   00109E  0E00               	movlw	0
 16859   0010A0  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16860   0010A2  EC3A  F00C         	call	i2_displayString	;wreg free
 16861                           
 16862                           ;menu.c: 227:                     displayString("TIM", 0);
 16863   0010A6  0EF6               	movlw	low STR_40
 16864   0010A8  6E0B               	movwf	i2displayString@str^(0+1280),c
 16865   0010AA  0E7F               	movlw	high STR_40
 16866   0010AC  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16867   0010AE  0E00               	movlw	0
 16868   0010B0  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16869   0010B2  EC3A  F00C         	call	i2_displayString	;wreg free
 16870                           
 16871                           ;menu.c: 228:                     break;
 16872   0010B6  EFA3  F008         	goto	i2l1715
 16873   0010BA                     i2l5838:
 16874                           
 16875                           ; BSR set to: 5
 16876                           ;menu.c: 232:                     Menu_SaveSettings();
 16877   0010BA  EC32  F012         	call	_Menu_SaveSettings	;wreg free
 16878   0010BE                     
 16879                           ;menu.c: 233:                     systemState = STATE_NORMAL;
 16880   0010BE  6A5B               	clrf	_systemState^(0+1280),c	;volatile
 16881   0010C0                     
 16882                           ;menu.c: 234:                     displayString("    ", 0);
 16883   0010C0  0EC5               	movlw	low STR_7
 16884   0010C2  6E0B               	movwf	i2displayString@str^(0+1280),c
 16885   0010C4  0E7F               	movlw	high STR_7
 16886   0010C6  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 16887   0010C8  0E00               	movlw	0
 16888   0010CA  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 16889   0010CC  EC3A  F00C         	call	i2_displayString	;wreg free
 16890   0010D0                     
 16891                           ;menu.c: 235:                     configFlag = 0;
 16892   0010D0  0105               	movlb	5	; () banked
 16893   0010D2  6B9A               	clrf	_configFlag& (0+255),b	;volatile
 16894   0010D4                     
 16895                           ; BSR set to: 5
 16896                           ;menu.c: 236:                     menuMode = 0;
 16897   0010D4  6B9B               	clrf	_menuMode& (0+255),b	;volatile
 16898                           
 16899                           ;menu.c: 237:                     break;
 16900   0010D6  EFA3  F008         	goto	i2l1715
 16901   0010DA                     i2l5850:
 16902                           
 16903                           ; BSR set to: 5
 16904   0010DA  5192               	movf	_currentOption& (0+255),w,b
 16905   0010DC  6E19               	movwf	??_Menu_HandleEnterPress^(0+1280),c
 16906   0010DE  6A1A               	clrf	(??_Menu_HandleEnterPress+1)^(0+1280),c
 16907                           
 16908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16909                           ; Switch size 1, requested type "simple"
 16910                           ; Number of cases is 1, Range of values is 0 to 0
 16911                           ; switch strategies available:
 16912                           ; Name         Instructions Cycles
 16913                           ; simple_byte            4     3 (average)
 16914                           ;	Chosen strategy is simple_byte
 16915   0010E0  501A               	movf	(??_Menu_HandleEnterPress+1)^(0+1280),w,c
 16916   0010E2  0A00               	xorlw	0	; case 0
 16917   0010E4  B4D8               	btfsc	status,2,c
 16918   0010E6  EF77  F008         	goto	i2l7336
 16919   0010EA  EFA3  F008         	goto	i2l1715
 16920   0010EE                     i2l7336:
 16921                           
 16922                           ; BSR set to: 5
 16923                           ; Switch size 1, requested type "simple"
 16924                           ; Number of cases is 5, Range of values is 0 to 4
 16925                           ; switch strategies available:
 16926                           ; Name         Instructions Cycles
 16927                           ; simple_byte           16     9 (average)
 16928                           ;	Chosen strategy is simple_byte
 16929   0010EE  5019               	movf	??_Menu_HandleEnterPress^(0+1280),w,c
 16930   0010F0  0A00               	xorlw	0	; case 0
 16931   0010F2  B4D8               	btfsc	status,2,c
 16932   0010F4  EF15  F008         	goto	i2l5830
 16933   0010F8  0A01               	xorlw	1	; case 1
 16934   0010FA  B4D8               	btfsc	status,2,c
 16935   0010FC  EF27  F008         	goto	i2l5832
 16936   001100  0A03               	xorlw	3	; case 2
 16937   001102  B4D8               	btfsc	status,2,c
 16938   001104  EF39  F008         	goto	i2l5834
 16939   001108  0A01               	xorlw	1	; case 3
 16940   00110A  B4D8               	btfsc	status,2,c
 16941   00110C  EF4B  F008         	goto	i2l5836
 16942   001110  0A07               	xorlw	7	; case 4
 16943   001112  B4D8               	btfsc	status,2,c
 16944   001114  EF5D  F008         	goto	i2l5838
 16945   001118  EFA3  F008         	goto	i2l1715
 16946   00111C                     i2l5854:
 16947                           
 16948                           ; BSR set to: 5
 16949   00111C  505B               	movf	_systemState^(0+1280),w,c	;volatile
 16950   00111E  6E19               	movwf	??_Menu_HandleEnterPress^(0+1280),c
 16951   001120  6A1A               	clrf	(??_Menu_HandleEnterPress+1)^(0+1280),c
 16952                           
 16953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16954                           ; Switch size 1, requested type "simple"
 16955                           ; Number of cases is 1, Range of values is 0 to 0
 16956                           ; switch strategies available:
 16957                           ; Name         Instructions Cycles
 16958                           ; simple_byte            4     3 (average)
 16959                           ;	Chosen strategy is simple_byte
 16960   001122  501A               	movf	(??_Menu_HandleEnterPress+1)^(0+1280),w,c
 16961   001124  0A00               	xorlw	0	; case 0
 16962   001126  B4D8               	btfsc	status,2,c
 16963   001128  EF98  F008         	goto	i2l7338
 16964   00112C  EFA3  F008         	goto	i2l1715
 16965   001130                     i2l7338:
 16966                           
 16967                           ; BSR set to: 5
 16968                           ; Switch size 1, requested type "simple"
 16969                           ; Number of cases is 2, Range of values is 0 to 1
 16970                           ; switch strategies available:
 16971                           ; Name         Instructions Cycles
 16972                           ; simple_byte            7     4 (average)
 16973                           ;	Chosen strategy is simple_byte
 16974   001130  5019               	movf	??_Menu_HandleEnterPress^(0+1280),w,c
 16975   001132  0A00               	xorlw	0	; case 0
 16976   001134  B4D8               	btfsc	status,2,c
 16977   001136  EFFB  F007         	goto	i2l5820
 16978   00113A  0A01               	xorlw	1	; case 1
 16979   00113C  B4D8               	btfsc	status,2,c
 16980   00113E  EF11  F008         	goto	i2l5828
 16981   001142  EFA3  F008         	goto	i2l1715
 16982   001146                     i2l1715:
 16983   001146  0012               	return		;funcret
 16984   001148                     __end_of_Menu_HandleEnterPress:
 16985                           	callstack 0
 16986                           
 16987 ;; *************** function _Menu_SaveSettings *****************
 16988 ;; Defined at:
 16989 ;;		line 71 in file "menu.c"
 16990 ;; Parameters:    Size  Location     Type
 16991 ;;		None
 16992 ;; Auto vars:     Size  Location     Type
 16993 ;;		None
 16994 ;; Return value:  Size  Location     Type
 16995 ;;                  1    wreg      void 
 16996 ;; Registers used:
 16997 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17003 ;;      Params:         0       0       0       0       0       0       0       0       0
 17004 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17006 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17007 ;;Total ram usage:        0 bytes
 17008 ;; Hardware stack levels used: 1
 17009 ;; Hardware stack levels required when called: 3
 17010 ;; This function calls:
 17011 ;;		_EEPROM_WriteUInt16
 17012 ;; This function is called by:
 17013 ;;		_Menu_HandleEnterPress
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           	psect	text66
 17018   002464                     __ptext66:
 17019                           	callstack 0
 17020   002464                     _Menu_SaveSettings:
 17021                           	callstack 114
 17022   002464                     
 17023                           ;menu.c: 73:     EEPROM_WriteUInt16(0x380006, speedLevel);
 17024   002464  0E06               	movlw	6
 17025   002466  6E06               	movwf	EEPROM_WriteUInt16@addr^(0+1280),c
 17026   002468  0E00               	movlw	0
 17027   00246A  6E07               	movwf	(EEPROM_WriteUInt16@addr+1)^(0+1280),c
 17028   00246C  0E38               	movlw	56
 17029   00246E  6E08               	movwf	(EEPROM_WriteUInt16@addr+2)^(0+1280),c
 17030   002470  C5C5  F509         	movff	_speedLevel,EEPROM_WriteUInt16@value
 17031   002474  6A0A               	clrf	(EEPROM_WriteUInt16@value+1)^(0+1280),c
 17032   002476  ECED  F011         	call	_EEPROM_WriteUInt16	;wreg free
 17033                           
 17034                           ;menu.c: 74:     EEPROM_WriteUInt16(0x380000, openFullDuration);
 17035   00247A  0E00               	movlw	0
 17036   00247C  6E06               	movwf	EEPROM_WriteUInt16@addr^(0+1280),c
 17037   00247E  0E00               	movlw	0
 17038   002480  6E07               	movwf	(EEPROM_WriteUInt16@addr+1)^(0+1280),c
 17039   002482  0E38               	movlw	56
 17040   002484  6E08               	movwf	(EEPROM_WriteUInt16@addr+2)^(0+1280),c
 17041   002486  C584  F509         	movff	_openFullDuration,EEPROM_WriteUInt16@value	;volatile
 17042   00248A  C585  F50A         	movff	_openFullDuration+1,EEPROM_WriteUInt16@value+1	;volatile
 17043   00248E  ECED  F011         	call	_EEPROM_WriteUInt16	;wreg free
 17044                           
 17045                           ;menu.c: 75:     EEPROM_WriteUInt16(0x380002, closeFullDuration);
 17046   002492  0E02               	movlw	2
 17047   002494  6E06               	movwf	EEPROM_WriteUInt16@addr^(0+1280),c
 17048   002496  0E00               	movlw	0
 17049   002498  6E07               	movwf	(EEPROM_WriteUInt16@addr+1)^(0+1280),c
 17050   00249A  0E38               	movlw	56
 17051   00249C  6E08               	movwf	(EEPROM_WriteUInt16@addr+2)^(0+1280),c
 17052   00249E  C582  F509         	movff	_closeFullDuration,EEPROM_WriteUInt16@value	;volatile
 17053   0024A2  C583  F50A         	movff	_closeFullDuration+1,EEPROM_WriteUInt16@value+1	;volatile
 17054   0024A6  ECED  F011         	call	_EEPROM_WriteUInt16	;wreg free
 17055                           
 17056                           ;menu.c: 76:     EEPROM_WriteUInt16(0x380004, overcurrentThreshold);
 17057   0024AA  0E04               	movlw	4
 17058   0024AC  6E06               	movwf	EEPROM_WriteUInt16@addr^(0+1280),c
 17059   0024AE  0E00               	movlw	0
 17060   0024B0  6E07               	movwf	(EEPROM_WriteUInt16@addr+1)^(0+1280),c
 17061   0024B2  0E38               	movlw	56
 17062   0024B4  6E08               	movwf	(EEPROM_WriteUInt16@addr+2)^(0+1280),c
 17063   0024B6  C5C3  F509         	movff	_overcurrentThreshold,EEPROM_WriteUInt16@value	;volatile
 17064   0024BA  C5C4  F50A         	movff	_overcurrentThreshold+1,EEPROM_WriteUInt16@value+1	;volatile
 17065   0024BE  ECED  F011         	call	_EEPROM_WriteUInt16	;wreg free
 17066                           
 17067                           ;menu.c: 77:     EEPROM_WriteUInt16(0x380008, timeAuto);
 17068   0024C2  0E08               	movlw	8
 17069   0024C4  6E06               	movwf	EEPROM_WriteUInt16@addr^(0+1280),c
 17070   0024C6  0E00               	movlw	0
 17071   0024C8  6E07               	movwf	(EEPROM_WriteUInt16@addr+1)^(0+1280),c
 17072   0024CA  0E38               	movlw	56
 17073   0024CC  6E08               	movwf	(EEPROM_WriteUInt16@addr+2)^(0+1280),c
 17074   0024CE  C578  F509         	movff	_timeAuto,EEPROM_WriteUInt16@value	;volatile
 17075   0024D2  C579  F50A         	movff	_timeAuto+1,EEPROM_WriteUInt16@value+1	;volatile
 17076   0024D6  ECED  F011         	call	_EEPROM_WriteUInt16	;wreg free
 17077   0024DA                     
 17078                           ;menu.c: 81:     configDone = 1;
 17079   0024DA  0E01               	movlw	1
 17080   0024DC  0105               	movlb	5	; () banked
 17081   0024DE  6F99               	movwf	_configDone& (0+255),b	;volatile
 17082   0024E0                     
 17083                           ; BSR set to: 5
 17084   0024E0  0012               	return		;funcret
 17085   0024E2                     __end_of_Menu_SaveSettings:
 17086                           	callstack 0
 17087                           
 17088 ;; *************** function _EEPROM_WriteUInt16 *****************
 17089 ;; Defined at:
 17090 ;;		line 51 in file "mcc_generated_files/nvm/src/nvm.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  addr            3    5[COMRAM] unsigned um
 17093 ;;  value           2    8[COMRAM] unsigned short 
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;  byte            1   14[COMRAM] unsigned char 
 17096 ;;  i               1   15[COMRAM] char 
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  1    wreg      void 
 17099 ;; Registers used:
 17100 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/0
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17106 ;;      Params:         5       0       0       0       0       0       0       0       0
 17107 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17108 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17109 ;;      Totals:        11       0       0       0       0       0       0       0       0
 17110 ;;Total ram usage:       11 bytes
 17111 ;; Hardware stack levels used: 1
 17112 ;; Hardware stack levels required when called: 2
 17113 ;; This function calls:
 17114 ;;		_DEBUG_PRINT_HEX@debug$F663
 17115 ;;		_DEBUG_PRINT_INT@debug$F660
 17116 ;;		_EEPROM_Write
 17117 ;; This function is called by:
 17118 ;;		_Menu_SaveSettings
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           	psect	text67
 17123   0023DA                     __ptext67:
 17124                           	callstack 0
 17125   0023DA                     _EEPROM_WriteUInt16:
 17126                           	callstack 114
 17127   0023DA                     
 17128                           ;mcc_generated_files/nvm/src/nvm.c: 53:     EEPROM_Write(addr, (uint8_t)(value & 0xFF));
 17129   0023DA  C506  F501         	movff	EEPROM_WriteUInt16@addr,EEPROM_Write@DFM_ADDR
 17130   0023DE  C507  F502         	movff	EEPROM_WriteUInt16@addr+1,EEPROM_Write@DFM_ADDR+1
 17131   0023E2  C508  F503         	movff	EEPROM_WriteUInt16@addr+2,EEPROM_Write@DFM_ADDR+2
 17132   0023E6  C509  F504         	movff	EEPROM_WriteUInt16@value,EEPROM_Write@data
 17133   0023EA  EC87  F016         	call	_EEPROM_Write	;wreg free
 17134   0023EE                     
 17135                           ;mcc_generated_files/nvm/src/nvm.c: 54:     EEPROM_Write(addr + 1, (uint8_t)(value >> 8)
      +                          );
 17136   0023EE  0E01               	movlw	1
 17137   0023F0  2406               	addwf	EEPROM_WriteUInt16@addr^(0+1280),w,c
 17138   0023F2  6E01               	movwf	EEPROM_Write@DFM_ADDR^(0+1280),c
 17139   0023F4  0E00               	movlw	0
 17140   0023F6  2007               	addwfc	(EEPROM_WriteUInt16@addr+1)^(0+1280),w,c
 17141   0023F8  6E02               	movwf	(EEPROM_Write@DFM_ADDR+1)^(0+1280),c
 17142   0023FA  0E00               	movlw	0
 17143   0023FC  2008               	addwfc	(EEPROM_WriteUInt16@addr+2)^(0+1280),w,c
 17144   0023FE  6E03               	movwf	(EEPROM_Write@DFM_ADDR+2)^(0+1280),c
 17145   002400  500A               	movf	(EEPROM_WriteUInt16@value+1)^(0+1280),w,c
 17146   002402  6E04               	movwf	EEPROM_Write@data^(0+1280),c
 17147   002404  EC87  F016         	call	_EEPROM_Write	;wreg free
 17148   002408                     
 17149                           ;mcc_generated_files/nvm/src/nvm.c: 59:     for (int8_t i = 2; i >= 0; i--) {
 17150   002408  0E02               	movlw	2
 17151   00240A  6E10               	movwf	EEPROM_WriteUInt16@i^(0+1280),c
 17152   00240C                     i2l5220:
 17153                           
 17154                           ;mcc_generated_files/nvm/src/nvm.c: 60:         uint8_t byte = (addr >> (i * 8)) & 0xFF;
 17155   00240C  5010               	movf	EEPROM_WriteUInt16@i^(0+1280),w,c
 17156   00240E  0D08               	mullw	8
 17157   002410  C506  F50B         	movff	EEPROM_WriteUInt16@addr,??_EEPROM_WriteUInt16
 17158   002414  C507  F50C         	movff	EEPROM_WriteUInt16@addr+1,??_EEPROM_WriteUInt16+1
 17159   002418  C508  F50D         	movff	EEPROM_WriteUInt16@addr+2,??_EEPROM_WriteUInt16+2
 17160   00241C  28F3               	incf	243,w,c
 17161   00241E  6E0E               	movwf	(??_EEPROM_WriteUInt16+3)^(0+1280),c
 17162   002420  EF16  F012         	goto	i2u379_40
 17163   002424                     i2u379_45:
 17164   002424  90D8               	bcf	status,0,c
 17165   002426  320D               	rrcf	(??_EEPROM_WriteUInt16+2)^(0+1280),f,c
 17166   002428  320C               	rrcf	(??_EEPROM_WriteUInt16+1)^(0+1280),f,c
 17167   00242A  320B               	rrcf	??_EEPROM_WriteUInt16^(0+1280),f,c
 17168   00242C                     i2u379_40:
 17169   00242C  2E0E               	decfsz	(??_EEPROM_WriteUInt16+3)^(0+1280),f,c
 17170   00242E  EF12  F012         	goto	i2u379_45
 17171   002432  500B               	movf	??_EEPROM_WriteUInt16^(0+1280),w,c
 17172   002434  6E0F               	movwf	EEPROM_WriteUInt16@byte^(0+1280),c
 17173   002436                     
 17174                           ;mcc_generated_files/nvm/src/nvm.c: 61:         DEBUG_PRINT_HEX(byte >> 4);
 17175   002436  380F               	swapf	EEPROM_WriteUInt16@byte^(0+1280),w,c
 17176   002438  0B0F               	andlw	15
 17177   00243A  EC39  F01B         	call	_DEBUG_PRINT_HEX@debug$F663
 17178   00243E                     
 17179                           ;mcc_generated_files/nvm/src/nvm.c: 62:         DEBUG_PRINT_HEX(byte & 0x0F);
 17180   00243E  500F               	movf	EEPROM_WriteUInt16@byte^(0+1280),w,c
 17181   002440  0B0F               	andlw	15
 17182   002442  EC39  F01B         	call	_DEBUG_PRINT_HEX@debug$F663
 17183   002446                     
 17184                           ;mcc_generated_files/nvm/src/nvm.c: 63:     }
 17185   002446  0610               	decf	EEPROM_WriteUInt16@i^(0+1280),f,c
 17186   002448  BE10               	btfsc	EEPROM_WriteUInt16@i^(0+1280),7,c
 17187   00244A  EF2B  F012         	goto	i2u380_40
 17188   00244E  EF29  F012         	goto	i2u380_41
 17189   002452                     i2u380_41:
 17190   002452  EF06  F012         	goto	i2l5220
 17191   002456                     i2u380_40:
 17192   002456                     
 17193                           ;mcc_generated_files/nvm/src/nvm.c: 66:     DEBUG_PRINT_INT(value);
 17194   002456  C509  F501         	movff	EEPROM_WriteUInt16@value,DEBUG_PRINT_INT@debug$F660@value
 17195   00245A  C50A  F502         	movff	EEPROM_WriteUInt16@value+1,DEBUG_PRINT_INT@debug$F660@value+1
 17196   00245E  EC38  F01B         	call	_DEBUG_PRINT_INT@debug$F660	;wreg free
 17197   002462  0012               	return		;funcret
 17198   002464                     __end_of_EEPROM_WriteUInt16:
 17199                           	callstack 0
 17200                           
 17201 ;; *************** function _EEPROM_Write *****************
 17202 ;; Defined at:
 17203 ;;		line 71 in file "mcc_generated_files/nvm/src/nvm.c"
 17204 ;; Parameters:    Size  Location     Type
 17205 ;;  DFM_ADDR        3    0[COMRAM] unsigned um
 17206 ;;  data            1    3[COMRAM] unsigned char 
 17207 ;; Auto vars:     Size  Location     Type
 17208 ;;  globalInterr    1    4[COMRAM] unsigned char 
 17209 ;; Return value:  Size  Location     Type
 17210 ;;                  1    wreg      void 
 17211 ;; Registers used:
 17212 ;;		wreg, status,2, cstack
 17213 ;; Tracked objects:
 17214 ;;		On entry : 0/0
 17215 ;;		On exit  : 0/0
 17216 ;;		Unchanged: 0/0
 17217 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17218 ;;      Params:         4       0       0       0       0       0       0       0       0
 17219 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17220 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17221 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17222 ;;Total ram usage:        5 bytes
 17223 ;; Hardware stack levels used: 1
 17224 ;; Hardware stack levels required when called: 1
 17225 ;; This function calls:
 17226 ;;		_NVM_UnlockSequence
 17227 ;;		i2_NVM_IsBusy
 17228 ;; This function is called by:
 17229 ;;		_EEPROM_WriteUInt16
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233                           	psect	text68
 17234   002D0E                     __ptext68:
 17235                           	callstack 0
 17236   002D0E                     _EEPROM_Write:
 17237                           	callstack 114
 17238   002D0E                     
 17239                           ;mcc_generated_files/nvm/src/nvm.c: 74:     uint8_t globalInterruptBitValue = INTCON0bit
      +                          s.GIE;
 17240   002D0E  0E00               	movlw	0
 17241   002D10  BED6               	btfsc	214,7,c	;volatile
 17242   002D12  0E01               	movlw	1
 17243   002D14  6E05               	movwf	EEPROM_Write@globalInterruptBitValue^(0+1280),c
 17244   002D16                     
 17245                           ;mcc_generated_files/nvm/src/nvm.c: 77:     NVMADR = DFM_ADDR;
 17246   002D16  C501  F043         	movff	EEPROM_Write@DFM_ADDR,67	;volatile
 17247   002D1A  C502  F044         	movff	EEPROM_Write@DFM_ADDR+1,68	;volatile
 17248   002D1E  C503  F045         	movff	EEPROM_Write@DFM_ADDR+2,69	;volatile
 17249   002D22                     
 17250                           ;mcc_generated_files/nvm/src/nvm.c: 79:     NVMDATL = data;
 17251   002D22  C504  F046         	movff	EEPROM_Write@data,70	;volatile
 17252   002D26                     
 17253                           ;mcc_generated_files/nvm/src/nvm.c: 80:     NVMCON1bits.NVMCMD = 0x03;
 17254   002D26  0100               	movlb	0	; () banked
 17255   002D28  5141               	movf	65,w,b	;volsfr
 17256   002D2A  0BF8               	andlw	-8
 17257   002D2C  0903               	iorlw	3
 17258   002D2E  6F41               	movwf	65,b	;volsfr
 17259   002D30                     
 17260                           ; BSR set to: 0
 17261                           ;mcc_generated_files/nvm/src/nvm.c: 81:     INTCON0bits.GIE = 0;
 17262   002D30  9ED6               	bcf	214,7,c	;volatile
 17263   002D32                     
 17264                           ; BSR set to: 0
 17265                           ;mcc_generated_files/nvm/src/nvm.c: 83:     NVM_UnlockSequence();
 17266   002D32  ECA2  F01A         	call	_NVM_UnlockSequence	;wreg free
 17267   002D36                     
 17268                           ;mcc_generated_files/nvm/src/nvm.c: 85:     INTCON0bits.GIE = globalInterruptBitValue;
 17269   002D36  B005               	btfsc	EEPROM_Write@globalInterruptBitValue^(0+1280),0,c
 17270   002D38  D002               	bra	i2u375_45
 17271   002D3A  9ED6               	bcf	214,7,c	;volatile
 17272   002D3C  D001               	bra	i2u375_46
 17273   002D3E                     i2u375_45:
 17274   002D3E  8ED6               	bsf	214,7,c	;volatile
 17275   002D40                     i2u375_46:
 17276   002D40                     i2l5200:
 17277   002D40  EC6B  F01A         	call	i2_NVM_IsBusy	;wreg free
 17278   002D44  0900               	iorlw	0
 17279   002D46  A4D8               	btfss	status,2,c
 17280   002D48  EFA8  F016         	goto	i2u376_41
 17281   002D4C  EFAA  F016         	goto	i2u376_40
 17282   002D50                     i2u376_41:
 17283   002D50  EFA0  F016         	goto	i2l5200
 17284   002D54                     i2u376_40:
 17285   002D54                     
 17286                           ;mcc_generated_files/nvm/src/nvm.c: 90:     NVMCON1bits.NVMCMD = 0x00;
 17287   002D54  0EF8               	movlw	-8
 17288   002D56  0100               	movlb	0	; () banked
 17289   002D58  1741               	andwf	65,f,b	;volsfr
 17290   002D5A                     
 17291                           ; BSR set to: 0
 17292   002D5A  0012               	return		;funcret
 17293   002D5C                     __end_of_EEPROM_Write:
 17294                           	callstack 0
 17295                           
 17296 ;; *************** function i2_NVM_IsBusy *****************
 17297 ;; Defined at:
 17298 ;;		line 18 in file "mcc_generated_files/nvm/src/nvm.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;		None
 17301 ;; Auto vars:     Size  Location     Type
 17302 ;;		None
 17303 ;; Return value:  Size  Location     Type
 17304 ;;                  1    wreg      _Bool 
 17305 ;; Registers used:
 17306 ;;		wreg
 17307 ;; Tracked objects:
 17308 ;;		On entry : 0/0
 17309 ;;		On exit  : 0/0
 17310 ;;		Unchanged: 0/0
 17311 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17312 ;;      Params:         0       0       0       0       0       0       0       0       0
 17313 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17314 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17315 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17316 ;;Total ram usage:        0 bytes
 17317 ;; Hardware stack levels used: 1
 17318 ;; This function calls:
 17319 ;;		Nothing
 17320 ;; This function is called by:
 17321 ;;		_EEPROM_Write
 17322 ;; This function uses a non-reentrant model
 17323 ;;
 17324                           
 17325                           	psect	text69
 17326   0034D6                     __ptext69:
 17327                           	callstack 0
 17328   0034D6                     i2_NVM_IsBusy:
 17329                           	callstack 114
 17330   0034D6                     
 17331                           ;mcc_generated_files/nvm/src/nvm.c: 19:     return NVMCON0bits.GO;
 17332   0034D6  0100               	movlb	0	; () banked
 17333   0034D8  B140               	btfsc	64,0,b	;volatile
 17334   0034DA  EF71  F01A         	goto	i2u372_41
 17335   0034DE  EF74  F01A         	goto	i2u372_40
 17336   0034E2                     i2u372_41:
 17337   0034E2  0E01               	movlw	1
 17338   0034E4  EF75  F01A         	goto	i2u372_46
 17339   0034E8                     i2u372_40:
 17340   0034E8  0E00               	movlw	0
 17341   0034EA                     i2u372_46:
 17342   0034EA                     
 17343                           ; BSR set to: 0
 17344   0034EA  0012               	return		;funcret
 17345   0034EC                     __end_ofi2_NVM_IsBusy:
 17346                           	callstack 0
 17347                           
 17348 ;; *************** function _NVM_UnlockSequence *****************
 17349 ;; Defined at:
 17350 ;;		line 26 in file "mcc_generated_files/nvm/src/nvm.c"
 17351 ;; Parameters:    Size  Location     Type
 17352 ;;		None
 17353 ;; Auto vars:     Size  Location     Type
 17354 ;;		None
 17355 ;; Return value:  Size  Location     Type
 17356 ;;                  1    wreg      void 
 17357 ;; Registers used:
 17358 ;;		wreg, status,2
 17359 ;; Tracked objects:
 17360 ;;		On entry : 0/0
 17361 ;;		On exit  : 0/0
 17362 ;;		Unchanged: 0/0
 17363 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17364 ;;      Params:         0       0       0       0       0       0       0       0       0
 17365 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17366 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17367 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17368 ;;Total ram usage:        0 bytes
 17369 ;; Hardware stack levels used: 1
 17370 ;; This function calls:
 17371 ;;		Nothing
 17372 ;; This function is called by:
 17373 ;;		_EEPROM_Write
 17374 ;; This function uses a non-reentrant model
 17375 ;;
 17376                           
 17377                           	psect	text70
 17378   003544                     __ptext70:
 17379                           	callstack 0
 17380   003544                     _NVM_UnlockSequence:
 17381                           	callstack 114
 17382   003544                     
 17383                           ;mcc_generated_files/nvm/src/nvm.c: 27:     NVMLOCK = 0x55;
 17384   003544  0E55               	movlw	85
 17385   003546  0100               	movlb	0	; () banked
 17386   003548  6F42               	movwf	66,b	;volatile
 17387                           
 17388                           ;mcc_generated_files/nvm/src/nvm.c: 28:     NVMLOCK = 0xAA;
 17389   00354A  0EAA               	movlw	170
 17390   00354C  6F42               	movwf	66,b	;volatile
 17391   00354E                     
 17392                           ; BSR set to: 0
 17393                           ;mcc_generated_files/nvm/src/nvm.c: 29:     NVMCON0bits.GO = 1;
 17394   00354E  8140               	bsf	64,0,b	;volatile
 17395   003550                     
 17396                           ; BSR set to: 0
 17397   003550  0012               	return		;funcret
 17398   003552                     __end_of_NVM_UnlockSequence:
 17399                           	callstack 0
 17400                           
 17401 ;; *************** function _DEBUG_PRINT_INT@debug$F660 *****************
 17402 ;; Defined at:
 17403 ;;		line 50 in file "mcc_generated_files/nvm/src/../../../debug.h"
 17404 ;; Parameters:    Size  Location     Type
 17405 ;;  value           2    0[COMRAM] unsigned short 
 17406 ;; Auto vars:     Size  Location     Type
 17407 ;;		None
 17408 ;; Return value:  Size  Location     Type
 17409 ;;                  1    wreg      void 
 17410 ;; Registers used:
 17411 ;;		None
 17412 ;; Tracked objects:
 17413 ;;		On entry : 0/0
 17414 ;;		On exit  : 0/0
 17415 ;;		Unchanged: 0/0
 17416 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17417 ;;      Params:         2       0       0       0       0       0       0       0       0
 17418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17420 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17421 ;;Total ram usage:        2 bytes
 17422 ;; Hardware stack levels used: 1
 17423 ;; This function calls:
 17424 ;;		Nothing
 17425 ;; This function is called by:
 17426 ;;		_EEPROM_WriteUInt16
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           	psect	text71
 17431   003670                     __ptext71:
 17432                           	callstack 0
 17433   003670                     _DEBUG_PRINT_INT@debug$F660:
 17434                           	callstack 115
 17435   003670  0012               	return		;funcret
 17436   003672                     __end_of_DEBUG_PRINT_INT@debug$F660:
 17437                           	callstack 0
 17438                           
 17439 ;; *************** function _DEBUG_PRINT_HEX@debug$F663 *****************
 17440 ;; Defined at:
 17441 ;;		line 54 in file "mcc_generated_files/nvm/src/../../../debug.h"
 17442 ;; Parameters:    Size  Location     Type
 17443 ;;  digit           1    wreg     unsigned char 
 17444 ;; Auto vars:     Size  Location     Type
 17445 ;;  digit           1    0[COMRAM] unsigned char 
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  1    wreg      void 
 17448 ;; Registers used:
 17449 ;;		wreg
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/0
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17455 ;;      Params:         0       0       0       0       0       0       0       0       0
 17456 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17458 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17459 ;;Total ram usage:        0 bytes
 17460 ;; Hardware stack levels used: 1
 17461 ;; This function calls:
 17462 ;;		Nothing
 17463 ;; This function is called by:
 17464 ;;		_EEPROM_WriteUInt16
 17465 ;; This function uses a non-reentrant model
 17466 ;;
 17467                           
 17468                           	psect	text72
 17469   003672                     __ptext72:
 17470                           	callstack 0
 17471   003672                     _DEBUG_PRINT_HEX@debug$F663:
 17472                           	callstack 115
 17473   003672  0012               	return		;funcret
 17474   003674                     __end_of_DEBUG_PRINT_HEX@debug$F663:
 17475                           	callstack 0
 17476                           
 17477 ;; *************** function _ENTER_DefaultInterruptHandler *****************
 17478 ;; Defined at:
 17479 ;;		line 445 in file "mcc_generated_files/system/src/pins.c"
 17480 ;; Parameters:    Size  Location     Type
 17481 ;;		None
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;		None
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  1    wreg      void 
 17486 ;; Registers used:
 17487 ;;		None
 17488 ;; Tracked objects:
 17489 ;;		On entry : 0/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17493 ;;      Params:         0       0       0       0       0       0       0       0       0
 17494 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17496 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17497 ;;Total ram usage:        0 bytes
 17498 ;; Hardware stack levels used: 1
 17499 ;; This function calls:
 17500 ;;		Nothing
 17501 ;; This function is called by:
 17502 ;;		_PIN_MANAGER_Initialize
 17503 ;;		_ENTER_ISR
 17504 ;; This function uses a non-reentrant model
 17505 ;;
 17506                           
 17507                           	psect	text73
 17508   003674                     __ptext73:
 17509                           	callstack 0
 17510   003674                     _ENTER_DefaultInterruptHandler:
 17511                           	callstack 118
 17512   003674  0012               	return		;funcret
 17513   003676                     __end_of_ENTER_DefaultInterruptHandler:
 17514                           	callstack 0
 17515                           
 17516 ;; *************** function _DOWN_ISR *****************
 17517 ;; Defined at:
 17518 ;;		line 181 in file "mcc_generated_files/system/src/pins.c"
 17519 ;; Parameters:    Size  Location     Type
 17520 ;;		None
 17521 ;; Auto vars:     Size  Location     Type
 17522 ;;		None
 17523 ;; Return value:  Size  Location     Type
 17524 ;;                  1    wreg      void 
 17525 ;; Registers used:
 17526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17527 ;; Tracked objects:
 17528 ;;		On entry : 0/0
 17529 ;;		On exit  : 0/0
 17530 ;;		Unchanged: 0/0
 17531 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17532 ;;      Params:         0       0       0       0       0       0       0       0       0
 17533 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17534 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17535 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17536 ;;Total ram usage:        2 bytes
 17537 ;; Hardware stack levels used: 1
 17538 ;; Hardware stack levels required when called: 5
 17539 ;; This function calls:
 17540 ;;		NULL
 17541 ;;		_DOWN_DefaultInterruptHandler
 17542 ;;		_Menu_HandleDown
 17543 ;; This function is called by:
 17544 ;;		_PIN_MANAGER_IOC
 17545 ;; This function uses a non-reentrant model
 17546 ;;
 17547                           
 17548                           	psect	text74
 17549   0026B6                     __ptext74:
 17550                           	callstack 0
 17551   0026B6                     _DOWN_ISR:
 17552                           	callstack 114
 17553   0026B6                     
 17554                           ;mcc_generated_files/system/src/pins.c: 183:     _delay((unsigned long)((20)*(64000000U/
      +                          4000.0)));
 17555   0026B6  0E02               	movlw	2
 17556   0026B8  6E1A               	movwf	(??_DOWN_ISR+1)^(0+1280),c
 17557   0026BA  0EA0               	movlw	160
 17558   0026BC  6E19               	movwf	??_DOWN_ISR^(0+1280),c
 17559   0026BE  0E92               	movlw	146
 17560   0026C0                     i2u697_47:
 17561   0026C0  2EE8               	decfsz	wreg,f,c
 17562   0026C2  D7FE               	bra	i2u697_47
 17563   0026C4  2E19               	decfsz	??_DOWN_ISR^(0+1280),f,c
 17564   0026C6  D7FC               	bra	i2u697_47
 17565   0026C8  2E1A               	decfsz	(??_DOWN_ISR+1)^(0+1280),f,c
 17566   0026CA  D7FA               	bra	i2u697_47
 17567   0026CC  D000               	nop2	
 17568   0026CE                     i2l625:
 17569   0026CE  B4CE               	btfsc	206,2,c	;volatile
 17570   0026D0  EF6C  F013         	goto	i2u587_41
 17571   0026D4  EF6E  F013         	goto	i2u587_40
 17572   0026D8                     i2u587_41:
 17573   0026D8  EF67  F013         	goto	i2l625
 17574   0026DC                     i2u587_40:
 17575   0026DC                     
 17576                           ;mcc_generated_files/system/src/pins.c: 185:     IOCAFbits.IOCAF2 = 0;
 17577   0026DC  0104               	movlb	4	; () banked
 17578   0026DE  9507               	bcf	7,2,b	;volatile
 17579   0026E0                     
 17580                           ; BSR set to: 4
 17581                           ;mcc_generated_files/system/src/pins.c: 187:     if (!menuMode)
 17582   0026E0  0105               	movlb	5	; () banked
 17583   0026E2  519B               	movf	_menuMode& (0+255),w,b	;volatile
 17584   0026E4  A4D8               	btfss	status,2,c
 17585   0026E6  EF77  F013         	goto	i2u588_41
 17586   0026EA  EF79  F013         	goto	i2u588_40
 17587   0026EE                     i2u588_41:
 17588   0026EE  EF7B  F013         	goto	i2l6720
 17589   0026F2                     i2u588_40:
 17590   0026F2  EF94  F013         	goto	i2l629
 17591   0026F6                     i2l6720:
 17592                           
 17593                           ; BSR set to: 5
 17594                           ;mcc_generated_files/system/src/pins.c: 191:     Menu_HandleDown();
 17595   0026F6  EC0C  F00D         	call	_Menu_HandleDown	;wreg free
 17596   0026FA                     
 17597                           ;mcc_generated_files/system/src/pins.c: 194:     if (DOWN_InterruptHandler) {
 17598   0026FA  0105               	movlb	5	; () banked
 17599   0026FC  51D6               	movf	_DOWN_InterruptHandler& (0+255),w,b
 17600   0026FE  11D7               	iorwf	(_DOWN_InterruptHandler+1)& (0+255),w,b
 17601   002700  B4D8               	btfsc	status,2,c
 17602   002702  EF85  F013         	goto	i2u589_41
 17603   002706  EF87  F013         	goto	i2u589_40
 17604   00270A                     i2u589_41:
 17605   00270A  EF94  F013         	goto	i2l629
 17606   00270E                     i2u589_40:
 17607   00270E                     
 17608                           ; BSR set to: 5
 17609                           ;mcc_generated_files/system/src/pins.c: 195:         DOWN_InterruptHandler();
 17610   00270E  D802               	call	i2u590_48
 17611   002710  EF94  F013         	goto	i2u590_49
 17612   002714                     i2u590_48:
 17613   002714  0005               	push	
 17614   002716  6EFA               	movwf	pclath,c
 17615   002718  51D6               	movf	_DOWN_InterruptHandler& (0+255),w,b
 17616   00271A  6EFD               	movwf	tosl,c
 17617   00271C  51D7               	movf	(_DOWN_InterruptHandler+1)& (0+255),w,b
 17618   00271E  6EFE               	movwf	tosh,c
 17619   002720  50F8               	movf	tblptru,w,c
 17620   002722  6EFF               	movwf	tosu,c
 17621   002724  50FA               	movf	pclath,w,c
 17622   002726  0012               	return		;indir
 17623   002728                     i2u590_49:
 17624   002728                     i2l629:
 17625   002728  0012               	return		;funcret
 17626   00272A                     __end_of_DOWN_ISR:
 17627                           	callstack 0
 17628                           
 17629 ;; *************** function _Menu_HandleDown *****************
 17630 ;; Defined at:
 17631 ;;		line 262 in file "menu.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;		None
 17634 ;; Auto vars:     Size  Location     Type
 17635 ;;		None
 17636 ;; Return value:  Size  Location     Type
 17637 ;;                  1    wreg      void 
 17638 ;; Registers used:
 17639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17640 ;; Tracked objects:
 17641 ;;		On entry : 0/0
 17642 ;;		On exit  : 0/0
 17643 ;;		Unchanged: 0/0
 17644 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17645 ;;      Params:         0       0       0       0       0       0       0       0       0
 17646 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17647 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17648 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17649 ;;Total ram usage:        0 bytes
 17650 ;; Hardware stack levels used: 1
 17651 ;; Hardware stack levels required when called: 4
 17652 ;; This function calls:
 17653 ;;		_Menu_AdjustOvercurrent
 17654 ;;		_Menu_AdjustSpeed
 17655 ;;		_Menu_AdjustTime
 17656 ;;		_Menu_PrintCurrentOption
 17657 ;;		___lwmod
 17658 ;; This function is called by:
 17659 ;;		_DOWN_ISR
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663                           	psect	text75
 17664   001A18                     __ptext75:
 17665                           	callstack 0
 17666   001A18                     _Menu_HandleDown:
 17667                           	callstack 114
 17668   001A18                     
 17669                           ;menu.c: 263:     if (systemState == STATE_MENU) {
 17670   001A18  045B               	decf	_systemState^(0+1280),w,c	;volatile
 17671   001A1A  A4D8               	btfss	status,2,c
 17672   001A1C  EF12  F00D         	goto	i2u454_41
 17673   001A20  EF14  F00D         	goto	i2u454_40
 17674   001A24                     i2u454_41:
 17675   001A24  EF28  F00D         	goto	i2l5710
 17676   001A28                     i2u454_40:
 17677   001A28                     
 17678                           ;menu.c: 264:         currentOption = (currentOption + 1) % MENU_OPTION_COUNT;
 17679   001A28  0E01               	movlw	1
 17680   001A2A  0105               	movlb	5	; () banked
 17681   001A2C  2592               	addwf	_currentOption& (0+255),w,b
 17682   001A2E  6E01               	movwf	___lwmod@dividend^(0+1280),c
 17683   001A30  6A02               	clrf	(___lwmod@dividend+1)^(0+1280),c
 17684   001A32  0E00               	movlw	0
 17685   001A34  2202               	addwfc	(___lwmod@dividend+1)^(0+1280),f,c
 17686   001A36  0E00               	movlw	0
 17687   001A38  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
 17688   001A3A  0E05               	movlw	5
 17689   001A3C  6E03               	movwf	___lwmod@divisor^(0+1280),c
 17690   001A3E  EC4B  F015         	call	___lwmod	;wreg free
 17691   001A42  5001               	movf	?___lwmod^(0+1280),w,c
 17692   001A44  0105               	movlb	5	; () banked
 17693   001A46  6F92               	movwf	_currentOption& (0+255),b
 17694   001A48                     
 17695                           ; BSR set to: 5
 17696                           ;menu.c: 265:         Menu_PrintCurrentOption();
 17697   001A48  ECE3  F00A         	call	_Menu_PrintCurrentOption	;wreg free
 17698                           
 17699                           ;menu.c: 266:     } else if (systemState == STATE_CONFIG && currentOption == MENU_OPTION
      +                          _OVERCURRENT) {
 17700   001A4C  EF6F  F00D         	goto	i2l1737
 17701   001A50                     i2l5710:
 17702   001A50  0E02               	movlw	2
 17703   001A52  185B               	xorwf	_systemState^(0+1280),w,c	;volatile
 17704   001A54  A4D8               	btfss	status,2,c
 17705   001A56  EF2F  F00D         	goto	i2u455_41
 17706   001A5A  EF31  F00D         	goto	i2u455_40
 17707   001A5E                     i2u455_41:
 17708   001A5E  EF40  F00D         	goto	i2l5716
 17709   001A62                     i2u455_40:
 17710   001A62  0E02               	movlw	2
 17711   001A64  0105               	movlb	5	; () banked
 17712   001A66  1992               	xorwf	_currentOption& (0+255),w,b
 17713   001A68  A4D8               	btfss	status,2,c
 17714   001A6A  EF39  F00D         	goto	i2u456_41
 17715   001A6E  EF3B  F00D         	goto	i2u456_40
 17716   001A72                     i2u456_41:
 17717   001A72  EF40  F00D         	goto	i2l5716
 17718   001A76                     i2u456_40:
 17719   001A76                     
 17720                           ; BSR set to: 5
 17721                           ;menu.c: 267:         Menu_AdjustOvercurrent(0);
 17722   001A76  0E00               	movlw	0
 17723   001A78  EC05  F010         	call	_Menu_AdjustOvercurrent
 17724                           
 17725                           ;menu.c: 268:     } else if (systemState == STATE_CONFIG && currentOption == MENU_OPTION
      +                          _SPEED) {
 17726   001A7C  EF6F  F00D         	goto	i2l1737
 17727   001A80                     i2l5716:
 17728   001A80  0E02               	movlw	2
 17729   001A82  185B               	xorwf	_systemState^(0+1280),w,c	;volatile
 17730   001A84  A4D8               	btfss	status,2,c
 17731   001A86  EF47  F00D         	goto	i2u457_41
 17732   001A8A  EF49  F00D         	goto	i2u457_40
 17733   001A8E                     i2u457_41:
 17734   001A8E  EF57  F00D         	goto	i2l5722
 17735   001A92                     i2u457_40:
 17736   001A92  0105               	movlb	5	; () banked
 17737   001A94  5192               	movf	_currentOption& (0+255),w,b
 17738   001A96  A4D8               	btfss	status,2,c
 17739   001A98  EF50  F00D         	goto	i2u458_41
 17740   001A9C  EF52  F00D         	goto	i2u458_40
 17741   001AA0                     i2u458_41:
 17742   001AA0  EF57  F00D         	goto	i2l5722
 17743   001AA4                     i2u458_40:
 17744   001AA4                     
 17745                           ; BSR set to: 5
 17746                           ;menu.c: 269:         Menu_AdjustSpeed(0);
 17747   001AA4  0E00               	movlw	0
 17748   001AA6  EC5C  F011         	call	_Menu_AdjustSpeed
 17749                           
 17750                           ;menu.c: 270:     } else if (systemState == STATE_CONFIG && currentOption == MENU_OPTION
      +                          _TIME) {
 17751   001AAA  EF6F  F00D         	goto	i2l1737
 17752   001AAE                     i2l5722:
 17753   001AAE  0E02               	movlw	2
 17754   001AB0  185B               	xorwf	_systemState^(0+1280),w,c	;volatile
 17755   001AB2  A4D8               	btfss	status,2,c
 17756   001AB4  EF5E  F00D         	goto	i2u459_41
 17757   001AB8  EF60  F00D         	goto	i2u459_40
 17758   001ABC                     i2u459_41:
 17759   001ABC  EF6F  F00D         	goto	i2l1733
 17760   001AC0                     i2u459_40:
 17761   001AC0  0E03               	movlw	3
 17762   001AC2  0105               	movlb	5	; () banked
 17763   001AC4  1992               	xorwf	_currentOption& (0+255),w,b
 17764   001AC6  A4D8               	btfss	status,2,c
 17765   001AC8  EF68  F00D         	goto	i2u460_41
 17766   001ACC  EF6A  F00D         	goto	i2u460_40
 17767   001AD0                     i2u460_41:
 17768   001AD0  EF6F  F00D         	goto	i2l1733
 17769   001AD4                     i2u460_40:
 17770   001AD4                     
 17771                           ; BSR set to: 5
 17772                           ;menu.c: 271:         Menu_AdjustTime(0);
 17773   001AD4  0E00               	movlw	0
 17774   001AD6  ECAD  F00F         	call	_Menu_AdjustTime
 17775   001ADA  EF6F  F00D         	goto	i2l1737
 17776   001ADE                     i2l1733:
 17777   001ADE                     i2l1737:
 17778   001ADE  0012               	return		;funcret
 17779   001AE0                     __end_of_Menu_HandleDown:
 17780                           	callstack 0
 17781                           
 17782 ;; *************** function _Menu_AdjustTime *****************
 17783 ;; Defined at:
 17784 ;;		line 125 in file "menu.c"
 17785 ;; Parameters:    Size  Location     Type
 17786 ;;  increase        1    wreg     _Bool 
 17787 ;; Auto vars:     Size  Location     Type
 17788 ;;  increase        1   22[COMRAM] _Bool 
 17789 ;;  label           5   17[COMRAM] unsigned char [5]
 17790 ;; Return value:  Size  Location     Type
 17791 ;;                  1    wreg      void 
 17792 ;; Registers used:
 17793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17794 ;; Tracked objects:
 17795 ;;		On entry : 0/0
 17796 ;;		On exit  : 0/0
 17797 ;;		Unchanged: 0/0
 17798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17799 ;;      Params:         0       0       0       0       0       0       0       0       0
 17800 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17801 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17802 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17803 ;;Total ram usage:        6 bytes
 17804 ;; Hardware stack levels used: 1
 17805 ;; Hardware stack levels required when called: 3
 17806 ;; This function calls:
 17807 ;;		_DEBUG_PRINT_INT@debug$F3089
 17808 ;;		___lwdiv
 17809 ;;		i2_displayString
 17810 ;; This function is called by:
 17811 ;;		_Menu_HandleUp
 17812 ;;		_Menu_HandleDown
 17813 ;; This function uses a non-reentrant model
 17814 ;;
 17815                           
 17816                           	psect	text76
 17817   001F5A                     __ptext76:
 17818                           	callstack 0
 17819   001F5A                     _Menu_AdjustTime:
 17820                           	callstack 114
 17821                           
 17822                           ;incstack = 0
 17823                           ;Menu_AdjustTime@increase stored from wreg
 17824   001F5A  6E17               	movwf	Menu_AdjustTime@increase^(0+1280),c
 17825   001F5C                     
 17826                           ;menu.c: 126:     if (increase && timeAuto < 9000) {
 17827   001F5C  5017               	movf	Menu_AdjustTime@increase^(0+1280),w,c
 17828   001F5E  B4D8               	btfsc	status,2,c
 17829   001F60  EFB4  F00F         	goto	i2u442_41
 17830   001F64  EFB6  F00F         	goto	i2u442_40
 17831   001F68                     i2u442_41:
 17832   001F68  EFC8  F00F         	goto	i2l5616
 17833   001F6C                     i2u442_40:
 17834   001F6C  0E28               	movlw	40
 17835   001F6E  0105               	movlb	5	; () banked
 17836   001F70  5D78               	subwf	_timeAuto& (0+255),w,b	;volatile
 17837   001F72  0E23               	movlw	35
 17838   001F74  5979               	subwfb	(_timeAuto+1)& (0+255),w,b	;volatile
 17839   001F76  B0D8               	btfsc	status,0,c
 17840   001F78  EFC0  F00F         	goto	i2u443_41
 17841   001F7C  EFC2  F00F         	goto	i2u443_40
 17842   001F80                     i2u443_41:
 17843   001F80  EFC8  F00F         	goto	i2l5616
 17844   001F84                     i2u443_40:
 17845   001F84                     
 17846                           ; BSR set to: 5
 17847                           ;menu.c: 127:         timeAuto += 1000;
 17848   001F84  0EE8               	movlw	232
 17849   001F86  2778               	addwf	_timeAuto& (0+255),f,b	;volatile
 17850   001F88  0E03               	movlw	3
 17851   001F8A  2379               	addwfc	(_timeAuto+1)& (0+255),f,b	;volatile
 17852                           
 17853                           ;menu.c: 128:     } else if (!increase && timeAuto > 1000) {
 17854   001F8C  EFE0  F00F         	goto	i2l5622
 17855   001F90                     i2l5616:
 17856   001F90  5017               	movf	Menu_AdjustTime@increase^(0+1280),w,c
 17857   001F92  A4D8               	btfss	status,2,c
 17858   001F94  EFCE  F00F         	goto	i2u444_41
 17859   001F98  EFD0  F00F         	goto	i2u444_40
 17860   001F9C                     i2u444_41:
 17861   001F9C  EF04  F010         	goto	i2l1689
 17862   001FA0                     i2u444_40:
 17863   001FA0  0EE9               	movlw	233
 17864   001FA2  0105               	movlb	5	; () banked
 17865   001FA4  5D78               	subwf	_timeAuto& (0+255),w,b	;volatile
 17866   001FA6  0E03               	movlw	3
 17867   001FA8  5979               	subwfb	(_timeAuto+1)& (0+255),w,b	;volatile
 17868   001FAA  A0D8               	btfss	status,0,c
 17869   001FAC  EFDA  F00F         	goto	i2u445_41
 17870   001FB0  EFDC  F00F         	goto	i2u445_40
 17871   001FB4                     i2u445_41:
 17872   001FB4  EF04  F010         	goto	i2l1689
 17873   001FB8                     i2u445_40:
 17874   001FB8                     
 17875                           ; BSR set to: 5
 17876                           ;menu.c: 129:         timeAuto -= 1000;
 17877   001FB8  0EE8               	movlw	232
 17878   001FBA  5F78               	subwf	_timeAuto& (0+255),f,b	;volatile
 17879   001FBC  0E03               	movlw	3
 17880   001FBE  5B79               	subwfb	(_timeAuto+1)& (0+255),f,b	;volatile
 17881   001FC0                     i2l5622:
 17882                           
 17883                           ; BSR set to: 5
 17884                           ;menu.c: 134:     char label[5] = "TME ";
 17885   001FC0  EE21  F1A7         	lfsr	2,Menu_AdjustTime@F14581
 17886   001FC4  EE11  F112         	lfsr	1,Menu_AdjustTime@label
 17887   001FC8  0E04               	movlw	4
 17888   001FCA                     i2u446_41:
 17889   001FCA  C4DB F4E3          	movff	plusw2,plusw1
 17890   001FCE  06E8               	decf	wreg,f,c
 17891   001FD0  E2FC               	bc	i2u446_41
 17892   001FD2                     
 17893                           ; BSR set to: 5
 17894                           ;menu.c: 135:     label[3] = '0' + (timeAuto / 1000);
 17895   001FD2  C578  F501         	movff	_timeAuto,___lwdiv@dividend	;volatile
 17896   001FD6  C579  F502         	movff	_timeAuto+1,___lwdiv@dividend+1	;volatile
 17897   001FDA  0E03               	movlw	3
 17898   001FDC  6E04               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 17899   001FDE  0EE8               	movlw	232
 17900   001FE0  6E03               	movwf	___lwdiv@divisor^(0+1280),c
 17901   001FE2  ECCF  F013         	call	___lwdiv	;wreg free
 17902   001FE6  5001               	movf	?___lwdiv^(0+1280),w,c
 17903   001FE8  0F30               	addlw	48
 17904   001FEA  6E15               	movwf	(Menu_AdjustTime@label+3)^(0+1280),c
 17905   001FEC                     
 17906                           ;menu.c: 136:     displayString(label, 0);
 17907   001FEC  0E12               	movlw	low Menu_AdjustTime@label
 17908   001FEE  6E0B               	movwf	i2displayString@str^(0+1280),c
 17909   001FF0  0E05               	movlw	high Menu_AdjustTime@label
 17910   001FF2  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 17911   001FF4  0E00               	movlw	0
 17912   001FF6  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 17913   001FF8  EC3A  F00C         	call	i2_displayString	;wreg free
 17914   001FFC                     
 17915                           ;menu.c: 139:     DEBUG_PRINT_INT(timeAuto);
 17916   001FFC  C578  F501         	movff	_timeAuto,DEBUG_PRINT_INT@debug$F3089@value	;volatile
 17917   002000  C579  F502         	movff	_timeAuto+1,DEBUG_PRINT_INT@debug$F3089@value+1	;volatile
 17918   002004  EC3C  F01B         	call	_DEBUG_PRINT_INT@debug$F3089	;wreg free
 17919   002008                     i2l1689:
 17920   002008  0012               	return		;funcret
 17921   00200A                     __end_of_Menu_AdjustTime:
 17922                           	callstack 0
 17923                           
 17924 ;; *************** function _Menu_AdjustSpeed *****************
 17925 ;; Defined at:
 17926 ;;		line 85 in file "menu.c"
 17927 ;; Parameters:    Size  Location     Type
 17928 ;;  increase        1    wreg     _Bool 
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;  increase        1   23[COMRAM] _Bool 
 17931 ;;  label           5   18[COMRAM] unsigned char [5]
 17932 ;; Return value:  Size  Location     Type
 17933 ;;                  1    wreg      void 
 17934 ;; Registers used:
 17935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17936 ;; Tracked objects:
 17937 ;;		On entry : 0/0
 17938 ;;		On exit  : 0/0
 17939 ;;		Unchanged: 0/0
 17940 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 17941 ;;      Params:         0       0       0       0       0       0       0       0       0
 17942 ;;      Locals:         6       0       0       0       0       0       0       0       0
 17943 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17944 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17945 ;;Total ram usage:        6 bytes
 17946 ;; Hardware stack levels used: 1
 17947 ;; Hardware stack levels required when called: 3
 17948 ;; This function calls:
 17949 ;;		_DEBUG_PRINT_INT@debug$F3089
 17950 ;;		_Motor_UpdateSpeedLevel
 17951 ;;		i2_displayString
 17952 ;; This function is called by:
 17953 ;;		_Menu_HandleUp
 17954 ;;		_Menu_HandleDown
 17955 ;; This function uses a non-reentrant model
 17956 ;;
 17957                           
 17958                           	psect	text77
 17959   0022B8                     __ptext77:
 17960                           	callstack 0
 17961   0022B8                     _Menu_AdjustSpeed:
 17962                           	callstack 114
 17963                           
 17964                           ;incstack = 0
 17965                           ;Menu_AdjustSpeed@increase stored from wreg
 17966   0022B8  6E18               	movwf	Menu_AdjustSpeed@increase^(0+1280),c
 17967   0022BA                     
 17968                           ;menu.c: 86:     if (increase && speedLevel < 8) {
 17969   0022BA  5018               	movf	Menu_AdjustSpeed@increase^(0+1280),w,c
 17970   0022BC  B4D8               	btfsc	status,2,c
 17971   0022BE  EF63  F011         	goto	i2u432_41
 17972   0022C2  EF65  F011         	goto	i2u432_40
 17973   0022C6                     i2u432_41:
 17974   0022C6  EF71  F011         	goto	i2l5572
 17975   0022CA                     i2u432_40:
 17976   0022CA  0E08               	movlw	8
 17977   0022CC  0105               	movlb	5	; () banked
 17978   0022CE  61C5               	cpfslt	_speedLevel& (0+255),b
 17979   0022D0  EF6C  F011         	goto	i2u433_41
 17980   0022D4  EF6E  F011         	goto	i2u433_40
 17981   0022D8                     i2u433_41:
 17982   0022D8  EF71  F011         	goto	i2l5572
 17983   0022DC                     i2u433_40:
 17984   0022DC                     
 17985                           ; BSR set to: 5
 17986                           ;menu.c: 87:         speedLevel++;
 17987   0022DC  2BC5               	incf	_speedLevel& (0+255),f,b
 17988                           
 17989                           ;menu.c: 88:     } else if (!increase && speedLevel > 0) {
 17990   0022DE  EF83  F011         	goto	i2l5578
 17991   0022E2                     i2l5572:
 17992   0022E2  5018               	movf	Menu_AdjustSpeed@increase^(0+1280),w,c
 17993   0022E4  A4D8               	btfss	status,2,c
 17994   0022E6  EF77  F011         	goto	i2u434_41
 17995   0022EA  EF79  F011         	goto	i2u434_40
 17996   0022EE                     i2u434_41:
 17997   0022EE  EFA5  F011         	goto	i2l1671
 17998   0022F2                     i2u434_40:
 17999   0022F2  0105               	movlb	5	; () banked
 18000   0022F4  51C5               	movf	_speedLevel& (0+255),w,b
 18001   0022F6  B4D8               	btfsc	status,2,c
 18002   0022F8  EF80  F011         	goto	i2u435_41
 18003   0022FC  EF82  F011         	goto	i2u435_40
 18004   002300                     i2u435_41:
 18005   002300  EFA5  F011         	goto	i2l1671
 18006   002304                     i2u435_40:
 18007   002304                     
 18008                           ; BSR set to: 5
 18009                           ;menu.c: 89:         speedLevel--;
 18010   002304  07C5               	decf	_speedLevel& (0+255),f,b
 18011   002306                     i2l5578:
 18012                           
 18013                           ; BSR set to: 5
 18014                           ;menu.c: 94:     Motor_UpdateSpeedLevel();
 18015   002306  EC22  F017         	call	_Motor_UpdateSpeedLevel	;wreg free
 18016   00230A                     
 18017                           ;menu.c: 96:     char label[5] = "SPD ";
 18018   00230A  EE21  F1B1         	lfsr	2,Menu_AdjustSpeed@F14573
 18019   00230E  EE11  F113         	lfsr	1,Menu_AdjustSpeed@label
 18020   002312  0E04               	movlw	4
 18021   002314                     i2u436_41:
 18022   002314  C4DB F4E3          	movff	plusw2,plusw1
 18023   002318  06E8               	decf	wreg,f,c
 18024   00231A  E2FC               	bc	i2u436_41
 18025   00231C                     
 18026                           ;menu.c: 97:     label[3] = '0' + speedLevel;
 18027   00231C  0105               	movlb	5	; () banked
 18028   00231E  51C5               	movf	_speedLevel& (0+255),w,b
 18029   002320  0F30               	addlw	48
 18030   002322  6E16               	movwf	(Menu_AdjustSpeed@label+3)^(0+1280),c
 18031   002324                     
 18032                           ; BSR set to: 5
 18033                           ;menu.c: 98:     displayString(label, 0);
 18034   002324  0E13               	movlw	low Menu_AdjustSpeed@label
 18035   002326  6E0B               	movwf	i2displayString@str^(0+1280),c
 18036   002328  0E05               	movlw	high Menu_AdjustSpeed@label
 18037   00232A  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 18038   00232C  0E00               	movlw	0
 18039   00232E  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 18040   002330  EC3A  F00C         	call	i2_displayString	;wreg free
 18041   002334                     
 18042                           ;menu.c: 101:     DEBUG_PRINT_INT(speedLevel);
 18043   002334  C5C5  F501         	movff	_speedLevel,DEBUG_PRINT_INT@debug$F3089@value
 18044   002338  6A02               	clrf	(DEBUG_PRINT_INT@debug$F3089@value+1)^(0+1280),c
 18045   00233A  EC3C  F01B         	call	_DEBUG_PRINT_INT@debug$F3089	;wreg free
 18046   00233E                     
 18047                           ;menu.c: 103:     DEBUG_PRINT_INT(pwmPeriod);
 18048   00233E  C5BF  F501         	movff	_pwmPeriod,DEBUG_PRINT_INT@debug$F3089@value
 18049   002342  C5C0  F502         	movff	_pwmPeriod+1,DEBUG_PRINT_INT@debug$F3089@value+1
 18050   002346  EC3C  F01B         	call	_DEBUG_PRINT_INT@debug$F3089	;wreg free
 18051   00234A                     i2l1671:
 18052   00234A  0012               	return		;funcret
 18053   00234C                     __end_of_Menu_AdjustSpeed:
 18054                           	callstack 0
 18055                           
 18056 ;; *************** function _Motor_UpdateSpeedLevel *****************
 18057 ;; Defined at:
 18058 ;;		line 34 in file "motor.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;		None
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;  speedTable     18    0[COMRAM] const unsigned short [9]
 18063 ;; Return value:  Size  Location     Type
 18064 ;;                  1    wreg      void 
 18065 ;; Registers used:
 18066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18067 ;; Tracked objects:
 18068 ;;		On entry : 0/0
 18069 ;;		On exit  : 0/0
 18070 ;;		Unchanged: 0/0
 18071 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18072 ;;      Params:         0       0       0       0       0       0       0       0       0
 18073 ;;      Locals:        18       0       0       0       0       0       0       0       0
 18074 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18075 ;;      Totals:        18       0       0       0       0       0       0       0       0
 18076 ;;Total ram usage:       18 bytes
 18077 ;; Hardware stack levels used: 1
 18078 ;; This function calls:
 18079 ;;		Nothing
 18080 ;; This function is called by:
 18081 ;;		_Menu_AdjustSpeed
 18082 ;; This function uses a non-reentrant model
 18083 ;;
 18084                           
 18085                           	psect	text78
 18086   002E44                     __ptext78:
 18087                           	callstack 0
 18088   002E44                     _Motor_UpdateSpeedLevel:
 18089                           	callstack 116
 18090   002E44                     
 18091                           ;motor.c: 36:     const uint16_t speedTable[] = {1000, 1500, 2000, 2500, 3000, 3500, 400
      +                          0, 4500, 5000};
 18092   002E44  0EB5               	movlw	low Motor_UpdateSpeedLevel@F14403
 18093   002E46  6EF6               	movwf	tblptrl,c
 18094   002E48                     	if	1	;There is more than 1 active tblptr byte
 18095   002E48  0E7E               	movlw	high Motor_UpdateSpeedLevel@F14403
 18096   002E4A  6EF7               	movwf	tblptrh,c
 18097   002E4C                     	endif
 18098   002E4C                     	if	0	;There are less than 3 active tblptr bytes
 18099   002E4C                     	endif
 18100   002E4C  EE21  F101         	lfsr	2,Motor_UpdateSpeedLevel@speedTable
 18101   002E50  0E11               	movlw	17
 18102   002E52                     i2u381_40:
 18103   002E52  0009               	tblrd		*+
 18104   002E54  C4F5 F4DE          	movff	tablat,postinc2
 18105   002E58  06E8               	decf	wreg,f,c
 18106   002E5A  E2FB               	bc	i2u381_40
 18107   002E5C                     
 18108                           ;motor.c: 38:     if (speedLevel > 8) speedLevel = 8;
 18109   002E5C  0E08               	movlw	8
 18110   002E5E  0105               	movlb	5	; () banked
 18111   002E60  65C5               	cpfsgt	_speedLevel& (0+255),b
 18112   002E62  EF35  F017         	goto	i2u382_41
 18113   002E66  EF37  F017         	goto	i2u382_40
 18114   002E6A                     i2u382_41:
 18115   002E6A  EF39  F017         	goto	i2l5238
 18116   002E6E                     i2u382_40:
 18117   002E6E                     
 18118                           ; BSR set to: 5
 18119   002E6E  0E08               	movlw	8
 18120   002E70  6FC5               	movwf	_speedLevel& (0+255),b
 18121   002E72                     i2l5238:
 18122                           
 18123                           ; BSR set to: 5
 18124                           ;motor.c: 39:     pwmPeriod = speedTable[speedLevel];
 18125   002E72  51C5               	movf	_speedLevel& (0+255),w,b
 18126   002E74  0D02               	mullw	2
 18127   002E76  0E01               	movlw	low Motor_UpdateSpeedLevel@speedTable
 18128   002E78  24F3               	addwf	243,w,c
 18129   002E7A  6ED9               	movwf	fsr2l,c
 18130   002E7C  0E05               	movlw	high Motor_UpdateSpeedLevel@speedTable
 18131   002E7E  20F4               	addwfc	prodh,w,c
 18132   002E80  6EDA               	movwf	fsr2h,c
 18133   002E82  C4DE F5BF          	movff	postinc2,_pwmPeriod
 18134   002E86  C4DD F5C0          	movff	postdec2,_pwmPeriod+1
 18135   002E8A                     
 18136                           ; BSR set to: 5
 18137   002E8A  0012               	return		;funcret
 18138   002E8C                     __end_of_Motor_UpdateSpeedLevel:
 18139                           	callstack 0
 18140                           
 18141 ;; *************** function _Menu_AdjustOvercurrent *****************
 18142 ;; Defined at:
 18143 ;;		line 107 in file "menu.c"
 18144 ;; Parameters:    Size  Location     Type
 18145 ;;  increase        1    wreg     _Bool 
 18146 ;; Auto vars:     Size  Location     Type
 18147 ;;  increase        1   22[COMRAM] _Bool 
 18148 ;;  label           5   17[COMRAM] unsigned char [5]
 18149 ;; Return value:  Size  Location     Type
 18150 ;;                  1    wreg      void 
 18151 ;; Registers used:
 18152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18153 ;; Tracked objects:
 18154 ;;		On entry : 0/0
 18155 ;;		On exit  : 0/0
 18156 ;;		Unchanged: 0/0
 18157 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18158 ;;      Params:         0       0       0       0       0       0       0       0       0
 18159 ;;      Locals:         6       0       0       0       0       0       0       0       0
 18160 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18161 ;;      Totals:         6       0       0       0       0       0       0       0       0
 18162 ;;Total ram usage:        6 bytes
 18163 ;; Hardware stack levels used: 1
 18164 ;; Hardware stack levels required when called: 3
 18165 ;; This function calls:
 18166 ;;		_DEBUG_PRINT_INT@debug$F3089
 18167 ;;		___lwdiv
 18168 ;;		i2_displayString
 18169 ;; This function is called by:
 18170 ;;		_Menu_HandleUp
 18171 ;;		_Menu_HandleDown
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175                           	psect	text79
 18176   00200A                     __ptext79:
 18177                           	callstack 0
 18178   00200A                     _Menu_AdjustOvercurrent:
 18179                           	callstack 114
 18180                           
 18181                           ; BSR set to: 5
 18182                           ;incstack = 0
 18183                           ;Menu_AdjustOvercurrent@increase stored from wreg
 18184   00200A  6E17               	movwf	Menu_AdjustOvercurrent@increase^(0+1280),c
 18185   00200C                     
 18186                           ;menu.c: 108:     if (increase && overcurrentThreshold < 9000) {
 18187   00200C  5017               	movf	Menu_AdjustOvercurrent@increase^(0+1280),w,c
 18188   00200E  B4D8               	btfsc	status,2,c
 18189   002010  EF0C  F010         	goto	i2u437_41
 18190   002014  EF0E  F010         	goto	i2u437_40
 18191   002018                     i2u437_41:
 18192   002018  EF20  F010         	goto	i2l5596
 18193   00201C                     i2u437_40:
 18194   00201C  0E28               	movlw	40
 18195   00201E  0105               	movlb	5	; () banked
 18196   002020  5DC3               	subwf	_overcurrentThreshold& (0+255),w,b	;volatile
 18197   002022  0E23               	movlw	35
 18198   002024  59C4               	subwfb	(_overcurrentThreshold+1)& (0+255),w,b	;volatile
 18199   002026  B0D8               	btfsc	status,0,c
 18200   002028  EF18  F010         	goto	i2u438_41
 18201   00202C  EF1A  F010         	goto	i2u438_40
 18202   002030                     i2u438_41:
 18203   002030  EF20  F010         	goto	i2l5596
 18204   002034                     i2u438_40:
 18205   002034                     
 18206                           ; BSR set to: 5
 18207                           ;menu.c: 109:         overcurrentThreshold += 1000;
 18208   002034  0EE8               	movlw	232
 18209   002036  27C3               	addwf	_overcurrentThreshold& (0+255),f,b	;volatile
 18210   002038  0E03               	movlw	3
 18211   00203A  23C4               	addwfc	(_overcurrentThreshold+1)& (0+255),f,b	;volatile
 18212                           
 18213                           ;menu.c: 110:     } else if (!increase && overcurrentThreshold > 1000) {
 18214   00203C  EF38  F010         	goto	i2l5602
 18215   002040                     i2l5596:
 18216   002040  5017               	movf	Menu_AdjustOvercurrent@increase^(0+1280),w,c
 18217   002042  A4D8               	btfss	status,2,c
 18218   002044  EF26  F010         	goto	i2u439_41
 18219   002048  EF28  F010         	goto	i2u439_40
 18220   00204C                     i2u439_41:
 18221   00204C  EF5C  F010         	goto	i2l1680
 18222   002050                     i2u439_40:
 18223   002050  0EE9               	movlw	233
 18224   002052  0105               	movlb	5	; () banked
 18225   002054  5DC3               	subwf	_overcurrentThreshold& (0+255),w,b	;volatile
 18226   002056  0E03               	movlw	3
 18227   002058  59C4               	subwfb	(_overcurrentThreshold+1)& (0+255),w,b	;volatile
 18228   00205A  A0D8               	btfss	status,0,c
 18229   00205C  EF32  F010         	goto	i2u440_41
 18230   002060  EF34  F010         	goto	i2u440_40
 18231   002064                     i2u440_41:
 18232   002064  EF5C  F010         	goto	i2l1680
 18233   002068                     i2u440_40:
 18234   002068                     
 18235                           ; BSR set to: 5
 18236                           ;menu.c: 111:         overcurrentThreshold -= 1000;
 18237   002068  0EE8               	movlw	232
 18238   00206A  5FC3               	subwf	_overcurrentThreshold& (0+255),f,b	;volatile
 18239   00206C  0E03               	movlw	3
 18240   00206E  5BC4               	subwfb	(_overcurrentThreshold+1)& (0+255),f,b	;volatile
 18241   002070                     i2l5602:
 18242                           
 18243                           ; BSR set to: 5
 18244                           ;menu.c: 116:     char label[5] = "OVR ";
 18245   002070  EE21  F1AC         	lfsr	2,Menu_AdjustOvercurrent@F14577
 18246   002074  EE11  F112         	lfsr	1,Menu_AdjustOvercurrent@label
 18247   002078  0E04               	movlw	4
 18248   00207A                     i2u441_41:
 18249   00207A  C4DB F4E3          	movff	plusw2,plusw1
 18250   00207E  06E8               	decf	wreg,f,c
 18251   002080  E2FC               	bc	i2u441_41
 18252   002082                     
 18253                           ; BSR set to: 5
 18254                           ;menu.c: 117:     label[3] = '0' + (overcurrentThreshold / 1000);
 18255   002082  C5C3  F501         	movff	_overcurrentThreshold,___lwdiv@dividend	;volatile
 18256   002086  C5C4  F502         	movff	_overcurrentThreshold+1,___lwdiv@dividend+1	;volatile
 18257   00208A  0E03               	movlw	3
 18258   00208C  6E04               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 18259   00208E  0EE8               	movlw	232
 18260   002090  6E03               	movwf	___lwdiv@divisor^(0+1280),c
 18261   002092  ECCF  F013         	call	___lwdiv	;wreg free
 18262   002096  5001               	movf	?___lwdiv^(0+1280),w,c
 18263   002098  0F30               	addlw	48
 18264   00209A  6E15               	movwf	(Menu_AdjustOvercurrent@label+3)^(0+1280),c
 18265   00209C                     
 18266                           ;menu.c: 118:     displayString(label, 0);
 18267   00209C  0E12               	movlw	low Menu_AdjustOvercurrent@label
 18268   00209E  6E0B               	movwf	i2displayString@str^(0+1280),c
 18269   0020A0  0E05               	movlw	high Menu_AdjustOvercurrent@label
 18270   0020A2  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 18271   0020A4  0E00               	movlw	0
 18272   0020A6  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 18273   0020A8  EC3A  F00C         	call	i2_displayString	;wreg free
 18274   0020AC                     
 18275                           ;menu.c: 121:     DEBUG_PRINT_INT(overcurrentThreshold);
 18276   0020AC  C5C3  F501         	movff	_overcurrentThreshold,DEBUG_PRINT_INT@debug$F3089@value	;volatile
 18277   0020B0  C5C4  F502         	movff	_overcurrentThreshold+1,DEBUG_PRINT_INT@debug$F3089@value+1	;volatile
 18278   0020B4  EC3C  F01B         	call	_DEBUG_PRINT_INT@debug$F3089	;wreg free
 18279   0020B8                     i2l1680:
 18280   0020B8  0012               	return		;funcret
 18281   0020BA                     __end_of_Menu_AdjustOvercurrent:
 18282                           	callstack 0
 18283                           
 18284 ;; *************** function _DOWN_DefaultInterruptHandler *****************
 18285 ;; Defined at:
 18286 ;;		line 205 in file "mcc_generated_files/system/src/pins.c"
 18287 ;; Parameters:    Size  Location     Type
 18288 ;;		None
 18289 ;; Auto vars:     Size  Location     Type
 18290 ;;		None
 18291 ;; Return value:  Size  Location     Type
 18292 ;;                  1    wreg      void 
 18293 ;; Registers used:
 18294 ;;		None
 18295 ;; Tracked objects:
 18296 ;;		On entry : 0/0
 18297 ;;		On exit  : 0/0
 18298 ;;		Unchanged: 0/0
 18299 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18300 ;;      Params:         0       0       0       0       0       0       0       0       0
 18301 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18302 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18303 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18304 ;;Total ram usage:        0 bytes
 18305 ;; Hardware stack levels used: 1
 18306 ;; This function calls:
 18307 ;;		Nothing
 18308 ;; This function is called by:
 18309 ;;		_PIN_MANAGER_Initialize
 18310 ;;		_DOWN_ISR
 18311 ;; This function uses a non-reentrant model
 18312 ;;
 18313                           
 18314                           	psect	text80
 18315   003676                     __ptext80:
 18316                           	callstack 0
 18317   003676                     _DOWN_DefaultInterruptHandler:
 18318                           	callstack 118
 18319   003676  0012               	return		;funcret
 18320   003678                     __end_of_DOWN_DefaultInterruptHandler:
 18321                           	callstack 0
 18322                           
 18323 ;; *************** function _BUTTON_ISR *****************
 18324 ;; Defined at:
 18325 ;;		line 380 in file "mcc_generated_files/system/src/pins.c"
 18326 ;; Parameters:    Size  Location     Type
 18327 ;;		None
 18328 ;; Auto vars:     Size  Location     Type
 18329 ;;		None
 18330 ;; Return value:  Size  Location     Type
 18331 ;;                  1    wreg      void 
 18332 ;; Registers used:
 18333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18334 ;; Tracked objects:
 18335 ;;		On entry : 0/0
 18336 ;;		On exit  : 0/0
 18337 ;;		Unchanged: 0/0
 18338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18339 ;;      Params:         0       0       0       0       0       0       0       0       0
 18340 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18341 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18342 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18343 ;;Total ram usage:        2 bytes
 18344 ;; Hardware stack levels used: 1
 18345 ;; Hardware stack levels required when called: 9
 18346 ;; This function calls:
 18347 ;;		_HandleButtonMenuConfig
 18348 ;;		_MotorControl
 18349 ;; This function is called by:
 18350 ;;		_PIN_MANAGER_IOC
 18351 ;; This function uses a non-reentrant model
 18352 ;;
 18353                           
 18354                           	psect	text81
 18355   0029CC                     __ptext81:
 18356                           	callstack 0
 18357   0029CC                     _BUTTON_ISR:
 18358                           	callstack 110
 18359   0029CC                     
 18360                           ;mcc_generated_files/system/src/pins.c: 382:      _delay((unsigned long)((20)*(64000000U
      +                          /4000.0)));
 18361   0029CC  0E02               	movlw	2
 18362   0029CE  6E22               	movwf	(??_BUTTON_ISR+1)^(0+1280),c
 18363   0029D0  0EA0               	movlw	160
 18364   0029D2  6E21               	movwf	??_BUTTON_ISR^(0+1280),c
 18365   0029D4  0E92               	movlw	146
 18366   0029D6                     i2u698_47:
 18367   0029D6  2EE8               	decfsz	wreg,f,c
 18368   0029D8  D7FE               	bra	i2u698_47
 18369   0029DA  2E21               	decfsz	??_BUTTON_ISR^(0+1280),f,c
 18370   0029DC  D7FC               	bra	i2u698_47
 18371   0029DE  2E22               	decfsz	(??_BUTTON_ISR+1)^(0+1280),f,c
 18372   0029E0  D7FA               	bra	i2u698_47
 18373   0029E2  D000               	nop2	
 18374   0029E4                     i2l701:
 18375   0029E4  B4D0               	btfsc	208,2,c	;volatile
 18376   0029E6  EFF7  F014         	goto	i2u614_41
 18377   0029EA  EFF9  F014         	goto	i2u614_40
 18378   0029EE                     i2u614_41:
 18379   0029EE  EFF2  F014         	goto	i2l701
 18380   0029F2                     i2u614_40:
 18381   0029F2                     
 18382                           ;mcc_generated_files/system/src/pins.c: 384:     IOCCFbits.IOCCF2 = 0;
 18383   0029F2  0104               	movlb	4	; () banked
 18384   0029F4  9517               	bcf	23,2,b	;volatile
 18385   0029F6                     
 18386                           ; BSR set to: 4
 18387                           ;mcc_generated_files/system/src/pins.c: 388:     if (menuMode) {
 18388   0029F6  0105               	movlb	5	; () banked
 18389   0029F8  519B               	movf	_menuMode& (0+255),w,b	;volatile
 18390   0029FA  B4D8               	btfsc	status,2,c
 18391   0029FC  EF02  F015         	goto	i2u615_41
 18392   002A00  EF04  F015         	goto	i2u615_40
 18393   002A04                     i2u615_41:
 18394   002A04  EF08  F015         	goto	i2l6806
 18395   002A08                     i2u615_40:
 18396   002A08                     
 18397                           ; BSR set to: 5
 18398                           ;mcc_generated_files/system/src/pins.c: 390:         HandleButtonMenuConfig();
 18399   002A08  ECD2  F00D         	call	_HandleButtonMenuConfig	;wreg free
 18400                           
 18401                           ;mcc_generated_files/system/src/pins.c: 391:     } else if (!configDone) {
 18402   002A0C  EF18  F015         	goto	i2l707
 18403   002A10                     i2l6806:
 18404                           
 18405                           ; BSR set to: 5
 18406   002A10  5199               	movf	_configDone& (0+255),w,b	;volatile
 18407   002A12  A4D8               	btfss	status,2,c
 18408   002A14  EF0E  F015         	goto	i2u616_41
 18409   002A18  EF10  F015         	goto	i2u616_40
 18410   002A1C                     i2u616_41:
 18411   002A1C  EF12  F015         	goto	i2l6812
 18412   002A20                     i2u616_40:
 18413   002A20  EF18  F015         	goto	i2l707
 18414   002A24                     i2l6812:
 18415                           
 18416                           ; BSR set to: 5
 18417                           ;mcc_generated_files/system/src/pins.c: 397:         userRequest = 1;
 18418   002A24  0E00               	movlw	0
 18419   002A26  6F8F               	movwf	(_userRequest+1)& (0+255),b	;volatile
 18420   002A28  0E01               	movlw	1
 18421   002A2A  6F8E               	movwf	_userRequest& (0+255),b	;volatile
 18422   002A2C                     
 18423                           ; BSR set to: 5
 18424                           ;mcc_generated_files/system/src/pins.c: 398:         MotorControl();
 18425   002A2C  ECCE  F017         	call	_MotorControl	;wreg free
 18426   002A30                     i2l707:
 18427   002A30  0012               	return		;funcret
 18428   002A32                     __end_of_BUTTON_ISR:
 18429                           	callstack 0
 18430                           
 18431 ;; *************** function _MotorControl *****************
 18432 ;; Defined at:
 18433 ;;		line 219 in file "motor.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;		None
 18436 ;; Auto vars:     Size  Location     Type
 18437 ;;		None
 18438 ;; Return value:  Size  Location     Type
 18439 ;;                  1    wreg      void 
 18440 ;; Registers used:
 18441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18442 ;; Tracked objects:
 18443 ;;		On entry : 0/0
 18444 ;;		On exit  : 0/0
 18445 ;;		Unchanged: 0/0
 18446 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18447 ;;      Params:         0       0       0       0       0       0       0       0       0
 18448 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18449 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18450 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18451 ;;Total ram usage:        0 bytes
 18452 ;; Hardware stack levels used: 1
 18453 ;; Hardware stack levels required when called: 8
 18454 ;; This function calls:
 18455 ;;		_HandleEmergency
 18456 ;;		_HandleMotorState
 18457 ;;		_HandleMotorWhileRunning
 18458 ;;		_HandleMotorWhileStopped
 18459 ;; This function is called by:
 18460 ;;		_GATE_ISR
 18461 ;;		_PHOTOCELL_ISR
 18462 ;;		_BUTTON_ISR
 18463 ;;		_HandleAutoCloseTimeout
 18464 ;;		_HandleFullSpeedTransitions
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text82
 18469   002F9C                     __ptext82:
 18470                           	callstack 0
 18471   002F9C                     _MotorControl:
 18472                           	callstack 110
 18473   002F9C                     
 18474                           ;motor.c: 220:     if (menuMode) return;
 18475   002F9C  0105               	movlb	5	; () banked
 18476   002F9E  519B               	movf	_menuMode& (0+255),w,b	;volatile
 18477   002FA0  B4D8               	btfsc	status,2,c
 18478   002FA2  EFD5  F017         	goto	i2u471_41
 18479   002FA6  EFD7  F017         	goto	i2u471_40
 18480   002FAA                     i2u471_41:
 18481   002FAA  EFD9  F017         	goto	i2l5774
 18482   002FAE                     i2u471_40:
 18483   002FAE  EFED  F017         	goto	i2l1493
 18484   002FB2                     i2l5774:
 18485                           
 18486                           ; BSR set to: 5
 18487                           ;motor.c: 222:     HandleEmergency();
 18488   002FB2  EC54  F019         	call	_HandleEmergency	;wreg free
 18489   002FB6                     
 18490                           ;motor.c: 223:     if (emergencyFlag) return;
 18491   002FB6  0105               	movlb	5	; () banked
 18492   002FB8  518A               	movf	_emergencyFlag& (0+255),w,b	;volatile
 18493   002FBA  118B               	iorwf	(_emergencyFlag+1)& (0+255),w,b	;volatile
 18494   002FBC  B4D8               	btfsc	status,2,c
 18495   002FBE  EFE3  F017         	goto	i2u472_41
 18496   002FC2  EFE5  F017         	goto	i2u472_40
 18497   002FC6                     i2u472_41:
 18498   002FC6  EFE7  F017         	goto	i2l5780
 18499   002FCA                     i2u472_40:
 18500   002FCA  EFED  F017         	goto	i2l1493
 18501   002FCE                     i2l5780:
 18502                           
 18503                           ; BSR set to: 5
 18504                           ;motor.c: 225:     HandleMotorWhileRunning();
 18505   002FCE  ECD8  F009         	call	_HandleMotorWhileRunning	;wreg free
 18506                           
 18507                           ;motor.c: 226:     HandleMotorWhileStopped();
 18508   002FD2  EC95  F00E         	call	_HandleMotorWhileStopped	;wreg free
 18509   002FD6                     
 18510                           ;motor.c: 228:     HandleMotorState();
 18511   002FD6  EC4B  F009         	call	_HandleMotorState	;wreg free
 18512   002FDA                     i2l1493:
 18513   002FDA  0012               	return		;funcret
 18514   002FDC                     __end_of_MotorControl:
 18515                           	callstack 0
 18516                           
 18517 ;; *************** function _HandleMotorWhileStopped *****************
 18518 ;; Defined at:
 18519 ;;		line 196 in file "motor.c"
 18520 ;; Parameters:    Size  Location     Type
 18521 ;;		None
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;		None
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  1    wreg      void 
 18526 ;; Registers used:
 18527 ;;		wreg, status,2, status,0, cstack
 18528 ;; Tracked objects:
 18529 ;;		On entry : 0/0
 18530 ;;		On exit  : 0/0
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18533 ;;      Params:         0       0       0       0       0       0       0       0       0
 18534 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18536 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18537 ;;Total ram usage:        0 bytes
 18538 ;; Hardware stack levels used: 1
 18539 ;; Hardware stack levels required when called: 1
 18540 ;; This function calls:
 18541 ;;		_TMR0_Stop
 18542 ;; This function is called by:
 18543 ;;		_MotorControl
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           	psect	text83
 18548   001D2A                     __ptext83:
 18549                           	callstack 0
 18550   001D2A                     _HandleMotorWhileStopped:
 18551                           	callstack 116
 18552   001D2A                     
 18553                           ;motor.c: 197:     if (motorIsRunning || emergencyFlag) return;
 18554   001D2A  0105               	movlb	5	; () banked
 18555   001D2C  518C               	movf	_motorIsRunning& (0+255),w,b	;volatile
 18556   001D2E  118D               	iorwf	(_motorIsRunning+1)& (0+255),w,b	;volatile
 18557   001D30  A4D8               	btfss	status,2,c
 18558   001D32  EF9D  F00E         	goto	i2u418_41
 18559   001D36  EF9F  F00E         	goto	i2u418_40
 18560   001D3A                     i2u418_41:
 18561   001D3A  EFF4  F00E         	goto	i2l1483
 18562   001D3E                     i2u418_40:
 18563   001D3E                     
 18564                           ; BSR set to: 5
 18565   001D3E  518A               	movf	_emergencyFlag& (0+255),w,b	;volatile
 18566   001D40  118B               	iorwf	(_emergencyFlag+1)& (0+255),w,b	;volatile
 18567   001D42  B4D8               	btfsc	status,2,c
 18568   001D44  EFA6  F00E         	goto	i2u419_41
 18569   001D48  EFA8  F00E         	goto	i2u419_40
 18570   001D4C                     i2u419_41:
 18571   001D4C  EFAA  F00E         	goto	i2l5446
 18572   001D50                     i2u419_40:
 18573   001D50  EFF4  F00E         	goto	i2l1483
 18574   001D54                     i2l5446:
 18575                           
 18576                           ; BSR set to: 5
 18577                           ;motor.c: 199:     if (userRequest) {
 18578   001D54  518E               	movf	_userRequest& (0+255),w,b	;volatile
 18579   001D56  118F               	iorwf	(_userRequest+1)& (0+255),w,b	;volatile
 18580   001D58  B4D8               	btfsc	status,2,c
 18581   001D5A  EFB1  F00E         	goto	i2u420_41
 18582   001D5E  EFB3  F00E         	goto	i2u420_40
 18583   001D62                     i2u420_41:
 18584   001D62  EFD5  F00E         	goto	i2l5462
 18585   001D66                     i2u420_40:
 18586   001D66                     
 18587                           ; BSR set to: 5
 18588                           ;motor.c: 200:         if (motorState == MOTOR_OFF && gateState == GATE_CLOSE) {
 18589   001D66  505C               	movf	_motorState^(0+1280),w,c	;volatile
 18590   001D68  A4D8               	btfss	status,2,c
 18591   001D6A  EFB9  F00E         	goto	i2u421_41
 18592   001D6E  EFBB  F00E         	goto	i2u421_40
 18593   001D72                     i2u421_41:
 18594   001D72  EFC9  F00E         	goto	i2l5456
 18595   001D76                     i2u421_40:
 18596   001D76                     
 18597                           ; BSR set to: 5
 18598   001D76  0E02               	movlw	2
 18599   001D78  185D               	xorwf	_gateState^(0+1280),w,c	;volatile
 18600   001D7A  A4D8               	btfss	status,2,c
 18601   001D7C  EFC2  F00E         	goto	i2u422_41
 18602   001D80  EFC4  F00E         	goto	i2u422_40
 18603   001D84                     i2u422_41:
 18604   001D84  EFC9  F00E         	goto	i2l5456
 18605   001D88                     i2u422_40:
 18606   001D88                     
 18607                           ; BSR set to: 5
 18608                           ;motor.c: 201:             motorState = MOTOR_OPEN_FULL;
 18609   001D88  0E02               	movlw	2
 18610   001D8A  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 18611   001D8C                     i2l5454:
 18612                           
 18613                           ; BSR set to: 5
 18614                           ;motor.c: 202:             gateState = GATE_FLOAT;
 18615   001D8C  6A5D               	clrf	_gateState^(0+1280),c	;volatile
 18616                           
 18617                           ;motor.c: 204:         }
 18618   001D8E  EFF4  F00E         	goto	i2l1483
 18619   001D92                     i2l5456:
 18620                           
 18621                           ; BSR set to: 5
 18622   001D92  045D               	decf	_gateState^(0+1280),w,c	;volatile
 18623   001D94  A4D8               	btfss	status,2,c
 18624   001D96  EFCF  F00E         	goto	i2u423_41
 18625   001D9A  EFD1  F00E         	goto	i2u423_40
 18626   001D9E                     i2u423_41:
 18627   001D9E  EFF4  F00E         	goto	i2l1483
 18628   001DA2                     i2u423_40:
 18629   001DA2                     
 18630                           ; BSR set to: 5
 18631                           ;motor.c: 206:             motorState = MOTOR_CLOSE_FULL;
 18632   001DA2  0E04               	movlw	4
 18633   001DA4  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 18634   001DA6  EFC6  F00E         	goto	i2l5454
 18635   001DAA                     i2l5462:
 18636                           
 18637                           ; BSR set to: 5
 18638   001DAA  045D               	decf	_gateState^(0+1280),w,c	;volatile
 18639   001DAC  A4D8               	btfss	status,2,c
 18640   001DAE  EFDB  F00E         	goto	i2u424_41
 18641   001DB2  EFDD  F00E         	goto	i2u424_40
 18642   001DB6                     i2u424_41:
 18643   001DB6  EFF4  F00E         	goto	i2l1483
 18644   001DBA                     i2u424_40:
 18645   001DBA                     
 18646                           ; BSR set to: 5
 18647   001DBA  0E06               	movlw	6
 18648   001DBC  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 18649   001DBE  A4D8               	btfss	status,2,c
 18650   001DC0  EFE4  F00E         	goto	i2u425_41
 18651   001DC4  EFE6  F00E         	goto	i2u425_40
 18652   001DC8                     i2u425_41:
 18653   001DC8  EFF4  F00E         	goto	i2l1483
 18654   001DCC                     i2u425_40:
 18655   001DCC                     
 18656                           ; BSR set to: 5
 18657   001DCC  5196               	movf	_timeoutToClose& (0+255),w,b	;volatile
 18658   001DCE  B4D8               	btfsc	status,2,c
 18659   001DD0  EFEC  F00E         	goto	i2u426_41
 18660   001DD4  EFEE  F00E         	goto	i2u426_40
 18661   001DD8                     i2u426_41:
 18662   001DD8  EFF4  F00E         	goto	i2l1483
 18663   001DDC                     i2u426_40:
 18664   001DDC                     
 18665                           ; BSR set to: 5
 18666                           ;motor.c: 211:         timeoutToClose = 0;
 18667   001DDC  6B96               	clrf	_timeoutToClose& (0+255),b	;volatile
 18668   001DDE                     
 18669                           ; BSR set to: 5
 18670                           ;motor.c: 212:         motorState = MOTOR_CLOSE_FULL;
 18671   001DDE  0E04               	movlw	4
 18672   001DE0  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 18673   001DE2                     
 18674                           ; BSR set to: 5
 18675                           ;motor.c: 213:         gateState = GATE_FLOAT;
 18676   001DE2  6A5D               	clrf	_gateState^(0+1280),c	;volatile
 18677   001DE4                     
 18678                           ; BSR set to: 5
 18679                           ;motor.c: 215:         TMR0_Stop();
 18680   001DE4  EC28  F01B         	call	_TMR0_Stop	;wreg free
 18681   001DE8                     i2l1483:
 18682   001DE8  0012               	return		;funcret
 18683   001DEA                     __end_of_HandleMotorWhileStopped:
 18684                           	callstack 0
 18685                           
 18686 ;; *************** function _HandleMotorWhileRunning *****************
 18687 ;; Defined at:
 18688 ;;		line 160 in file "motor.c"
 18689 ;; Parameters:    Size  Location     Type
 18690 ;;		None
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;		None
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      void 
 18695 ;; Registers used:
 18696 ;;		wreg, status,2, status,0, cstack
 18697 ;; Tracked objects:
 18698 ;;		On entry : 0/0
 18699 ;;		On exit  : 0/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18702 ;;      Params:         0       0       0       0       0       0       0       0       0
 18703 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18704 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18705 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18706 ;;Total ram usage:        0 bytes
 18707 ;; Hardware stack levels used: 1
 18708 ;; Hardware stack levels required when called: 1
 18709 ;; This function calls:
 18710 ;;		_TMR0_Start
 18711 ;; This function is called by:
 18712 ;;		_MotorControl
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           	psect	text84
 18717   0013B0                     __ptext84:
 18718                           	callstack 0
 18719   0013B0                     _HandleMotorWhileRunning:
 18720                           	callstack 116
 18721   0013B0                     
 18722                           ;motor.c: 161:     if (!motorIsRunning || emergencyFlag) return;
 18723   0013B0  0105               	movlb	5	; () banked
 18724   0013B2  518C               	movf	_motorIsRunning& (0+255),w,b	;volatile
 18725   0013B4  118D               	iorwf	(_motorIsRunning+1)& (0+255),w,b	;volatile
 18726   0013B6  B4D8               	btfsc	status,2,c
 18727   0013B8  EFE0  F009         	goto	i2u406_41
 18728   0013BC  EFE2  F009         	goto	i2u406_40
 18729   0013C0                     i2u406_41:
 18730   0013C0  EF5F  F00A         	goto	i2l1467
 18731   0013C4                     i2u406_40:
 18732   0013C4                     
 18733                           ; BSR set to: 5
 18734   0013C4  518A               	movf	_emergencyFlag& (0+255),w,b	;volatile
 18735   0013C6  118B               	iorwf	(_emergencyFlag+1)& (0+255),w,b	;volatile
 18736   0013C8  B4D8               	btfsc	status,2,c
 18737   0013CA  EFE9  F009         	goto	i2u407_41
 18738   0013CE  EFEB  F009         	goto	i2u407_40
 18739   0013D2                     i2u407_41:
 18740   0013D2  EFEF  F009         	goto	i2l5402
 18741   0013D6                     i2u407_40:
 18742   0013D6  EF5F  F00A         	goto	i2l1467
 18743   0013DA                     i2l1466:
 18744                           
 18745                           ; BSR set to: 5
 18746   0013DA  EF5F  F00A         	goto	i2l1467
 18747   0013DE                     i2l5402:
 18748                           
 18749                           ; BSR set to: 5
 18750                           ;motor.c: 163:     if (motorState == MOTOR_OPEN_FULL && gateState == GATE_FLOAT && timeo
      +                          utOpenFull) {
 18751   0013DE  0E02               	movlw	2
 18752   0013E0  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 18753   0013E2  A4D8               	btfss	status,2,c
 18754   0013E4  EFF6  F009         	goto	i2u408_41
 18755   0013E8  EFF8  F009         	goto	i2u408_40
 18756   0013EC                     i2u408_41:
 18757   0013EC  EF0D  F00A         	goto	i2l5412
 18758   0013F0                     i2u408_40:
 18759   0013F0                     
 18760                           ; BSR set to: 5
 18761   0013F0  505D               	movf	_gateState^(0+1280),w,c	;volatile
 18762   0013F2  A4D8               	btfss	status,2,c
 18763   0013F4  EFFE  F009         	goto	i2u409_41
 18764   0013F8  EF00  F00A         	goto	i2u409_40
 18765   0013FC                     i2u409_41:
 18766   0013FC  EF0D  F00A         	goto	i2l5412
 18767   001400                     i2u409_40:
 18768   001400                     
 18769                           ; BSR set to: 5
 18770   001400  5195               	movf	_timeoutOpenFull& (0+255),w,b	;volatile
 18771   001402  B4D8               	btfsc	status,2,c
 18772   001404  EF06  F00A         	goto	i2u410_41
 18773   001408  EF08  F00A         	goto	i2u410_40
 18774   00140C                     i2u410_41:
 18775   00140C  EF0D  F00A         	goto	i2l5412
 18776   001410                     i2u410_40:
 18777   001410                     
 18778                           ; BSR set to: 5
 18779                           ;motor.c: 164:         timeoutOpenFull = 0;
 18780   001410  6B95               	clrf	_timeoutOpenFull& (0+255),b	;volatile
 18781   001412                     
 18782                           ; BSR set to: 5
 18783                           ;motor.c: 165:         motorState = MOTOR_OPEN_SLOW;
 18784   001412  0E03               	movlw	3
 18785   001414  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 18786                           
 18787                           ;motor.c: 167:     }
 18788   001416  EF5F  F00A         	goto	i2l1467
 18789   00141A                     i2l5412:
 18790                           
 18791                           ; BSR set to: 5
 18792   00141A  0E04               	movlw	4
 18793   00141C  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 18794   00141E  A4D8               	btfss	status,2,c
 18795   001420  EF14  F00A         	goto	i2u411_41
 18796   001424  EF16  F00A         	goto	i2u411_40
 18797   001428                     i2u411_41:
 18798   001428  EF2B  F00A         	goto	i2l5422
 18799   00142C                     i2u411_40:
 18800   00142C                     
 18801                           ; BSR set to: 5
 18802   00142C  505D               	movf	_gateState^(0+1280),w,c	;volatile
 18803   00142E  A4D8               	btfss	status,2,c
 18804   001430  EF1C  F00A         	goto	i2u412_41
 18805   001434  EF1E  F00A         	goto	i2u412_40
 18806   001438                     i2u412_41:
 18807   001438  EF2B  F00A         	goto	i2l5422
 18808   00143C                     i2u412_40:
 18809   00143C                     
 18810                           ; BSR set to: 5
 18811   00143C  5194               	movf	_timeoutCloseFull& (0+255),w,b	;volatile
 18812   00143E  B4D8               	btfsc	status,2,c
 18813   001440  EF24  F00A         	goto	i2u413_41
 18814   001444  EF26  F00A         	goto	i2u413_40
 18815   001448                     i2u413_41:
 18816   001448  EF2B  F00A         	goto	i2l5422
 18817   00144C                     i2u413_40:
 18818   00144C                     
 18819                           ; BSR set to: 5
 18820                           ;motor.c: 169:         timeoutCloseFull = 0;
 18821   00144C  6B94               	clrf	_timeoutCloseFull& (0+255),b	;volatile
 18822   00144E                     
 18823                           ; BSR set to: 5
 18824                           ;motor.c: 170:         motorState = MOTOR_CLOSE_SLOW;
 18825   00144E  0E05               	movlw	5
 18826   001450  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 18827                           
 18828                           ;motor.c: 172:     } else {
 18829   001452  EF5F  F00A         	goto	i2l1467
 18830   001456                     i2l5422:
 18831                           
 18832                           ; BSR set to: 5
 18833                           ;motor.c: 174:         if (gateState == GATE_OPEN) {
 18834   001456  045D               	decf	_gateState^(0+1280),w,c	;volatile
 18835   001458  A4D8               	btfss	status,2,c
 18836   00145A  EF31  F00A         	goto	i2u414_41
 18837   00145E  EF33  F00A         	goto	i2u414_40
 18838   001462                     i2u414_41:
 18839   001462  EF55  F00A         	goto	i2l5438
 18840   001466                     i2u414_40:
 18841   001466                     
 18842                           ; BSR set to: 5
 18843                           ;motor.c: 175:             if (!overcurrentFlag) {
 18844   001466  519C               	movf	_overcurrentFlag& (0+255),w,b	;volatile
 18845   001468  A4D8               	btfss	status,2,c
 18846   00146A  EF39  F00A         	goto	i2u415_41
 18847   00146E  EF3B  F00A         	goto	i2u415_40
 18848   001472                     i2u415_41:
 18849   001472  EF45  F00A         	goto	i2l5430
 18850   001476                     i2u415_40:
 18851   001476                     
 18852                           ; BSR set to: 5
 18853                           ;motor.c: 176:             motorState = MOTOR_OPEN_WAIT_CLOSE;
 18854   001476  0E06               	movlw	6
 18855   001478  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 18856                           
 18857                           ;motor.c: 178:             motorIsRunning = 0;
 18858   00147A  0E00               	movlw	0
 18859   00147C  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 18860   00147E  0E00               	movlw	0
 18861   001480  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 18862   001482                     
 18863                           ; BSR set to: 5
 18864                           ;motor.c: 179:             TMR0_Start();
 18865   001482  EC2B  F01B         	call	_TMR0_Start	;wreg free
 18866                           
 18867                           ;motor.c: 180:             } else if (overcurrentFlag) {
 18868   001486  EF5F  F00A         	goto	i2l1467
 18869   00148A                     i2l5430:
 18870                           
 18871                           ; BSR set to: 5
 18872   00148A  519C               	movf	_overcurrentFlag& (0+255),w,b	;volatile
 18873   00148C  B4D8               	btfsc	status,2,c
 18874   00148E  EF4B  F00A         	goto	i2u416_41
 18875   001492  EF4D  F00A         	goto	i2u416_40
 18876   001496                     i2u416_41:
 18877   001496  EFED  F009         	goto	i2l1466
 18878   00149A                     i2u416_40:
 18879   00149A                     
 18880                           ; BSR set to: 5
 18881                           ;motor.c: 181:                 motorState = MOTOR_OFF;
 18882   00149A  6A5C               	clrf	_motorState^(0+1280),c	;volatile
 18883   00149C                     
 18884                           ; BSR set to: 5
 18885                           ;motor.c: 183:                 motorIsRunning = 0;
 18886   00149C  0E00               	movlw	0
 18887   00149E  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 18888   0014A0  0E00               	movlw	0
 18889   0014A2  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 18890   0014A4                     
 18891                           ; BSR set to: 5
 18892                           ;motor.c: 184:                 overcurrentFlag = 0;
 18893   0014A4  6B9C               	clrf	_overcurrentFlag& (0+255),b	;volatile
 18894   0014A6  EF5F  F00A         	goto	i2l1467
 18895   0014AA                     i2l5438:
 18896                           
 18897                           ; BSR set to: 5
 18898   0014AA  0E02               	movlw	2
 18899   0014AC  185D               	xorwf	_gateState^(0+1280),w,c	;volatile
 18900   0014AE  A4D8               	btfss	status,2,c
 18901   0014B0  EF5C  F00A         	goto	i2u417_41
 18902   0014B4  EF5E  F00A         	goto	i2u417_40
 18903   0014B8                     i2u417_41:
 18904   0014B8  EFED  F009         	goto	i2l1466
 18905   0014BC                     i2u417_40:
 18906   0014BC                     
 18907                           ; BSR set to: 5
 18908                           ;motor.c: 188:             motorState = MOTOR_OFF;
 18909   0014BC  6A5C               	clrf	_motorState^(0+1280),c	;volatile
 18910   0014BE                     i2l1467:
 18911   0014BE  0012               	return		;funcret
 18912   0014C0                     __end_of_HandleMotorWhileRunning:
 18913                           	callstack 0
 18914                           
 18915 ;; *************** function _HandleEmergency *****************
 18916 ;; Defined at:
 18917 ;;		line 151 in file "motor.c"
 18918 ;; Parameters:    Size  Location     Type
 18919 ;;		None
 18920 ;; Auto vars:     Size  Location     Type
 18921 ;;		None
 18922 ;; Return value:  Size  Location     Type
 18923 ;;                  1    wreg      void 
 18924 ;; Registers used:
 18925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18926 ;; Tracked objects:
 18927 ;;		On entry : 0/0
 18928 ;;		On exit  : 0/0
 18929 ;;		Unchanged: 0/0
 18930 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18931 ;;      Params:         0       0       0       0       0       0       0       0       0
 18932 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18934 ;;      Totals:         0       0       0       0       0       0       0       0       0
 18935 ;;Total ram usage:        0 bytes
 18936 ;; Hardware stack levels used: 1
 18937 ;; Hardware stack levels required when called: 7
 18938 ;; This function calls:
 18939 ;;		_EmergencyOpen
 18940 ;; This function is called by:
 18941 ;;		_MotorControl
 18942 ;; This function uses a non-reentrant model
 18943 ;;
 18944                           
 18945                           	psect	text85
 18946   0032A8                     __ptext85:
 18947                           	callstack 0
 18948   0032A8                     _HandleEmergency:
 18949                           	callstack 110
 18950   0032A8                     
 18951                           ;motor.c: 152:     if (motorIsRunning && emergencyFlag) {
 18952   0032A8  0105               	movlb	5	; () banked
 18953   0032AA  518C               	movf	_motorIsRunning& (0+255),w,b	;volatile
 18954   0032AC  118D               	iorwf	(_motorIsRunning+1)& (0+255),w,b	;volatile
 18955   0032AE  B4D8               	btfsc	status,2,c
 18956   0032B0  EF5C  F019         	goto	i2u404_41
 18957   0032B4  EF5E  F019         	goto	i2u404_40
 18958   0032B8                     i2u404_41:
 18959   0032B8  EF69  F019         	goto	i2l1461
 18960   0032BC                     i2u404_40:
 18961   0032BC                     
 18962                           ; BSR set to: 5
 18963   0032BC  518A               	movf	_emergencyFlag& (0+255),w,b	;volatile
 18964   0032BE  118B               	iorwf	(_emergencyFlag+1)& (0+255),w,b	;volatile
 18965   0032C0  B4D8               	btfsc	status,2,c
 18966   0032C2  EF65  F019         	goto	i2u405_41
 18967   0032C6  EF67  F019         	goto	i2u405_40
 18968   0032CA                     i2u405_41:
 18969   0032CA  EF69  F019         	goto	i2l1461
 18970   0032CE                     i2u405_40:
 18971   0032CE                     
 18972                           ; BSR set to: 5
 18973                           ;motor.c: 154:         EmergencyOpen();
 18974   0032CE  EC09  F016         	call	_EmergencyOpen	;wreg free
 18975   0032D2                     i2l1461:
 18976   0032D2  0012               	return		;funcret
 18977   0032D4                     __end_of_HandleEmergency:
 18978                           	callstack 0
 18979                           
 18980 ;; *************** function _EmergencyOpen *****************
 18981 ;; Defined at:
 18982 ;;		line 80 in file "motor.c"
 18983 ;; Parameters:    Size  Location     Type
 18984 ;;		None
 18985 ;; Auto vars:     Size  Location     Type
 18986 ;;		None
 18987 ;; Return value:  Size  Location     Type
 18988 ;;                  1    wreg      void 
 18989 ;; Registers used:
 18990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18991 ;; Tracked objects:
 18992 ;;		On entry : 0/0
 18993 ;;		On exit  : 0/0
 18994 ;;		Unchanged: 0/0
 18995 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 18996 ;;      Params:         0       0       0       0       0       0       0       0       0
 18997 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18998 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18999 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19000 ;;Total ram usage:        2 bytes
 19001 ;; Hardware stack levels used: 1
 19002 ;; Hardware stack levels required when called: 6
 19003 ;; This function calls:
 19004 ;;		_HandleMotorState
 19005 ;; This function is called by:
 19006 ;;		_HandleEmergency
 19007 ;; This function uses a non-reentrant model
 19008 ;;
 19009                           
 19010                           	psect	text86
 19011   002C12                     __ptext86:
 19012                           	callstack 0
 19013   002C12                     _EmergencyOpen:
 19014                           	callstack 110
 19015   002C12                     
 19016                           ;motor.c: 83:     motorState = MOTOR_OFF;
 19017   002C12  6A5C               	clrf	_motorState^(0+1280),c	;volatile
 19018   002C14                     
 19019                           ;motor.c: 84:     gateCloseFullMs = 0;
 19020   002C14  0E00               	movlw	0
 19021   002C16  0105               	movlb	5	; () banked
 19022   002C18  6F73               	movwf	(_gateCloseFullMs+1)& (0+255),b	;volatile
 19023   002C1A  0E00               	movlw	0
 19024   002C1C  6F72               	movwf	_gateCloseFullMs& (0+255),b	;volatile
 19025                           
 19026                           ;motor.c: 85:     gateOpenFullMs = 0;
 19027   002C1E  0E00               	movlw	0
 19028   002C20  6F75               	movwf	(_gateOpenFullMs+1)& (0+255),b	;volatile
 19029   002C22  0E00               	movlw	0
 19030   002C24  6F74               	movwf	_gateOpenFullMs& (0+255),b	;volatile
 19031   002C26                     
 19032                           ; BSR set to: 5
 19033                           ;motor.c: 86:     HandleMotorState();
 19034   002C26  EC4B  F009         	call	_HandleMotorState	;wreg free
 19035   002C2A                     
 19036                           ;motor.c: 88:     _delay((unsigned long)((1000)*(64000000U/4000.0)));
 19037   002C2A  0E52               	movlw	82
 19038   002C2C  6E20               	movwf	(??_EmergencyOpen+1)^(0+1280),c
 19039   002C2E  0E2B               	movlw	43
 19040   002C30  6E1F               	movwf	??_EmergencyOpen^(0+1280),c
 19041   002C32  0E00               	movlw	0
 19042   002C34                     i2u699_47:
 19043   002C34  2EE8               	decfsz	wreg,f,c
 19044   002C36  D7FE               	bra	i2u699_47
 19045   002C38  2E1F               	decfsz	??_EmergencyOpen^(0+1280),f,c
 19046   002C3A  D7FC               	bra	i2u699_47
 19047   002C3C  2E20               	decfsz	(??_EmergencyOpen+1)^(0+1280),f,c
 19048   002C3E  D7FA               	bra	i2u699_47
 19049   002C40  D000               	nop2	
 19050   002C42                     
 19051                           ;motor.c: 91:     motorState = MOTOR_OPEN_SLOW ;
 19052   002C42  0E03               	movlw	3
 19053   002C44  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 19054   002C46                     
 19055                           ;motor.c: 92:     HandleMotorState();
 19056   002C46  EC4B  F009         	call	_HandleMotorState	;wreg free
 19057   002C4A                     
 19058                           ;motor.c: 93:     gateState = GATE_FLOAT;
 19059   002C4A  6A5D               	clrf	_gateState^(0+1280),c	;volatile
 19060   002C4C                     i2l5254:
 19061   002C4C  045D               	decf	_gateState^(0+1280),w,c	;volatile
 19062   002C4E  B4D8               	btfsc	status,2,c
 19063   002C50  EF2C  F016         	goto	i2u383_41
 19064   002C54  EF2E  F016         	goto	i2u383_40
 19065   002C58                     i2u383_41:
 19066   002C58  EF26  F016         	goto	i2l5254
 19067   002C5C                     i2u383_40:
 19068   002C5C                     
 19069                           ;motor.c: 96:     emergencyFlag = 0;
 19070   002C5C  0E00               	movlw	0
 19071   002C5E  0105               	movlb	5	; () banked
 19072   002C60  6F8B               	movwf	(_emergencyFlag+1)& (0+255),b	;volatile
 19073   002C62  0E00               	movlw	0
 19074   002C64  6F8A               	movwf	_emergencyFlag& (0+255),b	;volatile
 19075   002C66                     
 19076                           ; BSR set to: 5
 19077   002C66  0012               	return		;funcret
 19078   002C68                     __end_of_EmergencyOpen:
 19079                           	callstack 0
 19080                           
 19081 ;; *************** function _HandleButtonMenuConfig *****************
 19082 ;; Defined at:
 19083 ;;		line 144 in file "menu.c"
 19084 ;; Parameters:    Size  Location     Type
 19085 ;;		None
 19086 ;; Auto vars:     Size  Location     Type
 19087 ;;		None
 19088 ;; Return value:  Size  Location     Type
 19089 ;;                  1    wreg      void 
 19090 ;; Registers used:
 19091 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19092 ;; Tracked objects:
 19093 ;;		On entry : 0/0
 19094 ;;		On exit  : 0/0
 19095 ;;		Unchanged: 0/0
 19096 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19097 ;;      Params:         0       0       0       0       0       0       0       0       0
 19098 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19099 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19100 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19101 ;;Total ram usage:        2 bytes
 19102 ;; Hardware stack levels used: 1
 19103 ;; Hardware stack levels required when called: 6
 19104 ;; This function calls:
 19105 ;;		_DEBUG_PRINT_INT@debug$F3089
 19106 ;;		_HandleConfigMode
 19107 ;;		_UART1_WriteUInt
 19108 ;; This function is called by:
 19109 ;;		_BUTTON_ISR
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           	psect	text87
 19114   001BA4                     __ptext87:
 19115                           	callstack 0
 19116   001BA4                     _HandleButtonMenuConfig:
 19117                           	callstack 112
 19118   001BA4                     
 19119                           ;menu.c: 145:     switch (configMode) {
 19120   001BA4  EF0F  F00E         	goto	i2l5810
 19121   001BA8                     i2l5786:
 19122                           
 19123                           ; BSR set to: 5
 19124                           ;menu.c: 147:             configMode = CONFIG_MODE_OPEN_FULL;
 19125   001BA8  0E01               	movlw	1
 19126   001BAA  6F97               	movwf	_configMode& (0+255),b	;volatile
 19127                           
 19128                           ;menu.c: 149:             break;
 19129   001BAC  EF31  F00E         	goto	i2l5812
 19130   001BB0                     i2l5788:
 19131                           
 19132                           ; BSR set to: 5
 19133                           ;menu.c: 152:             configMode = CONFIG_MODE_OPEN_SLOW;
 19134   001BB0  0E02               	movlw	2
 19135   001BB2  6F97               	movwf	_configMode& (0+255),b	;volatile
 19136   001BB4                     
 19137                           ; BSR set to: 5
 19138                           ;menu.c: 153:             openFullDuration = timer0_ms;
 19139   001BB4  C57A  F584         	movff	_timer0_ms,_openFullDuration	;volatile
 19140   001BB8  C57B  F585         	movff	_timer0_ms+1,_openFullDuration+1	;volatile
 19141   001BBC                     
 19142                           ; BSR set to: 5
 19143                           ;menu.c: 155:             DEBUG_PRINT_INT(openFullDuration);
 19144   001BBC  C584  F501         	movff	_openFullDuration,DEBUG_PRINT_INT@debug$F3089@value	;volatile
 19145   001BC0  C585  F502         	movff	_openFullDuration+1,DEBUG_PRINT_INT@debug$F3089@value+1	;volatile
 19146   001BC4  EC3C  F01B         	call	_DEBUG_PRINT_INT@debug$F3089	;wreg free
 19147   001BC8                     
 19148                           ;menu.c: 156:             UART1_WriteUInt(openFullDuration);
 19149   001BC8  C584  F508         	movff	_openFullDuration,UART1_WriteUInt@value	;volatile
 19150   001BCC  C585  F509         	movff	_openFullDuration+1,UART1_WriteUInt@value+1	;volatile
 19151   001BD0  EC5D  F010         	call	_UART1_WriteUInt	;wreg free
 19152                           
 19153                           ;menu.c: 158:             break;
 19154   001BD4  EF31  F00E         	goto	i2l5812
 19155   001BD8                     i2l5796:
 19156                           
 19157                           ; BSR set to: 5
 19158                           ;menu.c: 161:             timer0_ms = 0;
 19159   001BD8  0E00               	movlw	0
 19160   001BDA  6F7B               	movwf	(_timer0_ms+1)& (0+255),b	;volatile
 19161   001BDC  0E00               	movlw	0
 19162   001BDE  6F7A               	movwf	_timer0_ms& (0+255),b	;volatile
 19163                           
 19164                           ;menu.c: 162:             configMode = CONFIG_MODE_CLOSE_FULL;
 19165   001BE0  0E03               	movlw	3
 19166   001BE2  6F97               	movwf	_configMode& (0+255),b	;volatile
 19167                           
 19168                           ;menu.c: 164:             break;
 19169   001BE4  EF31  F00E         	goto	i2l5812
 19170   001BE8                     i2l5798:
 19171                           
 19172                           ; BSR set to: 5
 19173                           ;menu.c: 167:             configMode = CONFIG_MODE_CLOSE_SLOW;
 19174   001BE8  0E04               	movlw	4
 19175   001BEA  6F97               	movwf	_configMode& (0+255),b	;volatile
 19176   001BEC                     
 19177                           ; BSR set to: 5
 19178                           ;menu.c: 168:             closeFullDuration = timer0_ms;
 19179   001BEC  C57A  F582         	movff	_timer0_ms,_closeFullDuration	;volatile
 19180   001BF0  C57B  F583         	movff	_timer0_ms+1,_closeFullDuration+1	;volatile
 19181   001BF4                     
 19182                           ; BSR set to: 5
 19183                           ;menu.c: 170:             DEBUG_PRINT_INT(closeFullDuration);
 19184   001BF4  C582  F501         	movff	_closeFullDuration,DEBUG_PRINT_INT@debug$F3089@value	;volatile
 19185   001BF8  C583  F502         	movff	_closeFullDuration+1,DEBUG_PRINT_INT@debug$F3089@value+1	;volatile
 19186   001BFC  EC3C  F01B         	call	_DEBUG_PRINT_INT@debug$F3089	;wreg free
 19187   001C00                     
 19188                           ;menu.c: 171:             UART1_WriteUInt(closeFullDuration);
 19189   001C00  C582  F508         	movff	_closeFullDuration,UART1_WriteUInt@value	;volatile
 19190   001C04  C583  F509         	movff	_closeFullDuration+1,UART1_WriteUInt@value+1	;volatile
 19191   001C08  EC5D  F010         	call	_UART1_WriteUInt	;wreg free
 19192                           
 19193                           ;menu.c: 173:             break;
 19194   001C0C  EF31  F00E         	goto	i2l5812
 19195   001C10                     i2l1700:
 19196                           
 19197                           ; BSR set to: 5
 19198                           ;menu.c: 176:             configMode = CONFIG_MODE_NONE;
 19199   001C10  6B97               	clrf	_configMode& (0+255),b	;volatile
 19200   001C12                     
 19201                           ; BSR set to: 5
 19202                           ;menu.c: 177:             timer0_ms = 0;
 19203   001C12  0E00               	movlw	0
 19204   001C14  6F7B               	movwf	(_timer0_ms+1)& (0+255),b	;volatile
 19205   001C16  0E00               	movlw	0
 19206   001C18  6F7A               	movwf	_timer0_ms& (0+255),b	;volatile
 19207                           
 19208                           ;menu.c: 179:             break;
 19209   001C1A  EF31  F00E         	goto	i2l5812
 19210   001C1E                     i2l5810:
 19211   001C1E  0105               	movlb	5	; () banked
 19212   001C20  5197               	movf	_configMode& (0+255),w,b	;volatile
 19213   001C22  6E1D               	movwf	??_HandleButtonMenuConfig^(0+1280),c
 19214   001C24  6A1E               	clrf	(??_HandleButtonMenuConfig+1)^(0+1280),c
 19215                           
 19216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19217                           ; Switch size 1, requested type "simple"
 19218                           ; Number of cases is 1, Range of values is 0 to 0
 19219                           ; switch strategies available:
 19220                           ; Name         Instructions Cycles
 19221                           ; simple_byte            4     3 (average)
 19222                           ;	Chosen strategy is simple_byte
 19223   001C26  501E               	movf	(??_HandleButtonMenuConfig+1)^(0+1280),w,c
 19224   001C28  0A00               	xorlw	0	; case 0
 19225   001C2A  B4D8               	btfsc	status,2,c
 19226   001C2C  EF1A  F00E         	goto	i2l7340
 19227   001C30  EF31  F00E         	goto	i2l5812
 19228   001C34                     i2l7340:
 19229                           
 19230                           ; BSR set to: 5
 19231                           ; Switch size 1, requested type "simple"
 19232                           ; Number of cases is 5, Range of values is 0 to 4
 19233                           ; switch strategies available:
 19234                           ; Name         Instructions Cycles
 19235                           ; simple_byte           16     9 (average)
 19236                           ;	Chosen strategy is simple_byte
 19237   001C34  501D               	movf	??_HandleButtonMenuConfig^(0+1280),w,c
 19238   001C36  0A00               	xorlw	0	; case 0
 19239   001C38  B4D8               	btfsc	status,2,c
 19240   001C3A  EFD4  F00D         	goto	i2l5786
 19241   001C3E  0A01               	xorlw	1	; case 1
 19242   001C40  B4D8               	btfsc	status,2,c
 19243   001C42  EFD8  F00D         	goto	i2l5788
 19244   001C46  0A03               	xorlw	3	; case 2
 19245   001C48  B4D8               	btfsc	status,2,c
 19246   001C4A  EFEC  F00D         	goto	i2l5796
 19247   001C4E  0A01               	xorlw	1	; case 3
 19248   001C50  B4D8               	btfsc	status,2,c
 19249   001C52  EFF4  F00D         	goto	i2l5798
 19250   001C56  0A07               	xorlw	7	; case 4
 19251   001C58  B4D8               	btfsc	status,2,c
 19252   001C5A  EF08  F00E         	goto	i2l1700
 19253   001C5E  EF31  F00E         	goto	i2l5812
 19254   001C62                     i2l5812:
 19255                           
 19256                           ;menu.c: 182:     HandleConfigMode();
 19257   001C62  ECF5  F00E         	call	_HandleConfigMode	;wreg free
 19258   001C66  0012               	return		;funcret
 19259   001C68                     __end_of_HandleButtonMenuConfig:
 19260                           	callstack 0
 19261                           
 19262 ;; *************** function _UART1_WriteUInt *****************
 19263 ;; Defined at:
 19264 ;;		line 300 in file "mcc_generated_files/uart/src/uart1.c"
 19265 ;; Parameters:    Size  Location     Type
 19266 ;;  value           2    7[COMRAM] unsigned short 
 19267 ;; Auto vars:     Size  Location     Type
 19268 ;;  buffer          6    9[COMRAM] unsigned char [6]
 19269 ;;  i               1   15[COMRAM] unsigned char 
 19270 ;; Return value:  Size  Location     Type
 19271 ;;                  1    wreg      void 
 19272 ;; Registers used:
 19273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19274 ;; Tracked objects:
 19275 ;;		On entry : 0/0
 19276 ;;		On exit  : 0/0
 19277 ;;		Unchanged: 0/0
 19278 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19279 ;;      Params:         2       0       0       0       0       0       0       0       0
 19280 ;;      Locals:         7       0       0       0       0       0       0       0       0
 19281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19282 ;;      Totals:         9       0       0       0       0       0       0       0       0
 19283 ;;Total ram usage:        9 bytes
 19284 ;; Hardware stack levels used: 1
 19285 ;; Hardware stack levels required when called: 2
 19286 ;; This function calls:
 19287 ;;		___lwdiv
 19288 ;;		___lwmod
 19289 ;;		i2_UART1_Write
 19290 ;; This function is called by:
 19291 ;;		_HandleButtonMenuConfig
 19292 ;; This function uses a non-reentrant model
 19293 ;;
 19294                           
 19295                           	psect	text88
 19296   0020BA                     __ptext88:
 19297                           	callstack 0
 19298   0020BA                     _UART1_WriteUInt:
 19299                           	callstack 115
 19300   0020BA                     
 19301                           ;mcc_generated_files/uart/src/uart1.c: 301:     char buffer[6];;mcc_generated_files/uart
      +                          /src/uart1.c: 302:     uint8_t i = 0;
 19302   0020BA  6A10               	clrf	UART1_WriteUInt@i^(0+1280),c
 19303   0020BC                     
 19304                           ;mcc_generated_files/uart/src/uart1.c: 304:     if (value == 0) {
 19305   0020BC  5008               	movf	UART1_WriteUInt@value^(0+1280),w,c
 19306   0020BE  1009               	iorwf	(UART1_WriteUInt@value+1)^(0+1280),w,c
 19307   0020C0  A4D8               	btfss	status,2,c
 19308   0020C2  EF65  F010         	goto	i2u400_41
 19309   0020C6  EF67  F010         	goto	i2u400_40
 19310   0020CA                     i2u400_41:
 19311   0020CA  EF8E  F010         	goto	i2l5384
 19312   0020CE                     i2u400_40:
 19313   0020CE                     
 19314                           ;mcc_generated_files/uart/src/uart1.c: 305:         UART1_Write('0');
 19315   0020CE  0E30               	movlw	48
 19316   0020D0  EC52  F01A         	call	i2_UART1_Write
 19317   0020D4  EFB3  F010         	goto	i2l1207
 19318   0020D8                     i2l5378:
 19319                           
 19320                           ;mcc_generated_files/uart/src/uart1.c: 311:         buffer[i++] = (value % 10) + '0';
 19321   0020D8  0E0A               	movlw	low UART1_WriteUInt@buffer
 19322   0020DA  2410               	addwf	UART1_WriteUInt@i^(0+1280),w,c
 19323   0020DC  6ED9               	movwf	fsr2l,c
 19324   0020DE  6ADA               	clrf	fsr2h,c
 19325   0020E0  0E05               	movlw	high UART1_WriteUInt@buffer
 19326   0020E2  22DA               	addwfc	fsr2h,f,c
 19327   0020E4  C508  F501         	movff	UART1_WriteUInt@value,___lwmod@dividend
 19328   0020E8  C509  F502         	movff	UART1_WriteUInt@value+1,___lwmod@dividend+1
 19329   0020EC  0E00               	movlw	0
 19330   0020EE  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
 19331   0020F0  0E0A               	movlw	10
 19332   0020F2  6E03               	movwf	___lwmod@divisor^(0+1280),c
 19333   0020F4  EC4B  F015         	call	___lwmod	;wreg free
 19334   0020F8  5001               	movf	?___lwmod^(0+1280),w,c
 19335   0020FA  0F30               	addlw	48
 19336   0020FC  6EDF               	movwf	indf2,c
 19337   0020FE  2A10               	incf	UART1_WriteUInt@i^(0+1280),f,c
 19338   002100                     
 19339                           ;mcc_generated_files/uart/src/uart1.c: 312:         value /= 10;
 19340   002100  C508  F501         	movff	UART1_WriteUInt@value,___lwdiv@dividend
 19341   002104  C509  F502         	movff	UART1_WriteUInt@value+1,___lwdiv@dividend+1
 19342   002108  0E00               	movlw	0
 19343   00210A  6E04               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 19344   00210C  0E0A               	movlw	10
 19345   00210E  6E03               	movwf	___lwdiv@divisor^(0+1280),c
 19346   002110  ECCF  F013         	call	___lwdiv	;wreg free
 19347   002114  C501  F508         	movff	?___lwdiv,UART1_WriteUInt@value
 19348   002118  C502  F509         	movff	?___lwdiv+1,UART1_WriteUInt@value+1
 19349   00211C                     i2l5384:
 19350                           
 19351                           ;mcc_generated_files/uart/src/uart1.c: 310:     while (value > 0 && i < sizeof(buffer) -
      +                           1) {
 19352   00211C  5008               	movf	UART1_WriteUInt@value^(0+1280),w,c
 19353   00211E  1009               	iorwf	(UART1_WriteUInt@value+1)^(0+1280),w,c
 19354   002120  B4D8               	btfsc	status,2,c
 19355   002122  EF95  F010         	goto	i2u401_41
 19356   002126  EF97  F010         	goto	i2u401_40
 19357   00212A                     i2u401_41:
 19358   00212A  EFAB  F010         	goto	i2l5390
 19359   00212E                     i2u401_40:
 19360   00212E  0E04               	movlw	4
 19361   002130  6410               	cpfsgt	UART1_WriteUInt@i^(0+1280),c
 19362   002132  EF9D  F010         	goto	i2u402_41
 19363   002136  EF9F  F010         	goto	i2u402_40
 19364   00213A                     i2u402_41:
 19365   00213A  EF6C  F010         	goto	i2l5378
 19366   00213E                     i2u402_40:
 19367   00213E  EFAB  F010         	goto	i2l5390
 19368   002142                     i2l5388:
 19369                           
 19370                           ;mcc_generated_files/uart/src/uart1.c: 317:         UART1_Write(buffer[--i]);
 19371   002142  0610               	decf	UART1_WriteUInt@i^(0+1280),f,c
 19372   002144  0E0A               	movlw	low UART1_WriteUInt@buffer
 19373   002146  2410               	addwf	UART1_WriteUInt@i^(0+1280),w,c
 19374   002148  6ED9               	movwf	fsr2l,c
 19375   00214A  6ADA               	clrf	fsr2h,c
 19376   00214C  0E05               	movlw	high UART1_WriteUInt@buffer
 19377   00214E  22DA               	addwfc	fsr2h,f,c
 19378   002150  50DF               	movf	indf2,w,c
 19379   002152  EC52  F01A         	call	i2_UART1_Write
 19380   002156                     i2l5390:
 19381                           
 19382                           ;mcc_generated_files/uart/src/uart1.c: 316:     while (i > 0) {
 19383   002156  5010               	movf	UART1_WriteUInt@i^(0+1280),w,c
 19384   002158  A4D8               	btfss	status,2,c
 19385   00215A  EFB1  F010         	goto	i2u403_41
 19386   00215E  EFB3  F010         	goto	i2u403_40
 19387   002162                     i2u403_41:
 19388   002162  EFA1  F010         	goto	i2l5388
 19389   002166                     i2u403_40:
 19390   002166                     i2l1207:
 19391   002166  0012               	return		;funcret
 19392   002168                     __end_of_UART1_WriteUInt:
 19393                           	callstack 0
 19394                           
 19395 ;; *************** function _HandleConfigMode *****************
 19396 ;; Defined at:
 19397 ;;		line 294 in file "motor.c"
 19398 ;; Parameters:    Size  Location     Type
 19399 ;;		None
 19400 ;; Auto vars:     Size  Location     Type
 19401 ;;		None
 19402 ;; Return value:  Size  Location     Type
 19403 ;;                  1    wreg      void 
 19404 ;; Registers used:
 19405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/0
 19408 ;;		On exit  : 0/0
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19411 ;;      Params:         0       0       0       0       0       0       0       0       0
 19412 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19413 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19414 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19415 ;;Total ram usage:        2 bytes
 19416 ;; Hardware stack levels used: 1
 19417 ;; Hardware stack levels required when called: 5
 19418 ;; This function calls:
 19419 ;;		_CloseGateSlow
 19420 ;;		_OpenGateSlow
 19421 ;;		_StopGate
 19422 ;;		_configCloseGate
 19423 ;;		_configOpenGate
 19424 ;; This function is called by:
 19425 ;;		_HandleButtonMenuConfig
 19426 ;; This function uses a non-reentrant model
 19427 ;;
 19428                           
 19429                           	psect	text89
 19430   001DEA                     __ptext89:
 19431                           	callstack 0
 19432   001DEA                     _HandleConfigMode:
 19433                           	callstack 112
 19434   001DEA                     
 19435                           ;motor.c: 295:     if (configFlag) {
 19436   001DEA  0105               	movlb	5	; () banked
 19437   001DEC  519A               	movf	_configFlag& (0+255),w,b	;volatile
 19438   001DEE  B4D8               	btfsc	status,2,c
 19439   001DF0  EFFC  F00E         	goto	i2u427_41
 19440   001DF4  EFFE  F00E         	goto	i2u427_40
 19441   001DF8                     i2u427_41:
 19442   001DF8  EF51  F00F         	goto	i2l1522
 19443   001DFC                     i2u427_40:
 19444   001DFC                     
 19445                           ; BSR set to: 5
 19446                           ;motor.c: 296:         if (lastConfigMode != configMode) {
 19447   001DFC  5197               	movf	_configMode& (0+255),w,b	;volatile
 19448   001DFE  6E1B               	movwf	??_HandleConfigMode^(0+1280),c
 19449   001E00  6A1C               	clrf	(??_HandleConfigMode+1)^(0+1280),c
 19450   001E02  51BD               	movf	_lastConfigMode& (0+255),w,b
 19451   001E04  181B               	xorwf	??_HandleConfigMode^(0+1280),w,c
 19452   001E06  E109               	bnz	i2u428_40
 19453   001E08  51BE               	movf	(_lastConfigMode+1)& (0+255),w,b
 19454   001E0A  181C               	xorwf	(??_HandleConfigMode+1)^(0+1280),w,c
 19455   001E0C  B4D8               	btfsc	status,2,c
 19456   001E0E  EF0B  F00F         	goto	i2u428_41
 19457   001E12  EF0D  F00F         	goto	i2u428_40
 19458   001E16                     i2u428_41:
 19459   001E16  EF51  F00F         	goto	i2l1522
 19460   001E1A                     i2u428_40:
 19461   001E1A                     
 19462                           ; BSR set to: 5
 19463                           ;motor.c: 297:             lastConfigMode = configMode;
 19464   001E1A  C597  F5BD         	movff	_configMode,_lastConfigMode	;volatile
 19465   001E1E  6BBE               	clrf	(_lastConfigMode+1)& (0+255),b
 19466                           
 19467                           ;motor.c: 299:             switch (configMode) {
 19468   001E20  EF30  F00F         	goto	i2l5504
 19469   001E24                     i2l5482:
 19470                           
 19471                           ; BSR set to: 5
 19472                           ;motor.c: 302:                     StopGate();
 19473   001E24  EC9C  F018         	call	_StopGate	;wreg free
 19474   001E28                     
 19475                           ;motor.c: 303:                     motorIsRunning = 0;
 19476   001E28  0E00               	movlw	0
 19477   001E2A  0105               	movlb	5	; () banked
 19478   001E2C  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 19479   001E2E  0E00               	movlw	0
 19480   001E30  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 19481                           
 19482                           ;motor.c: 304:                     break;
 19483   001E32  EF51  F00F         	goto	i2l1522
 19484   001E36                     i2l5486:
 19485                           
 19486                           ; BSR set to: 5
 19487                           ;motor.c: 308:                     configOpenGate();
 19488   001E36  EC6A  F017         	call	_configOpenGate	;wreg free
 19489   001E3A                     i2l5488:
 19490                           
 19491                           ;motor.c: 309:                     motorIsRunning = 1;
 19492   001E3A  0E00               	movlw	0
 19493   001E3C  0105               	movlb	5	; () banked
 19494   001E3E  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 19495   001E40  0E01               	movlw	1
 19496   001E42  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 19497                           
 19498                           ;motor.c: 310:                     break;
 19499   001E44  EF51  F00F         	goto	i2l1522
 19500   001E48                     i2l5490:
 19501                           
 19502                           ; BSR set to: 5
 19503                           ;motor.c: 314:                     OpenGateSlow();
 19504   001E48  EC23  F019         	call	_OpenGateSlow	;wreg free
 19505   001E4C  EF1D  F00F         	goto	i2l5488
 19506   001E50                     i2l5494:
 19507                           
 19508                           ; BSR set to: 5
 19509                           ;motor.c: 320:                     configCloseGate();
 19510   001E50  ECEE  F017         	call	_configCloseGate	;wreg free
 19511   001E54  EF1D  F00F         	goto	i2l5488
 19512   001E58                     i2l5498:
 19513                           
 19514                           ; BSR set to: 5
 19515                           ;motor.c: 326:                     CloseGateSlow();
 19516   001E58  EC46  F017         	call	_CloseGateSlow	;wreg free
 19517   001E5C  EF1D  F00F         	goto	i2l5488
 19518   001E60                     i2l5504:
 19519                           
 19520                           ; BSR set to: 5
 19521   001E60  5197               	movf	_configMode& (0+255),w,b	;volatile
 19522   001E62  6E1B               	movwf	??_HandleConfigMode^(0+1280),c
 19523   001E64  6A1C               	clrf	(??_HandleConfigMode+1)^(0+1280),c
 19524                           
 19525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19526                           ; Switch size 1, requested type "simple"
 19527                           ; Number of cases is 1, Range of values is 0 to 0
 19528                           ; switch strategies available:
 19529                           ; Name         Instructions Cycles
 19530                           ; simple_byte            4     3 (average)
 19531                           ;	Chosen strategy is simple_byte
 19532   001E66  501C               	movf	(??_HandleConfigMode+1)^(0+1280),w,c
 19533   001E68  0A00               	xorlw	0	; case 0
 19534   001E6A  B4D8               	btfsc	status,2,c
 19535   001E6C  EF3A  F00F         	goto	i2l7342
 19536   001E70  EF51  F00F         	goto	i2l1522
 19537   001E74                     i2l7342:
 19538                           
 19539                           ; BSR set to: 5
 19540                           ; Switch size 1, requested type "simple"
 19541                           ; Number of cases is 5, Range of values is 0 to 4
 19542                           ; switch strategies available:
 19543                           ; Name         Instructions Cycles
 19544                           ; simple_byte           16     9 (average)
 19545                           ;	Chosen strategy is simple_byte
 19546   001E74  501B               	movf	??_HandleConfigMode^(0+1280),w,c
 19547   001E76  0A00               	xorlw	0	; case 0
 19548   001E78  B4D8               	btfsc	status,2,c
 19549   001E7A  EF12  F00F         	goto	i2l5482
 19550   001E7E  0A01               	xorlw	1	; case 1
 19551   001E80  B4D8               	btfsc	status,2,c
 19552   001E82  EF1B  F00F         	goto	i2l5486
 19553   001E86  0A03               	xorlw	3	; case 2
 19554   001E88  B4D8               	btfsc	status,2,c
 19555   001E8A  EF24  F00F         	goto	i2l5490
 19556   001E8E  0A01               	xorlw	1	; case 3
 19557   001E90  B4D8               	btfsc	status,2,c
 19558   001E92  EF28  F00F         	goto	i2l5494
 19559   001E96  0A07               	xorlw	7	; case 4
 19560   001E98  B4D8               	btfsc	status,2,c
 19561   001E9A  EF2C  F00F         	goto	i2l5498
 19562   001E9E  EF51  F00F         	goto	i2l1522
 19563   001EA2                     i2l1522:
 19564                           
 19565                           ; BSR set to: 5
 19566   001EA2  0012               	return		;funcret
 19567   001EA4                     __end_of_HandleConfigMode:
 19568                           	callstack 0
 19569                           
 19570 ;; *************** function _configOpenGate *****************
 19571 ;; Defined at:
 19572 ;;		line 109 in file "motor.c"
 19573 ;; Parameters:    Size  Location     Type
 19574 ;;		None
 19575 ;; Auto vars:     Size  Location     Type
 19576 ;;		None
 19577 ;; Return value:  Size  Location     Type
 19578 ;;                  1    wreg      void 
 19579 ;; Registers used:
 19580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19581 ;; Tracked objects:
 19582 ;;		On entry : 0/0
 19583 ;;		On exit  : 0/0
 19584 ;;		Unchanged: 0/0
 19585 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19586 ;;      Params:         0       0       0       0       0       0       0       0       0
 19587 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19588 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19589 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19590 ;;Total ram usage:        2 bytes
 19591 ;; Hardware stack levels used: 1
 19592 ;; Hardware stack levels required when called: 3
 19593 ;; This function calls:
 19594 ;;		_PWM1_PHASE_A_Enable
 19595 ;;		_PWM1_PHASE_A_LoadBufferRegisters
 19596 ;;		_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
 19597 ;;		_TMR0_Start
 19598 ;;		i2_displayString
 19599 ;; This function is called by:
 19600 ;;		_HandleConfigMode
 19601 ;; This function uses a non-reentrant model
 19602 ;;
 19603                           
 19604                           	psect	text90
 19605   002ED4                     __ptext90:
 19606                           	callstack 0
 19607   002ED4                     _configOpenGate:
 19608                           	callstack 113
 19609   002ED4  8EC0               	bsf	192,7,c	;volatile
 19610   002ED6                     
 19611                           ;motor.c: 111:     PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister((pwmPeriod / 2));
 19612   002ED6  90D8               	bcf	status,0,c
 19613   002ED8  0105               	movlb	5	; () banked
 19614   002EDA  31C0               	rrcf	(_pwmPeriod+1)& (0+255),w,b
 19615   002EDC  6E12               	movwf	??_configOpenGate^(0+1280),c
 19616   002EDE  31BF               	rrcf	_pwmPeriod& (0+255),w,b
 19617   002EE0  6E01               	movwf	PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue^(0+1280),c
 19618   002EE2  C512  F502         	movff	??_configOpenGate,PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue+1
 19619   002EE6  EC13  F01B         	call	_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister	;wreg free
 19620   002EEA                     
 19621                           ;motor.c: 112:     PWM1_PHASE_A_LoadBufferRegisters();
 19622   002EEA  EC30  F01B         	call	_PWM1_PHASE_A_LoadBufferRegisters	;wreg free
 19623   002EEE                     
 19624                           ;motor.c: 113:     PWM1_PHASE_A_Enable();
 19625   002EEE  EC32  F01B         	call	_PWM1_PHASE_A_Enable	;wreg free
 19626   002EF2  8CC0               	bsf	192,6,c	;volatile
 19627   002EF4                     
 19628                           ;motor.c: 116:     TMR0_Start();
 19629   002EF4  EC2B  F01B         	call	_TMR0_Start	;wreg free
 19630   002EF8                     
 19631                           ;motor.c: 118:     displayString("    ", 0);
 19632   002EF8  0EC5               	movlw	low STR_7
 19633   002EFA  6E0B               	movwf	i2displayString@str^(0+1280),c
 19634   002EFC  0E7F               	movlw	high STR_7
 19635   002EFE  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 19636   002F00  0E00               	movlw	0
 19637   002F02  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 19638   002F04  EC3A  F00C         	call	i2_displayString	;wreg free
 19639   002F08                     
 19640                           ;motor.c: 119:     displayString("OPFL", 0);
 19641   002F08  0ED4               	movlw	low STR_9
 19642   002F0A  6E0B               	movwf	i2displayString@str^(0+1280),c
 19643   002F0C  0E7F               	movlw	high STR_9
 19644   002F0E  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 19645   002F10  0E00               	movlw	0
 19646   002F12  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 19647   002F14  EC3A  F00C         	call	i2_displayString	;wreg free
 19648   002F18  0012               	return		;funcret
 19649   002F1A                     __end_of_configOpenGate:
 19650                           	callstack 0
 19651                           
 19652 ;; *************** function _configCloseGate *****************
 19653 ;; Defined at:
 19654 ;;		line 122 in file "motor.c"
 19655 ;; Parameters:    Size  Location     Type
 19656 ;;		None
 19657 ;; Auto vars:     Size  Location     Type
 19658 ;;		None
 19659 ;; Return value:  Size  Location     Type
 19660 ;;                  1    wreg      void 
 19661 ;; Registers used:
 19662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19663 ;; Tracked objects:
 19664 ;;		On entry : 0/0
 19665 ;;		On exit  : 0/0
 19666 ;;		Unchanged: 0/0
 19667 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19668 ;;      Params:         0       0       0       0       0       0       0       0       0
 19669 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19671 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19672 ;;Total ram usage:        0 bytes
 19673 ;; Hardware stack levels used: 1
 19674 ;; Hardware stack levels required when called: 3
 19675 ;; This function calls:
 19676 ;;		_PWM1_PHASE_A_Enable
 19677 ;;		_PWM1_PHASE_A_LoadBufferRegisters
 19678 ;;		_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
 19679 ;;		_TMR0_Start
 19680 ;;		i2_displayString
 19681 ;; This function is called by:
 19682 ;;		_HandleConfigMode
 19683 ;; This function uses a non-reentrant model
 19684 ;;
 19685                           
 19686                           	psect	text91
 19687   002FDC                     __ptext91:
 19688                           	callstack 0
 19689   002FDC                     _configCloseGate:
 19690                           	callstack 113
 19691   002FDC  9EC0               	bcf	192,7,c	;volatile
 19692   002FDE                     
 19693                           ;motor.c: 124:     PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister((pwmPeriod));
 19694   002FDE  C5BF  F501         	movff	_pwmPeriod,PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue
 19695   002FE2  C5C0  F502         	movff	_pwmPeriod+1,PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue+1
 19696   002FE6  EC13  F01B         	call	_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister	;wreg free
 19697   002FEA                     
 19698                           ;motor.c: 125:     PWM1_PHASE_A_LoadBufferRegisters();
 19699   002FEA  EC30  F01B         	call	_PWM1_PHASE_A_LoadBufferRegisters	;wreg free
 19700   002FEE                     
 19701                           ;motor.c: 126:     PWM1_PHASE_A_Enable();
 19702   002FEE  EC32  F01B         	call	_PWM1_PHASE_A_Enable	;wreg free
 19703   002FF2  8CC0               	bsf	192,6,c	;volatile
 19704   002FF4                     
 19705                           ;motor.c: 129:     TMR0_Start();
 19706   002FF4  EC2B  F01B         	call	_TMR0_Start	;wreg free
 19707   002FF8                     
 19708                           ;motor.c: 131:     displayString("    ", 0);
 19709   002FF8  0EC5               	movlw	low STR_7
 19710   002FFA  6E0B               	movwf	i2displayString@str^(0+1280),c
 19711   002FFC  0E7F               	movlw	high STR_7
 19712   002FFE  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 19713   003000  0E00               	movlw	0
 19714   003002  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 19715   003004  EC3A  F00C         	call	i2_displayString	;wreg free
 19716   003008                     
 19717                           ;motor.c: 132:     displayString("CLFL", 0);
 19718   003008  0ECF               	movlw	low STR_11
 19719   00300A  6E0B               	movwf	i2displayString@str^(0+1280),c
 19720   00300C  0E7F               	movlw	high STR_11
 19721   00300E  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 19722   003010  0E00               	movlw	0
 19723   003012  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 19724   003014  EC3A  F00C         	call	i2_displayString	;wreg free
 19725   003018  0012               	return		;funcret
 19726   00301A                     __end_of_configCloseGate:
 19727                           	callstack 0
 19728                           
 19729 ;; *************** function _DEBUG_PRINT_INT@debug$F3089 *****************
 19730 ;; Defined at:
 19731 ;;		line 50 in file "./debug.h"
 19732 ;; Parameters:    Size  Location     Type
 19733 ;;  value           2    0[COMRAM] unsigned short 
 19734 ;; Auto vars:     Size  Location     Type
 19735 ;;		None
 19736 ;; Return value:  Size  Location     Type
 19737 ;;                  1    wreg      void 
 19738 ;; Registers used:
 19739 ;;		None
 19740 ;; Tracked objects:
 19741 ;;		On entry : 0/0
 19742 ;;		On exit  : 0/0
 19743 ;;		Unchanged: 0/0
 19744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19745 ;;      Params:         2       0       0       0       0       0       0       0       0
 19746 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19747 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19748 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19749 ;;Total ram usage:        2 bytes
 19750 ;; Hardware stack levels used: 1
 19751 ;; This function calls:
 19752 ;;		Nothing
 19753 ;; This function is called by:
 19754 ;;		_Menu_AdjustSpeed
 19755 ;;		_Menu_AdjustOvercurrent
 19756 ;;		_Menu_AdjustTime
 19757 ;;		_HandleButtonMenuConfig
 19758 ;; This function uses a non-reentrant model
 19759 ;;
 19760                           
 19761                           	psect	text92
 19762   003678                     __ptext92:
 19763                           	callstack 0
 19764   003678                     _DEBUG_PRINT_INT@debug$F3089:
 19765                           	callstack 116
 19766   003678  0012               	return		;funcret
 19767   00367A                     __end_of_DEBUG_PRINT_INT@debug$F3089:
 19768                           	callstack 0
 19769                           
 19770 ;; *************** function _BACK_ISR *****************
 19771 ;; Defined at:
 19772 ;;		line 212 in file "mcc_generated_files/system/src/pins.c"
 19773 ;; Parameters:    Size  Location     Type
 19774 ;;		None
 19775 ;; Auto vars:     Size  Location     Type
 19776 ;;		None
 19777 ;; Return value:  Size  Location     Type
 19778 ;;                  1    wreg      void 
 19779 ;; Registers used:
 19780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, cstack
 19781 ;; Tracked objects:
 19782 ;;		On entry : 0/0
 19783 ;;		On exit  : 0/0
 19784 ;;		Unchanged: 0/0
 19785 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19786 ;;      Params:         0       0       0       0       0       0       0       0       0
 19787 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19788 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19789 ;;      Totals:         2       0       0       0       0       0       0       0       0
 19790 ;;Total ram usage:        2 bytes
 19791 ;; Hardware stack levels used: 1
 19792 ;; Hardware stack levels required when called: 5
 19793 ;; This function calls:
 19794 ;;		NULL
 19795 ;;		_BACK_DefaultInterruptHandler
 19796 ;;		_Menu_HandleBack
 19797 ;; This function is called by:
 19798 ;;		_PIN_MANAGER_IOC
 19799 ;; This function uses a non-reentrant model
 19800 ;;
 19801                           
 19802                           	psect	text93
 19803   00272A                     __ptext93:
 19804                           	callstack 0
 19805   00272A                     _BACK_ISR:
 19806                           	callstack 114
 19807   00272A                     
 19808                           ;mcc_generated_files/system/src/pins.c: 214:      _delay((unsigned long)((20)*(64000000U
      +                          /4000.0)));
 19809   00272A  0E02               	movlw	2
 19810   00272C  6E1A               	movwf	(??_BACK_ISR+1)^(0+1280),c
 19811   00272E  0EA0               	movlw	160
 19812   002730  6E19               	movwf	??_BACK_ISR^(0+1280),c
 19813   002732  0E92               	movlw	146
 19814   002734                     i2u700_47:
 19815   002734  2EE8               	decfsz	wreg,f,c
 19816   002736  D7FE               	bra	i2u700_47
 19817   002738  2E19               	decfsz	??_BACK_ISR^(0+1280),f,c
 19818   00273A  D7FC               	bra	i2u700_47
 19819   00273C  2E1A               	decfsz	(??_BACK_ISR+1)^(0+1280),f,c
 19820   00273E  D7FA               	bra	i2u700_47
 19821   002740  D000               	nop2	
 19822   002742                     i2l639:
 19823   002742  B8CE               	btfsc	206,4,c	;volatile
 19824   002744  EFA6  F013         	goto	i2u591_41
 19825   002748  EFA8  F013         	goto	i2u591_40
 19826   00274C                     i2u591_41:
 19827   00274C  EFA1  F013         	goto	i2l639
 19828   002750                     i2u591_40:
 19829   002750                     
 19830                           ;mcc_generated_files/system/src/pins.c: 216:     IOCAFbits.IOCAF4 = 0;
 19831   002750  0104               	movlb	4	; () banked
 19832   002752  9907               	bcf	7,4,b	;volatile
 19833   002754                     
 19834                           ; BSR set to: 4
 19835                           ;mcc_generated_files/system/src/pins.c: 218:     if (!menuMode)
 19836   002754  0105               	movlb	5	; () banked
 19837   002756  519B               	movf	_menuMode& (0+255),w,b	;volatile
 19838   002758  A4D8               	btfss	status,2,c
 19839   00275A  EFB1  F013         	goto	i2u592_41
 19840   00275E  EFB3  F013         	goto	i2u592_40
 19841   002762                     i2u592_41:
 19842   002762  EFB5  F013         	goto	i2l6732
 19843   002766                     i2u592_40:
 19844   002766  EFCE  F013         	goto	i2l643
 19845   00276A                     i2l6732:
 19846                           
 19847                           ; BSR set to: 5
 19848                           ;mcc_generated_files/system/src/pins.c: 222:     Menu_HandleBack();
 19849   00276A  ECFC  F016         	call	_Menu_HandleBack	;wreg free
 19850   00276E                     
 19851                           ;mcc_generated_files/system/src/pins.c: 225:     if (BACK_InterruptHandler) {
 19852   00276E  0105               	movlb	5	; () banked
 19853   002770  51D4               	movf	_BACK_InterruptHandler& (0+255),w,b
 19854   002772  11D5               	iorwf	(_BACK_InterruptHandler+1)& (0+255),w,b
 19855   002774  B4D8               	btfsc	status,2,c
 19856   002776  EFBF  F013         	goto	i2u593_41
 19857   00277A  EFC1  F013         	goto	i2u593_40
 19858   00277E                     i2u593_41:
 19859   00277E  EFCE  F013         	goto	i2l643
 19860   002782                     i2u593_40:
 19861   002782                     
 19862                           ; BSR set to: 5
 19863                           ;mcc_generated_files/system/src/pins.c: 226:         BACK_InterruptHandler();
 19864   002782  D802               	call	i2u594_48
 19865   002784  EFCE  F013         	goto	i2u594_49
 19866   002788                     i2u594_48:
 19867   002788  0005               	push	
 19868   00278A  6EFA               	movwf	pclath,c
 19869   00278C  51D4               	movf	_BACK_InterruptHandler& (0+255),w,b
 19870   00278E  6EFD               	movwf	tosl,c
 19871   002790  51D5               	movf	(_BACK_InterruptHandler+1)& (0+255),w,b
 19872   002792  6EFE               	movwf	tosh,c
 19873   002794  50F8               	movf	tblptru,w,c
 19874   002796  6EFF               	movwf	tosu,c
 19875   002798  50FA               	movf	pclath,w,c
 19876   00279A  0012               	return		;indir
 19877   00279C                     i2u594_49:
 19878   00279C                     i2l643:
 19879   00279C  0012               	return		;funcret
 19880   00279E                     __end_of_BACK_ISR:
 19881                           	callstack 0
 19882                           
 19883 ;; *************** function _Menu_HandleBack *****************
 19884 ;; Defined at:
 19885 ;;		line 276 in file "menu.c"
 19886 ;; Parameters:    Size  Location     Type
 19887 ;;		None
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;		None
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  1    wreg      void 
 19892 ;; Registers used:
 19893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/0
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19899 ;;      Params:         0       0       0       0       0       0       0       0       0
 19900 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19902 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19903 ;;Total ram usage:        0 bytes
 19904 ;; Hardware stack levels used: 1
 19905 ;; Hardware stack levels required when called: 4
 19906 ;; This function calls:
 19907 ;;		_Menu_PrintCurrentOption
 19908 ;;		i2_displayString
 19909 ;; This function is called by:
 19910 ;;		_BACK_ISR
 19911 ;; This function uses a non-reentrant model
 19912 ;;
 19913                           
 19914                           	psect	text94
 19915   002DF8                     __ptext94:
 19916                           	callstack 0
 19917   002DF8                     _Menu_HandleBack:
 19918                           	callstack 114
 19919   002DF8                     
 19920                           ;menu.c: 277:     if (systemState == STATE_CONFIG) {
 19921   002DF8  0E02               	movlw	2
 19922   002DFA  185B               	xorwf	_systemState^(0+1280),w,c	;volatile
 19923   002DFC  A4D8               	btfss	status,2,c
 19924   002DFE  EF03  F017         	goto	i2u461_41
 19925   002E02  EF05  F017         	goto	i2u461_40
 19926   002E06                     i2u461_41:
 19927   002E06  EF0B  F017         	goto	i2l5734
 19928   002E0A                     i2u461_40:
 19929   002E0A                     
 19930                           ;menu.c: 279:         systemState = STATE_MENU;
 19931   002E0A  0E01               	movlw	1
 19932   002E0C  6E5B               	movwf	_systemState^(0+1280),c	;volatile
 19933   002E0E                     
 19934                           ;menu.c: 281:         Menu_PrintCurrentOption();
 19935   002E0E  ECE3  F00A         	call	_Menu_PrintCurrentOption	;wreg free
 19936                           
 19937                           ;menu.c: 282:     } else if (systemState == STATE_MENU) {
 19938   002E12  EF21  F017         	goto	i2l1743
 19939   002E16                     i2l5734:
 19940   002E16  045B               	decf	_systemState^(0+1280),w,c	;volatile
 19941   002E18  A4D8               	btfss	status,2,c
 19942   002E1A  EF11  F017         	goto	i2u462_41
 19943   002E1E  EF13  F017         	goto	i2u462_40
 19944   002E22                     i2u462_41:
 19945   002E22  EF21  F017         	goto	i2l1743
 19946   002E26                     i2u462_40:
 19947   002E26                     
 19948                           ;menu.c: 284:         systemState = STATE_NORMAL;
 19949   002E26  6A5B               	clrf	_systemState^(0+1280),c	;volatile
 19950                           
 19951                           ;menu.c: 285:         configFlag = 0;
 19952   002E28  0105               	movlb	5	; () banked
 19953   002E2A  6B9A               	clrf	_configFlag& (0+255),b	;volatile
 19954                           
 19955                           ;menu.c: 286:         menuMode = 0;
 19956   002E2C  6B9B               	clrf	_menuMode& (0+255),b	;volatile
 19957   002E2E                     
 19958                           ; BSR set to: 5
 19959                           ;menu.c: 287:         configDone = 1;
 19960   002E2E  0E01               	movlw	1
 19961   002E30  6F99               	movwf	_configDone& (0+255),b	;volatile
 19962   002E32                     
 19963                           ; BSR set to: 5
 19964                           ;menu.c: 289:         displayString("    ", 0);
 19965   002E32  0EC5               	movlw	low STR_7
 19966   002E34  6E0B               	movwf	i2displayString@str^(0+1280),c
 19967   002E36  0E7F               	movlw	high STR_7
 19968   002E38  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 19969   002E3A  0E00               	movlw	0
 19970   002E3C  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 19971   002E3E  EC3A  F00C         	call	i2_displayString	;wreg free
 19972   002E42                     i2l1743:
 19973   002E42  0012               	return		;funcret
 19974   002E44                     __end_of_Menu_HandleBack:
 19975                           	callstack 0
 19976                           
 19977 ;; *************** function _Menu_PrintCurrentOption *****************
 19978 ;; Defined at:
 19979 ;;		line 38 in file "menu.c"
 19980 ;; Parameters:    Size  Location     Type
 19981 ;;		None
 19982 ;; Auto vars:     Size  Location     Type
 19983 ;;  shortLabel      5   19[COMRAM] unsigned char [5]
 19984 ;; Return value:  Size  Location     Type
 19985 ;;                  1    wreg      void 
 19986 ;; Registers used:
 19987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19988 ;; Tracked objects:
 19989 ;;		On entry : 0/0
 19990 ;;		On exit  : 0/0
 19991 ;;		Unchanged: 0/0
 19992 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 19993 ;;      Params:         0       0       0       0       0       0       0       0       0
 19994 ;;      Locals:         5       0       0       0       0       0       0       0       0
 19995 ;;      Temps:          2       0       0       0       0       0       0       0       0
 19996 ;;      Totals:         7       0       0       0       0       0       0       0       0
 19997 ;;Total ram usage:        7 bytes
 19998 ;; Hardware stack levels used: 1
 19999 ;; Hardware stack levels required when called: 3
 20000 ;; This function calls:
 20001 ;;		_strcpy
 20002 ;;		i2_displayString
 20003 ;; This function is called by:
 20004 ;;		_Menu_HandleEnterPress
 20005 ;;		_Menu_HandleUp
 20006 ;;		_Menu_HandleDown
 20007 ;;		_Menu_HandleBack
 20008 ;; This function uses a non-reentrant model
 20009 ;;
 20010                           
 20011                           	psect	text95
 20012   0015C6                     __ptext95:
 20013                           	callstack 0
 20014   0015C6                     _Menu_PrintCurrentOption:
 20015                           	callstack 114
 20016   0015C6                     
 20017                           ;menu.c: 44:     char shortLabel[5] = "----";
 20018   0015C6  EE21  F1B6         	lfsr	2,Menu_PrintCurrentOption@F14568
 20019   0015CA  EE11  F114         	lfsr	1,Menu_PrintCurrentOption@shortLabel
 20020   0015CE  0E04               	movlw	4
 20021   0015D0                     i2u431_41:
 20022   0015D0  C4DB F4E3          	movff	plusw2,plusw1
 20023   0015D4  06E8               	decf	wreg,f,c
 20024   0015D6  E2FC               	bc	i2u431_41
 20025                           
 20026                           ;menu.c: 46:     switch (currentOption) {
 20027   0015D8  EF2A  F00B         	goto	i2l5552
 20028   0015DC                     i2l5540:
 20029                           
 20030                           ; BSR set to: 5
 20031                           ;menu.c: 48:             strcpy(shortLabel, "SPED");
 20032   0015DC  0E14               	movlw	low Menu_PrintCurrentOption@shortLabel
 20033   0015DE  6E01               	movwf	strcpy@dest^(0+1280),c
 20034   0015E0  0E05               	movlw	high Menu_PrintCurrentOption@shortLabel
 20035   0015E2  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 20036   0015E4  0EAC               	movlw	low STR_26
 20037   0015E6  6E03               	movwf	strcpy@src^(0+1280),c
 20038   0015E8  0E7F               	movlw	high STR_26
 20039   0015EA  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 20040   0015EC  EC80  F018         	call	_strcpy	;wreg free
 20041                           
 20042                           ;menu.c: 49:             break;
 20043   0015F0  EF50  F00B         	goto	i2l5554
 20044   0015F4                     i2l5542:
 20045                           
 20046                           ; BSR set to: 5
 20047                           ;menu.c: 51:             strcpy(shortLabel, "CONF");
 20048   0015F4  0E14               	movlw	low Menu_PrintCurrentOption@shortLabel
 20049   0015F6  6E01               	movwf	strcpy@dest^(0+1280),c
 20050   0015F8  0E05               	movlw	high Menu_PrintCurrentOption@shortLabel
 20051   0015FA  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 20052   0015FC  0EBB               	movlw	low STR_27
 20053   0015FE  6E03               	movwf	strcpy@src^(0+1280),c
 20054   001600  0E7F               	movlw	high STR_27
 20055   001602  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 20056   001604  EC80  F018         	call	_strcpy	;wreg free
 20057                           
 20058                           ;menu.c: 52:             break;
 20059   001608  EF50  F00B         	goto	i2l5554
 20060   00160C                     i2l5544:
 20061                           
 20062                           ; BSR set to: 5
 20063                           ;menu.c: 54:             strcpy(shortLabel, "OVRC");
 20064   00160C  0E14               	movlw	low Menu_PrintCurrentOption@shortLabel
 20065   00160E  6E01               	movwf	strcpy@dest^(0+1280),c
 20066   001610  0E05               	movlw	high Menu_PrintCurrentOption@shortLabel
 20067   001612  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 20068   001614  0EA7               	movlw	low STR_28
 20069   001616  6E03               	movwf	strcpy@src^(0+1280),c
 20070   001618  0E7F               	movlw	high STR_28
 20071   00161A  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 20072   00161C  EC80  F018         	call	_strcpy	;wreg free
 20073                           
 20074                           ;menu.c: 55:             break;
 20075   001620  EF50  F00B         	goto	i2l5554
 20076   001624                     i2l5546:
 20077                           
 20078                           ; BSR set to: 5
 20079                           ;menu.c: 57:             strcpy(shortLabel, "TIME");
 20080   001624  0E14               	movlw	low Menu_PrintCurrentOption@shortLabel
 20081   001626  6E01               	movwf	strcpy@dest^(0+1280),c
 20082   001628  0E05               	movlw	high Menu_PrintCurrentOption@shortLabel
 20083   00162A  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 20084   00162C  0EB1               	movlw	low STR_29
 20085   00162E  6E03               	movwf	strcpy@src^(0+1280),c
 20086   001630  0E7F               	movlw	high STR_29
 20087   001632  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 20088   001634  EC80  F018         	call	_strcpy	;wreg free
 20089                           
 20090                           ;menu.c: 58:             break;
 20091   001638  EF50  F00B         	goto	i2l5554
 20092   00163C                     i2l5548:
 20093                           
 20094                           ; BSR set to: 5
 20095                           ;menu.c: 60:             strcpy(shortLabel, "SAVE");
 20096   00163C  0E14               	movlw	low Menu_PrintCurrentOption@shortLabel
 20097   00163E  6E01               	movwf	strcpy@dest^(0+1280),c
 20098   001640  0E05               	movlw	high Menu_PrintCurrentOption@shortLabel
 20099   001642  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
 20100   001644  0EB6               	movlw	low STR_30
 20101   001646  6E03               	movwf	strcpy@src^(0+1280),c
 20102   001648  0E7F               	movlw	high STR_30
 20103   00164A  6E04               	movwf	(strcpy@src+1)^(0+1280),c
 20104   00164C  EC80  F018         	call	_strcpy	;wreg free
 20105                           
 20106                           ;menu.c: 61:             break;
 20107   001650  EF50  F00B         	goto	i2l5554
 20108   001654                     i2l5552:
 20109   001654  0105               	movlb	5	; () banked
 20110   001656  5192               	movf	_currentOption& (0+255),w,b
 20111   001658  6E12               	movwf	??_Menu_PrintCurrentOption^(0+1280),c
 20112   00165A  6A13               	clrf	(??_Menu_PrintCurrentOption+1)^(0+1280),c
 20113                           
 20114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20115                           ; Switch size 1, requested type "simple"
 20116                           ; Number of cases is 1, Range of values is 0 to 0
 20117                           ; switch strategies available:
 20118                           ; Name         Instructions Cycles
 20119                           ; simple_byte            4     3 (average)
 20120                           ;	Chosen strategy is simple_byte
 20121   00165C  5013               	movf	(??_Menu_PrintCurrentOption+1)^(0+1280),w,c
 20122   00165E  0A00               	xorlw	0	; case 0
 20123   001660  B4D8               	btfsc	status,2,c
 20124   001662  EF35  F00B         	goto	i2l7344
 20125   001666  EF50  F00B         	goto	i2l5554
 20126   00166A                     i2l7344:
 20127                           
 20128                           ; BSR set to: 5
 20129                           ; Switch size 1, requested type "simple"
 20130                           ; Number of cases is 6, Range of values is 0 to 5
 20131                           ; switch strategies available:
 20132                           ; Name         Instructions Cycles
 20133                           ; simple_byte           19    10 (average)
 20134                           ;	Chosen strategy is simple_byte
 20135   00166A  5012               	movf	??_Menu_PrintCurrentOption^(0+1280),w,c
 20136   00166C  0A00               	xorlw	0	; case 0
 20137   00166E  B4D8               	btfsc	status,2,c
 20138   001670  EFEE  F00A         	goto	i2l5540
 20139   001674  0A01               	xorlw	1	; case 1
 20140   001676  B4D8               	btfsc	status,2,c
 20141   001678  EFFA  F00A         	goto	i2l5542
 20142   00167C  0A03               	xorlw	3	; case 2
 20143   00167E  B4D8               	btfsc	status,2,c
 20144   001680  EF06  F00B         	goto	i2l5544
 20145   001684  0A01               	xorlw	1	; case 3
 20146   001686  B4D8               	btfsc	status,2,c
 20147   001688  EF12  F00B         	goto	i2l5546
 20148   00168C  0A07               	xorlw	7	; case 4
 20149   00168E  B4D8               	btfsc	status,2,c
 20150   001690  EF1E  F00B         	goto	i2l5548
 20151   001694  0A01               	xorlw	1	; case 5
 20152   001696  B4D8               	btfsc	status,2,c
 20153   001698  EF50  F00B         	goto	i2l5554
 20154   00169C  EF50  F00B         	goto	i2l5554
 20155   0016A0                     i2l5554:
 20156                           
 20157                           ;menu.c: 68:     displayString(shortLabel, 0);
 20158   0016A0  0E14               	movlw	low Menu_PrintCurrentOption@shortLabel
 20159   0016A2  6E0B               	movwf	i2displayString@str^(0+1280),c
 20160   0016A4  0E05               	movlw	high Menu_PrintCurrentOption@shortLabel
 20161   0016A6  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 20162   0016A8  0E00               	movlw	0
 20163   0016AA  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 20164   0016AC  EC3A  F00C         	call	i2_displayString	;wreg free
 20165   0016B0  0012               	return		;funcret
 20166   0016B2                     __end_of_Menu_PrintCurrentOption:
 20167                           	callstack 0
 20168                           
 20169 ;; *************** function _strcpy *****************
 20170 ;; Defined at:
 20171 ;;		line 3 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
 20172 ;; Parameters:    Size  Location     Type
 20173 ;;  dest            2    0[COMRAM] PTR unsigned char 
 20174 ;;		 -> Menu_PrintCurrentOption@shortLabel(5), 
 20175 ;;  src             2    2[COMRAM] PTR const unsigned char 
 20176 ;;		 -> STR_30(5), STR_29(5), STR_28(5), STR_27(5), 
 20177 ;;		 -> STR_26(5), 
 20178 ;; Auto vars:     Size  Location     Type
 20179 ;;  d               2    4[COMRAM] PTR unsigned char 
 20180 ;;		 -> Menu_PrintCurrentOption@shortLabel(5), 
 20181 ;; Return value:  Size  Location     Type
 20182 ;;                  2    0[COMRAM] PTR unsigned char 
 20183 ;; Registers used:
 20184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20185 ;; Tracked objects:
 20186 ;;		On entry : 0/0
 20187 ;;		On exit  : 0/0
 20188 ;;		Unchanged: 0/0
 20189 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20190 ;;      Params:         4       0       0       0       0       0       0       0       0
 20191 ;;      Locals:         2       0       0       0       0       0       0       0       0
 20192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20193 ;;      Totals:         6       0       0       0       0       0       0       0       0
 20194 ;;Total ram usage:        6 bytes
 20195 ;; Hardware stack levels used: 1
 20196 ;; This function calls:
 20197 ;;		Nothing
 20198 ;; This function is called by:
 20199 ;;		_Menu_PrintCurrentOption
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           	psect	text96
 20204   003100                     __ptext96:
 20205                           	callstack 0
 20206   003100                     _strcpy:
 20207                           	callstack 116
 20208   003100  C501  F505         	movff	strcpy@dest,strcpy@d
 20209   003104  C502  F506         	movff	strcpy@dest+1,strcpy@d+1
 20210   003108                     i2l5336:
 20211   003108  C503  F4F6         	movff	strcpy@src,tblptrl
 20212   00310C  C504  F4F7         	movff	strcpy@src+1,tblptrh
 20213   003110  4A03               	infsnz	strcpy@src^(0+1280),f,c
 20214   003112  2A04               	incf	(strcpy@src+1)^(0+1280),f,c
 20215   003114                     	if	0	;tblptru may be non-zero
 20216   003114                     	endif
 20217   003114                     	if	0	;tblptru may be non-zero
 20218   003114                     	endif
 20219   003114  C505  F4D9         	movff	strcpy@d,fsr2l
 20220   003118  C506  F4DA         	movff	strcpy@d+1,fsr2h
 20221   00311C  4A05               	infsnz	strcpy@d^(0+1280),f,c
 20222   00311E  2A06               	incf	(strcpy@d+1)^(0+1280),f,c
 20223   003120  0008               	tblrd		*
 20224   003122  C4F5 F4DF          	movff	tablat,indf2
 20225   003126  50DF               	movf	indf2,w,c
 20226   003128  A4D8               	btfss	status,2,c
 20227   00312A  EF99  F018         	goto	i2u392_41
 20228   00312E  EF9B  F018         	goto	i2u392_40
 20229   003132                     i2u392_41:
 20230   003132  EF84  F018         	goto	i2l5336
 20231   003136                     i2u392_40:
 20232   003136  0012               	return		;funcret
 20233   003138                     __end_of_strcpy:
 20234                           	callstack 0
 20235                           
 20236 ;; *************** function _BACK_DefaultInterruptHandler *****************
 20237 ;; Defined at:
 20238 ;;		line 241 in file "mcc_generated_files/system/src/pins.c"
 20239 ;; Parameters:    Size  Location     Type
 20240 ;;		None
 20241 ;; Auto vars:     Size  Location     Type
 20242 ;;		None
 20243 ;; Return value:  Size  Location     Type
 20244 ;;                  1    wreg      void 
 20245 ;; Registers used:
 20246 ;;		None
 20247 ;; Tracked objects:
 20248 ;;		On entry : 0/0
 20249 ;;		On exit  : 0/0
 20250 ;;		Unchanged: 0/0
 20251 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20252 ;;      Params:         0       0       0       0       0       0       0       0       0
 20253 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20254 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20255 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20256 ;;Total ram usage:        0 bytes
 20257 ;; Hardware stack levels used: 1
 20258 ;; This function calls:
 20259 ;;		Nothing
 20260 ;; This function is called by:
 20261 ;;		_PIN_MANAGER_Initialize
 20262 ;;		_BACK_ISR
 20263 ;; This function uses a non-reentrant model
 20264 ;;
 20265                           
 20266                           	psect	text97
 20267   00367A                     __ptext97:
 20268                           	callstack 0
 20269   00367A                     _BACK_DefaultInterruptHandler:
 20270                           	callstack 118
 20271   00367A  0012               	return		;funcret
 20272   00367C                     __end_of_BACK_DefaultInterruptHandler:
 20273                           	callstack 0
 20274                           
 20275 ;; *************** function _ADCC_ISR *****************
 20276 ;; Defined at:
 20277 ;;		line 299 in file "mcc_generated_files/adc/src/adcc.c"
 20278 ;; Parameters:    Size  Location     Type
 20279 ;;		None
 20280 ;; Auto vars:     Size  Location     Type
 20281 ;;		None
 20282 ;; Return value:  Size  Location     Type
 20283 ;;                  1    wreg      void 
 20284 ;; Registers used:
 20285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20286 ;; Tracked objects:
 20287 ;;		On entry : 0/0
 20288 ;;		On exit  : 0/0
 20289 ;;		Unchanged: 0/0
 20290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20291 ;;      Params:         0       0       0       0       0       0       0       0       0
 20292 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20293 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20294 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20295 ;;Total ram usage:        0 bytes
 20296 ;; Hardware stack levels used: 1
 20297 ;; Hardware stack levels required when called: 7
 20298 ;; This function calls:
 20299 ;;		NULL
 20300 ;;		_ADCC_DefaultADI_ISR
 20301 ;;		_CheckOverCurrent
 20302 ;; This function is called by:
 20303 ;;		_INTERRUPT_InterruptManager
 20304 ;; This function uses a non-reentrant model
 20305 ;;
 20306                           
 20307                           	psect	text98
 20308   0031A6                     __ptext98:
 20309                           	callstack 0
 20310   0031A6                     _ADCC_ISR:
 20311                           	callstack 113
 20312   0031A6                     
 20313                           ;mcc_generated_files/adc/src/adcc.c: 301:     PIR1bits.ADIF = 0;
 20314   0031A6  94B4               	bcf	180,2,c	;volatile
 20315   0031A8                     
 20316                           ;mcc_generated_files/adc/src/adcc.c: 302:     CheckOverCurrent();
 20317   0031A8  EC1F  F007         	call	_CheckOverCurrent	;wreg free
 20318   0031AC                     
 20319                           ;mcc_generated_files/adc/src/adcc.c: 303:     if (ADCC_ADI_InterruptHandler != ((void*)0
      +                          )) {
 20320   0031AC  0105               	movlb	5	; () banked
 20321   0031AE  51DE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 20322   0031B0  11DF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 20323   0031B2  B4D8               	btfsc	status,2,c
 20324   0031B4  EFDE  F018         	goto	i2u630_41
 20325   0031B8  EFE0  F018         	goto	i2u630_40
 20326   0031BC                     i2u630_41:
 20327   0031BC  EFED  F018         	goto	i2l205
 20328   0031C0                     i2u630_40:
 20329   0031C0                     
 20330                           ; BSR set to: 5
 20331                           ;mcc_generated_files/adc/src/adcc.c: 304:         ADCC_ADI_InterruptHandler();
 20332   0031C0  D802               	call	i2u631_48
 20333   0031C2  EFED  F018         	goto	i2u631_49
 20334   0031C6                     i2u631_48:
 20335   0031C6  0005               	push	
 20336   0031C8  6EFA               	movwf	pclath,c
 20337   0031CA  51DE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 20338   0031CC  6EFD               	movwf	tosl,c
 20339   0031CE  51DF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 20340   0031D0  6EFE               	movwf	tosh,c
 20341   0031D2  50F8               	movf	tblptru,w,c
 20342   0031D4  6EFF               	movwf	tosu,c
 20343   0031D6  50FA               	movf	pclath,w,c
 20344   0031D8  0012               	return		;indir
 20345   0031DA                     i2u631_49:
 20346   0031DA                     i2l205:
 20347   0031DA  0012               	return		;funcret
 20348   0031DC                     __end_of_ADCC_ISR:
 20349                           	callstack 0
 20350                           
 20351 ;; *************** function _CheckOverCurrent *****************
 20352 ;; Defined at:
 20353 ;;		line 276 in file "mcc_generated_files/adc/src/adcc.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;  current_A       4   80[COMRAM] float 
 20358 ;;  voltage         4   76[COMRAM] float 
 20359 ;;  current         2   88[COMRAM] unsigned short 
 20360 ;;  current_mA      2   86[COMRAM] short 
 20361 ;;  adc             2   84[COMRAM] unsigned short 
 20362 ;; Return value:  Size  Location     Type
 20363 ;;                  1    wreg      void 
 20364 ;; Registers used:
 20365 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20366 ;; Tracked objects:
 20367 ;;		On entry : 0/0
 20368 ;;		On exit  : 0/0
 20369 ;;		Unchanged: 0/0
 20370 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20371 ;;      Params:         0       0       0       0       0       0       0       0       0
 20372 ;;      Locals:        14       0       0       0       0       0       0       0       0
 20373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20374 ;;      Totals:        14       0       0       0       0       0       0       0       0
 20375 ;;Total ram usage:       14 bytes
 20376 ;; Hardware stack levels used: 1
 20377 ;; Hardware stack levels required when called: 6
 20378 ;; This function calls:
 20379 ;;		_ADCC_GetConversionResult
 20380 ;;		_HandleMotorState
 20381 ;;		___fladd
 20382 ;;		___fldiv
 20383 ;;		___flmul
 20384 ;;		___fltol
 20385 ;;		___xxtofl
 20386 ;;		_abs
 20387 ;;		_printInt
 20388 ;;		i2_UART1_WriteString
 20389 ;; This function is called by:
 20390 ;;		_ADCC_ISR
 20391 ;; This function uses a non-reentrant model
 20392 ;;
 20393                           
 20394                           	psect	text99
 20395   000E3E                     __ptext99:
 20396                           	callstack 0
 20397   000E3E                     _CheckOverCurrent:
 20398                           	callstack 113
 20399   000E3E                     
 20400                           ;mcc_generated_files/adc/src/adcc.c: 277:     adc_result_t adc = ADCC_GetConversionResul
      +                          t();
 20401   000E3E  EC76  F01A         	call	_ADCC_GetConversionResult	;wreg free
 20402   000E42  C501  F555         	movff	?_ADCC_GetConversionResult,CheckOverCurrent@adc
 20403   000E46  C502  F556         	movff	?_ADCC_GetConversionResult+1,CheckOverCurrent@adc+1
 20404   000E4A                     
 20405                           ;mcc_generated_files/adc/src/adcc.c: 278:     float voltage = (adc / 4095.0f) * 4.9f;
 20406   000E4A  0E00               	movlw	0
 20407   000E4C  6E15               	movwf	___fldiv@a^(0+1280),c
 20408   000E4E  0EF0               	movlw	240
 20409   000E50  6E16               	movwf	(___fldiv@a+1)^(0+1280),c
 20410   000E52  0E7F               	movlw	127
 20411   000E54  6E17               	movwf	(___fldiv@a+2)^(0+1280),c
 20412   000E56  0E45               	movlw	69
 20413   000E58  6E18               	movwf	(___fldiv@a+3)^(0+1280),c
 20414   000E5A  C555  F501         	movff	CheckOverCurrent@adc,___xxtofl@val
 20415   000E5E  C556  F502         	movff	CheckOverCurrent@adc+1,___xxtofl@val+1
 20416   000E62  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
 20417   000E64  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
 20418   000E66  0E00               	movlw	0
 20419   000E68  EC45  F006         	call	___xxtofl
 20420   000E6C  C501  F511         	movff	?___xxtofl,___fldiv@b
 20421   000E70  C502  F512         	movff	?___xxtofl+1,___fldiv@b+1
 20422   000E74  C503  F513         	movff	?___xxtofl+2,___fldiv@b+2
 20423   000E78  C504  F514         	movff	?___xxtofl+3,___fldiv@b+3
 20424   000E7C  EC7D  F004         	call	___fldiv	;wreg free
 20425   000E80  C511  F52A         	movff	?___fldiv,___flmul@b
 20426   000E84  C512  F52B         	movff	?___fldiv+1,___flmul@b+1
 20427   000E88  C513  F52C         	movff	?___fldiv+2,___flmul@b+2
 20428   000E8C  C514  F52D         	movff	?___fldiv+3,___flmul@b+3
 20429   000E90  0ECD               	movlw	205
 20430   000E92  6E2E               	movwf	___flmul@a^(0+1280),c
 20431   000E94  0ECC               	movlw	204
 20432   000E96  6E2F               	movwf	(___flmul@a+1)^(0+1280),c
 20433   000E98  0E9C               	movlw	156
 20434   000E9A  6E30               	movwf	(___flmul@a+2)^(0+1280),c
 20435   000E9C  0E40               	movlw	64
 20436   000E9E  6E31               	movwf	(___flmul@a+3)^(0+1280),c
 20437   000EA0  EC6A  F002         	call	___flmul	;wreg free
 20438   000EA4  C52A  F54D         	movff	?___flmul,CheckOverCurrent@voltage
 20439   000EA8  C52B  F54E         	movff	?___flmul+1,CheckOverCurrent@voltage+1
 20440   000EAC  C52C  F54F         	movff	?___flmul+2,CheckOverCurrent@voltage+2
 20441   000EB0  C52D  F550         	movff	?___flmul+3,CheckOverCurrent@voltage+3
 20442   000EB4                     
 20443                           ;mcc_generated_files/adc/src/adcc.c: 279:     float current_A = (voltage - 2.5f) / 0.1f;
 20444   000EB4  0E00               	movlw	0
 20445   000EB6  6E05               	movwf	___fladd@a^(0+1280),c
 20446   000EB8  0E00               	movlw	0
 20447   000EBA  6E06               	movwf	(___fladd@a+1)^(0+1280),c
 20448   000EBC  0E20               	movlw	32
 20449   000EBE  6E07               	movwf	(___fladd@a+2)^(0+1280),c
 20450   000EC0  0EC0               	movlw	192
 20451   000EC2  6E08               	movwf	(___fladd@a+3)^(0+1280),c
 20452   000EC4  C54D  F501         	movff	CheckOverCurrent@voltage,___fladd@b
 20453   000EC8  C54E  F502         	movff	CheckOverCurrent@voltage+1,___fladd@b+1
 20454   000ECC  C54F  F503         	movff	CheckOverCurrent@voltage+2,___fladd@b+2
 20455   000ED0  C550  F504         	movff	CheckOverCurrent@voltage+3,___fladd@b+3
 20456   000ED4  EC0F  F000         	call	___fladd	;wreg free
 20457   000ED8  C501  F511         	movff	?___fladd,___fldiv@b
 20458   000EDC  C502  F512         	movff	?___fladd+1,___fldiv@b+1
 20459   000EE0  C503  F513         	movff	?___fladd+2,___fldiv@b+2
 20460   000EE4  C504  F514         	movff	?___fladd+3,___fldiv@b+3
 20461   000EE8  0ECD               	movlw	205
 20462   000EEA  6E15               	movwf	___fldiv@a^(0+1280),c
 20463   000EEC  0ECC               	movlw	204
 20464   000EEE  6E16               	movwf	(___fldiv@a+1)^(0+1280),c
 20465   000EF0  0ECC               	movlw	204
 20466   000EF2  6E17               	movwf	(___fldiv@a+2)^(0+1280),c
 20467   000EF4  0E3D               	movlw	61
 20468   000EF6  6E18               	movwf	(___fldiv@a+3)^(0+1280),c
 20469   000EF8  EC7D  F004         	call	___fldiv	;wreg free
 20470   000EFC  C511  F551         	movff	?___fldiv,CheckOverCurrent@current_A
 20471   000F00  C512  F552         	movff	?___fldiv+1,CheckOverCurrent@current_A+1
 20472   000F04  C513  F553         	movff	?___fldiv+2,CheckOverCurrent@current_A+2
 20473   000F08  C514  F554         	movff	?___fldiv+3,CheckOverCurrent@current_A+3
 20474                           
 20475                           ;mcc_generated_files/adc/src/adcc.c: 280:     int16_t current_mA = (int16_t) (current_A 
      +                          * 1000.0f);
 20476   000F0C  0E00               	movlw	0
 20477   000F0E  6E2E               	movwf	___flmul@a^(0+1280),c
 20478   000F10  0E00               	movlw	0
 20479   000F12  6E2F               	movwf	(___flmul@a+1)^(0+1280),c
 20480   000F14  0E7A               	movlw	122
 20481   000F16  6E30               	movwf	(___flmul@a+2)^(0+1280),c
 20482   000F18  0E44               	movlw	68
 20483   000F1A  6E31               	movwf	(___flmul@a+3)^(0+1280),c
 20484   000F1C  C551  F52A         	movff	CheckOverCurrent@current_A,___flmul@b
 20485   000F20  C552  F52B         	movff	CheckOverCurrent@current_A+1,___flmul@b+1
 20486   000F24  C553  F52C         	movff	CheckOverCurrent@current_A+2,___flmul@b+2
 20487   000F28  C554  F52D         	movff	CheckOverCurrent@current_A+3,___flmul@b+3
 20488   000F2C  EC6A  F002         	call	___flmul	;wreg free
 20489   000F30  C52A  F543         	movff	?___flmul,___fltol@f1
 20490   000F34  C52B  F544         	movff	?___flmul+1,___fltol@f1+1
 20491   000F38  C52C  F545         	movff	?___flmul+2,___fltol@f1+2
 20492   000F3C  C52D  F546         	movff	?___flmul+3,___fltol@f1+3
 20493   000F40  EC60  F00A         	call	___fltol	;wreg free
 20494   000F44  C543  F557         	movff	?___fltol,CheckOverCurrent@current_mA
 20495   000F48  C544  F558         	movff	?___fltol+1,CheckOverCurrent@current_mA+1
 20496   000F4C                     
 20497                           ;mcc_generated_files/adc/src/adcc.c: 281:     uint16_t current = abs(current_mA);
 20498   000F4C  C557  F501         	movff	CheckOverCurrent@current_mA,abs@a
 20499   000F50  C558  F502         	movff	CheckOverCurrent@current_mA+1,abs@a+1
 20500   000F54  EC09  F019         	call	_abs	;wreg free
 20501   000F58  C501  F559         	movff	?_abs,CheckOverCurrent@current
 20502   000F5C  C502  F55A         	movff	?_abs+1,CheckOverCurrent@current+1
 20503   000F60                     
 20504                           ;mcc_generated_files/adc/src/adcc.c: 282:     currentReadings++;
 20505   000F60  0105               	movlb	5	; () banked
 20506   000F62  4B90               	infsnz	_currentReadings& (0+255),f,b	;volatile
 20507   000F64  2B91               	incf	(_currentReadings+1)& (0+255),f,b	;volatile
 20508   000F66                     
 20509                           ; BSR set to: 5
 20510                           ;mcc_generated_files/adc/src/adcc.c: 285:     if (currentReadings > 10 && motorState == 
      +                          MOTOR_CLOSE_FULL) {
 20511   000F66  BF91               	btfsc	(_currentReadings+1)& (0+255),7,b	;volatile
 20512   000F68  EFBF  F007         	goto	i2u584_41
 20513   000F6C  5191               	movf	(_currentReadings+1)& (0+255),w,b	;volatile
 20514   000F6E  E109               	bnz	i2u584_40
 20515   000F70  0E0B               	movlw	11
 20516   000F72  5D90               	subwf	_currentReadings& (0+255),w,b	;volatile
 20517   000F74  A0D8               	btfss	status,0,c
 20518   000F76  EFBF  F007         	goto	i2u584_41
 20519   000F7A  EFC1  F007         	goto	i2u584_40
 20520   000F7E                     i2u584_41:
 20521   000F7E  EFF5  F007         	goto	i2l201
 20522   000F82                     i2u584_40:
 20523   000F82                     
 20524                           ; BSR set to: 5
 20525   000F82  0E04               	movlw	4
 20526   000F84  185C               	xorwf	_motorState^(0+1280),w,c	;volatile
 20527   000F86  A4D8               	btfss	status,2,c
 20528   000F88  EFC8  F007         	goto	i2u585_41
 20529   000F8C  EFCA  F007         	goto	i2u585_40
 20530   000F90                     i2u585_41:
 20531   000F90  EFF5  F007         	goto	i2l201
 20532   000F94                     i2u585_40:
 20533   000F94                     
 20534                           ; BSR set to: 5
 20535                           ;mcc_generated_files/adc/src/adcc.c: 286:         UART1_WriteString("Current: ");
 20536   000F94  0E9D               	movlw	low STR_1
 20537   000F96  6E04               	movwf	i2UART1_WriteString@str^(0+1280),c
 20538   000F98  0E7F               	movlw	high STR_1
 20539   000F9A  6E05               	movwf	(i2UART1_WriteString@str+1)^(0+1280),c
 20540   000F9C  ECEE  F018         	call	i2_UART1_WriteString	;wreg free
 20541   000FA0                     
 20542                           ;mcc_generated_files/adc/src/adcc.c: 287:         printInt(current);
 20543   000FA0  C559  F508         	movff	CheckOverCurrent@current,printInt@value
 20544   000FA4  C55A  F509         	movff	CheckOverCurrent@current+1,printInt@value+1
 20545   000FA8  ECB4  F010         	call	_printInt	;wreg free
 20546   000FAC                     
 20547                           ;mcc_generated_files/adc/src/adcc.c: 288:         UART1_WriteString("mA\r\n");
 20548   000FAC  0EED               	movlw	low STR_2
 20549   000FAE  6E04               	movwf	i2UART1_WriteString@str^(0+1280),c
 20550   000FB0  0E7F               	movlw	high STR_2
 20551   000FB2  6E05               	movwf	(i2UART1_WriteString@str+1)^(0+1280),c
 20552   000FB4  ECEE  F018         	call	i2_UART1_WriteString	;wreg free
 20553   000FB8                     
 20554                           ;mcc_generated_files/adc/src/adcc.c: 289:         if (current >= overcurrentThreshold) {
 20555   000FB8  0105               	movlb	5	; () banked
 20556   000FBA  51C3               	movf	_overcurrentThreshold& (0+255),w,b	;volatile
 20557   000FBC  5C59               	subwf	CheckOverCurrent@current^(0+1280),w,c
 20558   000FBE  51C4               	movf	(_overcurrentThreshold+1)& (0+255),w,b	;volatile
 20559   000FC0  585A               	subwfb	(CheckOverCurrent@current+1)^(0+1280),w,c
 20560   000FC2  A0D8               	btfss	status,0,c
 20561   000FC4  EFE6  F007         	goto	i2u586_41
 20562   000FC8  EFE8  F007         	goto	i2u586_40
 20563   000FCC                     i2u586_41:
 20564   000FCC  EFF5  F007         	goto	i2l201
 20565   000FD0                     i2u586_40:
 20566   000FD0                     
 20567                           ; BSR set to: 5
 20568                           ;mcc_generated_files/adc/src/adcc.c: 290:             UART1_WriteString("Overcurrent det
      +                          ected! Stopping motor!!!\r\n");
 20569   000FD0  0E1B               	movlw	low STR_3
 20570   000FD2  6E04               	movwf	i2UART1_WriteString@str^(0+1280),c
 20571   000FD4  0E7F               	movlw	high STR_3
 20572   000FD6  6E05               	movwf	(i2UART1_WriteString@str+1)^(0+1280),c
 20573   000FD8  ECEE  F018         	call	i2_UART1_WriteString	;wreg free
 20574   000FDC                     
 20575                           ;mcc_generated_files/adc/src/adcc.c: 291:             overcurrentFlag = 1;
 20576   000FDC  0E01               	movlw	1
 20577   000FDE  0105               	movlb	5	; () banked
 20578   000FE0  6F9C               	movwf	_overcurrentFlag& (0+255),b	;volatile
 20579   000FE2                     
 20580                           ; BSR set to: 5
 20581                           ;mcc_generated_files/adc/src/adcc.c: 292:             motorState = MOTOR_OPEN_FULL;
 20582   000FE2  0E02               	movlw	2
 20583   000FE4  6E5C               	movwf	_motorState^(0+1280),c	;volatile
 20584   000FE6                     
 20585                           ; BSR set to: 5
 20586                           ;mcc_generated_files/adc/src/adcc.c: 293:             HandleMotorState();
 20587   000FE6  EC4B  F009         	call	_HandleMotorState	;wreg free
 20588   000FEA                     i2l201:
 20589   000FEA  0012               	return		;funcret
 20590   000FEC                     __end_of_CheckOverCurrent:
 20591                           	callstack 0
 20592                           
 20593 ;; *************** function i2_UART1_WriteString *****************
 20594 ;; Defined at:
 20595 ;;		line 294 in file "mcc_generated_files/uart/src/uart1.c"
 20596 ;; Parameters:    Size  Location     Type
 20597 ;;  str             2    3[COMRAM] PTR const unsigned char 
 20598 ;;		 -> STR_6(28), STR_5(5), STR_4(10), STR_3(42), 
 20599 ;;		 -> STR_2(5), STR_1(10), 
 20600 ;; Auto vars:     Size  Location     Type
 20601 ;;		None
 20602 ;; Return value:  Size  Location     Type
 20603 ;;                  1    wreg      void 
 20604 ;; Registers used:
 20605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20606 ;; Tracked objects:
 20607 ;;		On entry : 0/0
 20608 ;;		On exit  : 0/0
 20609 ;;		Unchanged: 0/0
 20610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20611 ;;      Params:         2       0       0       0       0       0       0       0       0
 20612 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20613 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20614 ;;      Totals:         2       0       0       0       0       0       0       0       0
 20615 ;;Total ram usage:        2 bytes
 20616 ;; Hardware stack levels used: 1
 20617 ;; Hardware stack levels required when called: 3
 20618 ;; This function calls:
 20619 ;;		i2_putch
 20620 ;; This function is called by:
 20621 ;;		_CheckOverCurrent
 20622 ;; This function uses a non-reentrant model
 20623 ;;
 20624                           
 20625                           	psect	text100
 20626   0031DC                     __ptext100:
 20627                           	callstack 0
 20628   0031DC                     i2_UART1_WriteString:
 20629                           	callstack 115
 20630   0031DC                     
 20631                           ;mcc_generated_files/uart/src/uart1.c: 295:     while (*str != '\0') {
 20632   0031DC  EFFA  F018         	goto	i2l6476
 20633   0031E0                     i2l6472:
 20634                           
 20635                           ;mcc_generated_files/uart/src/uart1.c: 296:         putch(*str++);
 20636   0031E0  C504  F4F6         	movff	i2UART1_WriteString@str,tblptrl
 20637   0031E4  C505  F4F7         	movff	i2UART1_WriteString@str+1,tblptrh
 20638   0031E8                     	if	0	;tblptru may be non-zero
 20639   0031E8                     	endif
 20640   0031E8                     	if	0	;tblptru may be non-zero
 20641   0031E8                     	endif
 20642   0031E8  0008               	tblrd		*
 20643   0031EA  50F5               	movf	tablat,w,c
 20644   0031EC  EC43  F01A         	call	i2_putch
 20645   0031F0  4A04               	infsnz	i2UART1_WriteString@str^(0+1280),f,c
 20646   0031F2  2A05               	incf	(i2UART1_WriteString@str+1)^(0+1280),f,c
 20647   0031F4                     i2l6476:
 20648                           
 20649                           ;mcc_generated_files/uart/src/uart1.c: 295:     while (*str != '\0') {
 20650   0031F4  C504  F4F6         	movff	i2UART1_WriteString@str,tblptrl
 20651   0031F8  C505  F4F7         	movff	i2UART1_WriteString@str+1,tblptrh
 20652   0031FC                     	if	0	;tblptru may be non-zero
 20653   0031FC                     	endif
 20654   0031FC                     	if	0	;tblptru may be non-zero
 20655   0031FC                     	endif
 20656   0031FC  0008               	tblrd		*
 20657   0031FE  50F5               	movf	tablat,w,c
 20658   003200  0900               	iorlw	0
 20659   003202  A4D8               	btfss	status,2,c
 20660   003204  EF06  F019         	goto	i2u583_41
 20661   003208  EF08  F019         	goto	i2u583_40
 20662   00320C                     i2u583_41:
 20663   00320C  EFF0  F018         	goto	i2l6472
 20664   003210                     i2u583_40:
 20665   003210  0012               	return		;funcret
 20666   003212                     __end_ofi2_UART1_WriteString:
 20667                           	callstack 0
 20668                           
 20669 ;; *************** function _printInt *****************
 20670 ;; Defined at:
 20671 ;;		line 394 in file "mcc_generated_files/uart/src/uart1.c"
 20672 ;; Parameters:    Size  Location     Type
 20673 ;;  value           2    7[COMRAM] unsigned short 
 20674 ;; Auto vars:     Size  Location     Type
 20675 ;;  buf            10    9[COMRAM] unsigned char [10]
 20676 ;;  i               2   19[COMRAM] int 
 20677 ;; Return value:  Size  Location     Type
 20678 ;;                  1    wreg      void 
 20679 ;; Registers used:
 20680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20681 ;; Tracked objects:
 20682 ;;		On entry : 0/0
 20683 ;;		On exit  : 0/0
 20684 ;;		Unchanged: 0/0
 20685 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20686 ;;      Params:         2       0       0       0       0       0       0       0       0
 20687 ;;      Locals:        12       0       0       0       0       0       0       0       0
 20688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20689 ;;      Totals:        14       0       0       0       0       0       0       0       0
 20690 ;;Total ram usage:       14 bytes
 20691 ;; Hardware stack levels used: 1
 20692 ;; Hardware stack levels required when called: 3
 20693 ;; This function calls:
 20694 ;;		___lwdiv
 20695 ;;		___lwmod
 20696 ;;		i2_putch
 20697 ;; This function is called by:
 20698 ;;		_CheckOverCurrent
 20699 ;;		_printCurrent
 20700 ;; This function uses a non-reentrant model
 20701 ;;
 20702                           
 20703                           	psect	text101
 20704   002168                     __ptext101:
 20705                           	callstack 0
 20706   002168                     _printInt:
 20707                           	callstack 115
 20708   002168                     
 20709                           ;mcc_generated_files/uart/src/uart1.c: 395:     char buf[10];;mcc_generated_files/uart/s
      +                          rc/uart1.c: 396:     int i = 0;
 20710   002168  0E00               	movlw	0
 20711   00216A  6E15               	movwf	(printInt@i+1)^(0+1280),c
 20712   00216C  0E00               	movlw	0
 20713   00216E  6E14               	movwf	printInt@i^(0+1280),c
 20714   002170                     
 20715                           ;mcc_generated_files/uart/src/uart1.c: 397:     if (value == 0) {
 20716   002170  5008               	movf	printInt@value^(0+1280),w,c
 20717   002172  1009               	iorwf	(printInt@value+1)^(0+1280),w,c
 20718   002174  A4D8               	btfss	status,2,c
 20719   002176  EFBF  F010         	goto	i2u449_41
 20720   00217A  EFC1  F010         	goto	i2u449_40
 20721   00217E                     i2u449_41:
 20722   00217E  EFE9  F010         	goto	i2l5662
 20723   002182                     i2u449_40:
 20724   002182                     
 20725                           ;mcc_generated_files/uart/src/uart1.c: 398:         putch('0');
 20726   002182  0E30               	movlw	48
 20727   002184  EC43  F01A         	call	i2_putch
 20728   002188  EF0A  F011         	goto	i2l1264
 20729   00218C                     i2l5656:
 20730                           
 20731                           ;mcc_generated_files/uart/src/uart1.c: 403:         buf[i++] = (value % 10) + '0';
 20732   00218C  0E0A               	movlw	low printInt@buf
 20733   00218E  2414               	addwf	printInt@i^(0+1280),w,c
 20734   002190  6ED9               	movwf	fsr2l,c
 20735   002192  0E05               	movlw	high printInt@buf
 20736   002194  2015               	addwfc	(printInt@i+1)^(0+1280),w,c
 20737   002196  6EDA               	movwf	fsr2h,c
 20738   002198  C508  F501         	movff	printInt@value,___lwmod@dividend
 20739   00219C  C509  F502         	movff	printInt@value+1,___lwmod@dividend+1
 20740   0021A0  0E00               	movlw	0
 20741   0021A2  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
 20742   0021A4  0E0A               	movlw	10
 20743   0021A6  6E03               	movwf	___lwmod@divisor^(0+1280),c
 20744   0021A8  EC4B  F015         	call	___lwmod	;wreg free
 20745   0021AC  5001               	movf	?___lwmod^(0+1280),w,c
 20746   0021AE  0F30               	addlw	48
 20747   0021B0  6EDF               	movwf	indf2,c
 20748   0021B2  4A14               	infsnz	printInt@i^(0+1280),f,c
 20749   0021B4  2A15               	incf	(printInt@i+1)^(0+1280),f,c
 20750   0021B6                     
 20751                           ;mcc_generated_files/uart/src/uart1.c: 404:         value /= 10;
 20752   0021B6  C508  F501         	movff	printInt@value,___lwdiv@dividend
 20753   0021BA  C509  F502         	movff	printInt@value+1,___lwdiv@dividend+1
 20754   0021BE  0E00               	movlw	0
 20755   0021C0  6E04               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 20756   0021C2  0E0A               	movlw	10
 20757   0021C4  6E03               	movwf	___lwdiv@divisor^(0+1280),c
 20758   0021C6  ECCF  F013         	call	___lwdiv	;wreg free
 20759   0021CA  C501  F508         	movff	?___lwdiv,printInt@value
 20760   0021CE  C502  F509         	movff	?___lwdiv+1,printInt@value+1
 20761   0021D2                     i2l5662:
 20762                           
 20763                           ;mcc_generated_files/uart/src/uart1.c: 402:     while (value > 0) {
 20764   0021D2  5008               	movf	printInt@value^(0+1280),w,c
 20765   0021D4  1009               	iorwf	(printInt@value+1)^(0+1280),w,c
 20766   0021D6  A4D8               	btfss	status,2,c
 20767   0021D8  EFF0  F010         	goto	i2u450_41
 20768   0021DC  EFF2  F010         	goto	i2u450_40
 20769   0021E0                     i2u450_41:
 20770   0021E0  EFC6  F010         	goto	i2l5656
 20771   0021E4                     i2u450_40:
 20772   0021E4  EFFD  F010         	goto	i2l5666
 20773   0021E8                     i2l5664:
 20774                           
 20775                           ;mcc_generated_files/uart/src/uart1.c: 407:         putch(buf[i]);
 20776   0021E8  0E0A               	movlw	low printInt@buf
 20777   0021EA  2414               	addwf	printInt@i^(0+1280),w,c
 20778   0021EC  6ED9               	movwf	fsr2l,c
 20779   0021EE  0E05               	movlw	high printInt@buf
 20780   0021F0  2015               	addwfc	(printInt@i+1)^(0+1280),w,c
 20781   0021F2  6EDA               	movwf	fsr2h,c
 20782   0021F4  50DF               	movf	indf2,w,c
 20783   0021F6  EC43  F01A         	call	i2_putch
 20784   0021FA                     i2l5666:
 20785                           
 20786                           ;mcc_generated_files/uart/src/uart1.c: 406:     while (i--) {
 20787   0021FA  0614               	decf	printInt@i^(0+1280),f,c
 20788   0021FC  A0D8               	btfss	status,0,c
 20789   0021FE  0615               	decf	(printInt@i+1)^(0+1280),f,c
 20790   002200  2814               	incf	printInt@i^(0+1280),w,c
 20791   002202  E106               	bnz	i2u451_41
 20792   002204  2815               	incf	(printInt@i+1)^(0+1280),w,c
 20793   002206  A4D8               	btfss	status,2,c
 20794   002208  EF08  F011         	goto	i2u451_41
 20795   00220C  EF0A  F011         	goto	i2u451_40
 20796   002210                     i2u451_41:
 20797   002210  EFF4  F010         	goto	i2l5664
 20798   002214                     i2u451_40:
 20799   002214                     i2l1264:
 20800   002214  0012               	return		;funcret
 20801   002216                     __end_of_printInt:
 20802                           	callstack 0
 20803                           
 20804 ;; *************** function i2_putch *****************
 20805 ;; Defined at:
 20806 ;;		line 329 in file "mcc_generated_files/uart/src/uart1.c"
 20807 ;; Parameters:    Size  Location     Type
 20808 ;;  txData          1    wreg     unsigned char 
 20809 ;; Auto vars:     Size  Location     Type
 20810 ;;  txData          1    2[COMRAM] unsigned char 
 20811 ;; Return value:  Size  Location     Type
 20812 ;;                  1    wreg      void 
 20813 ;; Registers used:
 20814 ;;		wreg, status,2, cstack
 20815 ;; Tracked objects:
 20816 ;;		On entry : 0/0
 20817 ;;		On exit  : 0/0
 20818 ;;		Unchanged: 0/0
 20819 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20820 ;;      Params:         0       0       0       0       0       0       0       0       0
 20821 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20823 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20824 ;;Total ram usage:        1 bytes
 20825 ;; Hardware stack levels used: 1
 20826 ;; Hardware stack levels required when called: 2
 20827 ;; This function calls:
 20828 ;;		i2_UART1_IsTxReady
 20829 ;;		i2_UART1_Write
 20830 ;; This function is called by:
 20831 ;;		_printInt
 20832 ;;		i2_UART1_WriteString
 20833 ;; This function uses a non-reentrant model
 20834 ;;
 20835                           
 20836                           	psect	text102
 20837   003486                     __ptext102:
 20838                           	callstack 0
 20839   003486                     i2_putch:
 20840                           	callstack 115
 20841                           
 20842                           ;incstack = 0
 20843                           ;i2putch@txData stored from wreg
 20844   003486  6E03               	movwf	i2putch@txData^(0+1280),c
 20845   003488                     i2l5632:
 20846   003488  ECD1  F019         	call	i2_UART1_IsTxReady	;wreg free
 20847   00348C  0900               	iorlw	0
 20848   00348E  B4D8               	btfsc	status,2,c
 20849   003490  EF4C  F01A         	goto	i2u447_41
 20850   003494  EF4E  F01A         	goto	i2u447_40
 20851   003498                     i2u447_41:
 20852   003498  EF44  F01A         	goto	i2l5632
 20853   00349C                     i2u447_40:
 20854   00349C                     
 20855                           ;mcc_generated_files/uart/src/uart1.c: 332:     return UART1_Write(txData);;	Return valu
      +                          e of i2_putch is never used
 20856   00349C  5003               	movf	i2putch@txData^(0+1280),w,c
 20857   00349E  EC52  F01A         	call	i2_UART1_Write
 20858   0034A2  0012               	return		;funcret
 20859   0034A4                     __end_ofi2_putch:
 20860                           	callstack 0
 20861                           
 20862 ;; *************** function i2_UART1_Write *****************
 20863 ;; Defined at:
 20864 ;;		line 287 in file "mcc_generated_files/uart/src/uart1.c"
 20865 ;; Parameters:    Size  Location     Type
 20866 ;;  txData          1    wreg     unsigned char 
 20867 ;; Auto vars:     Size  Location     Type
 20868 ;;  txData          1    1[COMRAM] unsigned char 
 20869 ;; Return value:  Size  Location     Type
 20870 ;;                  1    wreg      void 
 20871 ;; Registers used:
 20872 ;;		wreg, status,2, cstack
 20873 ;; Tracked objects:
 20874 ;;		On entry : 0/0
 20875 ;;		On exit  : 0/0
 20876 ;;		Unchanged: 0/0
 20877 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20878 ;;      Params:         0       0       0       0       0       0       0       0       0
 20879 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20881 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20882 ;;Total ram usage:        1 bytes
 20883 ;; Hardware stack levels used: 1
 20884 ;; Hardware stack levels required when called: 1
 20885 ;; This function calls:
 20886 ;;		i2_UART1_IsTxReady
 20887 ;; This function is called by:
 20888 ;;		_UART1_WriteUInt
 20889 ;;		i2_putch
 20890 ;; This function uses a non-reentrant model
 20891 ;;
 20892                           
 20893                           	psect	text103
 20894   0034A4                     __ptext103:
 20895                           	callstack 0
 20896   0034A4                     i2_UART1_Write:
 20897                           	callstack 115
 20898                           
 20899                           ;incstack = 0
 20900                           ;i2UART1_Write@txData stored from wreg
 20901   0034A4  6E02               	movwf	i2UART1_Write@txData^(0+1280),c
 20902   0034A6                     i2l5356:
 20903   0034A6  ECD1  F019         	call	i2_UART1_IsTxReady	;wreg free
 20904   0034AA  0900               	iorlw	0
 20905   0034AC  B4D8               	btfsc	status,2,c
 20906   0034AE  EF5B  F01A         	goto	i2u396_41
 20907   0034B2  EF5D  F01A         	goto	i2u396_40
 20908   0034B6                     i2u396_41:
 20909   0034B6  EF53  F01A         	goto	i2l5356
 20910   0034BA                     i2u396_40:
 20911   0034BA                     
 20912                           ;mcc_generated_files/uart/src/uart1.c: 290:     U1TXB = txData;
 20913   0034BA  C502  F2A3         	movff	i2UART1_Write@txData,675	;volatile
 20914   0034BE  0012               	return		;funcret
 20915   0034C0                     __end_ofi2_UART1_Write:
 20916                           	callstack 0
 20917                           
 20918 ;; *************** function i2_UART1_IsTxReady *****************
 20919 ;; Defined at:
 20920 ;;		line 247 in file "mcc_generated_files/uart/src/uart1.c"
 20921 ;; Parameters:    Size  Location     Type
 20922 ;;		None
 20923 ;; Auto vars:     Size  Location     Type
 20924 ;;		None
 20925 ;; Return value:  Size  Location     Type
 20926 ;;                  1    wreg      _Bool 
 20927 ;; Registers used:
 20928 ;;		wreg, status,2
 20929 ;; Tracked objects:
 20930 ;;		On entry : 0/0
 20931 ;;		On exit  : 0/0
 20932 ;;		Unchanged: 0/0
 20933 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 20934 ;;      Params:         0       0       0       0       0       0       0       0       0
 20935 ;;      Locals:         1       0       0       0       0       0       0       0       0
 20936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20937 ;;      Totals:         1       0       0       0       0       0       0       0       0
 20938 ;;Total ram usage:        1 bytes
 20939 ;; Hardware stack levels used: 1
 20940 ;; This function calls:
 20941 ;;		Nothing
 20942 ;; This function is called by:
 20943 ;;		i2_UART1_Write
 20944 ;;		i2_putch
 20945 ;; This function uses a non-reentrant model
 20946 ;;
 20947                           
 20948                           	psect	text104
 20949   0033A2                     __ptext104:
 20950                           	callstack 0
 20951   0033A2                     i2_UART1_IsTxReady:
 20952                           	callstack 115
 20953   0033A2                     
 20954                           ;mcc_generated_files/uart/src/uart1.c: 249:     return (_Bool)(U1FIFObits.TXBE && U1CON0
      +                          bits.TXEN);
 20955   0033A2  6A01               	clrf	i2_UART1_IsTxReady$2738^(0+1280),c
 20956   0033A4  0102               	movlb	2	; () banked
 20957   0033A6  ABB0               	btfss	176,5,b	;volatile
 20958   0033A8  EFD8  F019         	goto	i2u377_41
 20959   0033AC  EFDA  F019         	goto	i2u377_40
 20960   0033B0                     i2u377_41:
 20961   0033B0  EFE3  F019         	goto	i2l1177
 20962   0033B4                     i2u377_40:
 20963   0033B4                     
 20964                           ; BSR set to: 2
 20965   0033B4  ABAB               	btfss	171,5,b	;volatile
 20966   0033B6  EFDF  F019         	goto	i2u378_41
 20967   0033BA  EFE1  F019         	goto	i2u378_40
 20968   0033BE                     i2u378_41:
 20969   0033BE  EFE3  F019         	goto	i2l1177
 20970   0033C2                     i2u378_40:
 20971   0033C2                     
 20972                           ; BSR set to: 2
 20973   0033C2  0E01               	movlw	1
 20974   0033C4  6E01               	movwf	i2_UART1_IsTxReady$2738^(0+1280),c
 20975   0033C6                     i2l1177:
 20976                           
 20977                           ; BSR set to: 2
 20978   0033C6  5001               	movf	i2_UART1_IsTxReady$2738^(0+1280),w,c
 20979   0033C8                     
 20980                           ; BSR set to: 2
 20981   0033C8  0012               	return		;funcret
 20982   0033CA                     __end_ofi2_UART1_IsTxReady:
 20983                           	callstack 0
 20984                           
 20985 ;; *************** function ___lwmod *****************
 20986 ;; Defined at:
 20987 ;;		line 7 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
 20988 ;; Parameters:    Size  Location     Type
 20989 ;;  dividend        2    0[COMRAM] unsigned int 
 20990 ;;  divisor         2    2[COMRAM] unsigned int 
 20991 ;; Auto vars:     Size  Location     Type
 20992 ;;  counter         1    4[COMRAM] unsigned char 
 20993 ;; Return value:  Size  Location     Type
 20994 ;;                  2    0[COMRAM] unsigned int 
 20995 ;; Registers used:
 20996 ;;		wreg, status,2, status,0
 20997 ;; Tracked objects:
 20998 ;;		On entry : 0/0
 20999 ;;		On exit  : 0/0
 21000 ;;		Unchanged: 0/0
 21001 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 21002 ;;      Params:         4       0       0       0       0       0       0       0       0
 21003 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21005 ;;      Totals:         5       0       0       0       0       0       0       0       0
 21006 ;;Total ram usage:        5 bytes
 21007 ;; Hardware stack levels used: 1
 21008 ;; This function calls:
 21009 ;;		Nothing
 21010 ;; This function is called by:
 21011 ;;		_UART1_WriteUInt
 21012 ;;		_printInt
 21013 ;;		_Menu_HandleDown
 21014 ;;		_printCurrent
 21015 ;; This function uses a non-reentrant model
 21016 ;;
 21017                           
 21018                           	psect	text105
 21019   002A96                     __ptext105:
 21020                           	callstack 0
 21021   002A96                     ___lwmod:
 21022                           	callstack 117
 21023   002A96  5003               	movf	___lwmod@divisor^(0+1280),w,c
 21024   002A98  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
 21025   002A9A  B4D8               	btfsc	status,2,c
 21026   002A9C  EF52  F015         	goto	i2u393_41
 21027   002AA0  EF54  F015         	goto	i2u393_40
 21028   002AA4                     i2u393_41:
 21029   002AA4  EF78  F015         	goto	i2l2247
 21030   002AA8                     i2u393_40:
 21031   002AA8  0E01               	movlw	1
 21032   002AAA  6E05               	movwf	___lwmod@counter^(0+1280),c
 21033   002AAC  EF5C  F015         	goto	i2l5344
 21034   002AB0                     i2l5342:
 21035   002AB0  90D8               	bcf	status,0,c
 21036   002AB2  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
 21037   002AB4  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
 21038   002AB6  2A05               	incf	___lwmod@counter^(0+1280),f,c
 21039   002AB8                     i2l5344:
 21040   002AB8  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
 21041   002ABA  EF61  F015         	goto	i2u394_41
 21042   002ABE  EF63  F015         	goto	i2u394_40
 21043   002AC2                     i2u394_41:
 21044   002AC2  EF58  F015         	goto	i2l5342
 21045   002AC6                     i2u394_40:
 21046   002AC6                     i2l5346:
 21047   002AC6  5003               	movf	___lwmod@divisor^(0+1280),w,c
 21048   002AC8  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
 21049   002ACA  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
 21050   002ACC  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
 21051   002ACE  A0D8               	btfss	status,0,c
 21052   002AD0  EF6C  F015         	goto	i2u395_41
 21053   002AD4  EF6E  F015         	goto	i2u395_40
 21054   002AD8                     i2u395_41:
 21055   002AD8  EF72  F015         	goto	i2l5350
 21056   002ADC                     i2u395_40:
 21057   002ADC  5003               	movf	___lwmod@divisor^(0+1280),w,c
 21058   002ADE  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
 21059   002AE0  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
 21060   002AE2  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
 21061   002AE4                     i2l5350:
 21062   002AE4  90D8               	bcf	status,0,c
 21063   002AE6  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
 21064   002AE8  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
 21065   002AEA  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
 21066   002AEC  EF63  F015         	goto	i2l5346
 21067   002AF0                     i2l2247:
 21068   002AF0  C501  F501         	movff	___lwmod@dividend,?___lwmod
 21069   002AF4  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
 21070   002AF8  0012               	return		;funcret
 21071   002AFA                     __end_of___lwmod:
 21072                           	callstack 0
 21073                           
 21074 ;; *************** function _abs *****************
 21075 ;; Defined at:
 21076 ;;		line 1 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/abs.c"
 21077 ;; Parameters:    Size  Location     Type
 21078 ;;  a               2    0[COMRAM] int 
 21079 ;; Auto vars:     Size  Location     Type
 21080 ;;		None
 21081 ;; Return value:  Size  Location     Type
 21082 ;;                  2    0[COMRAM] int 
 21083 ;; Registers used:
 21084 ;;		wreg, status,2, status,0
 21085 ;; Tracked objects:
 21086 ;;		On entry : 0/0
 21087 ;;		On exit  : 0/0
 21088 ;;		Unchanged: 0/0
 21089 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 21090 ;;      Params:         2       0       0       0       0       0       0       0       0
 21091 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21092 ;;      Temps:          2       0       0       0       0       0       0       0       0
 21093 ;;      Totals:         4       0       0       0       0       0       0       0       0
 21094 ;;Total ram usage:        4 bytes
 21095 ;; Hardware stack levels used: 1
 21096 ;; This function calls:
 21097 ;;		Nothing
 21098 ;; This function is called by:
 21099 ;;		_CheckOverCurrent
 21100 ;; This function uses a non-reentrant model
 21101 ;;
 21102                           
 21103                           	psect	text106
 21104   003212                     __ptext106:
 21105                           	callstack 0
 21106   003212                     _abs:
 21107                           	callstack 118
 21108   003212  BE02               	btfsc	(abs@a+1)^(0+1280),7,c
 21109   003214  EF0E  F019         	goto	i2u448_41
 21110   003218  EF10  F019         	goto	i2u448_40
 21111   00321C                     i2u448_41:
 21112   00321C  EF16  F019         	goto	i2l2421
 21113   003220                     i2u448_40:
 21114   003220  C501  F501         	movff	abs@a,?_abs
 21115   003224  C502  F502         	movff	abs@a+1,?_abs+1
 21116   003228  EF22  F019         	goto	i2l2424
 21117   00322C                     i2l2421:
 21118   00322C  C501  F503         	movff	abs@a,??_abs
 21119   003230  C502  F504         	movff	abs@a+1,??_abs+1
 21120   003234  1E03               	comf	??_abs^(0+1280),f,c
 21121   003236  1E04               	comf	(??_abs+1)^(0+1280),f,c
 21122   003238  4A03               	infsnz	??_abs^(0+1280),f,c
 21123   00323A  2A04               	incf	(??_abs+1)^(0+1280),f,c
 21124   00323C  C503  F501         	movff	??_abs,?_abs
 21125   003240  C504  F502         	movff	??_abs+1,?_abs+1
 21126   003244                     i2l2424:
 21127   003244  0012               	return		;funcret
 21128   003246                     __end_of_abs:
 21129                           	callstack 0
 21130                           
 21131 ;; *************** function ___xxtofl *****************
 21132 ;; Defined at:
 21133 ;;		line 10 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/xxtofl.c"
 21134 ;; Parameters:    Size  Location     Type
 21135 ;;  sign            1    wreg     unsigned char 
 21136 ;;  val             4    0[COMRAM] long 
 21137 ;; Auto vars:     Size  Location     Type
 21138 ;;  sign            1    8[COMRAM] unsigned char 
 21139 ;;  arg             4   10[COMRAM] unsigned long 
 21140 ;;  exp             1    9[COMRAM] unsigned char 
 21141 ;; Return value:  Size  Location     Type
 21142 ;;                  4    0[COMRAM] unsigned char 
 21143 ;; Registers used:
 21144 ;;		wreg, status,2, status,0
 21145 ;; Tracked objects:
 21146 ;;		On entry : 0/0
 21147 ;;		On exit  : 0/0
 21148 ;;		Unchanged: 0/0
 21149 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 21150 ;;      Params:         4       0       0       0       0       0       0       0       0
 21151 ;;      Locals:         6       0       0       0       0       0       0       0       0
 21152 ;;      Temps:          4       0       0       0       0       0       0       0       0
 21153 ;;      Totals:        14       0       0       0       0       0       0       0       0
 21154 ;;Total ram usage:       14 bytes
 21155 ;; Hardware stack levels used: 1
 21156 ;; This function calls:
 21157 ;;		Nothing
 21158 ;; This function is called by:
 21159 ;;		_CheckOverCurrent
 21160 ;; This function uses a non-reentrant model
 21161 ;;
 21162                           
 21163                           	psect	text107
 21164   000C8A                     __ptext107:
 21165                           	callstack 0
 21166   000C8A                     ___xxtofl:
 21167                           	callstack 118
 21168                           
 21169                           ;incstack = 0
 21170                           ;___xxtofl@sign stored from wreg
 21171   000C8A  6E09               	movwf	___xxtofl@sign^(0+1280),c
 21172   000C8C  5009               	movf	___xxtofl@sign^(0+1280),w,c
 21173   000C8E  B4D8               	btfsc	status,2,c
 21174   000C90  EF4C  F006         	goto	i2u573_41
 21175   000C94  EF4E  F006         	goto	i2u573_40
 21176   000C98                     i2u573_41:
 21177   000C98  EF70  F006         	goto	i2l2401
 21178   000C9C                     i2u573_40:
 21179   000C9C  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 21180   000C9E  EF55  F006         	goto	i2u574_40
 21181   000CA2  EF53  F006         	goto	i2u574_41
 21182   000CA6                     i2u574_41:
 21183   000CA6  EF70  F006         	goto	i2l2401
 21184   000CAA                     i2u574_40:
 21185   000CAA  C501  F505         	movff	___xxtofl@val,??___xxtofl
 21186   000CAE  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
 21187   000CB2  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
 21188   000CB6  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
 21189   000CBA  1E05               	comf	??___xxtofl^(0+1280),f,c
 21190   000CBC  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
 21191   000CBE  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
 21192   000CC0  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
 21193   000CC2  2A05               	incf	??___xxtofl^(0+1280),f,c
 21194   000CC4  0E00               	movlw	0
 21195   000CC6  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 21196   000CC8  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 21197   000CCA  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 21198   000CCC  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
 21199   000CD0  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
 21200   000CD4  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
 21201   000CD8  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
 21202   000CDC  EF78  F006         	goto	i2l6430
 21203   000CE0                     i2l2401:
 21204   000CE0  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
 21205   000CE4  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 21206   000CE8  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 21207   000CEC  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 21208   000CF0                     i2l6430:
 21209   000CF0  5001               	movf	___xxtofl@val^(0+1280),w,c
 21210   000CF2  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 21211   000CF4  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 21212   000CF6  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 21213   000CF8  A4D8               	btfss	status,2,c
 21214   000CFA  EF81  F006         	goto	i2u575_41
 21215   000CFE  EF83  F006         	goto	i2u575_40
 21216   000D02                     i2u575_41:
 21217   000D02  EF8D  F006         	goto	i2l6436
 21218   000D06                     i2u575_40:
 21219   000D06  0E00               	movlw	0
 21220   000D08  6E01               	movwf	?___xxtofl^(0+1280),c
 21221   000D0A  0E00               	movlw	0
 21222   000D0C  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
 21223   000D0E  0E00               	movlw	0
 21224   000D10  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
 21225   000D12  0E00               	movlw	0
 21226   000D14  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
 21227   000D16  EF1E  F007         	goto	i2l2404
 21228   000D1A                     i2l6436:
 21229   000D1A  0E96               	movlw	150
 21230   000D1C  6E0A               	movwf	___xxtofl@exp^(0+1280),c
 21231   000D1E  EF97  F006         	goto	i2l6440
 21232   000D22                     i2l6438:
 21233   000D22  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
 21234   000D24  90D8               	bcf	status,0,c
 21235   000D26  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 21236   000D28  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 21237   000D2A  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 21238   000D2C  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
 21239   000D2E                     i2l6440:
 21240   000D2E  0E00               	movlw	0
 21241   000D30  140B               	andwf	___xxtofl@arg^(0+1280),w,c
 21242   000D32  6E05               	movwf	??___xxtofl^(0+1280),c
 21243   000D34  0E00               	movlw	0
 21244   000D36  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 21245   000D38  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
 21246   000D3A  0E00               	movlw	0
 21247   000D3C  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 21248   000D3E  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
 21249   000D40  0EFE               	movlw	254
 21250   000D42  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 21251   000D44  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
 21252   000D46  5005               	movf	??___xxtofl^(0+1280),w,c
 21253   000D48  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 21254   000D4A  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 21255   000D4C  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 21256   000D4E  A4D8               	btfss	status,2,c
 21257   000D50  EFAC  F006         	goto	i2u576_41
 21258   000D54  EFAE  F006         	goto	i2u576_40
 21259   000D58                     i2u576_41:
 21260   000D58  EF91  F006         	goto	i2l6438
 21261   000D5C                     i2u576_40:
 21262   000D5C  EFBC  F006         	goto	i2l2408
 21263   000D60                     i2l6442:
 21264   000D60  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
 21265   000D62  0E01               	movlw	1
 21266   000D64  260B               	addwf	___xxtofl@arg^(0+1280),f,c
 21267   000D66  0E00               	movlw	0
 21268   000D68  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 21269   000D6A  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 21270   000D6C  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 21271   000D6E  90D8               	bcf	status,0,c
 21272   000D70  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 21273   000D72  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 21274   000D74  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 21275   000D76  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
 21276   000D78                     i2l2408:
 21277   000D78  0E00               	movlw	0
 21278   000D7A  140B               	andwf	___xxtofl@arg^(0+1280),w,c
 21279   000D7C  6E05               	movwf	??___xxtofl^(0+1280),c
 21280   000D7E  0E00               	movlw	0
 21281   000D80  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 21282   000D82  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
 21283   000D84  0E00               	movlw	0
 21284   000D86  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 21285   000D88  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
 21286   000D8A  0EFF               	movlw	255
 21287   000D8C  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 21288   000D8E  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
 21289   000D90  5005               	movf	??___xxtofl^(0+1280),w,c
 21290   000D92  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 21291   000D94  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 21292   000D96  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 21293   000D98  A4D8               	btfss	status,2,c
 21294   000D9A  EFD1  F006         	goto	i2u577_41
 21295   000D9E  EFD3  F006         	goto	i2u577_40
 21296   000DA2                     i2u577_41:
 21297   000DA2  EFB0  F006         	goto	i2l6442
 21298   000DA6                     i2u577_40:
 21299   000DA6  EFDB  F006         	goto	i2l6450
 21300   000DAA                     i2l6448:
 21301   000DAA  060A               	decf	___xxtofl@exp^(0+1280),f,c
 21302   000DAC  90D8               	bcf	status,0,c
 21303   000DAE  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
 21304   000DB0  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 21305   000DB2  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 21306   000DB4  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 21307   000DB6                     i2l6450:
 21308   000DB6  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 21309   000DB8  EFE0  F006         	goto	i2u578_41
 21310   000DBC  EFE2  F006         	goto	i2u578_40
 21311   000DC0                     i2u578_41:
 21312   000DC0  EFEA  F006         	goto	i2l2415
 21313   000DC4                     i2u578_40:
 21314   000DC4  0E02               	movlw	2
 21315   000DC6  600A               	cpfslt	___xxtofl@exp^(0+1280),c
 21316   000DC8  EFE8  F006         	goto	i2u579_41
 21317   000DCC  EFEA  F006         	goto	i2u579_40
 21318   000DD0                     i2u579_41:
 21319   000DD0  EFD5  F006         	goto	i2l6448
 21320   000DD4                     i2u579_40:
 21321   000DD4                     i2l2415:
 21322   000DD4  B00A               	btfsc	___xxtofl@exp^(0+1280),0,c
 21323   000DD6  EFEF  F006         	goto	i2u580_41
 21324   000DDA  EFF1  F006         	goto	i2u580_40
 21325   000DDE                     i2u580_41:
 21326   000DDE  EFF2  F006         	goto	i2l6456
 21327   000DE2                     i2u580_40:
 21328   000DE2  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 21329   000DE4                     i2l6456:
 21330   000DE4  90D8               	bcf	status,0,c
 21331   000DE6  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
 21332   000DE8  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
 21333   000DEC  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
 21334   000DEE  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
 21335   000DF0  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
 21336   000DF2  C505  F508         	movff	??___xxtofl,??___xxtofl+3
 21337   000DF6  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
 21338   000DF8  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
 21339   000DFA  6A05               	clrf	??___xxtofl^(0+1280),c
 21340   000DFC  5005               	movf	??___xxtofl^(0+1280),w,c
 21341   000DFE  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
 21342   000E00  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
 21343   000E02  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 21344   000E04  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
 21345   000E06  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 21346   000E08  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
 21347   000E0A  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 21348   000E0C  5009               	movf	___xxtofl@sign^(0+1280),w,c
 21349   000E0E  B4D8               	btfsc	status,2,c
 21350   000E10  EF0C  F007         	goto	i2u581_41
 21351   000E14  EF0E  F007         	goto	i2u581_40
 21352   000E18                     i2u581_41:
 21353   000E18  EF16  F007         	goto	i2l6466
 21354   000E1C                     i2u581_40:
 21355   000E1C  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 21356   000E1E  EF15  F007         	goto	i2u582_40
 21357   000E22  EF13  F007         	goto	i2u582_41
 21358   000E26                     i2u582_41:
 21359   000E26  EF16  F007         	goto	i2l6466
 21360   000E2A                     i2u582_40:
 21361   000E2A  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 21362   000E2C                     i2l6466:
 21363   000E2C  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
 21364   000E30  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
 21365   000E34  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
 21366   000E38  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
 21367   000E3C                     i2l2404:
 21368   000E3C  0012               	return		;funcret
 21369   000E3E                     __end_of___xxtofl:
 21370                           	callstack 0
 21371                           
 21372 ;; *************** function ___fltol *****************
 21373 ;; Defined at:
 21374 ;;		line 43 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
 21375 ;; Parameters:    Size  Location     Type
 21376 ;;  f1              4   66[COMRAM] unsigned char 
 21377 ;; Auto vars:     Size  Location     Type
 21378 ;;  exp1            1   75[COMRAM] unsigned char 
 21379 ;;  sign1           1   74[COMRAM] unsigned char 
 21380 ;; Return value:  Size  Location     Type
 21381 ;;                  4   66[COMRAM] long 
 21382 ;; Registers used:
 21383 ;;		wreg, status,2, status,0
 21384 ;; Tracked objects:
 21385 ;;		On entry : 0/0
 21386 ;;		On exit  : 0/0
 21387 ;;		Unchanged: 0/0
 21388 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 21389 ;;      Params:         4       0       0       0       0       0       0       0       0
 21390 ;;      Locals:         2       0       0       0       0       0       0       0       0
 21391 ;;      Temps:          4       0       0       0       0       0       0       0       0
 21392 ;;      Totals:        10       0       0       0       0       0       0       0       0
 21393 ;;Total ram usage:       10 bytes
 21394 ;; Hardware stack levels used: 1
 21395 ;; This function calls:
 21396 ;;		Nothing
 21397 ;; This function is called by:
 21398 ;;		_CheckOverCurrent
 21399 ;; This function uses a non-reentrant model
 21400 ;;
 21401                           
 21402                           	psect	text108
 21403   0014C0                     __ptext108:
 21404                           	callstack 0
 21405   0014C0                     ___fltol:
 21406                           	callstack 118
 21407   0014C0  3445               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 21408   0014C2  3446               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 21409   0014C4  6E4C               	movwf	___fltol@exp1^(0+1280),c
 21410   0014C6  504C               	movf	___fltol@exp1^(0+1280),w,c
 21411   0014C8  A4D8               	btfss	status,2,c
 21412   0014CA  EF69  F00A         	goto	i2u566_41
 21413   0014CE  EF6B  F00A         	goto	i2u566_40
 21414   0014D2                     i2u566_41:
 21415   0014D2  EF75  F00A         	goto	i2l6386
 21416   0014D6                     i2u566_40:
 21417   0014D6                     i2l6382:
 21418   0014D6  0E00               	movlw	0
 21419   0014D8  6E43               	movwf	?___fltol^(0+1280),c
 21420   0014DA  0E00               	movlw	0
 21421   0014DC  6E44               	movwf	(?___fltol+1)^(0+1280),c
 21422   0014DE  0E00               	movlw	0
 21423   0014E0  6E45               	movwf	(?___fltol+2)^(0+1280),c
 21424   0014E2  0E00               	movlw	0
 21425   0014E4  6E46               	movwf	(?___fltol+3)^(0+1280),c
 21426   0014E6  EFE2  F00A         	goto	i2l2043
 21427   0014EA                     i2l6386:
 21428   0014EA  C543  F547         	movff	___fltol@f1,??___fltol
 21429   0014EE  C544  F548         	movff	___fltol@f1+1,??___fltol+1
 21430   0014F2  C545  F549         	movff	___fltol@f1+2,??___fltol+2
 21431   0014F6  C546  F54A         	movff	___fltol@f1+3,??___fltol+3
 21432   0014FA  0E20               	movlw	32
 21433   0014FC  EF85  F00A         	goto	i2u567_40
 21434   001500                     i2u567_45:
 21435   001500  90D8               	bcf	status,0,c
 21436   001502  324A               	rrcf	(??___fltol+3)^(0+1280),f,c
 21437   001504  3249               	rrcf	(??___fltol+2)^(0+1280),f,c
 21438   001506  3248               	rrcf	(??___fltol+1)^(0+1280),f,c
 21439   001508  3247               	rrcf	??___fltol^(0+1280),f,c
 21440   00150A                     i2u567_40:
 21441   00150A  2EE8               	decfsz	wreg,f,c
 21442   00150C  EF80  F00A         	goto	i2u567_45
 21443   001510  5047               	movf	??___fltol^(0+1280),w,c
 21444   001512  6E4B               	movwf	___fltol@sign1^(0+1280),c
 21445   001514  8E45               	bsf	(___fltol@f1+2)^(0+1280),7,c
 21446   001516  0EFF               	movlw	255
 21447   001518  1643               	andwf	___fltol@f1^(0+1280),f,c
 21448   00151A  0EFF               	movlw	255
 21449   00151C  1644               	andwf	(___fltol@f1+1)^(0+1280),f,c
 21450   00151E  0EFF               	movlw	255
 21451   001520  1645               	andwf	(___fltol@f1+2)^(0+1280),f,c
 21452   001522  0E00               	movlw	0
 21453   001524  1646               	andwf	(___fltol@f1+3)^(0+1280),f,c
 21454   001526  0E96               	movlw	150
 21455   001528  5E4C               	subwf	___fltol@exp1^(0+1280),f,c
 21456   00152A  BE4C               	btfsc	___fltol@exp1^(0+1280),7,c
 21457   00152C  EF9C  F00A         	goto	i2u568_40
 21458   001530  EF9A  F00A         	goto	i2u568_41
 21459   001534                     i2u568_41:
 21460   001534  EFB2  F00A         	goto	i2l6406
 21461   001538                     i2u568_40:
 21462   001538  504C               	movf	___fltol@exp1^(0+1280),w,c
 21463   00153A  0A80               	xorlw	128
 21464   00153C  0F97               	addlw	151
 21465   00153E  B0D8               	btfsc	status,0,c
 21466   001540  EFA4  F00A         	goto	i2u569_41
 21467   001544  EFA6  F00A         	goto	i2u569_40
 21468   001548                     i2u569_41:
 21469   001548  EFA8  F00A         	goto	i2l6402
 21470   00154C                     i2u569_40:
 21471   00154C  EF6B  F00A         	goto	i2l6382
 21472   001550                     i2l6402:
 21473   001550  90D8               	bcf	status,0,c
 21474   001552  3246               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 21475   001554  3245               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 21476   001556  3244               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 21477   001558  3243               	rrcf	___fltol@f1^(0+1280),f,c
 21478   00155A  3E4C               	incfsz	___fltol@exp1^(0+1280),f,c
 21479   00155C  EFA8  F00A         	goto	i2l6402
 21480   001560  EFCA  F00A         	goto	i2l6416
 21481   001564                     i2l6406:
 21482   001564  0E1F               	movlw	31
 21483   001566  644C               	cpfsgt	___fltol@exp1^(0+1280),c
 21484   001568  EFB8  F00A         	goto	i2u570_41
 21485   00156C  EFBA  F00A         	goto	i2u570_40
 21486   001570                     i2u570_41:
 21487   001570  EFC2  F00A         	goto	i2l6414
 21488   001574                     i2u570_40:
 21489   001574  EF6B  F00A         	goto	i2l6382
 21490   001578                     i2l6412:
 21491   001578  90D8               	bcf	status,0,c
 21492   00157A  3643               	rlcf	___fltol@f1^(0+1280),f,c
 21493   00157C  3644               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 21494   00157E  3645               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 21495   001580  3646               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 21496   001582  064C               	decf	___fltol@exp1^(0+1280),f,c
 21497   001584                     i2l6414:
 21498   001584  504C               	movf	___fltol@exp1^(0+1280),w,c
 21499   001586  A4D8               	btfss	status,2,c
 21500   001588  EFC8  F00A         	goto	i2u571_41
 21501   00158C  EFCA  F00A         	goto	i2u571_40
 21502   001590                     i2u571_41:
 21503   001590  EFBC  F00A         	goto	i2l6412
 21504   001594                     i2u571_40:
 21505   001594                     i2l6416:
 21506   001594  504B               	movf	___fltol@sign1^(0+1280),w,c
 21507   001596  B4D8               	btfsc	status,2,c
 21508   001598  EFD0  F00A         	goto	i2u572_41
 21509   00159C  EFD2  F00A         	goto	i2u572_40
 21510   0015A0                     i2u572_41:
 21511   0015A0  EFDA  F00A         	goto	i2l6420
 21512   0015A4                     i2u572_40:
 21513   0015A4  1E46               	comf	(___fltol@f1+3)^(0+1280),f,c
 21514   0015A6  1E45               	comf	(___fltol@f1+2)^(0+1280),f,c
 21515   0015A8  1E44               	comf	(___fltol@f1+1)^(0+1280),f,c
 21516   0015AA  6C43               	negf	___fltol@f1^(0+1280),c
 21517   0015AC  0E00               	movlw	0
 21518   0015AE  2244               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 21519   0015B0  2245               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 21520   0015B2  2246               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 21521   0015B4                     i2l6420:
 21522   0015B4  C543  F543         	movff	___fltol@f1,?___fltol
 21523   0015B8  C544  F544         	movff	___fltol@f1+1,?___fltol+1
 21524   0015BC  C545  F545         	movff	___fltol@f1+2,?___fltol+2
 21525   0015C0  C546  F546         	movff	___fltol@f1+3,?___fltol+3
 21526   0015C4                     i2l2043:
 21527   0015C4  0012               	return		;funcret
 21528   0015C6                     __end_of___fltol:
 21529                           	callstack 0
 21530                           
 21531 ;; *************** function ___flmul *****************
 21532 ;; Defined at:
 21533 ;;		line 8 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
 21534 ;; Parameters:    Size  Location     Type
 21535 ;;  b               4   41[COMRAM] long 
 21536 ;;  a               4   45[COMRAM] long 
 21537 ;; Auto vars:     Size  Location     Type
 21538 ;;  prod            4   60[COMRAM] struct .
 21539 ;;  grs             4   54[COMRAM] unsigned long 
 21540 ;;  temp            2   64[COMRAM] struct .
 21541 ;;  bexp            1   59[COMRAM] unsigned char 
 21542 ;;  aexp            1   58[COMRAM] unsigned char 
 21543 ;;  sign            1   53[COMRAM] unsigned char 
 21544 ;; Return value:  Size  Location     Type
 21545 ;;                  4   41[COMRAM] unsigned char 
 21546 ;; Registers used:
 21547 ;;		wreg, status,2, status,0, prodl, prodh
 21548 ;; Tracked objects:
 21549 ;;		On entry : 0/0
 21550 ;;		On exit  : 0/0
 21551 ;;		Unchanged: 0/0
 21552 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 21553 ;;      Params:         8       0       0       0       0       0       0       0       0
 21554 ;;      Locals:        13       0       0       0       0       0       0       0       0
 21555 ;;      Temps:          4       0       0       0       0       0       0       0       0
 21556 ;;      Totals:        25       0       0       0       0       0       0       0       0
 21557 ;;Total ram usage:       25 bytes
 21558 ;; Hardware stack levels used: 1
 21559 ;; This function calls:
 21560 ;;		Nothing
 21561 ;; This function is called by:
 21562 ;;		_CheckOverCurrent
 21563 ;; This function uses a non-reentrant model
 21564 ;;
 21565                           
 21566                           	psect	text109
 21567   0004D4                     __ptext109:
 21568                           	callstack 0
 21569   0004D4                     ___flmul:
 21570                           	callstack 118
 21571   0004D4  502D               	movf	(___flmul@b+3)^(0+1280),w,c
 21572   0004D6  0B80               	andlw	128
 21573   0004D8  6E36               	movwf	___flmul@sign^(0+1280),c
 21574   0004DA  502D               	movf	(___flmul@b+3)^(0+1280),w,c
 21575   0004DC  242D               	addwf	(___flmul@b+3)^(0+1280),w,c
 21576   0004DE  6E3C               	movwf	___flmul@bexp^(0+1280),c
 21577   0004E0  AE2C               	btfss	(___flmul@b+2)^(0+1280),7,c
 21578   0004E2  EF75  F002         	goto	i2u547_41
 21579   0004E6  EF77  F002         	goto	i2u547_40
 21580   0004EA                     i2u547_41:
 21581   0004EA  EF78  F002         	goto	i2l6258
 21582   0004EE                     i2u547_40:
 21583   0004EE  803C               	bsf	___flmul@bexp^(0+1280),0,c
 21584   0004F0                     i2l6258:
 21585   0004F0  503C               	movf	___flmul@bexp^(0+1280),w,c
 21586   0004F2  B4D8               	btfsc	status,2,c
 21587   0004F4  EF7E  F002         	goto	i2u548_41
 21588   0004F8  EF80  F002         	goto	i2u548_40
 21589   0004FC                     i2u548_41:
 21590   0004FC  EF93  F002         	goto	i2l6266
 21591   000500                     i2u548_40:
 21592   000500  283C               	incf	___flmul@bexp^(0+1280),w,c
 21593   000502  A4D8               	btfss	status,2,c
 21594   000504  EF86  F002         	goto	i2u549_41
 21595   000508  EF88  F002         	goto	i2u549_40
 21596   00050C                     i2u549_41:
 21597   00050C  EF90  F002         	goto	i2l6264
 21598   000510                     i2u549_40:
 21599   000510  0E00               	movlw	0
 21600   000512  6E2A               	movwf	___flmul@b^(0+1280),c
 21601   000514  0E00               	movlw	0
 21602   000516  6E2B               	movwf	(___flmul@b+1)^(0+1280),c
 21603   000518  0E00               	movlw	0
 21604   00051A  6E2C               	movwf	(___flmul@b+2)^(0+1280),c
 21605   00051C  0E00               	movlw	0
 21606   00051E  6E2D               	movwf	(___flmul@b+3)^(0+1280),c
 21607   000520                     i2l6264:
 21608   000520  8E2C               	bsf	(___flmul@b+2)^(0+1280),7,c
 21609   000522  EF9B  F002         	goto	i2l6268
 21610   000526                     i2l6266:
 21611   000526  0E00               	movlw	0
 21612   000528  6E2A               	movwf	___flmul@b^(0+1280),c
 21613   00052A  0E00               	movlw	0
 21614   00052C  6E2B               	movwf	(___flmul@b+1)^(0+1280),c
 21615   00052E  0E00               	movlw	0
 21616   000530  6E2C               	movwf	(___flmul@b+2)^(0+1280),c
 21617   000532  0E00               	movlw	0
 21618   000534  6E2D               	movwf	(___flmul@b+3)^(0+1280),c
 21619   000536                     i2l6268:
 21620   000536  5031               	movf	(___flmul@a+3)^(0+1280),w,c
 21621   000538  0B80               	andlw	128
 21622   00053A  1A36               	xorwf	___flmul@sign^(0+1280),f,c
 21623   00053C  5031               	movf	(___flmul@a+3)^(0+1280),w,c
 21624   00053E  2431               	addwf	(___flmul@a+3)^(0+1280),w,c
 21625   000540  6E3B               	movwf	___flmul@aexp^(0+1280),c
 21626   000542  AE30               	btfss	(___flmul@a+2)^(0+1280),7,c
 21627   000544  EFA6  F002         	goto	i2u550_41
 21628   000548  EFA8  F002         	goto	i2u550_40
 21629   00054C                     i2u550_41:
 21630   00054C  EFA9  F002         	goto	i2l6276
 21631   000550                     i2u550_40:
 21632   000550  803B               	bsf	___flmul@aexp^(0+1280),0,c
 21633   000552                     i2l6276:
 21634   000552  503B               	movf	___flmul@aexp^(0+1280),w,c
 21635   000554  B4D8               	btfsc	status,2,c
 21636   000556  EFAF  F002         	goto	i2u551_41
 21637   00055A  EFB1  F002         	goto	i2u551_40
 21638   00055E                     i2u551_41:
 21639   00055E  EFC4  F002         	goto	i2l6284
 21640   000562                     i2u551_40:
 21641   000562  283B               	incf	___flmul@aexp^(0+1280),w,c
 21642   000564  A4D8               	btfss	status,2,c
 21643   000566  EFB7  F002         	goto	i2u552_41
 21644   00056A  EFB9  F002         	goto	i2u552_40
 21645   00056E                     i2u552_41:
 21646   00056E  EFC1  F002         	goto	i2l6282
 21647   000572                     i2u552_40:
 21648   000572  0E00               	movlw	0
 21649   000574  6E2E               	movwf	___flmul@a^(0+1280),c
 21650   000576  0E00               	movlw	0
 21651   000578  6E2F               	movwf	(___flmul@a+1)^(0+1280),c
 21652   00057A  0E00               	movlw	0
 21653   00057C  6E30               	movwf	(___flmul@a+2)^(0+1280),c
 21654   00057E  0E00               	movlw	0
 21655   000580  6E31               	movwf	(___flmul@a+3)^(0+1280),c
 21656   000582                     i2l6282:
 21657   000582  8E30               	bsf	(___flmul@a+2)^(0+1280),7,c
 21658   000584  EFCC  F002         	goto	i2l2360
 21659   000588                     i2l6284:
 21660   000588  0E00               	movlw	0
 21661   00058A  6E2E               	movwf	___flmul@a^(0+1280),c
 21662   00058C  0E00               	movlw	0
 21663   00058E  6E2F               	movwf	(___flmul@a+1)^(0+1280),c
 21664   000590  0E00               	movlw	0
 21665   000592  6E30               	movwf	(___flmul@a+2)^(0+1280),c
 21666   000594  0E00               	movlw	0
 21667   000596  6E31               	movwf	(___flmul@a+3)^(0+1280),c
 21668   000598                     i2l2360:
 21669   000598  503B               	movf	___flmul@aexp^(0+1280),w,c
 21670   00059A  B4D8               	btfsc	status,2,c
 21671   00059C  EFD2  F002         	goto	i2u553_41
 21672   0005A0  EFD4  F002         	goto	i2u553_40
 21673   0005A4                     i2u553_41:
 21674   0005A4  EFDC  F002         	goto	i2l6288
 21675   0005A8                     i2u553_40:
 21676   0005A8  503C               	movf	___flmul@bexp^(0+1280),w,c
 21677   0005AA  A4D8               	btfss	status,2,c
 21678   0005AC  EFDA  F002         	goto	i2u554_41
 21679   0005B0  EFDC  F002         	goto	i2u554_40
 21680   0005B4                     i2u554_41:
 21681   0005B4  EFE6  F002         	goto	i2l6292
 21682   0005B8                     i2u554_40:
 21683   0005B8                     i2l6288:
 21684   0005B8  0E00               	movlw	0
 21685   0005BA  6E2A               	movwf	?___flmul^(0+1280),c
 21686   0005BC  0E00               	movlw	0
 21687   0005BE  6E2B               	movwf	(?___flmul+1)^(0+1280),c
 21688   0005C0  0E00               	movlw	0
 21689   0005C2  6E2C               	movwf	(?___flmul+2)^(0+1280),c
 21690   0005C4  0E00               	movlw	0
 21691   0005C6  6E2D               	movwf	(?___flmul+3)^(0+1280),c
 21692   0005C8  EF7C  F004         	goto	i2l2364
 21693   0005CC                     i2l6292:
 21694   0005CC  5030               	movf	(___flmul@a+2)^(0+1280),w,c
 21695   0005CE  022A               	mulwf	___flmul@b^(0+1280),c
 21696   0005D0  C4F3 F541          	movff	prodl,___flmul@temp
 21697   0005D4  C4F4 F542          	movff	prodh,___flmul@temp+1
 21698   0005D8  5041               	movf	___flmul@temp^(0+1280),w,c
 21699   0005DA  6E37               	movwf	___flmul@grs^(0+1280),c
 21700   0005DC  6A38               	clrf	(___flmul@grs+1)^(0+1280),c
 21701   0005DE  6A39               	clrf	(___flmul@grs+2)^(0+1280),c
 21702   0005E0  6A3A               	clrf	(___flmul@grs+3)^(0+1280),c
 21703   0005E2  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21704   0005E4  6E3D               	movwf	___flmul@prod^(0+1280),c
 21705   0005E6  6A3E               	clrf	(___flmul@prod+1)^(0+1280),c
 21706   0005E8  6A3F               	clrf	(___flmul@prod+2)^(0+1280),c
 21707   0005EA  6A40               	clrf	(___flmul@prod+3)^(0+1280),c
 21708   0005EC  502F               	movf	(___flmul@a+1)^(0+1280),w,c
 21709   0005EE  022B               	mulwf	(___flmul@b+1)^(0+1280),c
 21710   0005F0  C4F3 F541          	movff	prodl,___flmul@temp
 21711   0005F4  C4F4 F542          	movff	prodh,___flmul@temp+1
 21712   0005F8  5041               	movf	___flmul@temp^(0+1280),w,c
 21713   0005FA  2637               	addwf	___flmul@grs^(0+1280),f,c
 21714   0005FC  0E00               	movlw	0
 21715   0005FE  2238               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 21716   000600  2239               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 21717   000602  223A               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 21718   000604  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21719   000606  263D               	addwf	___flmul@prod^(0+1280),f,c
 21720   000608  0E00               	movlw	0
 21721   00060A  223E               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 21722   00060C  223F               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 21723   00060E  2240               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 21724   000610  502E               	movf	___flmul@a^(0+1280),w,c
 21725   000612  022C               	mulwf	(___flmul@b+2)^(0+1280),c
 21726   000614  C4F3 F541          	movff	prodl,___flmul@temp
 21727   000618  C4F4 F542          	movff	prodh,___flmul@temp+1
 21728   00061C  5041               	movf	___flmul@temp^(0+1280),w,c
 21729   00061E  2637               	addwf	___flmul@grs^(0+1280),f,c
 21730   000620  0E00               	movlw	0
 21731   000622  2238               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 21732   000624  2239               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 21733   000626  223A               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 21734   000628  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21735   00062A  263D               	addwf	___flmul@prod^(0+1280),f,c
 21736   00062C  0E00               	movlw	0
 21737   00062E  223E               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 21738   000630  223F               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 21739   000632  2240               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 21740   000634  C539  F53A         	movff	___flmul@grs+2,___flmul@grs+3
 21741   000638  C538  F539         	movff	___flmul@grs+1,___flmul@grs+2
 21742   00063C  C537  F538         	movff	___flmul@grs,___flmul@grs+1
 21743   000640  6A37               	clrf	___flmul@grs^(0+1280),c
 21744   000642  502E               	movf	___flmul@a^(0+1280),w,c
 21745   000644  022B               	mulwf	(___flmul@b+1)^(0+1280),c
 21746   000646  C4F3 F541          	movff	prodl,___flmul@temp
 21747   00064A  C4F4 F542          	movff	prodh,___flmul@temp+1
 21748   00064E  5041               	movf	___flmul@temp^(0+1280),w,c
 21749   000650  2637               	addwf	___flmul@grs^(0+1280),f,c
 21750   000652  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21751   000654  2238               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 21752   000656  0E00               	movlw	0
 21753   000658  2239               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 21754   00065A  0E00               	movlw	0
 21755   00065C  223A               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 21756   00065E  502F               	movf	(___flmul@a+1)^(0+1280),w,c
 21757   000660  022A               	mulwf	___flmul@b^(0+1280),c
 21758   000662  C4F3 F541          	movff	prodl,___flmul@temp
 21759   000666  C4F4 F542          	movff	prodh,___flmul@temp+1
 21760   00066A  5041               	movf	___flmul@temp^(0+1280),w,c
 21761   00066C  2637               	addwf	___flmul@grs^(0+1280),f,c
 21762   00066E  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21763   000670  2238               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 21764   000672  0E00               	movlw	0
 21765   000674  2239               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 21766   000676  0E00               	movlw	0
 21767   000678  223A               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 21768   00067A  C539  F53A         	movff	___flmul@grs+2,___flmul@grs+3
 21769   00067E  C538  F539         	movff	___flmul@grs+1,___flmul@grs+2
 21770   000682  C537  F538         	movff	___flmul@grs,___flmul@grs+1
 21771   000686  6A37               	clrf	___flmul@grs^(0+1280),c
 21772   000688  502E               	movf	___flmul@a^(0+1280),w,c
 21773   00068A  022A               	mulwf	___flmul@b^(0+1280),c
 21774   00068C  C4F3 F541          	movff	prodl,___flmul@temp
 21775   000690  C4F4 F542          	movff	prodh,___flmul@temp+1
 21776   000694  5041               	movf	___flmul@temp^(0+1280),w,c
 21777   000696  2637               	addwf	___flmul@grs^(0+1280),f,c
 21778   000698  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21779   00069A  2238               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 21780   00069C  0E00               	movlw	0
 21781   00069E  2239               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 21782   0006A0  0E00               	movlw	0
 21783   0006A2  223A               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 21784   0006A4  5030               	movf	(___flmul@a+2)^(0+1280),w,c
 21785   0006A6  022B               	mulwf	(___flmul@b+1)^(0+1280),c
 21786   0006A8  C4F3 F541          	movff	prodl,___flmul@temp
 21787   0006AC  C4F4 F542          	movff	prodh,___flmul@temp+1
 21788   0006B0  5041               	movf	___flmul@temp^(0+1280),w,c
 21789   0006B2  263D               	addwf	___flmul@prod^(0+1280),f,c
 21790   0006B4  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21791   0006B6  223E               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 21792   0006B8  0E00               	movlw	0
 21793   0006BA  223F               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 21794   0006BC  0E00               	movlw	0
 21795   0006BE  2240               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 21796   0006C0  502F               	movf	(___flmul@a+1)^(0+1280),w,c
 21797   0006C2  022C               	mulwf	(___flmul@b+2)^(0+1280),c
 21798   0006C4  C4F3 F541          	movff	prodl,___flmul@temp
 21799   0006C8  C4F4 F542          	movff	prodh,___flmul@temp+1
 21800   0006CC  5041               	movf	___flmul@temp^(0+1280),w,c
 21801   0006CE  263D               	addwf	___flmul@prod^(0+1280),f,c
 21802   0006D0  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21803   0006D2  223E               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 21804   0006D4  0E00               	movlw	0
 21805   0006D6  223F               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 21806   0006D8  0E00               	movlw	0
 21807   0006DA  2240               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 21808   0006DC  5030               	movf	(___flmul@a+2)^(0+1280),w,c
 21809   0006DE  022C               	mulwf	(___flmul@b+2)^(0+1280),c
 21810   0006E0  C4F3 F541          	movff	prodl,___flmul@temp
 21811   0006E4  C4F4 F542          	movff	prodh,___flmul@temp+1
 21812   0006E8  5041               	movf	___flmul@temp^(0+1280),w,c
 21813   0006EA  6E32               	movwf	??___flmul^(0+1280),c
 21814   0006EC  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21815   0006EE  6E33               	movwf	(??___flmul+1)^(0+1280),c
 21816   0006F0  6A34               	clrf	(??___flmul+2)^(0+1280),c
 21817   0006F2  6A35               	clrf	(??___flmul+3)^(0+1280),c
 21818   0006F4  C534  F535         	movff	??___flmul+2,??___flmul+3
 21819   0006F8  C533  F534         	movff	??___flmul+1,??___flmul+2
 21820   0006FC  C532  F533         	movff	??___flmul,??___flmul+1
 21821   000700  6A32               	clrf	??___flmul^(0+1280),c
 21822   000702  5032               	movf	??___flmul^(0+1280),w,c
 21823   000704  263D               	addwf	___flmul@prod^(0+1280),f,c
 21824   000706  5033               	movf	(??___flmul+1)^(0+1280),w,c
 21825   000708  223E               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 21826   00070A  5034               	movf	(??___flmul+2)^(0+1280),w,c
 21827   00070C  223F               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 21828   00070E  5035               	movf	(??___flmul+3)^(0+1280),w,c
 21829   000710  2240               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 21830   000712  C537  F532         	movff	___flmul@grs,??___flmul
 21831   000716  C538  F533         	movff	___flmul@grs+1,??___flmul+1
 21832   00071A  C539  F534         	movff	___flmul@grs+2,??___flmul+2
 21833   00071E  C53A  F535         	movff	___flmul@grs+3,??___flmul+3
 21834   000722  0E19               	movlw	25
 21835   000724  EF99  F003         	goto	i2u555_40
 21836   000728                     i2u555_45:
 21837   000728  90D8               	bcf	status,0,c
 21838   00072A  3235               	rrcf	(??___flmul+3)^(0+1280),f,c
 21839   00072C  3234               	rrcf	(??___flmul+2)^(0+1280),f,c
 21840   00072E  3233               	rrcf	(??___flmul+1)^(0+1280),f,c
 21841   000730  3232               	rrcf	??___flmul^(0+1280),f,c
 21842   000732                     i2u555_40:
 21843   000732  2EE8               	decfsz	wreg,f,c
 21844   000734  EF94  F003         	goto	i2u555_45
 21845   000738  5032               	movf	??___flmul^(0+1280),w,c
 21846   00073A  263D               	addwf	___flmul@prod^(0+1280),f,c
 21847   00073C  5033               	movf	(??___flmul+1)^(0+1280),w,c
 21848   00073E  223E               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 21849   000740  5034               	movf	(??___flmul+2)^(0+1280),w,c
 21850   000742  223F               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 21851   000744  5035               	movf	(??___flmul+3)^(0+1280),w,c
 21852   000746  2240               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 21853   000748  C539  F53A         	movff	___flmul@grs+2,___flmul@grs+3
 21854   00074C  C538  F539         	movff	___flmul@grs+1,___flmul@grs+2
 21855   000750  C537  F538         	movff	___flmul@grs,___flmul@grs+1
 21856   000754  6A37               	clrf	___flmul@grs^(0+1280),c
 21857   000756  503B               	movf	___flmul@aexp^(0+1280),w,c
 21858   000758  C53C  F532         	movff	___flmul@bexp,??___flmul
 21859   00075C  6A33               	clrf	(??___flmul+1)^(0+1280),c
 21860   00075E  2632               	addwf	??___flmul^(0+1280),f,c
 21861   000760  0E00               	movlw	0
 21862   000762  2233               	addwfc	(??___flmul+1)^(0+1280),f,c
 21863   000764  0E82               	movlw	130
 21864   000766  2432               	addwf	??___flmul^(0+1280),w,c
 21865   000768  6E41               	movwf	___flmul@temp^(0+1280),c
 21866   00076A  0EFF               	movlw	255
 21867   00076C  2033               	addwfc	(??___flmul+1)^(0+1280),w,c
 21868   00076E  6E42               	movwf	(___flmul@temp+1)^(0+1280),c
 21869   000770  EFCF  F003         	goto	i2l6340
 21870   000774                     i2l6334:
 21871   000774  90D8               	bcf	status,0,c
 21872   000776  363D               	rlcf	___flmul@prod^(0+1280),f,c
 21873   000778  363E               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 21874   00077A  363F               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 21875   00077C  3640               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 21876   00077E  AE3A               	btfss	(___flmul@grs+3)^(0+1280),7,c
 21877   000780  EFC4  F003         	goto	i2u556_41
 21878   000784  EFC6  F003         	goto	i2u556_40
 21879   000788                     i2u556_41:
 21880   000788  EFC7  F003         	goto	i2l2367
 21881   00078C                     i2u556_40:
 21882   00078C  803D               	bsf	___flmul@prod^(0+1280),0,c
 21883   00078E                     i2l2367:
 21884   00078E  90D8               	bcf	status,0,c
 21885   000790  3637               	rlcf	___flmul@grs^(0+1280),f,c
 21886   000792  3638               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 21887   000794  3639               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 21888   000796  363A               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 21889   000798  0641               	decf	___flmul@temp^(0+1280),f,c
 21890   00079A  A0D8               	btfss	status,0,c
 21891   00079C  0642               	decf	(___flmul@temp+1)^(0+1280),f,c
 21892   00079E                     i2l6340:
 21893   00079E  AE3F               	btfss	(___flmul@prod+2)^(0+1280),7,c
 21894   0007A0  EFD4  F003         	goto	i2u557_41
 21895   0007A4  EFD6  F003         	goto	i2u557_40
 21896   0007A8                     i2u557_41:
 21897   0007A8  EFBA  F003         	goto	i2l6334
 21898   0007AC                     i2u557_40:
 21899   0007AC  6A3B               	clrf	___flmul@aexp^(0+1280),c
 21900   0007AE  AE3A               	btfss	(___flmul@grs+3)^(0+1280),7,c
 21901   0007B0  EFDC  F003         	goto	i2u558_41
 21902   0007B4  EFDE  F003         	goto	i2u558_40
 21903   0007B8                     i2u558_41:
 21904   0007B8  EF02  F004         	goto	i2l2369
 21905   0007BC                     i2u558_40:
 21906   0007BC  0EFF               	movlw	255
 21907   0007BE  1437               	andwf	___flmul@grs^(0+1280),w,c
 21908   0007C0  6E32               	movwf	??___flmul^(0+1280),c
 21909   0007C2  0EFF               	movlw	255
 21910   0007C4  1438               	andwf	(___flmul@grs+1)^(0+1280),w,c
 21911   0007C6  6E33               	movwf	(??___flmul+1)^(0+1280),c
 21912   0007C8  0EFF               	movlw	255
 21913   0007CA  1439               	andwf	(___flmul@grs+2)^(0+1280),w,c
 21914   0007CC  6E34               	movwf	(??___flmul+2)^(0+1280),c
 21915   0007CE  0E7F               	movlw	127
 21916   0007D0  143A               	andwf	(___flmul@grs+3)^(0+1280),w,c
 21917   0007D2  6E35               	movwf	(??___flmul+3)^(0+1280),c
 21918   0007D4  5032               	movf	??___flmul^(0+1280),w,c
 21919   0007D6  1033               	iorwf	(??___flmul+1)^(0+1280),w,c
 21920   0007D8  1034               	iorwf	(??___flmul+2)^(0+1280),w,c
 21921   0007DA  1035               	iorwf	(??___flmul+3)^(0+1280),w,c
 21922   0007DC  B4D8               	btfsc	status,2,c
 21923   0007DE  EFF3  F003         	goto	i2u559_41
 21924   0007E2  EFF5  F003         	goto	i2u559_40
 21925   0007E6                     i2u559_41:
 21926   0007E6  EFF9  F003         	goto	i2l2370
 21927   0007EA                     i2u559_40:
 21928   0007EA                     i2l6344:
 21929   0007EA  0E01               	movlw	1
 21930   0007EC  6E3B               	movwf	___flmul@aexp^(0+1280),c
 21931   0007EE  EF02  F004         	goto	i2l2369
 21932   0007F2                     i2l2370:
 21933   0007F2  A03D               	btfss	___flmul@prod^(0+1280),0,c
 21934   0007F4  EFFE  F003         	goto	i2u560_41
 21935   0007F8  EF00  F004         	goto	i2u560_40
 21936   0007FC                     i2u560_41:
 21937   0007FC  EF02  F004         	goto	i2l2369
 21938   000800                     i2u560_40:
 21939   000800  EFF5  F003         	goto	i2l6344
 21940   000804                     i2l2369:
 21941   000804  503B               	movf	___flmul@aexp^(0+1280),w,c
 21942   000806  B4D8               	btfsc	status,2,c
 21943   000808  EF08  F004         	goto	i2u561_41
 21944   00080C  EF0A  F004         	goto	i2u561_40
 21945   000810                     i2u561_41:
 21946   000810  EF2E  F004         	goto	i2l6356
 21947   000814                     i2u561_40:
 21948   000814  0E01               	movlw	1
 21949   000816  263D               	addwf	___flmul@prod^(0+1280),f,c
 21950   000818  0E00               	movlw	0
 21951   00081A  223E               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 21952   00081C  223F               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 21953   00081E  2240               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 21954   000820  A040               	btfss	(___flmul@prod+3)^(0+1280),0,c
 21955   000822  EF15  F004         	goto	i2u562_41
 21956   000826  EF17  F004         	goto	i2u562_40
 21957   00082A                     i2u562_41:
 21958   00082A  EF2E  F004         	goto	i2l6356
 21959   00082E                     i2u562_40:
 21960   00082E  C53D  F532         	movff	___flmul@prod,??___flmul
 21961   000832  C53E  F533         	movff	___flmul@prod+1,??___flmul+1
 21962   000836  C53F  F534         	movff	___flmul@prod+2,??___flmul+2
 21963   00083A  C540  F535         	movff	___flmul@prod+3,??___flmul+3
 21964   00083E  3435               	rlcf	(??___flmul+3)^(0+1280),w,c
 21965   000840  3235               	rrcf	(??___flmul+3)^(0+1280),f,c
 21966   000842  3234               	rrcf	(??___flmul+2)^(0+1280),f,c
 21967   000844  3233               	rrcf	(??___flmul+1)^(0+1280),f,c
 21968   000846  3232               	rrcf	??___flmul^(0+1280),f,c
 21969   000848  C532  F53D         	movff	??___flmul,___flmul@prod
 21970   00084C  C533  F53E         	movff	??___flmul+1,___flmul@prod+1
 21971   000850  C534  F53F         	movff	??___flmul+2,___flmul@prod+2
 21972   000854  C535  F540         	movff	??___flmul+3,___flmul@prod+3
 21973   000858  4A41               	infsnz	___flmul@temp^(0+1280),f,c
 21974   00085A  2A42               	incf	(___flmul@temp+1)^(0+1280),f,c
 21975   00085C                     i2l6356:
 21976   00085C  BE42               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 21977   00085E  EF39  F004         	goto	i2u563_41
 21978   000862  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 21979   000864  E108               	bnz	i2u563_40
 21980   000866  2841               	incf	___flmul@temp^(0+1280),w,c
 21981   000868  A0D8               	btfss	status,0,c
 21982   00086A  EF39  F004         	goto	i2u563_41
 21983   00086E  EF3B  F004         	goto	i2u563_40
 21984   000872                     i2u563_41:
 21985   000872  EF45  F004         	goto	i2l6360
 21986   000876                     i2u563_40:
 21987   000876  0E00               	movlw	0
 21988   000878  6E3D               	movwf	___flmul@prod^(0+1280),c
 21989   00087A  0E00               	movlw	0
 21990   00087C  6E3E               	movwf	(___flmul@prod+1)^(0+1280),c
 21991   00087E  0E80               	movlw	128
 21992   000880  6E3F               	movwf	(___flmul@prod+2)^(0+1280),c
 21993   000882  0E7F               	movlw	127
 21994   000884  6E40               	movwf	(___flmul@prod+3)^(0+1280),c
 21995   000886  EF72  F004         	goto	i2l6374
 21996   00088A                     i2l6360:
 21997   00088A  BE42               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 21998   00088C  EF52  F004         	goto	i2u564_40
 21999   000890  5042               	movf	(___flmul@temp+1)^(0+1280),w,c
 22000   000892  E106               	bnz	i2u564_41
 22001   000894  0441               	decf	___flmul@temp^(0+1280),w,c
 22002   000896  B0D8               	btfsc	status,0,c
 22003   000898  EF50  F004         	goto	i2u564_41
 22004   00089C  EF52  F004         	goto	i2u564_40
 22005   0008A0                     i2u564_41:
 22006   0008A0  EF5D  F004         	goto	i2l2377
 22007   0008A4                     i2u564_40:
 22008   0008A4  0E00               	movlw	0
 22009   0008A6  6E3D               	movwf	___flmul@prod^(0+1280),c
 22010   0008A8  0E00               	movlw	0
 22011   0008AA  6E3E               	movwf	(___flmul@prod+1)^(0+1280),c
 22012   0008AC  0E00               	movlw	0
 22013   0008AE  6E3F               	movwf	(___flmul@prod+2)^(0+1280),c
 22014   0008B0  0E00               	movlw	0
 22015   0008B2  6E40               	movwf	(___flmul@prod+3)^(0+1280),c
 22016   0008B4  6A36               	clrf	___flmul@sign^(0+1280),c
 22017   0008B6  EF72  F004         	goto	i2l6374
 22018   0008BA                     i2l2377:
 22019   0008BA  C541  F53C         	movff	___flmul@temp,___flmul@bexp
 22020   0008BE  0EFF               	movlw	255
 22021   0008C0  163D               	andwf	___flmul@prod^(0+1280),f,c
 22022   0008C2  0EFF               	movlw	255
 22023   0008C4  163E               	andwf	(___flmul@prod+1)^(0+1280),f,c
 22024   0008C6  0E7F               	movlw	127
 22025   0008C8  163F               	andwf	(___flmul@prod+2)^(0+1280),f,c
 22026   0008CA  0E00               	movlw	0
 22027   0008CC  1640               	andwf	(___flmul@prod+3)^(0+1280),f,c
 22028   0008CE  A03C               	btfss	___flmul@bexp^(0+1280),0,c
 22029   0008D0  EF6C  F004         	goto	i2u565_41
 22030   0008D4  EF6E  F004         	goto	i2u565_40
 22031   0008D8                     i2u565_41:
 22032   0008D8  EF6F  F004         	goto	i2l6372
 22033   0008DC                     i2u565_40:
 22034   0008DC  8E3F               	bsf	(___flmul@prod+2)^(0+1280),7,c
 22035   0008DE                     i2l6372:
 22036   0008DE  90D8               	bcf	status,0,c
 22037   0008E0  303C               	rrcf	___flmul@bexp^(0+1280),w,c
 22038   0008E2  6E40               	movwf	(___flmul@prod+3)^(0+1280),c
 22039   0008E4                     i2l6374:
 22040   0008E4  5036               	movf	___flmul@sign^(0+1280),w,c
 22041   0008E6  1240               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 22042   0008E8  C53D  F52A         	movff	___flmul@prod,?___flmul
 22043   0008EC  C53E  F52B         	movff	___flmul@prod+1,?___flmul+1
 22044   0008F0  C53F  F52C         	movff	___flmul@prod+2,?___flmul+2
 22045   0008F4  C540  F52D         	movff	___flmul@prod+3,?___flmul+3
 22046   0008F8                     i2l2364:
 22047   0008F8  0012               	return		;funcret
 22048   0008FA                     __end_of___flmul:
 22049                           	callstack 0
 22050                           
 22051 ;; *************** function ___fldiv *****************
 22052 ;; Defined at:
 22053 ;;		line 11 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcdiv.c"
 22054 ;; Parameters:    Size  Location     Type
 22055 ;;  b               4   16[COMRAM] unsigned char 
 22056 ;;  a               4   20[COMRAM] unsigned char 
 22057 ;; Auto vars:     Size  Location     Type
 22058 ;;  grs             4   35[COMRAM] unsigned long 
 22059 ;;  rem             4   28[COMRAM] unsigned long 
 22060 ;;  new_exp         2   33[COMRAM] short 
 22061 ;;  aexp            1   40[COMRAM] unsigned char 
 22062 ;;  bexp            1   39[COMRAM] unsigned char 
 22063 ;;  sign            1   32[COMRAM] unsigned char 
 22064 ;; Return value:  Size  Location     Type
 22065 ;;                  4   16[COMRAM] unsigned char 
 22066 ;; Registers used:
 22067 ;;		wreg, status,2, status,0
 22068 ;; Tracked objects:
 22069 ;;		On entry : 0/0
 22070 ;;		On exit  : 0/0
 22071 ;;		Unchanged: 0/0
 22072 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 22073 ;;      Params:         8       0       0       0       0       0       0       0       0
 22074 ;;      Locals:        13       0       0       0       0       0       0       0       0
 22075 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22076 ;;      Totals:        25       0       0       0       0       0       0       0       0
 22077 ;;Total ram usage:       25 bytes
 22078 ;; Hardware stack levels used: 1
 22079 ;; This function calls:
 22080 ;;		Nothing
 22081 ;; This function is called by:
 22082 ;;		_CheckOverCurrent
 22083 ;; This function uses a non-reentrant model
 22084 ;;
 22085                           
 22086                           	psect	text110
 22087   0008FA                     __ptext110:
 22088                           	callstack 0
 22089   0008FA                     ___fldiv:
 22090                           	callstack 118
 22091   0008FA  5014               	movf	(___fldiv@b+3)^(0+1280),w,c
 22092   0008FC  0B80               	andlw	128
 22093   0008FE  6E21               	movwf	___fldiv@sign^(0+1280),c
 22094   000900  5014               	movf	(___fldiv@b+3)^(0+1280),w,c
 22095   000902  2414               	addwf	(___fldiv@b+3)^(0+1280),w,c
 22096   000904  6E28               	movwf	___fldiv@bexp^(0+1280),c
 22097   000906  AE13               	btfss	(___fldiv@b+2)^(0+1280),7,c
 22098   000908  EF88  F004         	goto	i2u524_41
 22099   00090C  EF8A  F004         	goto	i2u524_40
 22100   000910                     i2u524_41:
 22101   000910  EF8B  F004         	goto	i2l6122
 22102   000914                     i2u524_40:
 22103   000914  8028               	bsf	___fldiv@bexp^(0+1280),0,c
 22104   000916                     i2l6122:
 22105   000916  5028               	movf	___fldiv@bexp^(0+1280),w,c
 22106   000918  B4D8               	btfsc	status,2,c
 22107   00091A  EF91  F004         	goto	i2u525_41
 22108   00091E  EF93  F004         	goto	i2u525_40
 22109   000922                     i2u525_41:
 22110   000922  EFA7  F004         	goto	i2l6132
 22111   000926                     i2u525_40:
 22112   000926  2828               	incf	___fldiv@bexp^(0+1280),w,c
 22113   000928  A4D8               	btfss	status,2,c
 22114   00092A  EF99  F004         	goto	i2u526_41
 22115   00092E  EF9B  F004         	goto	i2u526_40
 22116   000932                     i2u526_41:
 22117   000932  EFA3  F004         	goto	i2l6128
 22118   000936                     i2u526_40:
 22119   000936  0E00               	movlw	0
 22120   000938  6E11               	movwf	___fldiv@b^(0+1280),c
 22121   00093A  0E00               	movlw	0
 22122   00093C  6E12               	movwf	(___fldiv@b+1)^(0+1280),c
 22123   00093E  0E00               	movlw	0
 22124   000940  6E13               	movwf	(___fldiv@b+2)^(0+1280),c
 22125   000942  0E00               	movlw	0
 22126   000944  6E14               	movwf	(___fldiv@b+3)^(0+1280),c
 22127   000946                     i2l6128:
 22128   000946  8E13               	bsf	(___fldiv@b+2)^(0+1280),7,c
 22129   000948  6A14               	clrf	(___fldiv@b+3)^(0+1280),c
 22130   00094A  EFAF  F004         	goto	i2l6134
 22131   00094E                     i2l6132:
 22132   00094E  0E00               	movlw	0
 22133   000950  6E11               	movwf	___fldiv@b^(0+1280),c
 22134   000952  0E00               	movlw	0
 22135   000954  6E12               	movwf	(___fldiv@b+1)^(0+1280),c
 22136   000956  0E00               	movlw	0
 22137   000958  6E13               	movwf	(___fldiv@b+2)^(0+1280),c
 22138   00095A  0E00               	movlw	0
 22139   00095C  6E14               	movwf	(___fldiv@b+3)^(0+1280),c
 22140   00095E                     i2l6134:
 22141   00095E  5018               	movf	(___fldiv@a+3)^(0+1280),w,c
 22142   000960  0B80               	andlw	128
 22143   000962  1A21               	xorwf	___fldiv@sign^(0+1280),f,c
 22144   000964  5018               	movf	(___fldiv@a+3)^(0+1280),w,c
 22145   000966  2418               	addwf	(___fldiv@a+3)^(0+1280),w,c
 22146   000968  6E29               	movwf	___fldiv@aexp^(0+1280),c
 22147   00096A  AE17               	btfss	(___fldiv@a+2)^(0+1280),7,c
 22148   00096C  EFBA  F004         	goto	i2u527_41
 22149   000970  EFBC  F004         	goto	i2u527_40
 22150   000974                     i2u527_41:
 22151   000974  EFBD  F004         	goto	i2l6142
 22152   000978                     i2u527_40:
 22153   000978  8029               	bsf	___fldiv@aexp^(0+1280),0,c
 22154   00097A                     i2l6142:
 22155   00097A  5029               	movf	___fldiv@aexp^(0+1280),w,c
 22156   00097C  B4D8               	btfsc	status,2,c
 22157   00097E  EFC3  F004         	goto	i2u528_41
 22158   000982  EFC5  F004         	goto	i2u528_40
 22159   000986                     i2u528_41:
 22160   000986  EFD9  F004         	goto	i2l6152
 22161   00098A                     i2u528_40:
 22162   00098A  2829               	incf	___fldiv@aexp^(0+1280),w,c
 22163   00098C  A4D8               	btfss	status,2,c
 22164   00098E  EFCB  F004         	goto	i2u529_41
 22165   000992  EFCD  F004         	goto	i2u529_40
 22166   000996                     i2u529_41:
 22167   000996  EFD5  F004         	goto	i2l6148
 22168   00099A                     i2u529_40:
 22169   00099A  0E00               	movlw	0
 22170   00099C  6E15               	movwf	___fldiv@a^(0+1280),c
 22171   00099E  0E00               	movlw	0
 22172   0009A0  6E16               	movwf	(___fldiv@a+1)^(0+1280),c
 22173   0009A2  0E00               	movlw	0
 22174   0009A4  6E17               	movwf	(___fldiv@a+2)^(0+1280),c
 22175   0009A6  0E00               	movlw	0
 22176   0009A8  6E18               	movwf	(___fldiv@a+3)^(0+1280),c
 22177   0009AA                     i2l6148:
 22178   0009AA  8E17               	bsf	(___fldiv@a+2)^(0+1280),7,c
 22179   0009AC  6A18               	clrf	(___fldiv@a+3)^(0+1280),c
 22180   0009AE  EFE1  F004         	goto	i2l6154
 22181   0009B2                     i2l6152:
 22182   0009B2  0E00               	movlw	0
 22183   0009B4  6E15               	movwf	___fldiv@a^(0+1280),c
 22184   0009B6  0E00               	movlw	0
 22185   0009B8  6E16               	movwf	(___fldiv@a+1)^(0+1280),c
 22186   0009BA  0E00               	movlw	0
 22187   0009BC  6E17               	movwf	(___fldiv@a+2)^(0+1280),c
 22188   0009BE  0E00               	movlw	0
 22189   0009C0  6E18               	movwf	(___fldiv@a+3)^(0+1280),c
 22190   0009C2                     i2l6154:
 22191   0009C2  5015               	movf	___fldiv@a^(0+1280),w,c
 22192   0009C4  1016               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 22193   0009C6  1017               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 22194   0009C8  1018               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 22195   0009CA  A4D8               	btfss	status,2,c
 22196   0009CC  EFEA  F004         	goto	i2u530_41
 22197   0009D0  EFEC  F004         	goto	i2u530_40
 22198   0009D4                     i2u530_41:
 22199   0009D4  EF04  F005         	goto	i2l6166
 22200   0009D8                     i2u530_40:
 22201   0009D8  0E00               	movlw	0
 22202   0009DA  6E11               	movwf	___fldiv@b^(0+1280),c
 22203   0009DC  0E00               	movlw	0
 22204   0009DE  6E12               	movwf	(___fldiv@b+1)^(0+1280),c
 22205   0009E0  0E00               	movlw	0
 22206   0009E2  6E13               	movwf	(___fldiv@b+2)^(0+1280),c
 22207   0009E4  0E00               	movlw	0
 22208   0009E6  6E14               	movwf	(___fldiv@b+3)^(0+1280),c
 22209   0009E8  0E80               	movlw	128
 22210   0009EA  1213               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 22211   0009EC  0E7F               	movlw	127
 22212   0009EE  1214               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 22213   0009F0                     i2l6160:
 22214   0009F0  5021               	movf	___fldiv@sign^(0+1280),w,c
 22215   0009F2  1214               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 22216   0009F4  C511  F511         	movff	___fldiv@b,?___fldiv
 22217   0009F8  C512  F512         	movff	___fldiv@b+1,?___fldiv+1
 22218   0009FC  C513  F513         	movff	___fldiv@b+2,?___fldiv+2
 22219   000A00  C514  F514         	movff	___fldiv@b+3,?___fldiv+3
 22220   000A04  EF44  F006         	goto	i2l2328
 22221   000A08                     i2l6166:
 22222   000A08  5028               	movf	___fldiv@bexp^(0+1280),w,c
 22223   000A0A  A4D8               	btfss	status,2,c
 22224   000A0C  EF0A  F005         	goto	i2u531_41
 22225   000A10  EF0C  F005         	goto	i2u531_40
 22226   000A14                     i2u531_41:
 22227   000A14  EF16  F005         	goto	i2l6174
 22228   000A18                     i2u531_40:
 22229   000A18  0E00               	movlw	0
 22230   000A1A  6E11               	movwf	?___fldiv^(0+1280),c
 22231   000A1C  0E00               	movlw	0
 22232   000A1E  6E12               	movwf	(?___fldiv+1)^(0+1280),c
 22233   000A20  0E00               	movlw	0
 22234   000A22  6E13               	movwf	(?___fldiv+2)^(0+1280),c
 22235   000A24  0E00               	movlw	0
 22236   000A26  6E14               	movwf	(?___fldiv+3)^(0+1280),c
 22237   000A28  EF44  F006         	goto	i2l2328
 22238   000A2C                     i2l6174:
 22239   000A2C  5029               	movf	___fldiv@aexp^(0+1280),w,c
 22240   000A2E  C528  F519         	movff	___fldiv@bexp,??___fldiv
 22241   000A32  6A1A               	clrf	(??___fldiv+1)^(0+1280),c
 22242   000A34  5E19               	subwf	??___fldiv^(0+1280),f,c
 22243   000A36  0E00               	movlw	0
 22244   000A38  5A1A               	subwfb	(??___fldiv+1)^(0+1280),f,c
 22245   000A3A  0E7F               	movlw	127
 22246   000A3C  2419               	addwf	??___fldiv^(0+1280),w,c
 22247   000A3E  6E22               	movwf	___fldiv@new_exp^(0+1280),c
 22248   000A40  0E00               	movlw	0
 22249   000A42  201A               	addwfc	(??___fldiv+1)^(0+1280),w,c
 22250   000A44  6E23               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 22251   000A46  C511  F51D         	movff	___fldiv@b,___fldiv@rem
 22252   000A4A  C512  F51E         	movff	___fldiv@b+1,___fldiv@rem+1
 22253   000A4E  C513  F51F         	movff	___fldiv@b+2,___fldiv@rem+2
 22254   000A52  C514  F520         	movff	___fldiv@b+3,___fldiv@rem+3
 22255   000A56  0E00               	movlw	0
 22256   000A58  6E11               	movwf	___fldiv@b^(0+1280),c
 22257   000A5A  0E00               	movlw	0
 22258   000A5C  6E12               	movwf	(___fldiv@b+1)^(0+1280),c
 22259   000A5E  0E00               	movlw	0
 22260   000A60  6E13               	movwf	(___fldiv@b+2)^(0+1280),c
 22261   000A62  0E00               	movlw	0
 22262   000A64  6E14               	movwf	(___fldiv@b+3)^(0+1280),c
 22263   000A66  0E00               	movlw	0
 22264   000A68  6E24               	movwf	___fldiv@grs^(0+1280),c
 22265   000A6A  0E00               	movlw	0
 22266   000A6C  6E25               	movwf	(___fldiv@grs+1)^(0+1280),c
 22267   000A6E  0E00               	movlw	0
 22268   000A70  6E26               	movwf	(___fldiv@grs+2)^(0+1280),c
 22269   000A72  0E00               	movlw	0
 22270   000A74  6E27               	movwf	(___fldiv@grs+3)^(0+1280),c
 22271   000A76  6A29               	clrf	___fldiv@aexp^(0+1280),c
 22272   000A78  EF76  F005         	goto	i2l2330
 22273   000A7C                     i2l6184:
 22274   000A7C  5029               	movf	___fldiv@aexp^(0+1280),w,c
 22275   000A7E  B4D8               	btfsc	status,2,c
 22276   000A80  EF44  F005         	goto	i2u532_41
 22277   000A84  EF46  F005         	goto	i2u532_40
 22278   000A88                     i2u532_41:
 22279   000A88  EF5D  F005         	goto	i2l6192
 22280   000A8C                     i2u532_40:
 22281   000A8C  90D8               	bcf	status,0,c
 22282   000A8E  361D               	rlcf	___fldiv@rem^(0+1280),f,c
 22283   000A90  361E               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 22284   000A92  361F               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 22285   000A94  3620               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 22286   000A96  90D8               	bcf	status,0,c
 22287   000A98  3611               	rlcf	___fldiv@b^(0+1280),f,c
 22288   000A9A  3612               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 22289   000A9C  3613               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 22290   000A9E  3614               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 22291   000AA0  AE27               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 22292   000AA2  EF55  F005         	goto	i2u533_41
 22293   000AA6  EF57  F005         	goto	i2u533_40
 22294   000AAA                     i2u533_41:
 22295   000AAA  EF58  F005         	goto	i2l2333
 22296   000AAE                     i2u533_40:
 22297   000AAE  8011               	bsf	___fldiv@b^(0+1280),0,c
 22298   000AB0                     i2l2333:
 22299   000AB0  90D8               	bcf	status,0,c
 22300   000AB2  3624               	rlcf	___fldiv@grs^(0+1280),f,c
 22301   000AB4  3625               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 22302   000AB6  3626               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 22303   000AB8  3627               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 22304   000ABA                     i2l6192:
 22305   000ABA  5015               	movf	___fldiv@a^(0+1280),w,c
 22306   000ABC  5C1D               	subwf	___fldiv@rem^(0+1280),w,c
 22307   000ABE  5016               	movf	(___fldiv@a+1)^(0+1280),w,c
 22308   000AC0  581E               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 22309   000AC2  5017               	movf	(___fldiv@a+2)^(0+1280),w,c
 22310   000AC4  581F               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 22311   000AC6  5018               	movf	(___fldiv@a+3)^(0+1280),w,c
 22312   000AC8  5820               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 22313   000ACA  A0D8               	btfss	status,0,c
 22314   000ACC  EF6A  F005         	goto	i2u534_41
 22315   000AD0  EF6C  F005         	goto	i2u534_40
 22316   000AD4                     i2u534_41:
 22317   000AD4  EF75  F005         	goto	i2l6198
 22318   000AD8                     i2u534_40:
 22319   000AD8  8C27               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 22320   000ADA  5015               	movf	___fldiv@a^(0+1280),w,c
 22321   000ADC  5E1D               	subwf	___fldiv@rem^(0+1280),f,c
 22322   000ADE  5016               	movf	(___fldiv@a+1)^(0+1280),w,c
 22323   000AE0  5A1E               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 22324   000AE2  5017               	movf	(___fldiv@a+2)^(0+1280),w,c
 22325   000AE4  5A1F               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 22326   000AE6  5018               	movf	(___fldiv@a+3)^(0+1280),w,c
 22327   000AE8  5A20               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 22328   000AEA                     i2l6198:
 22329   000AEA  2A29               	incf	___fldiv@aexp^(0+1280),f,c
 22330   000AEC                     i2l2330:
 22331   000AEC  0E19               	movlw	25
 22332   000AEE  6429               	cpfsgt	___fldiv@aexp^(0+1280),c
 22333   000AF0  EF7C  F005         	goto	i2u535_41
 22334   000AF4  EF7E  F005         	goto	i2u535_40
 22335   000AF8                     i2u535_41:
 22336   000AF8  EF3E  F005         	goto	i2l6184
 22337   000AFC                     i2u535_40:
 22338   000AFC  501D               	movf	___fldiv@rem^(0+1280),w,c
 22339   000AFE  101E               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 22340   000B00  101F               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 22341   000B02  1020               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 22342   000B04  B4D8               	btfsc	status,2,c
 22343   000B06  EF87  F005         	goto	i2u536_41
 22344   000B0A  EF89  F005         	goto	i2u536_40
 22345   000B0E                     i2u536_41:
 22346   000B0E  EFA1  F005         	goto	i2l6210
 22347   000B12                     i2u536_40:
 22348   000B12  8024               	bsf	___fldiv@grs^(0+1280),0,c
 22349   000B14  EFA1  F005         	goto	i2l6210
 22350   000B18                     i2l6204:
 22351   000B18  90D8               	bcf	status,0,c
 22352   000B1A  3611               	rlcf	___fldiv@b^(0+1280),f,c
 22353   000B1C  3612               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 22354   000B1E  3613               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 22355   000B20  3614               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 22356   000B22  AE27               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 22357   000B24  EF96  F005         	goto	i2u537_41
 22358   000B28  EF98  F005         	goto	i2u537_40
 22359   000B2C                     i2u537_41:
 22360   000B2C  EF99  F005         	goto	i2l2339
 22361   000B30                     i2u537_40:
 22362   000B30  8011               	bsf	___fldiv@b^(0+1280),0,c
 22363   000B32                     i2l2339:
 22364   000B32  90D8               	bcf	status,0,c
 22365   000B34  3624               	rlcf	___fldiv@grs^(0+1280),f,c
 22366   000B36  3625               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 22367   000B38  3626               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 22368   000B3A  3627               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 22369   000B3C  0622               	decf	___fldiv@new_exp^(0+1280),f,c
 22370   000B3E  A0D8               	btfss	status,0,c
 22371   000B40  0623               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 22372   000B42                     i2l6210:
 22373   000B42  AE13               	btfss	(___fldiv@b+2)^(0+1280),7,c
 22374   000B44  EFA6  F005         	goto	i2u538_41
 22375   000B48  EFA8  F005         	goto	i2u538_40
 22376   000B4C                     i2u538_41:
 22377   000B4C  EF8C  F005         	goto	i2l6204
 22378   000B50                     i2u538_40:
 22379   000B50  6A29               	clrf	___fldiv@aexp^(0+1280),c
 22380   000B52  AE27               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 22381   000B54  EFAE  F005         	goto	i2u539_41
 22382   000B58  EFB0  F005         	goto	i2u539_40
 22383   000B5C                     i2u539_41:
 22384   000B5C  EFD4  F005         	goto	i2l2341
 22385   000B60                     i2u539_40:
 22386   000B60  0EFF               	movlw	255
 22387   000B62  1424               	andwf	___fldiv@grs^(0+1280),w,c
 22388   000B64  6E19               	movwf	??___fldiv^(0+1280),c
 22389   000B66  0EFF               	movlw	255
 22390   000B68  1425               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 22391   000B6A  6E1A               	movwf	(??___fldiv+1)^(0+1280),c
 22392   000B6C  0EFF               	movlw	255
 22393   000B6E  1426               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 22394   000B70  6E1B               	movwf	(??___fldiv+2)^(0+1280),c
 22395   000B72  0E7F               	movlw	127
 22396   000B74  1427               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 22397   000B76  6E1C               	movwf	(??___fldiv+3)^(0+1280),c
 22398   000B78  5019               	movf	??___fldiv^(0+1280),w,c
 22399   000B7A  101A               	iorwf	(??___fldiv+1)^(0+1280),w,c
 22400   000B7C  101B               	iorwf	(??___fldiv+2)^(0+1280),w,c
 22401   000B7E  101C               	iorwf	(??___fldiv+3)^(0+1280),w,c
 22402   000B80  B4D8               	btfsc	status,2,c
 22403   000B82  EFC5  F005         	goto	i2u540_41
 22404   000B86  EFC7  F005         	goto	i2u540_40
 22405   000B8A                     i2u540_41:
 22406   000B8A  EFCB  F005         	goto	i2l2342
 22407   000B8E                     i2u540_40:
 22408   000B8E                     i2l6214:
 22409   000B8E  0E01               	movlw	1
 22410   000B90  6E29               	movwf	___fldiv@aexp^(0+1280),c
 22411   000B92  EFD4  F005         	goto	i2l2341
 22412   000B96                     i2l2342:
 22413   000B96  A011               	btfss	___fldiv@b^(0+1280),0,c
 22414   000B98  EFD0  F005         	goto	i2u541_41
 22415   000B9C  EFD2  F005         	goto	i2u541_40
 22416   000BA0                     i2u541_41:
 22417   000BA0  EFD4  F005         	goto	i2l2341
 22418   000BA4                     i2u541_40:
 22419   000BA4  EFC7  F005         	goto	i2l6214
 22420   000BA8                     i2l2341:
 22421   000BA8  5029               	movf	___fldiv@aexp^(0+1280),w,c
 22422   000BAA  B4D8               	btfsc	status,2,c
 22423   000BAC  EFDA  F005         	goto	i2u542_41
 22424   000BB0  EFDC  F005         	goto	i2u542_40
 22425   000BB4                     i2u542_41:
 22426   000BB4  EF00  F006         	goto	i2l6226
 22427   000BB8                     i2u542_40:
 22428   000BB8  0E01               	movlw	1
 22429   000BBA  2611               	addwf	___fldiv@b^(0+1280),f,c
 22430   000BBC  0E00               	movlw	0
 22431   000BBE  2212               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 22432   000BC0  2213               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 22433   000BC2  2214               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 22434   000BC4  A014               	btfss	(___fldiv@b+3)^(0+1280),0,c
 22435   000BC6  EFE7  F005         	goto	i2u543_41
 22436   000BCA  EFE9  F005         	goto	i2u543_40
 22437   000BCE                     i2u543_41:
 22438   000BCE  EF00  F006         	goto	i2l6226
 22439   000BD2                     i2u543_40:
 22440   000BD2  C511  F519         	movff	___fldiv@b,??___fldiv
 22441   000BD6  C512  F51A         	movff	___fldiv@b+1,??___fldiv+1
 22442   000BDA  C513  F51B         	movff	___fldiv@b+2,??___fldiv+2
 22443   000BDE  C514  F51C         	movff	___fldiv@b+3,??___fldiv+3
 22444   000BE2  341C               	rlcf	(??___fldiv+3)^(0+1280),w,c
 22445   000BE4  321C               	rrcf	(??___fldiv+3)^(0+1280),f,c
 22446   000BE6  321B               	rrcf	(??___fldiv+2)^(0+1280),f,c
 22447   000BE8  321A               	rrcf	(??___fldiv+1)^(0+1280),f,c
 22448   000BEA  3219               	rrcf	??___fldiv^(0+1280),f,c
 22449   000BEC  C519  F511         	movff	??___fldiv,___fldiv@b
 22450   000BF0  C51A  F512         	movff	??___fldiv+1,___fldiv@b+1
 22451   000BF4  C51B  F513         	movff	??___fldiv+2,___fldiv@b+2
 22452   000BF8  C51C  F514         	movff	??___fldiv+3,___fldiv@b+3
 22453   000BFC  4A22               	infsnz	___fldiv@new_exp^(0+1280),f,c
 22454   000BFE  2A23               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 22455   000C00                     i2l6226:
 22456   000C00  BE23               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 22457   000C02  EF0B  F006         	goto	i2u544_41
 22458   000C06  5023               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 22459   000C08  E108               	bnz	i2u544_40
 22460   000C0A  2822               	incf	___fldiv@new_exp^(0+1280),w,c
 22461   000C0C  A0D8               	btfss	status,0,c
 22462   000C0E  EF0B  F006         	goto	i2u544_41
 22463   000C12  EF0D  F006         	goto	i2u544_40
 22464   000C16                     i2u544_41:
 22465   000C16  EF18  F006         	goto	i2l6230
 22466   000C1A                     i2u544_40:
 22467   000C1A  0E00               	movlw	0
 22468   000C1C  6E23               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 22469   000C1E  6822               	setf	___fldiv@new_exp^(0+1280),c
 22470   000C20  0E00               	movlw	0
 22471   000C22  6E11               	movwf	___fldiv@b^(0+1280),c
 22472   000C24  0E00               	movlw	0
 22473   000C26  6E12               	movwf	(___fldiv@b+1)^(0+1280),c
 22474   000C28  0E00               	movlw	0
 22475   000C2A  6E13               	movwf	(___fldiv@b+2)^(0+1280),c
 22476   000C2C  0E00               	movlw	0
 22477   000C2E  6E14               	movwf	(___fldiv@b+3)^(0+1280),c
 22478   000C30                     i2l6230:
 22479   000C30  BE23               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 22480   000C32  EF25  F006         	goto	i2u545_40
 22481   000C36  5023               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 22482   000C38  E106               	bnz	i2u545_41
 22483   000C3A  0422               	decf	___fldiv@new_exp^(0+1280),w,c
 22484   000C3C  B0D8               	btfsc	status,0,c
 22485   000C3E  EF23  F006         	goto	i2u545_41
 22486   000C42  EF25  F006         	goto	i2u545_40
 22487   000C46                     i2u545_41:
 22488   000C46  EF32  F006         	goto	i2l6236
 22489   000C4A                     i2u545_40:
 22490   000C4A  0E00               	movlw	0
 22491   000C4C  6E23               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 22492   000C4E  0E00               	movlw	0
 22493   000C50  6E22               	movwf	___fldiv@new_exp^(0+1280),c
 22494   000C52  0E00               	movlw	0
 22495   000C54  6E11               	movwf	___fldiv@b^(0+1280),c
 22496   000C56  0E00               	movlw	0
 22497   000C58  6E12               	movwf	(___fldiv@b+1)^(0+1280),c
 22498   000C5A  0E00               	movlw	0
 22499   000C5C  6E13               	movwf	(___fldiv@b+2)^(0+1280),c
 22500   000C5E  0E00               	movlw	0
 22501   000C60  6E14               	movwf	(___fldiv@b+3)^(0+1280),c
 22502   000C62  6A21               	clrf	___fldiv@sign^(0+1280),c
 22503   000C64                     i2l6236:
 22504   000C64  C522  F528         	movff	___fldiv@new_exp,___fldiv@bexp
 22505   000C68  A028               	btfss	___fldiv@bexp^(0+1280),0,c
 22506   000C6A  EF39  F006         	goto	i2u546_41
 22507   000C6E  EF3B  F006         	goto	i2u546_40
 22508   000C72                     i2u546_41:
 22509   000C72  EF3E  F006         	goto	i2l6242
 22510   000C76                     i2u546_40:
 22511   000C76  8E13               	bsf	(___fldiv@b+2)^(0+1280),7,c
 22512   000C78  EF3F  F006         	goto	i2l6244
 22513   000C7C                     i2l6242:
 22514   000C7C  9E13               	bcf	(___fldiv@b+2)^(0+1280),7,c
 22515   000C7E                     i2l6244:
 22516   000C7E  90D8               	bcf	status,0,c
 22517   000C80  3028               	rrcf	___fldiv@bexp^(0+1280),w,c
 22518   000C82  6E14               	movwf	(___fldiv@b+3)^(0+1280),c
 22519   000C84  EFF8  F004         	goto	i2l6160
 22520   000C88                     i2l2328:
 22521   000C88  0012               	return		;funcret
 22522   000C8A                     __end_of___fldiv:
 22523                           	callstack 0
 22524                           
 22525 ;; *************** function ___fladd *****************
 22526 ;; Defined at:
 22527 ;;		line 10 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
 22528 ;; Parameters:    Size  Location     Type
 22529 ;;  b               4    0[COMRAM] unsigned char 
 22530 ;;  a               4    4[COMRAM] unsigned char 
 22531 ;; Auto vars:     Size  Location     Type
 22532 ;;  grs             1   15[COMRAM] unsigned char 
 22533 ;;  bexp            1   14[COMRAM] unsigned char 
 22534 ;;  aexp            1   13[COMRAM] unsigned char 
 22535 ;;  signs           1   12[COMRAM] unsigned char 
 22536 ;; Return value:  Size  Location     Type
 22537 ;;                  4    0[COMRAM] unsigned char 
 22538 ;; Registers used:
 22539 ;;		wreg, status,2, status,0
 22540 ;; Tracked objects:
 22541 ;;		On entry : 0/0
 22542 ;;		On exit  : 0/0
 22543 ;;		Unchanged: 0/0
 22544 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 22545 ;;      Params:         8       0       0       0       0       0       0       0       0
 22546 ;;      Locals:         4       0       0       0       0       0       0       0       0
 22547 ;;      Temps:          4       0       0       0       0       0       0       0       0
 22548 ;;      Totals:        16       0       0       0       0       0       0       0       0
 22549 ;;Total ram usage:       16 bytes
 22550 ;; Hardware stack levels used: 1
 22551 ;; This function calls:
 22552 ;;		Nothing
 22553 ;; This function is called by:
 22554 ;;		_CheckOverCurrent
 22555 ;; This function uses a non-reentrant model
 22556 ;;
 22557                           
 22558                           	psect	text111
 22559   00001E                     __ptext111:
 22560                           	callstack 0
 22561   00001E                     ___fladd:
 22562                           	callstack 118
 22563   00001E  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 22564   000020  0B80               	andlw	128
 22565   000022  6E0D               	movwf	___fladd@signs^(0+1280),c
 22566   000024  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 22567   000026  2404               	addwf	(___fladd@b+3)^(0+1280),w,c
 22568   000028  6E0F               	movwf	___fladd@bexp^(0+1280),c
 22569   00002A  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
 22570   00002C  EF1A  F000         	goto	i2u485_41
 22571   000030  EF1C  F000         	goto	i2u485_40
 22572   000034                     i2u485_41:
 22573   000034  EF1D  F000         	goto	i2l5928
 22574   000038                     i2u485_40:
 22575   000038  800F               	bsf	___fladd@bexp^(0+1280),0,c
 22576   00003A                     i2l5928:
 22577   00003A  500F               	movf	___fladd@bexp^(0+1280),w,c
 22578   00003C  B4D8               	btfsc	status,2,c
 22579   00003E  EF23  F000         	goto	i2u486_41
 22580   000042  EF25  F000         	goto	i2u486_40
 22581   000046                     i2u486_41:
 22582   000046  EF39  F000         	goto	i2l5938
 22583   00004A                     i2u486_40:
 22584   00004A  280F               	incf	___fladd@bexp^(0+1280),w,c
 22585   00004C  A4D8               	btfss	status,2,c
 22586   00004E  EF2B  F000         	goto	i2u487_41
 22587   000052  EF2D  F000         	goto	i2u487_40
 22588   000056                     i2u487_41:
 22589   000056  EF35  F000         	goto	i2l5934
 22590   00005A                     i2u487_40:
 22591   00005A  0E00               	movlw	0
 22592   00005C  6E01               	movwf	___fladd@b^(0+1280),c
 22593   00005E  0E00               	movlw	0
 22594   000060  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 22595   000062  0E00               	movlw	0
 22596   000064  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 22597   000066  0E00               	movlw	0
 22598   000068  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 22599   00006A                     i2l5934:
 22600   00006A  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
 22601   00006C  6A04               	clrf	(___fladd@b+3)^(0+1280),c
 22602   00006E  EF41  F000         	goto	i2l5940
 22603   000072                     i2l5938:
 22604   000072  0E00               	movlw	0
 22605   000074  6E01               	movwf	___fladd@b^(0+1280),c
 22606   000076  0E00               	movlw	0
 22607   000078  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 22608   00007A  0E00               	movlw	0
 22609   00007C  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 22610   00007E  0E00               	movlw	0
 22611   000080  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 22612   000082                     i2l5940:
 22613   000082  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 22614   000084  0B80               	andlw	128
 22615   000086  6E0E               	movwf	___fladd@aexp^(0+1280),c
 22616   000088  500D               	movf	___fladd@signs^(0+1280),w,c
 22617   00008A  180E               	xorwf	___fladd@aexp^(0+1280),w,c
 22618   00008C  B4D8               	btfsc	status,2,c
 22619   00008E  EF4B  F000         	goto	i2u488_41
 22620   000092  EF4D  F000         	goto	i2u488_40
 22621   000096                     i2u488_41:
 22622   000096  EF4E  F000         	goto	i2l5946
 22623   00009A                     i2u488_40:
 22624   00009A  8C0D               	bsf	___fladd@signs^(0+1280),6,c
 22625   00009C                     i2l5946:
 22626   00009C  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 22627   00009E  2408               	addwf	(___fladd@a+3)^(0+1280),w,c
 22628   0000A0  6E0E               	movwf	___fladd@aexp^(0+1280),c
 22629   0000A2  AE07               	btfss	(___fladd@a+2)^(0+1280),7,c
 22630   0000A4  EF56  F000         	goto	i2u489_41
 22631   0000A8  EF58  F000         	goto	i2u489_40
 22632   0000AC                     i2u489_41:
 22633   0000AC  EF59  F000         	goto	i2l5952
 22634   0000B0                     i2u489_40:
 22635   0000B0  800E               	bsf	___fladd@aexp^(0+1280),0,c
 22636   0000B2                     i2l5952:
 22637   0000B2  500E               	movf	___fladd@aexp^(0+1280),w,c
 22638   0000B4  B4D8               	btfsc	status,2,c
 22639   0000B6  EF5F  F000         	goto	i2u490_41
 22640   0000BA  EF61  F000         	goto	i2u490_40
 22641   0000BE                     i2u490_41:
 22642   0000BE  EF75  F000         	goto	i2l5962
 22643   0000C2                     i2u490_40:
 22644   0000C2  280E               	incf	___fladd@aexp^(0+1280),w,c
 22645   0000C4  A4D8               	btfss	status,2,c
 22646   0000C6  EF67  F000         	goto	i2u491_41
 22647   0000CA  EF69  F000         	goto	i2u491_40
 22648   0000CE                     i2u491_41:
 22649   0000CE  EF71  F000         	goto	i2l5958
 22650   0000D2                     i2u491_40:
 22651   0000D2  0E00               	movlw	0
 22652   0000D4  6E05               	movwf	___fladd@a^(0+1280),c
 22653   0000D6  0E00               	movlw	0
 22654   0000D8  6E06               	movwf	(___fladd@a+1)^(0+1280),c
 22655   0000DA  0E00               	movlw	0
 22656   0000DC  6E07               	movwf	(___fladd@a+2)^(0+1280),c
 22657   0000DE  0E00               	movlw	0
 22658   0000E0  6E08               	movwf	(___fladd@a+3)^(0+1280),c
 22659   0000E2                     i2l5958:
 22660   0000E2  8E07               	bsf	(___fladd@a+2)^(0+1280),7,c
 22661   0000E4  6A08               	clrf	(___fladd@a+3)^(0+1280),c
 22662   0000E6  EF7D  F000         	goto	i2l5964
 22663   0000EA                     i2l5962:
 22664   0000EA  0E00               	movlw	0
 22665   0000EC  6E05               	movwf	___fladd@a^(0+1280),c
 22666   0000EE  0E00               	movlw	0
 22667   0000F0  6E06               	movwf	(___fladd@a+1)^(0+1280),c
 22668   0000F2  0E00               	movlw	0
 22669   0000F4  6E07               	movwf	(___fladd@a+2)^(0+1280),c
 22670   0000F6  0E00               	movlw	0
 22671   0000F8  6E08               	movwf	(___fladd@a+3)^(0+1280),c
 22672   0000FA                     i2l5964:
 22673   0000FA  500F               	movf	___fladd@bexp^(0+1280),w,c
 22674   0000FC  5C0E               	subwf	___fladd@aexp^(0+1280),w,c
 22675   0000FE  B0D8               	btfsc	status,0,c
 22676   000100  EF84  F000         	goto	i2u492_41
 22677   000104  EF86  F000         	goto	i2u492_40
 22678   000108                     i2u492_41:
 22679   000108  EFAD  F000         	goto	i2l6000
 22680   00010C                     i2u492_40:
 22681   00010C  AC0D               	btfss	___fladd@signs^(0+1280),6,c
 22682   00010E  EF8B  F000         	goto	i2u493_41
 22683   000112  EF8D  F000         	goto	i2u493_40
 22684   000116                     i2u493_41:
 22685   000116  EF8F  F000         	goto	i2l5970
 22686   00011A                     i2u493_40:
 22687   00011A  0E80               	movlw	128
 22688   00011C  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
 22689   00011E                     i2l5970:
 22690   00011E  C50F  F510         	movff	___fladd@bexp,___fladd@grs
 22691   000122  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
 22692   000126  C510  F50E         	movff	___fladd@grs,___fladd@aexp
 22693   00012A  C501  F510         	movff	___fladd@b,___fladd@grs
 22694   00012E  C505  F501         	movff	___fladd@a,___fladd@b
 22695   000132  C510  F505         	movff	___fladd@grs,___fladd@a
 22696   000136  C502  F510         	movff	___fladd@b+1,___fladd@grs
 22697   00013A  C506  F502         	movff	___fladd@a+1,___fladd@b+1
 22698   00013E  C510  F506         	movff	___fladd@grs,___fladd@a+1
 22699   000142  C503  F510         	movff	___fladd@b+2,___fladd@grs
 22700   000146  C507  F503         	movff	___fladd@a+2,___fladd@b+2
 22701   00014A  C510  F507         	movff	___fladd@grs,___fladd@a+2
 22702   00014E  C504  F510         	movff	___fladd@b+3,___fladd@grs
 22703   000152  C508  F504         	movff	___fladd@a+3,___fladd@b+3
 22704   000156  C510  F508         	movff	___fladd@grs,___fladd@a+3
 22705   00015A                     i2l6000:
 22706   00015A  6A10               	clrf	___fladd@grs^(0+1280),c
 22707   00015C  500F               	movf	___fladd@bexp^(0+1280),w,c
 22708   00015E  C50E  F509         	movff	___fladd@aexp,??___fladd
 22709   000162  6A0A               	clrf	(??___fladd+1)^(0+1280),c
 22710   000164  5E09               	subwf	??___fladd^(0+1280),f,c
 22711   000166  0E00               	movlw	0
 22712   000168  5A0A               	subwfb	(??___fladd+1)^(0+1280),f,c
 22713   00016A  BE0A               	btfsc	(??___fladd+1)^(0+1280),7,c
 22714   00016C  EFC1  F000         	goto	i2u494_41
 22715   000170  500A               	movf	(??___fladd+1)^(0+1280),w,c
 22716   000172  E109               	bnz	i2u494_40
 22717   000174  0E1A               	movlw	26
 22718   000176  5C09               	subwf	??___fladd^(0+1280),w,c
 22719   000178  A0D8               	btfss	status,0,c
 22720   00017A  EFC1  F000         	goto	i2u494_41
 22721   00017E  EFC3  F000         	goto	i2u494_40
 22722   000182                     i2u494_41:
 22723   000182  EFFA  F000         	goto	i2l2275
 22724   000186                     i2u494_40:
 22725   000186  5001               	movf	___fladd@b^(0+1280),w,c
 22726   000188  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
 22727   00018A  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
 22728   00018C  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
 22729   00018E  A4D8               	btfss	status,2,c
 22730   000190  EFCC  F000         	goto	i2u495_41
 22731   000194  EFCF  F000         	goto	i2u495_40
 22732   000198                     i2u495_41:
 22733   000198  0E01               	movlw	1
 22734   00019A  EFD0  F000         	goto	i2u496_40
 22735   00019E                     i2u495_40:
 22736   00019E  0E00               	movlw	0
 22737   0001A0                     i2u496_40:
 22738   0001A0  6E10               	movwf	___fladd@grs^(0+1280),c
 22739   0001A2  0E00               	movlw	0
 22740   0001A4  6E01               	movwf	___fladd@b^(0+1280),c
 22741   0001A6  0E00               	movlw	0
 22742   0001A8  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 22743   0001AA  0E00               	movlw	0
 22744   0001AC  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 22745   0001AE  0E00               	movlw	0
 22746   0001B0  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 22747   0001B2  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
 22748   0001B6  EF03  F001         	goto	i2l2274
 22749   0001BA                     i2l2276:
 22750   0001BA  A010               	btfss	___fladd@grs^(0+1280),0,c
 22751   0001BC  EFE2  F000         	goto	i2u497_41
 22752   0001C0  EFE4  F000         	goto	i2u497_40
 22753   0001C4                     i2u497_41:
 22754   0001C4  EFEA  F000         	goto	i2l6010
 22755   0001C8                     i2u497_40:
 22756   0001C8  90D8               	bcf	status,0,c
 22757   0001CA  3010               	rrcf	___fladd@grs^(0+1280),w,c
 22758   0001CC  0901               	iorlw	1
 22759   0001CE  6E10               	movwf	___fladd@grs^(0+1280),c
 22760   0001D0  EFEC  F000         	goto	i2l6012
 22761   0001D4                     i2l6010:
 22762   0001D4  90D8               	bcf	status,0,c
 22763   0001D6  3210               	rrcf	___fladd@grs^(0+1280),f,c
 22764   0001D8                     i2l6012:
 22765   0001D8  A001               	btfss	___fladd@b^(0+1280),0,c
 22766   0001DA  EFF1  F000         	goto	i2u498_41
 22767   0001DE  EFF3  F000         	goto	i2u498_40
 22768   0001E2                     i2u498_41:
 22769   0001E2  EFF4  F000         	goto	i2l6016
 22770   0001E6                     i2u498_40:
 22771   0001E6  8E10               	bsf	___fladd@grs^(0+1280),7,c
 22772   0001E8                     i2l6016:
 22773   0001E8  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
 22774   0001EA  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
 22775   0001EC  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
 22776   0001EE  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
 22777   0001F0  3201               	rrcf	___fladd@b^(0+1280),f,c
 22778   0001F2  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 22779   0001F4                     i2l2275:
 22780   0001F4  500E               	movf	___fladd@aexp^(0+1280),w,c
 22781   0001F6  5C0F               	subwf	___fladd@bexp^(0+1280),w,c
 22782   0001F8  A0D8               	btfss	status,0,c
 22783   0001FA  EF01  F001         	goto	i2u499_41
 22784   0001FE  EF03  F001         	goto	i2u499_40
 22785   000202                     i2u499_41:
 22786   000202  EFDD  F000         	goto	i2l2276
 22787   000206                     i2u499_40:
 22788   000206                     i2l2274:
 22789   000206  BC0D               	btfsc	___fladd@signs^(0+1280),6,c
 22790   000208  EF08  F001         	goto	i2u500_41
 22791   00020C  EF0A  F001         	goto	i2u500_40
 22792   000210                     i2u500_41:
 22793   000210  EF4A  F001         	goto	i2l6044
 22794   000214                     i2u500_40:
 22795   000214  500F               	movf	___fladd@bexp^(0+1280),w,c
 22796   000216  A4D8               	btfss	status,2,c
 22797   000218  EF10  F001         	goto	i2u501_41
 22798   00021C  EF12  F001         	goto	i2u501_40
 22799   000220                     i2u501_41:
 22800   000220  EF1C  F001         	goto	i2l6026
 22801   000224                     i2u501_40:
 22802   000224  0E00               	movlw	0
 22803   000226  6E01               	movwf	?___fladd^(0+1280),c
 22804   000228  0E00               	movlw	0
 22805   00022A  6E02               	movwf	(?___fladd+1)^(0+1280),c
 22806   00022C  0E00               	movlw	0
 22807   00022E  6E03               	movwf	(?___fladd+2)^(0+1280),c
 22808   000230  0E00               	movlw	0
 22809   000232  6E04               	movwf	(?___fladd+3)^(0+1280),c
 22810   000234  EF69  F002         	goto	i2l2283
 22811   000238                     i2l6026:
 22812   000238  5005               	movf	___fladd@a^(0+1280),w,c
 22813   00023A  2601               	addwf	___fladd@b^(0+1280),f,c
 22814   00023C  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 22815   00023E  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 22816   000240  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 22817   000242  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 22818   000244  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 22819   000246  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 22820   000248  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
 22821   00024A  EF29  F001         	goto	i2u502_41
 22822   00024E  EF2B  F001         	goto	i2u502_40
 22823   000252                     i2u502_41:
 22824   000252  EFD7  F001         	goto	i2l2288
 22825   000256                     i2u502_40:
 22826   000256  A010               	btfss	___fladd@grs^(0+1280),0,c
 22827   000258  EF30  F001         	goto	i2u503_41
 22828   00025C  EF32  F001         	goto	i2u503_40
 22829   000260                     i2u503_41:
 22830   000260  EF38  F001         	goto	i2l6034
 22831   000264                     i2u503_40:
 22832   000264  90D8               	bcf	status,0,c
 22833   000266  3010               	rrcf	___fladd@grs^(0+1280),w,c
 22834   000268  0901               	iorlw	1
 22835   00026A  6E10               	movwf	___fladd@grs^(0+1280),c
 22836   00026C  EF3A  F001         	goto	i2l6036
 22837   000270                     i2l6034:
 22838   000270  90D8               	bcf	status,0,c
 22839   000272  3210               	rrcf	___fladd@grs^(0+1280),f,c
 22840   000274                     i2l6036:
 22841   000274  A001               	btfss	___fladd@b^(0+1280),0,c
 22842   000276  EF3F  F001         	goto	i2u504_41
 22843   00027A  EF41  F001         	goto	i2u504_40
 22844   00027E                     i2u504_41:
 22845   00027E  EF42  F001         	goto	i2l6040
 22846   000282                     i2u504_40:
 22847   000282  8E10               	bsf	___fladd@grs^(0+1280),7,c
 22848   000284                     i2l6040:
 22849   000284  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
 22850   000286  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
 22851   000288  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
 22852   00028A  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
 22853   00028C  3201               	rrcf	___fladd@b^(0+1280),f,c
 22854   00028E  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 22855   000290  EFD7  F001         	goto	i2l2288
 22856   000294                     i2l6044:
 22857   000294  5005               	movf	___fladd@a^(0+1280),w,c
 22858   000296  5C01               	subwf	___fladd@b^(0+1280),w,c
 22859   000298  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 22860   00029A  5802               	subwfb	(___fladd@b+1)^(0+1280),w,c
 22861   00029C  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 22862   00029E  5803               	subwfb	(___fladd@b+2)^(0+1280),w,c
 22863   0002A0  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 22864   0002A2  0A80               	xorlw	128
 22865   0002A4  6E09               	movwf	??___fladd^(0+1280),c
 22866   0002A6  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 22867   0002A8  0A80               	xorlw	128
 22868   0002AA  5809               	subwfb	??___fladd^(0+1280),w,c
 22869   0002AC  B0D8               	btfsc	status,0,c
 22870   0002AE  EF5B  F001         	goto	i2u505_41
 22871   0002B2  EF5D  F001         	goto	i2u505_40
 22872   0002B6                     i2u505_41:
 22873   0002B6  EF88  F001         	goto	i2l6054
 22874   0002BA                     i2u505_40:
 22875   0002BA  5001               	movf	___fladd@b^(0+1280),w,c
 22876   0002BC  5C05               	subwf	___fladd@a^(0+1280),w,c
 22877   0002BE  6E09               	movwf	??___fladd^(0+1280),c
 22878   0002C0  5002               	movf	(___fladd@b+1)^(0+1280),w,c
 22879   0002C2  5806               	subwfb	(___fladd@a+1)^(0+1280),w,c
 22880   0002C4  6E0A               	movwf	(??___fladd+1)^(0+1280),c
 22881   0002C6  5003               	movf	(___fladd@b+2)^(0+1280),w,c
 22882   0002C8  5807               	subwfb	(___fladd@a+2)^(0+1280),w,c
 22883   0002CA  6E0B               	movwf	(??___fladd+2)^(0+1280),c
 22884   0002CC  5004               	movf	(___fladd@b+3)^(0+1280),w,c
 22885   0002CE  5808               	subwfb	(___fladd@a+3)^(0+1280),w,c
 22886   0002D0  6E0C               	movwf	(??___fladd+3)^(0+1280),c
 22887   0002D2  0EFF               	movlw	255
 22888   0002D4  2409               	addwf	??___fladd^(0+1280),w,c
 22889   0002D6  6E01               	movwf	___fladd@b^(0+1280),c
 22890   0002D8  0EFF               	movlw	255
 22891   0002DA  200A               	addwfc	(??___fladd+1)^(0+1280),w,c
 22892   0002DC  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 22893   0002DE  0EFF               	movlw	255
 22894   0002E0  200B               	addwfc	(??___fladd+2)^(0+1280),w,c
 22895   0002E2  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 22896   0002E4  0EFF               	movlw	255
 22897   0002E6  200C               	addwfc	(??___fladd+3)^(0+1280),w,c
 22898   0002E8  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 22899   0002EA  0E80               	movlw	128
 22900   0002EC  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
 22901   0002EE  6C10               	negf	___fladd@grs^(0+1280),c
 22902   0002F0  5010               	movf	___fladd@grs^(0+1280),w,c
 22903   0002F2  A4D8               	btfss	status,2,c
 22904   0002F4  EF7E  F001         	goto	i2u506_41
 22905   0002F8  EF80  F001         	goto	i2u506_40
 22906   0002FC                     i2u506_41:
 22907   0002FC  EF90  F001         	goto	i2l2291
 22908   000300                     i2u506_40:
 22909   000300  0E01               	movlw	1
 22910   000302  2601               	addwf	___fladd@b^(0+1280),f,c
 22911   000304  0E00               	movlw	0
 22912   000306  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 22913   000308  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 22914   00030A  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 22915   00030C  EF90  F001         	goto	i2l2291
 22916   000310                     i2l6054:
 22917   000310  5005               	movf	___fladd@a^(0+1280),w,c
 22918   000312  5E01               	subwf	___fladd@b^(0+1280),f,c
 22919   000314  5006               	movf	(___fladd@a+1)^(0+1280),w,c
 22920   000316  5A02               	subwfb	(___fladd@b+1)^(0+1280),f,c
 22921   000318  5007               	movf	(___fladd@a+2)^(0+1280),w,c
 22922   00031A  5A03               	subwfb	(___fladd@b+2)^(0+1280),f,c
 22923   00031C  5008               	movf	(___fladd@a+3)^(0+1280),w,c
 22924   00031E  5A04               	subwfb	(___fladd@b+3)^(0+1280),f,c
 22925   000320                     i2l2291:
 22926   000320  5001               	movf	___fladd@b^(0+1280),w,c
 22927   000322  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
 22928   000324  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
 22929   000326  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
 22930   000328  A4D8               	btfss	status,2,c
 22931   00032A  EF99  F001         	goto	i2u507_41
 22932   00032E  EF9B  F001         	goto	i2u507_40
 22933   000332                     i2u507_41:
 22934   000332  EFD0  F001         	goto	i2l6078
 22935   000336                     i2u507_40:
 22936   000336  5010               	movf	___fladd@grs^(0+1280),w,c
 22937   000338  A4D8               	btfss	status,2,c
 22938   00033A  EFA1  F001         	goto	i2u508_41
 22939   00033E  EFA3  F001         	goto	i2u508_40
 22940   000342                     i2u508_41:
 22941   000342  EFD0  F001         	goto	i2l6078
 22942   000346                     i2u508_40:
 22943   000346  0E00               	movlw	0
 22944   000348  6E01               	movwf	?___fladd^(0+1280),c
 22945   00034A  0E00               	movlw	0
 22946   00034C  6E02               	movwf	(?___fladd+1)^(0+1280),c
 22947   00034E  0E00               	movlw	0
 22948   000350  6E03               	movwf	(?___fladd+2)^(0+1280),c
 22949   000352  0E00               	movlw	0
 22950   000354  6E04               	movwf	(?___fladd+3)^(0+1280),c
 22951   000356  EF69  F002         	goto	i2l2283
 22952   00035A                     i2l6062:
 22953   00035A  90D8               	bcf	status,0,c
 22954   00035C  3601               	rlcf	___fladd@b^(0+1280),f,c
 22955   00035E  3602               	rlcf	(___fladd@b+1)^(0+1280),f,c
 22956   000360  3603               	rlcf	(___fladd@b+2)^(0+1280),f,c
 22957   000362  3604               	rlcf	(___fladd@b+3)^(0+1280),f,c
 22958   000364  AE10               	btfss	___fladd@grs^(0+1280),7,c
 22959   000366  EFB7  F001         	goto	i2u509_41
 22960   00036A  EFB9  F001         	goto	i2u509_40
 22961   00036E                     i2u509_41:
 22962   00036E  EFBA  F001         	goto	i2l6068
 22963   000372                     i2u509_40:
 22964   000372  8001               	bsf	___fladd@b^(0+1280),0,c
 22965   000374                     i2l6068:
 22966   000374  A010               	btfss	___fladd@grs^(0+1280),0,c
 22967   000376  EFBF  F001         	goto	i2u510_41
 22968   00037A  EFC1  F001         	goto	i2u510_40
 22969   00037E                     i2u510_41:
 22970   00037E  EFC5  F001         	goto	i2l6072
 22971   000382                     i2u510_40:
 22972   000382  80D8               	bsf	status,0,c
 22973   000384  3610               	rlcf	___fladd@grs^(0+1280),f,c
 22974   000386  EFC7  F001         	goto	i2l6074
 22975   00038A                     i2l6072:
 22976   00038A  90D8               	bcf	status,0,c
 22977   00038C  3610               	rlcf	___fladd@grs^(0+1280),f,c
 22978   00038E                     i2l6074:
 22979   00038E  500F               	movf	___fladd@bexp^(0+1280),w,c
 22980   000390  B4D8               	btfsc	status,2,c
 22981   000392  EFCD  F001         	goto	i2u511_41
 22982   000396  EFCF  F001         	goto	i2u511_40
 22983   00039A                     i2u511_41:
 22984   00039A  EFD0  F001         	goto	i2l6078
 22985   00039E                     i2u511_40:
 22986   00039E  060F               	decf	___fladd@bexp^(0+1280),f,c
 22987   0003A0                     i2l6078:
 22988   0003A0  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
 22989   0003A2  EFD5  F001         	goto	i2u512_41
 22990   0003A6  EFD7  F001         	goto	i2u512_40
 22991   0003AA                     i2u512_41:
 22992   0003AA  EFAD  F001         	goto	i2l6062
 22993   0003AE                     i2u512_40:
 22994   0003AE                     i2l2288:
 22995   0003AE  6A0E               	clrf	___fladd@aexp^(0+1280),c
 22996   0003B0  AE10               	btfss	___fladd@grs^(0+1280),7,c
 22997   0003B2  EFDD  F001         	goto	i2u513_41
 22998   0003B6  EFDF  F001         	goto	i2u513_40
 22999   0003BA                     i2u513_41:
 23000   0003BA  EFF7  F001         	goto	i2l2300
 23001   0003BE                     i2u513_40:
 23002   0003BE  C510  F509         	movff	___fladd@grs,??___fladd
 23003   0003C2  0E7F               	movlw	127
 23004   0003C4  1609               	andwf	??___fladd^(0+1280),f,c
 23005   0003C6  B4D8               	btfsc	status,2,c
 23006   0003C8  EFE8  F001         	goto	i2u514_41
 23007   0003CC  EFEA  F001         	goto	i2u514_40
 23008   0003D0                     i2u514_41:
 23009   0003D0  EFEE  F001         	goto	i2l2301
 23010   0003D4                     i2u514_40:
 23011   0003D4                     i2l6082:
 23012   0003D4  0E01               	movlw	1
 23013   0003D6  6E0E               	movwf	___fladd@aexp^(0+1280),c
 23014   0003D8  EFF7  F001         	goto	i2l2300
 23015   0003DC                     i2l2301:
 23016   0003DC  A001               	btfss	___fladd@b^(0+1280),0,c
 23017   0003DE  EFF3  F001         	goto	i2u515_41
 23018   0003E2  EFF5  F001         	goto	i2u515_40
 23019   0003E6                     i2u515_41:
 23020   0003E6  EFF7  F001         	goto	i2l2300
 23021   0003EA                     i2u515_40:
 23022   0003EA  EFEA  F001         	goto	i2l6082
 23023   0003EE                     i2l2300:
 23024   0003EE  500E               	movf	___fladd@aexp^(0+1280),w,c
 23025   0003F0  B4D8               	btfsc	status,2,c
 23026   0003F2  EFFD  F001         	goto	i2u516_41
 23027   0003F6  EFFF  F001         	goto	i2u516_40
 23028   0003FA                     i2u516_41:
 23029   0003FA  EF2A  F002         	goto	i2l6094
 23030   0003FE                     i2u516_40:
 23031   0003FE  0E01               	movlw	1
 23032   000400  2601               	addwf	___fladd@b^(0+1280),f,c
 23033   000402  0E00               	movlw	0
 23034   000404  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
 23035   000406  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
 23036   000408  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
 23037   00040A  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
 23038   00040C  EF0A  F002         	goto	i2u517_41
 23039   000410  EF0C  F002         	goto	i2u517_40
 23040   000414                     i2u517_41:
 23041   000414  EF2A  F002         	goto	i2l6094
 23042   000418                     i2u517_40:
 23043   000418  C501  F509         	movff	___fladd@b,??___fladd
 23044   00041C  C502  F50A         	movff	___fladd@b+1,??___fladd+1
 23045   000420  C503  F50B         	movff	___fladd@b+2,??___fladd+2
 23046   000424  C504  F50C         	movff	___fladd@b+3,??___fladd+3
 23047   000428  340C               	rlcf	(??___fladd+3)^(0+1280),w,c
 23048   00042A  320C               	rrcf	(??___fladd+3)^(0+1280),f,c
 23049   00042C  320B               	rrcf	(??___fladd+2)^(0+1280),f,c
 23050   00042E  320A               	rrcf	(??___fladd+1)^(0+1280),f,c
 23051   000430  3209               	rrcf	??___fladd^(0+1280),f,c
 23052   000432  C509  F501         	movff	??___fladd,___fladd@b
 23053   000436  C50A  F502         	movff	??___fladd+1,___fladd@b+1
 23054   00043A  C50B  F503         	movff	??___fladd+2,___fladd@b+2
 23055   00043E  C50C  F504         	movff	??___fladd+3,___fladd@b+3
 23056   000442  280F               	incf	___fladd@bexp^(0+1280),w,c
 23057   000444  B4D8               	btfsc	status,2,c
 23058   000446  EF27  F002         	goto	i2u518_41
 23059   00044A  EF29  F002         	goto	i2u518_40
 23060   00044E                     i2u518_41:
 23061   00044E  EF2A  F002         	goto	i2l6094
 23062   000452                     i2u518_40:
 23063   000452  2A0F               	incf	___fladd@bexp^(0+1280),f,c
 23064   000454                     i2l6094:
 23065   000454  280F               	incf	___fladd@bexp^(0+1280),w,c
 23066   000456  B4D8               	btfsc	status,2,c
 23067   000458  EF30  F002         	goto	i2u519_41
 23068   00045C  EF32  F002         	goto	i2u519_40
 23069   000460                     i2u519_41:
 23070   000460  EF3A  F002         	goto	i2l6098
 23071   000464                     i2u519_40:
 23072   000464  500F               	movf	___fladd@bexp^(0+1280),w,c
 23073   000466  A4D8               	btfss	status,2,c
 23074   000468  EF38  F002         	goto	i2u520_41
 23075   00046C  EF3A  F002         	goto	i2u520_40
 23076   000470                     i2u520_41:
 23077   000470  EF4B  F002         	goto	i2l2307
 23078   000474                     i2u520_40:
 23079   000474                     i2l6098:
 23080   000474  0E00               	movlw	0
 23081   000476  6E01               	movwf	___fladd@b^(0+1280),c
 23082   000478  0E00               	movlw	0
 23083   00047A  6E02               	movwf	(___fladd@b+1)^(0+1280),c
 23084   00047C  0E00               	movlw	0
 23085   00047E  6E03               	movwf	(___fladd@b+2)^(0+1280),c
 23086   000480  0E00               	movlw	0
 23087   000482  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 23088   000484  500F               	movf	___fladd@bexp^(0+1280),w,c
 23089   000486  A4D8               	btfss	status,2,c
 23090   000488  EF48  F002         	goto	i2u521_41
 23091   00048C  EF4A  F002         	goto	i2u521_40
 23092   000490                     i2u521_41:
 23093   000490  EF4B  F002         	goto	i2l2307
 23094   000494                     i2u521_40:
 23095   000494  6A0D               	clrf	___fladd@signs^(0+1280),c
 23096   000496                     i2l2307:
 23097   000496  A00F               	btfss	___fladd@bexp^(0+1280),0,c
 23098   000498  EF50  F002         	goto	i2u522_41
 23099   00049C  EF52  F002         	goto	i2u522_40
 23100   0004A0                     i2u522_41:
 23101   0004A0  EF55  F002         	goto	i2l6104
 23102   0004A4                     i2u522_40:
 23103   0004A4  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
 23104   0004A6  EF56  F002         	goto	i2l6106
 23105   0004AA                     i2l6104:
 23106   0004AA  9E03               	bcf	(___fladd@b+2)^(0+1280),7,c
 23107   0004AC                     i2l6106:
 23108   0004AC  90D8               	bcf	status,0,c
 23109   0004AE  300F               	rrcf	___fladd@bexp^(0+1280),w,c
 23110   0004B0  6E04               	movwf	(___fladd@b+3)^(0+1280),c
 23111   0004B2  AE0D               	btfss	___fladd@signs^(0+1280),7,c
 23112   0004B4  EF5E  F002         	goto	i2u523_41
 23113   0004B8  EF60  F002         	goto	i2u523_40
 23114   0004BC                     i2u523_41:
 23115   0004BC  EF61  F002         	goto	i2l6112
 23116   0004C0                     i2u523_40:
 23117   0004C0  8E04               	bsf	(___fladd@b+3)^(0+1280),7,c
 23118   0004C2                     i2l6112:
 23119   0004C2  C501  F501         	movff	___fladd@b,?___fladd
 23120   0004C6  C502  F502         	movff	___fladd@b+1,?___fladd+1
 23121   0004CA  C503  F503         	movff	___fladd@b+2,?___fladd+2
 23122   0004CE  C504  F504         	movff	___fladd@b+3,?___fladd+3
 23123   0004D2                     i2l2283:
 23124   0004D2  0012               	return		;funcret
 23125   0004D4                     __end_of___fladd:
 23126                           	callstack 0
 23127                           
 23128 ;; *************** function _HandleMotorState *****************
 23129 ;; Defined at:
 23130 ;;		line 233 in file "motor.c"
 23131 ;; Parameters:    Size  Location     Type
 23132 ;;		None
 23133 ;; Auto vars:     Size  Location     Type
 23134 ;;		None
 23135 ;; Return value:  Size  Location     Type
 23136 ;;                  1    wreg      void 
 23137 ;; Registers used:
 23138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23139 ;; Tracked objects:
 23140 ;;		On entry : 0/0
 23141 ;;		On exit  : 0/0
 23142 ;;		Unchanged: 0/0
 23143 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23144 ;;      Params:         0       0       0       0       0       0       0       0       0
 23145 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23146 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23147 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23148 ;;Total ram usage:        2 bytes
 23149 ;; Hardware stack levels used: 1
 23150 ;; Hardware stack levels required when called: 5
 23151 ;; This function calls:
 23152 ;;		_CloseGate
 23153 ;;		_CloseGateSlow
 23154 ;;		_MotorStartSampling
 23155 ;;		_MotorStopSampling
 23156 ;;		_OpenGate
 23157 ;;		_OpenGateSlow
 23158 ;;		_StopGate
 23159 ;; This function is called by:
 23160 ;;		_CheckOverCurrent
 23161 ;;		_EmergencyOpen
 23162 ;;		_MotorControl
 23163 ;; This function uses a non-reentrant model
 23164 ;;
 23165                           
 23166                           	psect	text112
 23167   001296                     __ptext112:
 23168                           	callstack 0
 23169   001296                     _HandleMotorState:
 23170                           	callstack 112
 23171   001296                     
 23172                           ;motor.c: 235:     if (!configFlag) {
 23173   001296  0105               	movlb	5	; () banked
 23174   001298  519A               	movf	_configFlag& (0+255),w,b	;volatile
 23175   00129A  A4D8               	btfss	status,2,c
 23176   00129C  EF52  F009         	goto	i2u373_41
 23177   0012A0  EF54  F009         	goto	i2u373_40
 23178   0012A4                     i2u373_41:
 23179   0012A4  EFD2  F009         	goto	i2l5178
 23180   0012A8                     i2u373_40:
 23181   0012A8                     
 23182                           ; BSR set to: 5
 23183                           ;motor.c: 236:         if (lastMotorState != motorState) {
 23184   0012A8  505C               	movf	_motorState^(0+1280),w,c	;volatile
 23185   0012AA  6E1D               	movwf	??_HandleMotorState^(0+1280),c
 23186   0012AC  6A1E               	clrf	(??_HandleMotorState+1)^(0+1280),c
 23187   0012AE  5166               	movf	_lastMotorState& (0+255),w,b
 23188   0012B0  181D               	xorwf	??_HandleMotorState^(0+1280),w,c
 23189   0012B2  E109               	bnz	i2u374_40
 23190   0012B4  5167               	movf	(_lastMotorState+1)& (0+255),w,b
 23191   0012B6  181E               	xorwf	(??_HandleMotorState+1)^(0+1280),w,c
 23192   0012B8  B4D8               	btfsc	status,2,c
 23193   0012BA  EF61  F009         	goto	i2u374_41
 23194   0012BE  EF63  F009         	goto	i2u374_40
 23195   0012C2                     i2u374_41:
 23196   0012C2  EFD2  F009         	goto	i2l5178
 23197   0012C6                     i2u374_40:
 23198   0012C6                     
 23199                           ; BSR set to: 5
 23200                           ;motor.c: 237:             lastMotorState = motorState;
 23201   0012C6  C55C  F566         	movff	_motorState,_lastMotorState	;volatile
 23202   0012CA  6B67               	clrf	(_lastMotorState+1)& (0+255),b
 23203                           
 23204                           ;motor.c: 239:             switch (motorState) {
 23205   0012CC  EFA5  F009         	goto	i2l5176
 23206   0012D0                     i2l5134:
 23207                           
 23208                           ; BSR set to: 5
 23209                           ;motor.c: 241:                     StopGate();
 23210   0012D0  EC9C  F018         	call	_StopGate	;wreg free
 23211   0012D4                     
 23212                           ;motor.c: 242:                     motorIsRunning = 0;
 23213   0012D4  0E00               	movlw	0
 23214   0012D6  0105               	movlb	5	; () banked
 23215   0012D8  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 23216   0012DA  0E00               	movlw	0
 23217   0012DC  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 23218   0012DE                     i2l5138:
 23219                           
 23220                           ; BSR set to: 5
 23221                           ;motor.c: 243:                     MotorStopSampling();
 23222   0012DE  EC8B  F01A         	call	_MotorStopSampling	;wreg free
 23223                           
 23224                           ;motor.c: 244:                     break;
 23225   0012E2  EFD2  F009         	goto	i2l5178
 23226   0012E6                     i2l5140:
 23227                           
 23228                           ; BSR set to: 5
 23229                           ;motor.c: 247:                     OpenGate();
 23230   0012E6  ECAE  F016         	call	_OpenGate	;wreg free
 23231   0012EA                     i2l5142:
 23232                           
 23233                           ;motor.c: 248:                     motorIsRunning = 1;
 23234   0012EA  0E00               	movlw	0
 23235   0012EC  0105               	movlb	5	; () banked
 23236   0012EE  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 23237   0012F0  0E01               	movlw	1
 23238   0012F2  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 23239   0012F4  EF6F  F009         	goto	i2l5138
 23240   0012F8                     i2l5146:
 23241                           
 23242                           ; BSR set to: 5
 23243                           ;motor.c: 253:                     OpenGateSlow();
 23244   0012F8  EC23  F019         	call	_OpenGateSlow	;wreg free
 23245   0012FC                     i2l5148:
 23246                           
 23247                           ;motor.c: 254:                     motorIsRunning = 1;
 23248   0012FC  0E00               	movlw	0
 23249   0012FE  0105               	movlb	5	; () banked
 23250   001300  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 23251   001302  0E01               	movlw	1
 23252   001304  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 23253                           
 23254                           ;motor.c: 255:                     break;
 23255   001306  EFD2  F009         	goto	i2l5178
 23256   00130A                     i2l5150:
 23257                           
 23258                           ; BSR set to: 5
 23259                           ;motor.c: 258:                     CloseGate();
 23260   00130A  EC06  F01A         	call	_CloseGate	;wreg free
 23261   00130E                     
 23262                           ;motor.c: 259:                     motorIsRunning = 1;
 23263   00130E  0E00               	movlw	0
 23264   001310  0105               	movlb	5	; () banked
 23265   001312  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 23266   001314  0E01               	movlw	1
 23267   001316  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 23268   001318                     
 23269                           ; BSR set to: 5
 23270                           ;motor.c: 260:                     MotorStartSampling();
 23271   001318  EC93  F01A         	call	_MotorStartSampling	;wreg free
 23272                           
 23273                           ;motor.c: 261:                     break;
 23274   00131C  EFD2  F009         	goto	i2l5178
 23275   001320                     i2l5156:
 23276                           
 23277                           ; BSR set to: 5
 23278                           ;motor.c: 264:                     CloseGateSlow();
 23279   001320  EC46  F017         	call	_CloseGateSlow	;wreg free
 23280   001324  EF75  F009         	goto	i2l5142
 23281   001328                     i2l5162:
 23282                           
 23283                           ; BSR set to: 5
 23284                           ;motor.c: 270:                     StopGate();
 23285   001328  EC9C  F018         	call	_StopGate	;wreg free
 23286   00132C                     
 23287                           ;motor.c: 271:                     motorIsRunning = 0;
 23288   00132C  0E00               	movlw	0
 23289   00132E  0105               	movlb	5	; () banked
 23290   001330  6F8D               	movwf	(_motorIsRunning+1)& (0+255),b	;volatile
 23291   001332  0E00               	movlw	0
 23292   001334  6F8C               	movwf	_motorIsRunning& (0+255),b	;volatile
 23293                           
 23294                           ;motor.c: 272:                     break;
 23295   001336  EFD2  F009         	goto	i2l5178
 23296   00133A                     i2l5166:
 23297                           
 23298                           ; BSR set to: 5
 23299                           ;motor.c: 275:                     OpenGate();
 23300   00133A  ECAE  F016         	call	_OpenGate	;wreg free
 23301   00133E  EF7E  F009         	goto	i2l5148
 23302   001342                     i2l5170:
 23303                           
 23304                           ; BSR set to: 5
 23305                           ;motor.c: 280:                     CloseGate();
 23306   001342  EC06  F01A         	call	_CloseGate	;wreg free
 23307   001346  EF7E  F009         	goto	i2l5148
 23308   00134A                     i2l5176:
 23309                           
 23310                           ; BSR set to: 5
 23311   00134A  505C               	movf	_motorState^(0+1280),w,c	;volatile
 23312   00134C  6E1D               	movwf	??_HandleMotorState^(0+1280),c
 23313   00134E  6A1E               	clrf	(??_HandleMotorState+1)^(0+1280),c
 23314                           
 23315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23316                           ; Switch size 1, requested type "simple"
 23317                           ; Number of cases is 1, Range of values is 0 to 0
 23318                           ; switch strategies available:
 23319                           ; Name         Instructions Cycles
 23320                           ; simple_byte            4     3 (average)
 23321                           ;	Chosen strategy is simple_byte
 23322   001350  501E               	movf	(??_HandleMotorState+1)^(0+1280),w,c
 23323   001352  0A00               	xorlw	0	; case 0
 23324   001354  B4D8               	btfsc	status,2,c
 23325   001356  EFAF  F009         	goto	i2l7346
 23326   00135A  EFD2  F009         	goto	i2l1498
 23327   00135E                     i2l7346:
 23328                           
 23329                           ; BSR set to: 5
 23330                           ; Switch size 1, requested type "simple"
 23331                           ; Number of cases is 8, Range of values is 0 to 7
 23332                           ; switch strategies available:
 23333                           ; Name         Instructions Cycles
 23334                           ; simple_byte           25    13 (average)
 23335                           ;	Chosen strategy is simple_byte
 23336   00135E  501D               	movf	??_HandleMotorState^(0+1280),w,c
 23337   001360  0A00               	xorlw	0	; case 0
 23338   001362  B4D8               	btfsc	status,2,c
 23339   001364  EF68  F009         	goto	i2l5134
 23340   001368  0A01               	xorlw	1	; case 1
 23341   00136A  B4D8               	btfsc	status,2,c
 23342   00136C  EF9D  F009         	goto	i2l5166
 23343   001370  0A03               	xorlw	3	; case 2
 23344   001372  B4D8               	btfsc	status,2,c
 23345   001374  EF73  F009         	goto	i2l5140
 23346   001378  0A01               	xorlw	1	; case 3
 23347   00137A  B4D8               	btfsc	status,2,c
 23348   00137C  EF7C  F009         	goto	i2l5146
 23349   001380  0A07               	xorlw	7	; case 4
 23350   001382  B4D8               	btfsc	status,2,c
 23351   001384  EF85  F009         	goto	i2l5150
 23352   001388  0A01               	xorlw	1	; case 5
 23353   00138A  B4D8               	btfsc	status,2,c
 23354   00138C  EF90  F009         	goto	i2l5156
 23355   001390  0A03               	xorlw	3	; case 6
 23356   001392  B4D8               	btfsc	status,2,c
 23357   001394  EF94  F009         	goto	i2l5162
 23358   001398  0A01               	xorlw	1	; case 7
 23359   00139A  B4D8               	btfsc	status,2,c
 23360   00139C  EFA1  F009         	goto	i2l5170
 23361   0013A0  EFD2  F009         	goto	i2l1498
 23362   0013A4                     i2l1498:
 23363   0013A4                     i2l5178:
 23364                           
 23365                           ;motor.c: 291:     userRequest = 0;
 23366   0013A4  0E00               	movlw	0
 23367   0013A6  0105               	movlb	5	; () banked
 23368   0013A8  6F8F               	movwf	(_userRequest+1)& (0+255),b	;volatile
 23369   0013AA  0E00               	movlw	0
 23370   0013AC  6F8E               	movwf	_userRequest& (0+255),b	;volatile
 23371   0013AE                     
 23372                           ; BSR set to: 5
 23373   0013AE  0012               	return		;funcret
 23374   0013B0                     __end_of_HandleMotorState:
 23375                           	callstack 0
 23376                           
 23377 ;; *************** function _StopGate *****************
 23378 ;; Defined at:
 23379 ;;		line 100 in file "motor.c"
 23380 ;; Parameters:    Size  Location     Type
 23381 ;;		None
 23382 ;; Auto vars:     Size  Location     Type
 23383 ;;		None
 23384 ;; Return value:  Size  Location     Type
 23385 ;;                  1    wreg      void 
 23386 ;; Registers used:
 23387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23388 ;; Tracked objects:
 23389 ;;		On entry : 0/0
 23390 ;;		On exit  : 0/0
 23391 ;;		Unchanged: 0/0
 23392 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23393 ;;      Params:         0       0       0       0       0       0       0       0       0
 23394 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23395 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23396 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23397 ;;Total ram usage:        0 bytes
 23398 ;; Hardware stack levels used: 1
 23399 ;; Hardware stack levels required when called: 3
 23400 ;; This function calls:
 23401 ;;		_PWM1_PHASE_A_Disable
 23402 ;;		_PWM1_PHASE_A_LoadBufferRegisters
 23403 ;;		_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
 23404 ;;		i2_displayString
 23405 ;; This function is called by:
 23406 ;;		_HandleMotorState
 23407 ;;		_HandleConfigMode
 23408 ;; This function uses a non-reentrant model
 23409 ;;
 23410                           
 23411                           	psect	text113
 23412   003138                     __ptext113:
 23413                           	callstack 0
 23414   003138                     _StopGate:
 23415                           	callstack 113
 23416   003138                     
 23417                           ;motor.c: 101:     PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister(0);
 23418   003138  0E00               	movlw	0
 23419   00313A  6E02               	movwf	(PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue+1)^(0+1280),c
 23420   00313C  0E00               	movlw	0
 23421   00313E  6E01               	movwf	PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue^(0+1280),c
 23422   003140  EC13  F01B         	call	_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister	;wreg free
 23423   003144                     
 23424                           ;motor.c: 102:     PWM1_PHASE_A_LoadBufferRegisters();
 23425   003144  EC30  F01B         	call	_PWM1_PHASE_A_LoadBufferRegisters	;wreg free
 23426   003148                     
 23427                           ;motor.c: 103:     PWM1_PHASE_A_Disable();
 23428   003148  EC2E  F01B         	call	_PWM1_PHASE_A_Disable	;wreg free
 23429   00314C  9CC0               	bcf	192,6,c	;volatile
 23430   00314E                     
 23431                           ;motor.c: 105:     displayString("    ", 0);
 23432   00314E  0EC5               	movlw	low STR_7
 23433   003150  6E0B               	movwf	i2displayString@str^(0+1280),c
 23434   003152  0E7F               	movlw	high STR_7
 23435   003154  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 23436   003156  0E00               	movlw	0
 23437   003158  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 23438   00315A  EC3A  F00C         	call	i2_displayString	;wreg free
 23439   00315E                     
 23440                           ;motor.c: 106:     displayString("STOP", 0);
 23441   00315E  0EE3               	movlw	low STR_14
 23442   003160  6E0B               	movwf	i2displayString@str^(0+1280),c
 23443   003162  0E7F               	movlw	high STR_14
 23444   003164  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 23445   003166  0E00               	movlw	0
 23446   003168  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 23447   00316A  EC3A  F00C         	call	i2_displayString	;wreg free
 23448   00316E  0012               	return		;funcret
 23449   003170                     __end_of_StopGate:
 23450                           	callstack 0
 23451                           
 23452 ;; *************** function _PWM1_PHASE_A_Disable *****************
 23453 ;; Defined at:
 23454 ;;		line 126 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 23455 ;; Parameters:    Size  Location     Type
 23456 ;;		None
 23457 ;; Auto vars:     Size  Location     Type
 23458 ;;		None
 23459 ;; Return value:  Size  Location     Type
 23460 ;;                  1    wreg      void 
 23461 ;; Registers used:
 23462 ;;		status,2, status,0
 23463 ;; Tracked objects:
 23464 ;;		On entry : 0/0
 23465 ;;		On exit  : 0/0
 23466 ;;		Unchanged: 0/0
 23467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23468 ;;      Params:         0       0       0       0       0       0       0       0       0
 23469 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23470 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23471 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23472 ;;Total ram usage:        0 bytes
 23473 ;; Hardware stack levels used: 1
 23474 ;; This function calls:
 23475 ;;		Nothing
 23476 ;; This function is called by:
 23477 ;;		_StopGate
 23478 ;; This function uses a non-reentrant model
 23479 ;;
 23480                           
 23481                           	psect	text114
 23482   00365C                     __ptext114:
 23483                           	callstack 0
 23484   00365C                     _PWM1_PHASE_A_Disable:
 23485                           	callstack 115
 23486   00365C                     
 23487                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 128:     PWM1CON &= (~0x80);
 23488   00365C  9E69               	bcf	105,7,c	;volatile
 23489   00365E  0012               	return		;funcret
 23490   003660                     __end_of_PWM1_PHASE_A_Disable:
 23491                           	callstack 0
 23492                           
 23493 ;; *************** function _OpenGateSlow *****************
 23494 ;; Defined at:
 23495 ;;		line 68 in file "motor.c"
 23496 ;; Parameters:    Size  Location     Type
 23497 ;;		None
 23498 ;; Auto vars:     Size  Location     Type
 23499 ;;		None
 23500 ;; Return value:  Size  Location     Type
 23501 ;;                  1    wreg      void 
 23502 ;; Registers used:
 23503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23504 ;; Tracked objects:
 23505 ;;		On entry : 0/0
 23506 ;;		On exit  : 0/0
 23507 ;;		Unchanged: 0/0
 23508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23509 ;;      Params:         0       0       0       0       0       0       0       0       0
 23510 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23512 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23513 ;;Total ram usage:        0 bytes
 23514 ;; Hardware stack levels used: 1
 23515 ;; Hardware stack levels required when called: 4
 23516 ;; This function calls:
 23517 ;;		_SetGate
 23518 ;;		___lwdiv
 23519 ;; This function is called by:
 23520 ;;		_HandleMotorState
 23521 ;;		_HandleConfigMode
 23522 ;; This function uses a non-reentrant model
 23523 ;;
 23524                           
 23525                           	psect	text115
 23526   003246                     __ptext115:
 23527                           	callstack 0
 23528   003246                     _OpenGateSlow:
 23529                           	callstack 112
 23530   003246                     
 23531                           ;motor.c: 69:     SetGate(1, (pwmPeriod / 5), 0, "OPSL");
 23532   003246  C5BF  F501         	movff	_pwmPeriod,___lwdiv@dividend
 23533   00324A  C5C0  F502         	movff	_pwmPeriod+1,___lwdiv@dividend+1
 23534   00324E  0E00               	movlw	0
 23535   003250  6E04               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 23536   003252  0E05               	movlw	5
 23537   003254  6E03               	movwf	___lwdiv@divisor^(0+1280),c
 23538   003256  ECCF  F013         	call	___lwdiv	;wreg free
 23539   00325A  C501  F512         	movff	?___lwdiv,SetGate@dutyCycle
 23540   00325E  C502  F513         	movff	?___lwdiv+1,SetGate@dutyCycle+1
 23541   003262  0E00               	movlw	0
 23542   003264  6E15               	movwf	(SetGate@timerStart+1)^(0+1280),c
 23543   003266  0E00               	movlw	0
 23544   003268  6E14               	movwf	SetGate@timerStart^(0+1280),c
 23545   00326A  0EDE               	movlw	low STR_10
 23546   00326C  6E16               	movwf	SetGate@displayMsg^(0+1280),c
 23547   00326E  0E7F               	movlw	high STR_10
 23548   003270  6E17               	movwf	(SetGate@displayMsg+1)^(0+1280),c
 23549   003272  0E01               	movlw	1
 23550   003274  EC43  F014         	call	_SetGate
 23551   003278  0012               	return		;funcret
 23552   00327A                     __end_of_OpenGateSlow:
 23553                           	callstack 0
 23554                           
 23555 ;; *************** function _OpenGate *****************
 23556 ;; Defined at:
 23557 ;;		line 64 in file "motor.c"
 23558 ;; Parameters:    Size  Location     Type
 23559 ;;		None
 23560 ;; Auto vars:     Size  Location     Type
 23561 ;;		None
 23562 ;; Return value:  Size  Location     Type
 23563 ;;                  1    wreg      void 
 23564 ;; Registers used:
 23565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23566 ;; Tracked objects:
 23567 ;;		On entry : 0/0
 23568 ;;		On exit  : 0/0
 23569 ;;		Unchanged: 0/0
 23570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23571 ;;      Params:         0       0       0       0       0       0       0       0       0
 23572 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23573 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23574 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23575 ;;Total ram usage:        4 bytes
 23576 ;; Hardware stack levels used: 1
 23577 ;; Hardware stack levels required when called: 4
 23578 ;; This function calls:
 23579 ;;		_SetGate
 23580 ;; This function is called by:
 23581 ;;		_HandleMotorState
 23582 ;; This function uses a non-reentrant model
 23583 ;;
 23584                           
 23585                           	psect	text116
 23586   002D5C                     __ptext116:
 23587                           	callstack 0
 23588   002D5C                     _OpenGate:
 23589                           	callstack 112
 23590   002D5C                     
 23591                           ;motor.c: 65:     SetGate(1, (pwmPeriod / 2), 1, emergencyFlag ? "EMRG" : "OPFL");
 23592   002D5C  0105               	movlb	5	; () banked
 23593   002D5E  518A               	movf	_emergencyFlag& (0+255),w,b	;volatile
 23594   002D60  118B               	iorwf	(_emergencyFlag+1)& (0+255),w,b	;volatile
 23595   002D62  A4D8               	btfss	status,2,c
 23596   002D64  EFB6  F016         	goto	i2u371_41
 23597   002D68  EFB8  F016         	goto	i2u371_40
 23598   002D6C                     i2u371_41:
 23599   002D6C  EFBE  F016         	goto	i2l5094
 23600   002D70                     i2u371_40:
 23601   002D70                     
 23602                           ; BSR set to: 5
 23603   002D70  0ED4               	movlw	low STR_9
 23604   002D72  6E1B               	movwf	_OpenGate$2951^(0+1280),c
 23605   002D74  0E7F               	movlw	high STR_9
 23606   002D76  6E1C               	movwf	(_OpenGate$2951+1)^(0+1280),c
 23607   002D78  EFC2  F016         	goto	i2l5096
 23608   002D7C                     i2l5094:
 23609                           
 23610                           ; BSR set to: 5
 23611   002D7C  0ECA               	movlw	low STR_8
 23612   002D7E  6E1B               	movwf	_OpenGate$2951^(0+1280),c
 23613   002D80  0E7F               	movlw	high STR_8
 23614   002D82  6E1C               	movwf	(_OpenGate$2951+1)^(0+1280),c
 23615   002D84                     i2l5096:
 23616                           
 23617                           ; BSR set to: 5
 23618   002D84  90D8               	bcf	status,0,c
 23619   002D86  31C0               	rrcf	(_pwmPeriod+1)& (0+255),w,b
 23620   002D88  6E19               	movwf	??_OpenGate^(0+1280),c
 23621   002D8A  31BF               	rrcf	_pwmPeriod& (0+255),w,b
 23622   002D8C  6E12               	movwf	SetGate@dutyCycle^(0+1280),c
 23623   002D8E  C519  F513         	movff	??_OpenGate,SetGate@dutyCycle+1
 23624   002D92  0E00               	movlw	0
 23625   002D94  6E15               	movwf	(SetGate@timerStart+1)^(0+1280),c
 23626   002D96  0E01               	movlw	1
 23627   002D98  6E14               	movwf	SetGate@timerStart^(0+1280),c
 23628   002D9A  C51B  F516         	movff	_OpenGate$2951,SetGate@displayMsg
 23629   002D9E  C51C  F517         	movff	_OpenGate$2951+1,SetGate@displayMsg+1
 23630   002DA2  0E01               	movlw	1
 23631   002DA4  EC43  F014         	call	_SetGate
 23632   002DA8  0012               	return		;funcret
 23633   002DAA                     __end_of_OpenGate:
 23634                           	callstack 0
 23635                           
 23636 ;; *************** function _MotorStopSampling *****************
 23637 ;; Defined at:
 23638 ;;		line 144 in file "motor.c"
 23639 ;; Parameters:    Size  Location     Type
 23640 ;;		None
 23641 ;; Auto vars:     Size  Location     Type
 23642 ;;		None
 23643 ;; Return value:  Size  Location     Type
 23644 ;;                  1    wreg      void 
 23645 ;; Registers used:
 23646 ;;		wreg, status,2, cstack
 23647 ;; Tracked objects:
 23648 ;;		On entry : 0/0
 23649 ;;		On exit  : 0/0
 23650 ;;		Unchanged: 0/0
 23651 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23652 ;;      Params:         0       0       0       0       0       0       0       0       0
 23653 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23654 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23655 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23656 ;;Total ram usage:        0 bytes
 23657 ;; Hardware stack levels used: 1
 23658 ;; Hardware stack levels required when called: 1
 23659 ;; This function calls:
 23660 ;;		_TMR2_Stop
 23661 ;; This function is called by:
 23662 ;;		_HandleMotorState
 23663 ;; This function uses a non-reentrant model
 23664 ;;
 23665                           
 23666                           	psect	text117
 23667   003516                     __ptext117:
 23668                           	callstack 0
 23669   003516                     _MotorStopSampling:
 23670                           	callstack 115
 23671   003516                     
 23672                           ;motor.c: 145:     currentReadings = 0;
 23673   003516  0E00               	movlw	0
 23674   003518  0105               	movlb	5	; () banked
 23675   00351A  6F91               	movwf	(_currentReadings+1)& (0+255),b	;volatile
 23676   00351C  0E00               	movlw	0
 23677   00351E  6F90               	movwf	_currentReadings& (0+255),b	;volatile
 23678   003520                     
 23679                           ; BSR set to: 5
 23680                           ;motor.c: 146:     TMR2_Stop();
 23681   003520  EC22  F01B         	call	_TMR2_Stop	;wreg free
 23682   003524  0012               	return		;funcret
 23683   003526                     __end_of_MotorStopSampling:
 23684                           	callstack 0
 23685                           
 23686 ;; *************** function _TMR2_Stop *****************
 23687 ;; Defined at:
 23688 ;;		line 59 in file "mcc_generated_files/timer/src/tmr2.c"
 23689 ;; Parameters:    Size  Location     Type
 23690 ;;		None
 23691 ;; Auto vars:     Size  Location     Type
 23692 ;;		None
 23693 ;; Return value:  Size  Location     Type
 23694 ;;                  1    wreg      void 
 23695 ;; Registers used:
 23696 ;;		None
 23697 ;; Tracked objects:
 23698 ;;		On entry : 0/0
 23699 ;;		On exit  : 0/0
 23700 ;;		Unchanged: 0/0
 23701 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23702 ;;      Params:         0       0       0       0       0       0       0       0       0
 23703 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23704 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23705 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23706 ;;Total ram usage:        0 bytes
 23707 ;; Hardware stack levels used: 1
 23708 ;; This function calls:
 23709 ;;		Nothing
 23710 ;; This function is called by:
 23711 ;;		_MotorStopSampling
 23712 ;; This function uses a non-reentrant model
 23713 ;;
 23714                           
 23715                           	psect	text118
 23716   003644                     __ptext118:
 23717                           	callstack 0
 23718   003644                     _TMR2_Stop:
 23719                           	callstack 115
 23720   003644                     
 23721                           ;mcc_generated_files/timer/src/tmr2.c: 60:     T2CONbits.TMR2ON = 0;
 23722   003644  0103               	movlb	3	; () banked
 23723   003646  9F1E               	bcf	30,7,b	;volatile
 23724   003648                     
 23725                           ; BSR set to: 3
 23726   003648  0012               	return		;funcret
 23727   00364A                     __end_of_TMR2_Stop:
 23728                           	callstack 0
 23729                           
 23730 ;; *************** function _MotorStartSampling *****************
 23731 ;; Defined at:
 23732 ;;		line 137 in file "motor.c"
 23733 ;; Parameters:    Size  Location     Type
 23734 ;;		None
 23735 ;; Auto vars:     Size  Location     Type
 23736 ;;		None
 23737 ;; Return value:  Size  Location     Type
 23738 ;;                  1    wreg      void 
 23739 ;; Registers used:
 23740 ;;		wreg, status,2, cstack
 23741 ;; Tracked objects:
 23742 ;;		On entry : 0/0
 23743 ;;		On exit  : 0/0
 23744 ;;		Unchanged: 0/0
 23745 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23746 ;;      Params:         0       0       0       0       0       0       0       0       0
 23747 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23749 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23750 ;;Total ram usage:        0 bytes
 23751 ;; Hardware stack levels used: 1
 23752 ;; Hardware stack levels required when called: 1
 23753 ;; This function calls:
 23754 ;;		_TMR2_Start
 23755 ;; This function is called by:
 23756 ;;		_HandleMotorState
 23757 ;; This function uses a non-reentrant model
 23758 ;;
 23759                           
 23760                           	psect	text119
 23761   003526                     __ptext119:
 23762                           	callstack 0
 23763   003526                     _MotorStartSampling:
 23764                           	callstack 115
 23765   003526                     
 23766                           ;motor.c: 138:     currentReadings = 0;
 23767   003526  0E00               	movlw	0
 23768   003528  0105               	movlb	5	; () banked
 23769   00352A  6F91               	movwf	(_currentReadings+1)& (0+255),b	;volatile
 23770   00352C  0E00               	movlw	0
 23771   00352E  6F90               	movwf	_currentReadings& (0+255),b	;volatile
 23772   003530                     
 23773                           ; BSR set to: 5
 23774                           ;motor.c: 139:     TMR2_Start();
 23775   003530  EC25  F01B         	call	_TMR2_Start	;wreg free
 23776   003534  0012               	return		;funcret
 23777   003536                     __end_of_MotorStartSampling:
 23778                           	callstack 0
 23779                           
 23780 ;; *************** function _TMR2_Start *****************
 23781 ;; Defined at:
 23782 ;;		line 55 in file "mcc_generated_files/timer/src/tmr2.c"
 23783 ;; Parameters:    Size  Location     Type
 23784 ;;		None
 23785 ;; Auto vars:     Size  Location     Type
 23786 ;;		None
 23787 ;; Return value:  Size  Location     Type
 23788 ;;                  1    wreg      void 
 23789 ;; Registers used:
 23790 ;;		None
 23791 ;; Tracked objects:
 23792 ;;		On entry : 0/0
 23793 ;;		On exit  : 0/0
 23794 ;;		Unchanged: 0/0
 23795 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23796 ;;      Params:         0       0       0       0       0       0       0       0       0
 23797 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23798 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23799 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23800 ;;Total ram usage:        0 bytes
 23801 ;; Hardware stack levels used: 1
 23802 ;; This function calls:
 23803 ;;		Nothing
 23804 ;; This function is called by:
 23805 ;;		_MotorStartSampling
 23806 ;; This function uses a non-reentrant model
 23807 ;;
 23808                           
 23809                           	psect	text120
 23810   00364A                     __ptext120:
 23811                           	callstack 0
 23812   00364A                     _TMR2_Start:
 23813                           	callstack 115
 23814   00364A                     
 23815                           ;mcc_generated_files/timer/src/tmr2.c: 56:     T2CONbits.TMR2ON = 1;
 23816   00364A  0103               	movlb	3	; () banked
 23817   00364C  8F1E               	bsf	30,7,b	;volatile
 23818   00364E                     
 23819                           ; BSR set to: 3
 23820   00364E  0012               	return		;funcret
 23821   003650                     __end_of_TMR2_Start:
 23822                           	callstack 0
 23823                           
 23824 ;; *************** function _CloseGateSlow *****************
 23825 ;; Defined at:
 23826 ;;		line 76 in file "motor.c"
 23827 ;; Parameters:    Size  Location     Type
 23828 ;;		None
 23829 ;; Auto vars:     Size  Location     Type
 23830 ;;		None
 23831 ;; Return value:  Size  Location     Type
 23832 ;;                  1    wreg      void 
 23833 ;; Registers used:
 23834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23835 ;; Tracked objects:
 23836 ;;		On entry : 0/0
 23837 ;;		On exit  : 0/0
 23838 ;;		Unchanged: 0/0
 23839 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23840 ;;      Params:         0       0       0       0       0       0       0       0       0
 23841 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23842 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23843 ;;      Totals:         2       0       0       0       0       0       0       0       0
 23844 ;;Total ram usage:        2 bytes
 23845 ;; Hardware stack levels used: 1
 23846 ;; Hardware stack levels required when called: 4
 23847 ;; This function calls:
 23848 ;;		_SetGate
 23849 ;;		___lwdiv
 23850 ;; This function is called by:
 23851 ;;		_HandleMotorState
 23852 ;;		_HandleConfigMode
 23853 ;; This function uses a non-reentrant model
 23854 ;;
 23855                           
 23856                           	psect	text121
 23857   002E8C                     __ptext121:
 23858                           	callstack 0
 23859   002E8C                     _CloseGateSlow:
 23860                           	callstack 112
 23861   002E8C                     
 23862                           ;motor.c: 77:     SetGate(0, (pwmPeriod * 3 / 10), 0, "CLSL");
 23863   002E8C  0E03               	movlw	3
 23864   002E8E  0105               	movlb	5	; () banked
 23865   002E90  03BF               	mulwf	_pwmPeriod& (0+255),b
 23866   002E92  C4F3 F519          	movff	prodl,??_CloseGateSlow
 23867   002E96  C4F4 F51A          	movff	prodh,??_CloseGateSlow+1
 23868   002E9A  03C0               	mulwf	(_pwmPeriod+1)& (0+255),b
 23869   002E9C  50F3               	movf	prodl,w,c
 23870   002E9E  261A               	addwf	(??_CloseGateSlow+1)^(0+1280),f,c
 23871   002EA0  C519  F501         	movff	??_CloseGateSlow,___lwdiv@dividend
 23872   002EA4  C51A  F502         	movff	??_CloseGateSlow+1,___lwdiv@dividend+1
 23873   002EA8  0E00               	movlw	0
 23874   002EAA  6E04               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 23875   002EAC  0E0A               	movlw	10
 23876   002EAE  6E03               	movwf	___lwdiv@divisor^(0+1280),c
 23877   002EB0  ECCF  F013         	call	___lwdiv	;wreg free
 23878   002EB4  C501  F512         	movff	?___lwdiv,SetGate@dutyCycle
 23879   002EB8  C502  F513         	movff	?___lwdiv+1,SetGate@dutyCycle+1
 23880   002EBC  0E00               	movlw	0
 23881   002EBE  6E15               	movwf	(SetGate@timerStart+1)^(0+1280),c
 23882   002EC0  0E00               	movlw	0
 23883   002EC2  6E14               	movwf	SetGate@timerStart^(0+1280),c
 23884   002EC4  0ED9               	movlw	low STR_12
 23885   002EC6  6E16               	movwf	SetGate@displayMsg^(0+1280),c
 23886   002EC8  0E7F               	movlw	high STR_12
 23887   002ECA  6E17               	movwf	(SetGate@displayMsg+1)^(0+1280),c
 23888   002ECC  0E00               	movlw	0
 23889   002ECE  EC43  F014         	call	_SetGate
 23890   002ED2  0012               	return		;funcret
 23891   002ED4                     __end_of_CloseGateSlow:
 23892                           	callstack 0
 23893                           
 23894 ;; *************** function ___lwdiv *****************
 23895 ;; Defined at:
 23896 ;;		line 7 in file "/Applications/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
 23897 ;; Parameters:    Size  Location     Type
 23898 ;;  dividend        2    0[COMRAM] unsigned int 
 23899 ;;  divisor         2    2[COMRAM] unsigned int 
 23900 ;; Auto vars:     Size  Location     Type
 23901 ;;  quotient        2    4[COMRAM] unsigned int 
 23902 ;;  counter         1    6[COMRAM] unsigned char 
 23903 ;; Return value:  Size  Location     Type
 23904 ;;                  2    0[COMRAM] unsigned int 
 23905 ;; Registers used:
 23906 ;;		wreg, status,2, status,0
 23907 ;; Tracked objects:
 23908 ;;		On entry : 0/0
 23909 ;;		On exit  : 0/0
 23910 ;;		Unchanged: 0/0
 23911 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 23912 ;;      Params:         4       0       0       0       0       0       0       0       0
 23913 ;;      Locals:         3       0       0       0       0       0       0       0       0
 23914 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23915 ;;      Totals:         7       0       0       0       0       0       0       0       0
 23916 ;;Total ram usage:        7 bytes
 23917 ;; Hardware stack levels used: 1
 23918 ;; This function calls:
 23919 ;;		Nothing
 23920 ;; This function is called by:
 23921 ;;		_UART1_WriteUInt
 23922 ;;		_printInt
 23923 ;;		_OpenGateSlow
 23924 ;;		_CloseGateSlow
 23925 ;;		_Menu_AdjustOvercurrent
 23926 ;;		_Menu_AdjustTime
 23927 ;;		_printCurrent
 23928 ;; This function uses a non-reentrant model
 23929 ;;
 23930                           
 23931                           	psect	text122
 23932   00279E                     __ptext122:
 23933                           	callstack 0
 23934   00279E                     ___lwdiv:
 23935                           	callstack 115
 23936   00279E  0E00               	movlw	0
 23937   0027A0  6E06               	movwf	(___lwdiv@quotient+1)^(0+1280),c
 23938   0027A2  0E00               	movlw	0
 23939   0027A4  6E05               	movwf	___lwdiv@quotient^(0+1280),c
 23940   0027A6  5003               	movf	___lwdiv@divisor^(0+1280),w,c
 23941   0027A8  1004               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
 23942   0027AA  B4D8               	btfsc	status,2,c
 23943   0027AC  EFDA  F013         	goto	i2u368_41
 23944   0027B0  EFDC  F013         	goto	i2u368_40
 23945   0027B4                     i2u368_41:
 23946   0027B4  EF04  F014         	goto	i2l2237
 23947   0027B8                     i2u368_40:
 23948   0027B8  0E01               	movlw	1
 23949   0027BA  6E07               	movwf	___lwdiv@counter^(0+1280),c
 23950   0027BC  EFE4  F013         	goto	i2l5072
 23951   0027C0                     i2l5070:
 23952   0027C0  90D8               	bcf	status,0,c
 23953   0027C2  3603               	rlcf	___lwdiv@divisor^(0+1280),f,c
 23954   0027C4  3604               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
 23955   0027C6  2A07               	incf	___lwdiv@counter^(0+1280),f,c
 23956   0027C8                     i2l5072:
 23957   0027C8  AE04               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
 23958   0027CA  EFE9  F013         	goto	i2u369_41
 23959   0027CE  EFEB  F013         	goto	i2u369_40
 23960   0027D2                     i2u369_41:
 23961   0027D2  EFE0  F013         	goto	i2l5070
 23962   0027D6                     i2u369_40:
 23963   0027D6                     i2l5074:
 23964   0027D6  90D8               	bcf	status,0,c
 23965   0027D8  3605               	rlcf	___lwdiv@quotient^(0+1280),f,c
 23966   0027DA  3606               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
 23967   0027DC  5003               	movf	___lwdiv@divisor^(0+1280),w,c
 23968   0027DE  5C01               	subwf	___lwdiv@dividend^(0+1280),w,c
 23969   0027E0  5004               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
 23970   0027E2  5802               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
 23971   0027E4  A0D8               	btfss	status,0,c
 23972   0027E6  EFF7  F013         	goto	i2u370_41
 23973   0027EA  EFF9  F013         	goto	i2u370_40
 23974   0027EE                     i2u370_41:
 23975   0027EE  EFFE  F013         	goto	i2l5082
 23976   0027F2                     i2u370_40:
 23977   0027F2  5003               	movf	___lwdiv@divisor^(0+1280),w,c
 23978   0027F4  5E01               	subwf	___lwdiv@dividend^(0+1280),f,c
 23979   0027F6  5004               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
 23980   0027F8  5A02               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
 23981   0027FA  8005               	bsf	___lwdiv@quotient^(0+1280),0,c
 23982   0027FC                     i2l5082:
 23983   0027FC  90D8               	bcf	status,0,c
 23984   0027FE  3204               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
 23985   002800  3203               	rrcf	___lwdiv@divisor^(0+1280),f,c
 23986   002802  2E07               	decfsz	___lwdiv@counter^(0+1280),f,c
 23987   002804  EFEB  F013         	goto	i2l5074
 23988   002808                     i2l2237:
 23989   002808  C505  F501         	movff	___lwdiv@quotient,?___lwdiv
 23990   00280C  C506  F502         	movff	___lwdiv@quotient+1,?___lwdiv+1
 23991   002810  0012               	return		;funcret
 23992   002812                     __end_of___lwdiv:
 23993                           	callstack 0
 23994                           
 23995 ;; *************** function _CloseGate *****************
 23996 ;; Defined at:
 23997 ;;		line 72 in file "motor.c"
 23998 ;; Parameters:    Size  Location     Type
 23999 ;;		None
 24000 ;; Auto vars:     Size  Location     Type
 24001 ;;		None
 24002 ;; Return value:  Size  Location     Type
 24003 ;;                  1    wreg      void 
 24004 ;; Registers used:
 24005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24006 ;; Tracked objects:
 24007 ;;		On entry : 0/0
 24008 ;;		On exit  : 0/0
 24009 ;;		Unchanged: 0/0
 24010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24011 ;;      Params:         0       0       0       0       0       0       0       0       0
 24012 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24013 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24014 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24015 ;;Total ram usage:        0 bytes
 24016 ;; Hardware stack levels used: 1
 24017 ;; Hardware stack levels required when called: 4
 24018 ;; This function calls:
 24019 ;;		_SetGate
 24020 ;; This function is called by:
 24021 ;;		_HandleMotorState
 24022 ;; This function uses a non-reentrant model
 24023 ;;
 24024                           
 24025                           	psect	text123
 24026   00340C                     __ptext123:
 24027                           	callstack 0
 24028   00340C                     _CloseGate:
 24029                           	callstack 112
 24030   00340C                     
 24031                           ;motor.c: 73:     SetGate(0, (pwmPeriod), 1, "CLFL");
 24032   00340C  C5BF  F512         	movff	_pwmPeriod,SetGate@dutyCycle
 24033   003410  C5C0  F513         	movff	_pwmPeriod+1,SetGate@dutyCycle+1
 24034   003414  0E00               	movlw	0
 24035   003416  6E15               	movwf	(SetGate@timerStart+1)^(0+1280),c
 24036   003418  0E01               	movlw	1
 24037   00341A  6E14               	movwf	SetGate@timerStart^(0+1280),c
 24038   00341C  0ECF               	movlw	low STR_11
 24039   00341E  6E16               	movwf	SetGate@displayMsg^(0+1280),c
 24040   003420  0E7F               	movlw	high STR_11
 24041   003422  6E17               	movwf	(SetGate@displayMsg+1)^(0+1280),c
 24042   003424  0E00               	movlw	0
 24043   003426  EC43  F014         	call	_SetGate
 24044   00342A  0012               	return		;funcret
 24045   00342C                     __end_of_CloseGate:
 24046                           	callstack 0
 24047                           
 24048 ;; *************** function _SetGate *****************
 24049 ;; Defined at:
 24050 ;;		line 43 in file "motor.c"
 24051 ;; Parameters:    Size  Location     Type
 24052 ;;  direction       1    wreg     unsigned char 
 24053 ;;  dutyCycle       2   17[COMRAM] unsigned short 
 24054 ;;  timerStart      2   19[COMRAM] int 
 24055 ;;  displayMsg      2   21[COMRAM] PTR const unsigned char 
 24056 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(5), 
 24057 ;;		 -> STR_8(5), 
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;  direction       1   23[COMRAM] unsigned char 
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      void 
 24062 ;; Registers used:
 24063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24069 ;;      Params:         6       0       0       0       0       0       0       0       0
 24070 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24072 ;;      Totals:         7       0       0       0       0       0       0       0       0
 24073 ;;Total ram usage:        7 bytes
 24074 ;; Hardware stack levels used: 1
 24075 ;; Hardware stack levels required when called: 3
 24076 ;; This function calls:
 24077 ;;		_PWM1_PHASE_A_Enable
 24078 ;;		_PWM1_PHASE_A_LoadBufferRegisters
 24079 ;;		_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
 24080 ;;		_TMR0_Start
 24081 ;;		_TMR0_Stop
 24082 ;;		i2_displayString
 24083 ;; This function is called by:
 24084 ;;		_OpenGate
 24085 ;;		_OpenGateSlow
 24086 ;;		_CloseGate
 24087 ;;		_CloseGateSlow
 24088 ;; This function uses a non-reentrant model
 24089 ;;
 24090                           
 24091                           	psect	text124
 24092   002886                     __ptext124:
 24093                           	callstack 0
 24094   002886                     _SetGate:
 24095                           	callstack 112
 24096                           
 24097                           ;incstack = 0
 24098                           ;SetGate@direction stored from wreg
 24099   002886  6E18               	movwf	SetGate@direction^(0+1280),c
 24100   002888                     
 24101                           ;motor.c: 44:     if (direction) {
 24102   002888  5018               	movf	SetGate@direction^(0+1280),w,c
 24103   00288A  B4D8               	btfsc	status,2,c
 24104   00288C  EF4A  F014         	goto	i2u366_41
 24105   002890  EF4C  F014         	goto	i2u366_40
 24106   002894                     i2u366_41:
 24107   002894  EF4F  F014         	goto	i2l1404
 24108   002898                     i2u366_40:
 24109   002898  8EC0               	bsf	192,7,c	;volatile
 24110   00289A  EF50  F014         	goto	i2l5046
 24111   00289E                     i2l1404:
 24112   00289E  9EC0               	bcf	192,7,c	;volatile
 24113   0028A0                     i2l5046:
 24114                           
 24115                           ;motor.c: 49:     PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister(dutyCycle);
 24116   0028A0  C512  F501         	movff	SetGate@dutyCycle,PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue
 24117   0028A4  C513  F502         	movff	SetGate@dutyCycle+1,PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue+
      +                          1
 24118   0028A8  EC13  F01B         	call	_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister	;wreg free
 24119   0028AC                     
 24120                           ;motor.c: 50:     PWM1_PHASE_A_LoadBufferRegisters();
 24121   0028AC  EC30  F01B         	call	_PWM1_PHASE_A_LoadBufferRegisters	;wreg free
 24122   0028B0                     
 24123                           ;motor.c: 51:     PWM1_PHASE_A_Enable();
 24124   0028B0  EC32  F01B         	call	_PWM1_PHASE_A_Enable	;wreg free
 24125   0028B4  8CC0               	bsf	192,6,c	;volatile
 24126   0028B6                     
 24127                           ;motor.c: 54:     if (timerStart) {
 24128   0028B6  5014               	movf	SetGate@timerStart^(0+1280),w,c
 24129   0028B8  1015               	iorwf	(SetGate@timerStart+1)^(0+1280),w,c
 24130   0028BA  B4D8               	btfsc	status,2,c
 24131   0028BC  EF62  F014         	goto	i2u367_41
 24132   0028C0  EF64  F014         	goto	i2u367_40
 24133   0028C4                     i2u367_41:
 24134   0028C4  EF68  F014         	goto	i2l5058
 24135   0028C8                     i2u367_40:
 24136   0028C8                     
 24137                           ;motor.c: 55:         TMR0_Start();
 24138   0028C8  EC2B  F01B         	call	_TMR0_Start	;wreg free
 24139                           
 24140                           ;motor.c: 56:     } else {
 24141   0028CC  EF6A  F014         	goto	i2l5060
 24142   0028D0                     i2l5058:
 24143                           
 24144                           ;motor.c: 57:         TMR0_Stop();
 24145   0028D0  EC28  F01B         	call	_TMR0_Stop	;wreg free
 24146   0028D4                     i2l5060:
 24147                           
 24148                           ;motor.c: 60:     displayString("    ", 0);
 24149   0028D4  0EC5               	movlw	low STR_7
 24150   0028D6  6E0B               	movwf	i2displayString@str^(0+1280),c
 24151   0028D8  0E7F               	movlw	high STR_7
 24152   0028DA  6E0C               	movwf	(i2displayString@str+1)^(0+1280),c
 24153   0028DC  0E00               	movlw	0
 24154   0028DE  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 24155   0028E0  EC3A  F00C         	call	i2_displayString	;wreg free
 24156   0028E4                     
 24157                           ;motor.c: 61:     displayString(displayMsg, 0);
 24158   0028E4  C516  F50B         	movff	SetGate@displayMsg,i2displayString@str
 24159   0028E8  C517  F50C         	movff	SetGate@displayMsg+1,i2displayString@str+1
 24160   0028EC  0E00               	movlw	0
 24161   0028EE  6E0D               	movwf	i2displayString@startPos^(0+1280),c
 24162   0028F0  EC3A  F00C         	call	i2_displayString	;wreg free
 24163   0028F4  0012               	return		;funcret
 24164   0028F6                     __end_of_SetGate:
 24165                           	callstack 0
 24166                           
 24167 ;; *************** function i2_displayString *****************
 24168 ;; Defined at:
 24169 ;;		line 224 in file "tm1637.c"
 24170 ;; Parameters:    Size  Location     Type
 24171 ;;  str             2   10[COMRAM] PTR const unsigned char 
 24172 ;;		 -> STR_42(5), STR_41(5), STR_40(4), STR_39(5), 
 24173 ;;		 -> STR_38(4), STR_37(5), STR_36(5), STR_35(5), 
 24174 ;;		 -> STR_34(4), STR_33(5), STR_32(5), STR_31(5), 
 24175 ;;		 -> Menu_AdjustTime@label(5), Menu_AdjustOvercurrent@label(5), Menu_AdjustSpeed@label(5), Menu_PrintCurrentOption@sh
      +ortLabel(5), 
 24176 ;;		 -> displayNumber@str(8), STR_20(5), STR_18(5), STR_17(5), 
 24177 ;;		 -> STR_16(5), STR_15(5), STR_14(5), STR_13(5), 
 24178 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(5), 
 24179 ;;		 -> STR_8(5), STR_7(5), 
 24180 ;;  startPos        1   12[COMRAM] unsigned char 
 24181 ;; Auto vars:     Size  Location     Type
 24182 ;;  dotFlag         1   16[COMRAM] unsigned char 
 24183 ;;  pos             1   15[COMRAM] unsigned char 
 24184 ;; Return value:  Size  Location     Type
 24185 ;;                  1    wreg      void 
 24186 ;; Registers used:
 24187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24188 ;; Tracked objects:
 24189 ;;		On entry : 0/0
 24190 ;;		On exit  : 0/0
 24191 ;;		Unchanged: 0/0
 24192 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24193 ;;      Params:         3       0       0       0       0       0       0       0       0
 24194 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24195 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24196 ;;      Totals:         7       0       0       0       0       0       0       0       0
 24197 ;;Total ram usage:        7 bytes
 24198 ;; Hardware stack levels used: 1
 24199 ;; Hardware stack levels required when called: 2
 24200 ;; This function calls:
 24201 ;;		i2_displayChar
 24202 ;; This function is called by:
 24203 ;;		_SetGate
 24204 ;;		_StopGate
 24205 ;;		_configOpenGate
 24206 ;;		_configCloseGate
 24207 ;;		_Menu_PrintCurrentOption
 24208 ;;		_Menu_AdjustSpeed
 24209 ;;		_Menu_AdjustOvercurrent
 24210 ;;		_Menu_AdjustTime
 24211 ;;		_Menu_HandleEnterPress
 24212 ;;		_Menu_HandleBack
 24213 ;; This function uses a non-reentrant model
 24214 ;;
 24215                           
 24216                           	psect	text125
 24217   001874                     __ptext125:
 24218                           	callstack 0
 24219   001874                     i2_displayString:
 24220                           	callstack 113
 24221   001874                     
 24222                           ;tm1637.c: 224: void displayString(const char str[], uint8_t startPos);tm1637.c: 225: {;
      +                          tm1637.c: 226:     uint8_t pos = startPos;
 24223   001874  C50D  F510         	movff	i2displayString@startPos,i2displayString@pos
 24224                           
 24225                           ;tm1637.c: 227:     uint8_t dotFlag = 0;
 24226   001878  6A11               	clrf	i2displayString@dotFlag^(0+1280),c
 24227                           
 24228                           ;tm1637.c: 228:     while (pos <= 3 && *str)
 24229   00187A  EF83  F00C         	goto	i2l5034
 24230   00187E                     i2l5022:
 24231                           
 24232                           ;tm1637.c: 229:     {;tm1637.c: 230:         if (*(str+1) == '.')
 24233   00187E  0E01               	movlw	1
 24234   001880  240B               	addwf	i2displayString@str^(0+1280),w,c
 24235   001882  6E0E               	movwf	??i2_displayString^(0+1280),c
 24236   001884  0E00               	movlw	0
 24237   001886  200C               	addwfc	(i2displayString@str+1)^(0+1280),w,c
 24238   001888  6E0F               	movwf	(??i2_displayString+1)^(0+1280),c
 24239   00188A  C50E  F4F6         	movff	??i2_displayString,tblptrl
 24240   00188E  C50F  F4F7         	movff	??i2_displayString+1,tblptrh
 24241   001892  6AF8               	clrf	tblptru,c
 24242   001894  0E0D               	movlw	(high __ramtop+-1)
 24243   001896  64F7               	cpfsgt	tblptrh,c
 24244   001898  D003               	bra	i2u359_47
 24245   00189A  0008               	tblrd		*
 24246   00189C  50F5               	movf	tablat,w,c
 24247   00189E  D005               	bra	i2u359_40
 24248   0018A0                     i2u359_47:
 24249   0018A0  C4F6 F4E9          	movff	tblptrl,fsr0l
 24250   0018A4  C4F7 F4EA          	movff	tblptrh,fsr0h
 24251   0018A8  50EF               	movf	indf0,w,c
 24252   0018AA                     i2u359_40:
 24253   0018AA  0A2E               	xorlw	46
 24254   0018AC  A4D8               	btfss	status,2,c
 24255   0018AE  EF5B  F00C         	goto	i2u360_41
 24256   0018B2  EF5D  F00C         	goto	i2u360_40
 24257   0018B6                     i2u360_41:
 24258   0018B6  EF5F  F00C         	goto	i2l5026
 24259   0018BA                     i2u360_40:
 24260   0018BA                     
 24261                           ;tm1637.c: 231:             dotFlag = 1;
 24262   0018BA  0E01               	movlw	1
 24263   0018BC  6E11               	movwf	i2displayString@dotFlag^(0+1280),c
 24264   0018BE                     i2l5026:
 24265                           
 24266                           ;tm1637.c: 232:         displayChar(*str, pos, dotFlag);
 24267   0018BE  C510  F505         	movff	i2displayString@pos,i2displayChar@pos
 24268   0018C2  C511  F506         	movff	i2displayString@dotFlag,i2displayChar@dotFlag
 24269   0018C6  C50B  F4F6         	movff	i2displayString@str,tblptrl
 24270   0018CA  C50C  F4F7         	movff	i2displayString@str+1,tblptrh
 24271   0018CE  6AF8               	clrf	tblptru,c
 24272   0018D0  0E0D               	movlw	(high __ramtop+-1)
 24273   0018D2  64F7               	cpfsgt	tblptrh,c
 24274   0018D4  D003               	bra	i2u361_47
 24275   0018D6  0008               	tblrd		*
 24276   0018D8  50F5               	movf	tablat,w,c
 24277   0018DA  D005               	bra	i2u361_40
 24278   0018DC                     i2u361_47:
 24279   0018DC  C4F6 F4E9          	movff	tblptrl,fsr0l
 24280   0018E0  C4F7 F4EA          	movff	tblptrh,fsr0h
 24281   0018E4  50EF               	movf	indf0,w,c
 24282   0018E6                     i2u361_40:
 24283   0018E6  ECB1  F014         	call	i2_displayChar
 24284   0018EA                     
 24285                           ;tm1637.c: 233:         if (dotFlag)
 24286   0018EA  5011               	movf	i2displayString@dotFlag^(0+1280),w,c
 24287   0018EC  B4D8               	btfsc	status,2,c
 24288   0018EE  EF7B  F00C         	goto	i2u362_41
 24289   0018F2  EF7D  F00C         	goto	i2u362_40
 24290   0018F6                     i2u362_41:
 24291   0018F6  EF80  F00C         	goto	i2l1583
 24292   0018FA                     i2u362_40:
 24293   0018FA                     
 24294                           ;tm1637.c: 234:         {;tm1637.c: 235:             str++;
 24295   0018FA  4A0B               	infsnz	i2displayString@str^(0+1280),f,c
 24296   0018FC  2A0C               	incf	(i2displayString@str+1)^(0+1280),f,c
 24297   0018FE                     
 24298                           ;tm1637.c: 236:             dotFlag = 0;
 24299   0018FE  6A11               	clrf	i2displayString@dotFlag^(0+1280),c
 24300   001900                     i2l1583:
 24301                           
 24302                           ;tm1637.c: 238:         str++;
 24303   001900  4A0B               	infsnz	i2displayString@str^(0+1280),f,c
 24304   001902  2A0C               	incf	(i2displayString@str+1)^(0+1280),f,c
 24305                           
 24306                           ;tm1637.c: 239:         pos++;
 24307   001904  2A10               	incf	i2displayString@pos^(0+1280),f,c
 24308   001906                     i2l5034:
 24309                           
 24310                           ;tm1637.c: 228:     while (pos <= 3 && *str)
 24311   001906  0E04               	movlw	4
 24312   001908  6010               	cpfslt	i2displayString@pos^(0+1280),c
 24313   00190A  EF89  F00C         	goto	i2u363_41
 24314   00190E  EF8B  F00C         	goto	i2u363_40
 24315   001912                     i2u363_41:
 24316   001912  EFA3  F00C         	goto	i2l1587
 24317   001916                     i2u363_40:
 24318   001916  C50B  F4F6         	movff	i2displayString@str,tblptrl
 24319   00191A  C50C  F4F7         	movff	i2displayString@str+1,tblptrh
 24320   00191E  6AF8               	clrf	tblptru,c
 24321   001920  0E0D               	movlw	(high __ramtop+-1)
 24322   001922  64F7               	cpfsgt	tblptrh,c
 24323   001924  D003               	bra	i2u364_47
 24324   001926  0008               	tblrd		*
 24325   001928  50F5               	movf	tablat,w,c
 24326   00192A  D005               	bra	i2u364_40
 24327   00192C                     i2u364_47:
 24328   00192C  C4F6 F4E9          	movff	tblptrl,fsr0l
 24329   001930  C4F7 F4EA          	movff	tblptrh,fsr0h
 24330   001934  50EF               	movf	indf0,w,c
 24331   001936                     i2u364_40:
 24332   001936  0900               	iorlw	0
 24333   001938  A4D8               	btfss	status,2,c
 24334   00193A  EFA1  F00C         	goto	i2u365_41
 24335   00193E  EFA3  F00C         	goto	i2u365_40
 24336   001942                     i2u365_41:
 24337   001942  EF3F  F00C         	goto	i2l5022
 24338   001946                     i2u365_40:
 24339   001946                     i2l1587:
 24340   001946  0012               	return		;funcret
 24341   001948                     __end_ofi2_displayString:
 24342                           	callstack 0
 24343                           
 24344 ;; *************** function i2_displayChar *****************
 24345 ;; Defined at:
 24346 ;;		line 205 in file "tm1637.c"
 24347 ;; Parameters:    Size  Location     Type
 24348 ;;  ch              1    wreg     unsigned char 
 24349 ;;  pos             1    4[COMRAM] unsigned char 
 24350 ;;  dotFlag         1    5[COMRAM] unsigned char 
 24351 ;; Auto vars:     Size  Location     Type
 24352 ;;  ch              1    8[COMRAM] unsigned char 
 24353 ;;  data            1    9[COMRAM] unsigned char 
 24354 ;; Return value:  Size  Location     Type
 24355 ;;                  1    wreg      void 
 24356 ;; Registers used:
 24357 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24358 ;; Tracked objects:
 24359 ;;		On entry : 0/0
 24360 ;;		On exit  : 0/0
 24361 ;;		Unchanged: 0/0
 24362 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24363 ;;      Params:         2       0       0       0       0       0       0       0       0
 24364 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24365 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24366 ;;      Totals:         6       0       0       0       0       0       0       0       0
 24367 ;;Total ram usage:        6 bytes
 24368 ;; Hardware stack levels used: 1
 24369 ;; Hardware stack levels required when called: 1
 24370 ;; This function calls:
 24371 ;;		i2_findChar
 24372 ;;		i2_start
 24373 ;;		i2_stop
 24374 ;;		i2_writeByte
 24375 ;; This function is called by:
 24376 ;;		i2_displayString
 24377 ;; This function uses a non-reentrant model
 24378 ;;
 24379                           
 24380                           	psect	text126
 24381   002962                     __ptext126:
 24382                           	callstack 0
 24383   002962                     i2_displayChar:
 24384                           	callstack 113
 24385                           
 24386                           ;incstack = 0
 24387                           ;i2displayChar@ch stored from wreg
 24388   002962  6E09               	movwf	i2displayChar@ch^(0+1280),c
 24389   002964                     
 24390                           ;tm1637.c: 208:     data = segments[findChar(ch)];
 24391   002964  5009               	movf	i2displayChar@ch^(0+1280),w,c
 24392   002966  EC09  F014         	call	i2_findChar
 24393   00296A  6E07               	movwf	??i2_displayChar^(0+1280),c
 24394   00296C  6A08               	clrf	(??i2_displayChar+1)^(0+1280),c
 24395   00296E  0E8B               	movlw	low _segments
 24396   002970  2407               	addwf	??i2_displayChar^(0+1280),w,c
 24397   002972  6EF6               	movwf	tblptrl,c
 24398   002974  0E7E               	movlw	high _segments
 24399   002976  2008               	addwfc	(??i2_displayChar+1)^(0+1280),w,c
 24400   002978  6EF7               	movwf	tblptrh,c
 24401   00297A                     	if	0	;There are less than 3 active tblptr bytes
 24402   00297A                     	endif
 24403   00297A  0008               	tblrd		*
 24404   00297C  C4F5 F50A          	movff	tablat,i2displayChar@data
 24405   002980                     
 24406                           ;tm1637.c: 209:     if (pos > 3) return;
 24407   002980  0E03               	movlw	3
 24408   002982  6405               	cpfsgt	i2displayChar@pos^(0+1280),c
 24409   002984  EFC6  F014         	goto	i2u357_41
 24410   002988  EFC8  F014         	goto	i2u357_40
 24411   00298C                     i2u357_41:
 24412   00298C  EFCA  F014         	goto	i2l4990
 24413   002990                     i2u357_40:
 24414   002990  EFE5  F014         	goto	i2l1576
 24415   002994                     i2l4990:
 24416                           
 24417                           ;tm1637.c: 210:     if (dotFlag)
 24418   002994  5006               	movf	i2displayChar@dotFlag^(0+1280),w,c
 24419   002996  B4D8               	btfsc	status,2,c
 24420   002998  EFD0  F014         	goto	i2u358_41
 24421   00299C  EFD2  F014         	goto	i2u358_40
 24422   0029A0                     i2u358_41:
 24423   0029A0  EFD3  F014         	goto	i2l4994
 24424   0029A4                     i2u358_40:
 24425   0029A4                     
 24426                           ;tm1637.c: 211:         data |= 0b10000000;
 24427   0029A4  8E0A               	bsf	i2displayChar@data^(0+1280),7,c
 24428   0029A6                     i2l4994:
 24429                           
 24430                           ;tm1637.c: 213:     start();
 24431   0029A6  EC0E  F01B         	call	i2_start	;wreg free
 24432   0029AA                     
 24433                           ;tm1637.c: 214:         writeByte(0b01000100);
 24434   0029AA  0E44               	movlw	68
 24435   0029AC  ECD5  F016         	call	i2_writeByte
 24436   0029B0                     
 24437                           ;tm1637.c: 215:     stop();
 24438   0029B0  EC09  F01B         	call	i2_stop	;wreg free
 24439   0029B4                     
 24440                           ;tm1637.c: 217:     start();
 24441   0029B4  EC0E  F01B         	call	i2_start	;wreg free
 24442   0029B8                     
 24443                           ;tm1637.c: 218:         writeByte(0b11000000 | pos);
 24444   0029B8  5005               	movf	i2displayChar@pos^(0+1280),w,c
 24445   0029BA  09C0               	iorlw	192
 24446   0029BC  ECD5  F016         	call	i2_writeByte
 24447   0029C0                     
 24448                           ;tm1637.c: 219:         writeByte(data);
 24449   0029C0  500A               	movf	i2displayChar@data^(0+1280),w,c
 24450   0029C2  ECD5  F016         	call	i2_writeByte
 24451   0029C6                     
 24452                           ;tm1637.c: 220:     stop();
 24453   0029C6  EC09  F01B         	call	i2_stop	;wreg free
 24454   0029CA                     i2l1576:
 24455   0029CA  0012               	return		;funcret
 24456   0029CC                     __end_ofi2_displayChar:
 24457                           	callstack 0
 24458                           
 24459 ;; *************** function i2_writeByte *****************
 24460 ;; Defined at:
 24461 ;;		line 132 in file "tm1637.c"
 24462 ;; Parameters:    Size  Location     Type
 24463 ;;  data            1    wreg     unsigned char 
 24464 ;; Auto vars:     Size  Location     Type
 24465 ;;  data            1    0[COMRAM] unsigned char 
 24466 ;;  i               1    1[COMRAM] unsigned char 
 24467 ;; Return value:  Size  Location     Type
 24468 ;;                  1    wreg      void 
 24469 ;; Registers used:
 24470 ;;		wreg, status,2, status,0
 24471 ;; Tracked objects:
 24472 ;;		On entry : 0/0
 24473 ;;		On exit  : 0/0
 24474 ;;		Unchanged: 0/0
 24475 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24476 ;;      Params:         0       0       0       0       0       0       0       0       0
 24477 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24478 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24479 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24480 ;;Total ram usage:        2 bytes
 24481 ;; Hardware stack levels used: 1
 24482 ;; This function calls:
 24483 ;;		Nothing
 24484 ;; This function is called by:
 24485 ;;		i2_displayChar
 24486 ;; This function uses a non-reentrant model
 24487 ;;
 24488                           
 24489                           	psect	text127
 24490   002DAA                     __ptext127:
 24491                           	callstack 0
 24492   002DAA                     i2_writeByte:
 24493                           	callstack 113
 24494                           
 24495                           ;incstack = 0
 24496                           ;i2writeByte@data stored from wreg
 24497   002DAA  6E01               	movwf	i2writeByte@data^(0+1280),c
 24498   002DAC                     
 24499                           ;tm1637.c: 132: void writeByte(uint8_t data);tm1637.c: 133: {;tm1637.c: 134:     uint8_t
      +                           i;;tm1637.c: 135:     for(i = 0; i < 8; i++)
 24500   002DAC  6A02               	clrf	i2writeByte@i^(0+1280),c
 24501   002DAE                     i2l1552:
 24502                           
 24503                           ;tm1637.c: 136:     {;tm1637.c: 137:         RC3 = 0;
 24504   002DAE  96D0               	bcf	1232,3,c	;volatile
 24505                           
 24506                           ;tm1637.c: 139:         RC4 = data & 0x01;
 24507   002DB0  B001               	btfsc	i2writeByte@data^(0+1280),0,c
 24508   002DB2  EFDD  F016         	goto	i2u349_41
 24509   002DB6  EFE0  F016         	goto	i2u349_40
 24510   002DBA                     i2u349_41:
 24511   002DBA  88D0               	bsf	1232,4,c	;volatile
 24512   002DBC  EFE1  F016         	goto	i2u350_45
 24513   002DC0                     i2u349_40:
 24514   002DC0  98D0               	bcf	1232,4,c	;volatile
 24515   002DC2                     i2u350_45:
 24516   002DC2                     
 24517                           ;tm1637.c: 141:         data >>= 1;
 24518   002DC2  90D8               	bcf	status,0,c
 24519   002DC4  3201               	rrcf	i2writeByte@data^(0+1280),f,c
 24520   002DC6                     
 24521                           ;tm1637.c: 142:         RC3 = 1;
 24522   002DC6  86D0               	bsf	1232,3,c	;volatile
 24523   002DC8                     
 24524                           ;tm1637.c: 144:     }
 24525   002DC8  2A02               	incf	i2writeByte@i^(0+1280),f,c
 24526   002DCA  0E07               	movlw	7
 24527   002DCC  6402               	cpfsgt	i2writeByte@i^(0+1280),c
 24528   002DCE  EFEB  F016         	goto	i2u351_41
 24529   002DD2  EFED  F016         	goto	i2u351_40
 24530   002DD6                     i2u351_41:
 24531   002DD6  EFD7  F016         	goto	i2l1552
 24532   002DDA                     i2u351_40:
 24533   002DDA                     
 24534                           ;tm1637.c: 145:     RC3 = 0;
 24535   002DDA  96D0               	bcf	1232,3,c	;volatile
 24536                           
 24537                           ;tm1637.c: 147:     RC4 = 1;
 24538   002DDC  88D0               	bsf	1232,4,c	;volatile
 24539                           
 24540                           ;tm1637.c: 149:     RC3 = 1;
 24541   002DDE  86D0               	bsf	1232,3,c	;volatile
 24542                           
 24543                           ;tm1637.c: 151:     TRISC4 = 1;
 24544   002DE0  88C8               	bsf	1224,4,c	;volatile
 24545                           
 24546                           ;tm1637.c: 154:     if (RC4 == 0)
 24547   002DE2  B8D0               	btfsc	1232,4,c	;volatile
 24548   002DE4  EFF6  F016         	goto	i2u352_41
 24549   002DE8  EFF8  F016         	goto	i2u352_40
 24550   002DEC                     i2u352_41:
 24551   002DEC  EFFA  F016         	goto	i2l1554
 24552   002DF0                     i2u352_40:
 24553   002DF0                     
 24554                           ;tm1637.c: 155:     {;tm1637.c: 156:         TRISC4 = 0;
 24555   002DF0  98C8               	bcf	1224,4,c	;volatile
 24556                           
 24557                           ;tm1637.c: 158:         RC4 = 0;
 24558   002DF2  98D0               	bcf	1232,4,c	;volatile
 24559   002DF4                     i2l1554:
 24560                           
 24561                           ;tm1637.c: 161:     TRISC4 = 0;
 24562   002DF4  98C8               	bcf	1224,4,c	;volatile
 24563   002DF6  0012               	return		;funcret
 24564   002DF8                     __end_ofi2_writeByte:
 24565                           	callstack 0
 24566                           
 24567 ;; *************** function i2_stop *****************
 24568 ;; Defined at:
 24569 ;;		line 119 in file "tm1637.c"
 24570 ;; Parameters:    Size  Location     Type
 24571 ;;		None
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;		None
 24574 ;; Return value:  Size  Location     Type
 24575 ;;                  1    wreg      void 
 24576 ;; Registers used:
 24577 ;;		None
 24578 ;; Tracked objects:
 24579 ;;		On entry : 0/0
 24580 ;;		On exit  : 0/0
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24583 ;;      Params:         0       0       0       0       0       0       0       0       0
 24584 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24586 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24587 ;;Total ram usage:        0 bytes
 24588 ;; Hardware stack levels used: 1
 24589 ;; This function calls:
 24590 ;;		Nothing
 24591 ;; This function is called by:
 24592 ;;		i2_displayChar
 24593 ;; This function uses a non-reentrant model
 24594 ;;
 24595                           
 24596                           	psect	text128
 24597   003612                     __ptext128:
 24598                           	callstack 0
 24599   003612                     i2_stop:
 24600                           	callstack 113
 24601   003612                     
 24602                           ;tm1637.c: 121:     RC3 = 0;
 24603   003612  96D0               	bcf	1232,3,c	;volatile
 24604                           
 24605                           ;tm1637.c: 123:     RC4 = 0;
 24606   003614  98D0               	bcf	1232,4,c	;volatile
 24607                           
 24608                           ;tm1637.c: 125:     RC3 = 1;
 24609   003616  86D0               	bsf	1232,3,c	;volatile
 24610                           
 24611                           ;tm1637.c: 127:     RC4 = 1;
 24612   003618  88D0               	bsf	1232,4,c	;volatile
 24613   00361A  0012               	return		;funcret
 24614   00361C                     __end_ofi2_stop:
 24615                           	callstack 0
 24616                           
 24617 ;; *************** function i2_start *****************
 24618 ;; Defined at:
 24619 ;;		line 106 in file "tm1637.c"
 24620 ;; Parameters:    Size  Location     Type
 24621 ;;		None
 24622 ;; Auto vars:     Size  Location     Type
 24623 ;;		None
 24624 ;; Return value:  Size  Location     Type
 24625 ;;                  1    wreg      void 
 24626 ;; Registers used:
 24627 ;;		None
 24628 ;; Tracked objects:
 24629 ;;		On entry : 0/0
 24630 ;;		On exit  : 0/0
 24631 ;;		Unchanged: 0/0
 24632 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24633 ;;      Params:         0       0       0       0       0       0       0       0       0
 24634 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24635 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24636 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24637 ;;Total ram usage:        0 bytes
 24638 ;; Hardware stack levels used: 1
 24639 ;; This function calls:
 24640 ;;		Nothing
 24641 ;; This function is called by:
 24642 ;;		i2_displayChar
 24643 ;; This function uses a non-reentrant model
 24644 ;;
 24645                           
 24646                           	psect	text129
 24647   00361C                     __ptext129:
 24648                           	callstack 0
 24649   00361C                     i2_start:
 24650                           	callstack 113
 24651   00361C                     
 24652                           ;tm1637.c: 108:     RC3 = 1;
 24653   00361C  86D0               	bsf	1232,3,c	;volatile
 24654                           
 24655                           ;tm1637.c: 110:     RC4 = 1;
 24656   00361E  88D0               	bsf	1232,4,c	;volatile
 24657                           
 24658                           ;tm1637.c: 112:     RC4 = 0;
 24659   003620  98D0               	bcf	1232,4,c	;volatile
 24660                           
 24661                           ;tm1637.c: 114:     RC3 = 0;
 24662   003622  96D0               	bcf	1232,3,c	;volatile
 24663   003624  0012               	return		;funcret
 24664   003626                     __end_ofi2_start:
 24665                           	callstack 0
 24666                           
 24667 ;; *************** function i2_findChar *****************
 24668 ;; Defined at:
 24669 ;;		line 192 in file "tm1637.c"
 24670 ;; Parameters:    Size  Location     Type
 24671 ;;  ch              1    wreg     unsigned char 
 24672 ;; Auto vars:     Size  Location     Type
 24673 ;;  ch              1    2[COMRAM] unsigned char 
 24674 ;;  i               1    3[COMRAM] unsigned char 
 24675 ;; Return value:  Size  Location     Type
 24676 ;;                  1    wreg      unsigned char 
 24677 ;; Registers used:
 24678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 24679 ;; Tracked objects:
 24680 ;;		On entry : 0/0
 24681 ;;		On exit  : 0/0
 24682 ;;		Unchanged: 0/0
 24683 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24684 ;;      Params:         0       0       0       0       0       0       0       0       0
 24685 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24686 ;;      Temps:          2       0       0       0       0       0       0       0       0
 24687 ;;      Totals:         4       0       0       0       0       0       0       0       0
 24688 ;;Total ram usage:        4 bytes
 24689 ;; Hardware stack levels used: 1
 24690 ;; This function calls:
 24691 ;;		Nothing
 24692 ;; This function is called by:
 24693 ;;		i2_displayChar
 24694 ;; This function uses a non-reentrant model
 24695 ;;
 24696                           
 24697                           	psect	text130
 24698   002812                     __ptext130:
 24699                           	callstack 0
 24700   002812                     i2_findChar:
 24701                           	callstack 113
 24702                           
 24703                           ;incstack = 0
 24704                           ;i2findChar@ch stored from wreg
 24705   002812  6E03               	movwf	i2findChar@ch^(0+1280),c
 24706   002814                     
 24707                           ;tm1637.c: 192: uint8_t findChar(char ch);tm1637.c: 193: {;tm1637.c: 194:     if (ch >= 
      +                          '0' && ch <= '9')
 24708   002814  0E2F               	movlw	47
 24709   002816  6403               	cpfsgt	i2findChar@ch^(0+1280),c
 24710   002818  EF10  F014         	goto	i2u353_41
 24711   00281C  EF12  F014         	goto	i2u353_40
 24712   002820                     i2u353_41:
 24713   002820  EF1E  F014         	goto	i2l4962
 24714   002824                     i2u353_40:
 24715   002824  0E3A               	movlw	58
 24716   002826  6003               	cpfslt	i2findChar@ch^(0+1280),c
 24717   002828  EF18  F014         	goto	i2u354_41
 24718   00282C  EF1A  F014         	goto	i2u354_40
 24719   002830                     i2u354_41:
 24720   002830  EF1E  F014         	goto	i2l4962
 24721   002834                     i2u354_40:
 24722   002834                     
 24723                           ;tm1637.c: 195:         return ch - '0';
 24724   002834  5003               	movf	i2findChar@ch^(0+1280),w,c
 24725   002836  0FD0               	addlw	208
 24726   002838  EF42  F014         	goto	i2l1569
 24727   00283C                     i2l4962:
 24728                           
 24729                           ;tm1637.c: 197:     for(uint8_t i = 10; i < sizeof(segments); i++)
 24730   00283C  0E0A               	movlw	10
 24731   00283E  6E04               	movwf	i2findChar@i^(0+1280),c
 24732   002840                     i2l4968:
 24733                           
 24734                           ;tm1637.c: 198:         if (ch == allChars[i])
 24735   002840  5004               	movf	i2findChar@i^(0+1280),w,c
 24736   002842  0105               	movlb	5	; () banked
 24737   002844  25BB               	addwf	_allChars& (0+255),w,b
 24738   002846  6E01               	movwf	??i2_findChar^(0+1280),c
 24739   002848  0E00               	movlw	0
 24740   00284A  21BC               	addwfc	(_allChars+1)& (0+255),w,b
 24741   00284C  6E02               	movwf	(??i2_findChar+1)^(0+1280),c
 24742   00284E  C501  F4F6         	movff	??i2_findChar,tblptrl
 24743   002852  C502  F4F7         	movff	??i2_findChar+1,tblptrh
 24744   002856                     	if	0	;tblptru may be non-zero
 24745   002856                     	endif
 24746   002856                     	if	0	;tblptru may be non-zero
 24747   002856                     	endif
 24748   002856  0008               	tblrd		*
 24749   002858  50F5               	movf	tablat,w,c
 24750   00285A  1803               	xorwf	i2findChar@ch^(0+1280),w,c
 24751   00285C  A4D8               	btfss	status,2,c
 24752   00285E  EF33  F014         	goto	i2u355_41
 24753   002862  EF35  F014         	goto	i2u355_40
 24754   002866                     i2u355_41:
 24755   002866  EF38  F014         	goto	i2l4974
 24756   00286A                     i2u355_40:
 24757   00286A                     
 24758                           ; BSR set to: 5
 24759                           ;tm1637.c: 199:             return i;
 24760   00286A  5004               	movf	i2findChar@i^(0+1280),w,c
 24761   00286C  EF42  F014         	goto	i2l1569
 24762   002870                     i2l4974:
 24763                           
 24764                           ; BSR set to: 5
 24765   002870  2A04               	incf	i2findChar@i^(0+1280),f,c
 24766   002872                     
 24767                           ; BSR set to: 5
 24768   002872  0E29               	movlw	41
 24769   002874  6404               	cpfsgt	i2findChar@i^(0+1280),c
 24770   002876  EF3F  F014         	goto	i2u356_41
 24771   00287A  EF41  F014         	goto	i2u356_40
 24772   00287E                     i2u356_41:
 24773   00287E  EF20  F014         	goto	i2l4968
 24774   002882                     i2u356_40:
 24775   002882                     
 24776                           ; BSR set to: 5
 24777                           ;tm1637.c: 201:     return 10;
 24778   002882  0E0A               	movlw	10
 24779   002884                     i2l1569:
 24780   002884  0012               	return		;funcret
 24781   002886                     __end_ofi2_findChar:
 24782                           	callstack 0
 24783                           
 24784 ;; *************** function _TMR0_Stop *****************
 24785 ;; Defined at:
 24786 ;;		line 104 in file "mcc_generated_files/timer/src/tmr0.c"
 24787 ;; Parameters:    Size  Location     Type
 24788 ;;		None
 24789 ;; Auto vars:     Size  Location     Type
 24790 ;;		None
 24791 ;; Return value:  Size  Location     Type
 24792 ;;                  1    wreg      void 
 24793 ;; Registers used:
 24794 ;;		None
 24795 ;; Tracked objects:
 24796 ;;		On entry : 0/0
 24797 ;;		On exit  : 0/0
 24798 ;;		Unchanged: 0/0
 24799 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24800 ;;      Params:         0       0       0       0       0       0       0       0       0
 24801 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24802 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24803 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24804 ;;Total ram usage:        0 bytes
 24805 ;; Hardware stack levels used: 1
 24806 ;; This function calls:
 24807 ;;		Nothing
 24808 ;; This function is called by:
 24809 ;;		_SetGate
 24810 ;;		_HandleMotorWhileStopped
 24811 ;; This function uses a non-reentrant model
 24812 ;;
 24813                           
 24814                           	psect	text131
 24815   003650                     __ptext131:
 24816                           	callstack 0
 24817   003650                     _TMR0_Stop:
 24818                           	callstack 116
 24819   003650                     
 24820                           ;mcc_generated_files/timer/src/tmr0.c: 105:     T0CON0bits.T0EN = 0;
 24821   003650  0103               	movlb	3	; () banked
 24822   003652  9F1A               	bcf	26,7,b	;volatile
 24823   003654                     
 24824                           ; BSR set to: 3
 24825   003654  0012               	return		;funcret
 24826   003656                     __end_of_TMR0_Stop:
 24827                           	callstack 0
 24828                           
 24829 ;; *************** function _TMR0_Start *****************
 24830 ;; Defined at:
 24831 ;;		line 100 in file "mcc_generated_files/timer/src/tmr0.c"
 24832 ;; Parameters:    Size  Location     Type
 24833 ;;		None
 24834 ;; Auto vars:     Size  Location     Type
 24835 ;;		None
 24836 ;; Return value:  Size  Location     Type
 24837 ;;                  1    wreg      void 
 24838 ;; Registers used:
 24839 ;;		None
 24840 ;; Tracked objects:
 24841 ;;		On entry : 0/0
 24842 ;;		On exit  : 0/0
 24843 ;;		Unchanged: 0/0
 24844 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24845 ;;      Params:         0       0       0       0       0       0       0       0       0
 24846 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24848 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24849 ;;Total ram usage:        0 bytes
 24850 ;; Hardware stack levels used: 1
 24851 ;; This function calls:
 24852 ;;		Nothing
 24853 ;; This function is called by:
 24854 ;;		_SetGate
 24855 ;;		_configOpenGate
 24856 ;;		_configCloseGate
 24857 ;;		_HandleMotorWhileRunning
 24858 ;; This function uses a non-reentrant model
 24859 ;;
 24860                           
 24861                           	psect	text132
 24862   003656                     __ptext132:
 24863                           	callstack 0
 24864   003656                     _TMR0_Start:
 24865                           	callstack 116
 24866   003656                     
 24867                           ;mcc_generated_files/timer/src/tmr0.c: 101:     T0CON0bits.T0EN = 1;
 24868   003656  0103               	movlb	3	; () banked
 24869   003658  8F1A               	bsf	26,7,b	;volatile
 24870   00365A                     
 24871                           ; BSR set to: 3
 24872   00365A  0012               	return		;funcret
 24873   00365C                     __end_of_TMR0_Start:
 24874                           	callstack 0
 24875                           
 24876 ;; *************** function _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister *****************
 24877 ;; Defined at:
 24878 ;;		line 137 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 24879 ;; Parameters:    Size  Location     Type
 24880 ;;  registerValu    2    0[COMRAM] unsigned short 
 24881 ;; Auto vars:     Size  Location     Type
 24882 ;;		None
 24883 ;; Return value:  Size  Location     Type
 24884 ;;                  1    wreg      void 
 24885 ;; Registers used:
 24886 ;;		wreg, status,2
 24887 ;; Tracked objects:
 24888 ;;		On entry : 0/0
 24889 ;;		On exit  : 0/0
 24890 ;;		Unchanged: 0/0
 24891 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24892 ;;      Params:         2       0       0       0       0       0       0       0       0
 24893 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24894 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24895 ;;      Totals:         2       0       0       0       0       0       0       0       0
 24896 ;;Total ram usage:        2 bytes
 24897 ;; Hardware stack levels used: 1
 24898 ;; This function calls:
 24899 ;;		Nothing
 24900 ;; This function is called by:
 24901 ;;		_SetGate
 24902 ;;		_StopGate
 24903 ;;		_configOpenGate
 24904 ;;		_configCloseGate
 24905 ;; This function uses a non-reentrant model
 24906 ;;
 24907                           
 24908                           	psect	text133
 24909   003626                     __ptext133:
 24910                           	callstack 0
 24911   003626                     _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister:
 24912                           	callstack 115
 24913   003626                     
 24914                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 137: void PWM1_PHASE_A_SetSlice1Output1DutyCy
      +                          cleRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm1_16bit.c: 138: {;mcc
      +                          _generated_files/pwm/src/pwm1_16bit.c: 139:     PWM1S1P1L = (uint8_t)(registerValue);
 24915   003626  C501  F46B         	movff	PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue,1131	;volatile
 24916   00362A                     
 24917                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 140:     PWM1S1P1H = (uint8_t)(registerValue 
      +                          >> 8);
 24918   00362A  5002               	movf	(PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue+1)^(0+1280),w,c
 24919   00362C  6E6C               	movwf	108,c	;volatile
 24920   00362E  0012               	return		;funcret
 24921   003630                     __end_of_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister:
 24922                           	callstack 0
 24923                           
 24924 ;; *************** function _PWM1_PHASE_A_LoadBufferRegisters *****************
 24925 ;; Defined at:
 24926 ;;		line 149 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 24927 ;; Parameters:    Size  Location     Type
 24928 ;;		None
 24929 ;; Auto vars:     Size  Location     Type
 24930 ;;		None
 24931 ;; Return value:  Size  Location     Type
 24932 ;;                  1    wreg      void 
 24933 ;; Registers used:
 24934 ;;		None
 24935 ;; Tracked objects:
 24936 ;;		On entry : 0/0
 24937 ;;		On exit  : 0/0
 24938 ;;		Unchanged: 0/0
 24939 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24940 ;;      Params:         0       0       0       0       0       0       0       0       0
 24941 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24942 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24943 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24944 ;;Total ram usage:        0 bytes
 24945 ;; Hardware stack levels used: 1
 24946 ;; This function calls:
 24947 ;;		Nothing
 24948 ;; This function is called by:
 24949 ;;		_SetGate
 24950 ;;		_StopGate
 24951 ;;		_configOpenGate
 24952 ;;		_configCloseGate
 24953 ;; This function uses a non-reentrant model
 24954 ;;
 24955                           
 24956                           	psect	text134
 24957   003660                     __ptext134:
 24958                           	callstack 0
 24959   003660                     _PWM1_PHASE_A_LoadBufferRegisters:
 24960                           	callstack 115
 24961   003660                     
 24962                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 152:     PWM1CONbits.LD = 1;
 24963   003660  8469               	bsf	105,2,c	;volatile
 24964   003662  0012               	return		;funcret
 24965   003664                     __end_of_PWM1_PHASE_A_LoadBufferRegisters:
 24966                           	callstack 0
 24967                           
 24968 ;; *************** function _PWM1_PHASE_A_Enable *****************
 24969 ;; Defined at:
 24970 ;;		line 121 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 24971 ;; Parameters:    Size  Location     Type
 24972 ;;		None
 24973 ;; Auto vars:     Size  Location     Type
 24974 ;;		None
 24975 ;; Return value:  Size  Location     Type
 24976 ;;                  1    wreg      void 
 24977 ;; Registers used:
 24978 ;;		status,2, status,0
 24979 ;; Tracked objects:
 24980 ;;		On entry : 0/0
 24981 ;;		On exit  : 0/0
 24982 ;;		Unchanged: 0/0
 24983 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 24984 ;;      Params:         0       0       0       0       0       0       0       0       0
 24985 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24986 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24987 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24988 ;;Total ram usage:        0 bytes
 24989 ;; Hardware stack levels used: 1
 24990 ;; This function calls:
 24991 ;;		Nothing
 24992 ;; This function is called by:
 24993 ;;		_SetGate
 24994 ;;		_configOpenGate
 24995 ;;		_configCloseGate
 24996 ;; This function uses a non-reentrant model
 24997 ;;
 24998                           
 24999                           	psect	text135
 25000   003664                     __ptext135:
 25001                           	callstack 0
 25002   003664                     _PWM1_PHASE_A_Enable:
 25003                           	callstack 114
 25004   003664                     
 25005                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 123:     PWM1CON |= 0x80;
 25006   003664  8E69               	bsf	105,7,c	;volatile
 25007   003666  0012               	return		;funcret
 25008   003668                     __end_of_PWM1_PHASE_A_Enable:
 25009                           	callstack 0
 25010                           
 25011 ;; *************** function _ADCC_GetConversionResult *****************
 25012 ;; Defined at:
 25013 ;;		line 135 in file "mcc_generated_files/adc/src/adcc.c"
 25014 ;; Parameters:    Size  Location     Type
 25015 ;;		None
 25016 ;; Auto vars:     Size  Location     Type
 25017 ;;		None
 25018 ;; Return value:  Size  Location     Type
 25019 ;;                  2    0[COMRAM] unsigned short 
 25020 ;; Registers used:
 25021 ;;		wreg, status,2, status,0
 25022 ;; Tracked objects:
 25023 ;;		On entry : 0/0
 25024 ;;		On exit  : 0/0
 25025 ;;		Unchanged: 0/0
 25026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 25027 ;;      Params:         2       0       0       0       0       0       0       0       0
 25028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25029 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25030 ;;      Totals:         4       0       0       0       0       0       0       0       0
 25031 ;;Total ram usage:        4 bytes
 25032 ;; Hardware stack levels used: 1
 25033 ;; This function calls:
 25034 ;;		Nothing
 25035 ;; This function is called by:
 25036 ;;		_CheckOverCurrent
 25037 ;; This function uses a non-reentrant model
 25038 ;;
 25039                           
 25040                           	psect	text136
 25041   0034EC                     __ptext136:
 25042                           	callstack 0
 25043   0034EC                     _ADCC_GetConversionResult:
 25044                           	callstack 118
 25045   0034EC                     
 25046                           ;mcc_generated_files/adc/src/adcc.c: 137:     return ((adc_result_t) ((ADRESH << 8) + AD
      +                          RESL));
 25047   0034EC  0103               	movlb	3	; () banked
 25048   0034EE  51EB               	movf	235,w,b	;volatile
 25049   0034F0  6E04               	movwf	(??_ADCC_GetConversionResult+1)^(0+1280),c
 25050   0034F2  6A03               	clrf	??_ADCC_GetConversionResult^(0+1280),c
 25051   0034F4  51EA               	movf	234,w,b	;volatile
 25052   0034F6  2403               	addwf	??_ADCC_GetConversionResult^(0+1280),w,c
 25053   0034F8  6E01               	movwf	?_ADCC_GetConversionResult^(0+1280),c
 25054   0034FA  0E00               	movlw	0
 25055   0034FC  2004               	addwfc	(??_ADCC_GetConversionResult+1)^(0+1280),w,c
 25056   0034FE  6E02               	movwf	(?_ADCC_GetConversionResult+1)^(0+1280),c
 25057   003500                     
 25058                           ; BSR set to: 3
 25059   003500  0012               	return		;funcret
 25060   003502                     __end_of_ADCC_GetConversionResult:
 25061                           	callstack 0
 25062                           
 25063 ;; *************** function _ADCC_DefaultADI_ISR *****************
 25064 ;; Defined at:
 25065 ;;		line 312 in file "mcc_generated_files/adc/src/adcc.c"
 25066 ;; Parameters:    Size  Location     Type
 25067 ;;		None
 25068 ;; Auto vars:     Size  Location     Type
 25069 ;;		None
 25070 ;; Return value:  Size  Location     Type
 25071 ;;                  1    wreg      void 
 25072 ;; Registers used:
 25073 ;;		None
 25074 ;; Tracked objects:
 25075 ;;		On entry : 0/0
 25076 ;;		On exit  : 0/0
 25077 ;;		Unchanged: 0/0
 25078 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
 25079 ;;      Params:         0       0       0       0       0       0       0       0       0
 25080 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25081 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25082 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25083 ;;Total ram usage:        0 bytes
 25084 ;; Hardware stack levels used: 1
 25085 ;; This function calls:
 25086 ;;		Nothing
 25087 ;; This function is called by:
 25088 ;;		_ADCC_Initialize
 25089 ;;		_ADCC_ISR
 25090 ;; This function uses a non-reentrant model
 25091 ;;
 25092                           
 25093                           	psect	text137
 25094   00367C                     __ptext137:
 25095                           	callstack 0
 25096   00367C                     _ADCC_DefaultADI_ISR:
 25097                           	callstack 119
 25098   00367C  0012               	return		;funcret
 25099   00367E                     __end_of_ADCC_DefaultADI_ISR:
 25100                           	callstack 0
 25101                           
 25102                           ;
 25103                           ; H/W Interrupt Vector Table @ 0x8
 25104                           ;
 25105                           
 25106                           	psect	ivt0x8
 25107   000008                     __pivt0x8:
 25108                           	callstack 0
 25109   000008                     ivt0x8_base:
 25110                           	callstack 0
 25111                           
 25112                           ; high-priority vector
 25113   000008  EF34  F00E         	goto	_INTERRUPT_InterruptManager
 25114   000018                     	org	16
 25115                           
 25116                           ; low-priority vector
 25117   000018  00FF               	reset	
 25118                           
 25119                           	psect	rparam
 25120   000001                     ___rparam_used  equ	1
 25121   000000                     ___param_bank   equ	0
 25122   000000                     __Lparam        equ	__Lrparam
 25123   000000                     __Hparam        equ	__Hrparam
 25124                           
 25125                           	psect	config
 25126                           
 25127                           ;Config register CONFIG1 @ 0x300000
 25128                           ;	External Oscillator Selection
 25129                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 25130                           ;	Reset Oscillator Selection
 25131                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 25132   300000                     	org	3145728
 25133   300000  8F                 	db	143
 25134                           
 25135                           ;Config register CONFIG2 @ 0x300001
 25136                           ;	Clock out Enable bit
 25137                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 25138                           ;	PRLOCKED One-Way Set Enable bit
 25139                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 25140                           ;	Clock Switch Enable bit
 25141                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 25142                           ;	Fail-Safe Clock Monitor Enable bit
 25143                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 25144                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
 25145                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
 25146                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
 25147                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
 25148   300001                     	org	3145729
 25149   300001  FF                 	db	255
 25150                           
 25151                           ;Config register CONFIG3 @ 0x300002
 25152                           ;	MCLR Enable bit
 25153                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 25154                           ;	Power-up timer selection bits
 25155                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 25156                           ;	Multi-vector enable bit
 25157                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 25158                           ;	IVTLOCK bit One-way set enable bit
 25159                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 25160                           ;	Low Power BOR Enable bit
 25161                           ;	LPBOREN = OFF, Low-Power BOR disabled
 25162                           ;	Brown-out Reset Enable bits
 25163                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 25164   300002                     	org	3145730
 25165   300002  F7                 	db	247
 25166                           
 25167                           ;Config register CONFIG4 @ 0x300003
 25168                           ;	Brown-out Reset Voltage Selection bits
 25169                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 25170                           ;	ZCD Disable bit
 25171                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 25172                           ;	PPSLOCK bit One-Way Set Enable bit
 25173                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 25174                           ;	Stack Full/Underflow Reset Enable bit
 25175                           ;	STVREN = ON, Stack full/underflow will cause Reset
 25176                           ;	Low Voltage Programming Enable bit
 25177                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 25178                           ;	Extended Instruction Set Enable bit
 25179                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 25180   300003                     	org	3145731
 25181   300003  FF                 	db	255
 25182                           
 25183                           ;Config register CONFIG5 @ 0x300004
 25184                           ;	WDT Period selection bits
 25185                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 25186                           ;	WDT operating mode
 25187                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 25188   300004                     	org	3145732
 25189   300004  9F                 	db	159
 25190                           
 25191                           ;Config register CONFIG6 @ 0x300005
 25192                           ;	WDT Window Select bits
 25193                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 25194                           ;	WDT input clock selector
 25195                           ;	WDTCCS = SC, Software Control
 25196   300005                     	org	3145733
 25197   300005  FF                 	db	255
 25198                           
 25199                           ;Config register CONFIG7 @ 0x300006
 25200                           ;	Boot Block Size selection bits
 25201                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 25202                           ;	Boot Block enable bit
 25203                           ;	BBEN = OFF, Boot block disabled
 25204                           ;	Storage Area Flash enable bit
 25205                           ;	SAFEN = OFF, SAF disabled
 25206                           ;	Background Debugger
 25207                           ;	DEBUG = 0x1, unprogrammed default
 25208   300006                     	org	3145734
 25209   300006  FF                 	db	255
 25210                           
 25211                           ;Config register CONFIG8 @ 0x300007
 25212                           ;	Boot Block Write Protection bit
 25213                           ;	WRTB = OFF, Boot Block not Write protected
 25214                           ;	Configuration Register Write Protection bit
 25215                           ;	WRTC = OFF, Configuration registers not Write protected
 25216                           ;	Data EEPROM Write Protection bit
 25217                           ;	WRTD = OFF, Data EEPROM not Write protected
 25218                           ;	SAF Write protection bit
 25219                           ;	WRTSAF = OFF, SAF not Write Protected
 25220                           ;	Application Block write protection bit
 25221                           ;	WRTAPP = OFF, Application Block not write protected
 25222   300007                     	org	3145735
 25223   300007  FF                 	db	255
 25224                           
 25225                           ;Config register CONFIG9 @ 0x300008
 25226                           ;	PFM and Data EEPROM Code Protection bit
 25227                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 25228   300008                     	org	3145736
 25229   300008  FF                 	db	255
 25230                           tosu	equ	0x4FF
 25231                           tosh	equ	0x4FE
 25232                           tosl	equ	0x4FD
 25233                           stkptr	equ	0x4FC
 25234                           pclatu	equ	0x4FB
 25235                           pclath	equ	0x4FA
 25236                           pcl	equ	0x4F9
 25237                           tblptru	equ	0x4F8
 25238                           tblptrh	equ	0x4F7
 25239                           tblptrl	equ	0x4F6
 25240                           tablat	equ	0x4F5
 25241                           prodh	equ	0x4F4
 25242                           prodl	equ	0x4F3
 25243                           indf0	equ	0x4EF
 25244                           postinc0	equ	0x4EE
 25245                           postdec0	equ	0x4ED
 25246                           preinc0	equ	0x4EC
 25247                           plusw0	equ	0x4EB
 25248                           fsr0h	equ	0x4EA
 25249                           fsr0l	equ	0x4E9
 25250                           wreg	equ	0x4E8
 25251                           indf1	equ	0x4E7
 25252                           postinc1	equ	0x4E6
 25253                           postdec1	equ	0x4E5
 25254                           preinc1	equ	0x4E4
 25255                           plusw1	equ	0x4E3
 25256                           fsr1h	equ	0x4E2
 25257                           fsr1l	equ	0x4E1
 25258                           bsr	equ	0x4E0
 25259                           indf2	equ	0x4DF
 25260                           postinc2	equ	0x4DE
 25261                           postdec2	equ	0x4DD
 25262                           preinc2	equ	0x4DC
 25263                           plusw2	equ	0x4DB
 25264                           fsr2h	equ	0x4DA
 25265                           fsr2l	equ	0x4D9
 25266                           status	equ	0x4D8

Data Sizes:
    Strings     270
    Constant    149
    Data        42
    BSS         63
    Persistent  26
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      93
    BANK5           160     23     151
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADCC_DefaultADI_ISR(), NULL(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADCC_DefaultADI_ISR(), 

    allChars	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_19(CODE[43]), 

    BACK_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BACK_DefaultInterruptHandler(), NULL(), 

    BACK_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BACK_DefaultInterruptHandler(), 

    BUTTON_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BUTTON_DefaultInterruptHandler(), NULL(), 

    BUTTON_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> BUTTON_DefaultInterruptHandler(), 

    displayString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> displayNumber@str(COMRAM[8]), Menu_AdjustOvercurrent@label(COMRAM[5]), Menu_AdjustSpeed@label(COMRAM[5]), Menu_AdjustTime@label(COMRAM[5]), 
		 -> Menu_PrintCurrentOption@shortLabel(COMRAM[5]), STR_10(CODE[5]), STR_11(CODE[5]), STR_12(CODE[5]), 
		 -> STR_13(CODE[5]), STR_14(CODE[5]), STR_15(CODE[5]), STR_16(CODE[5]), 
		 -> STR_17(CODE[5]), STR_18(CODE[5]), STR_20(CODE[5]), STR_31(CODE[5]), 
		 -> STR_32(CODE[5]), STR_33(CODE[5]), STR_34(CODE[4]), STR_35(CODE[5]), 
		 -> STR_36(CODE[5]), STR_37(CODE[5]), STR_38(CODE[4]), STR_39(CODE[5]), 
		 -> STR_40(CODE[4]), STR_41(CODE[5]), STR_42(CODE[5]), STR_7(CODE[5]), 
		 -> STR_8(CODE[5]), STR_9(CODE[5]), 

    DOWN_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DOWN_DefaultInterruptHandler(), NULL(), 

    DOWN_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DOWN_DefaultInterruptHandler(), 

    ENTER_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ENTER_DefaultInterruptHandler(), NULL(), 

    ENTER_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ENTER_DefaultInterruptHandler(), 

    GATE_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GATE_DefaultInterruptHandler(), NULL(), 

    GATE_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> GATE_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    menuOptionNames	PTR const unsigned char [5] size(2) Largest target is 14
		 -> STR_21(CODE[10]), STR_22(CODE[12]), STR_23(CODE[12]), STR_24(CODE[12]), 
		 -> STR_25(CODE[14]), 

    OpenGate$2951	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_9(CODE[5]), 

    PHOTOCELL_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PHOTOCELL_DefaultInterruptHandler(), NULL(), 

    PHOTOCELL_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PHOTOCELL_DefaultInterruptHandler(), 

    PWM1_PHASE_A_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_PHASE_A_Period_DefaultInterruptHandler(), NULL(), 

    PWM1_PHASE_A_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_PHASE_A_Period_DefaultInterruptHandler(), 

    PWM1_PHASE_A_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_PHASE_A_Slice1Output1_DefaultInterruptHandler(), NULL(), 

    PWM1_PHASE_A_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_PHASE_A_Slice1Output1_DefaultInterruptHandler(), 

    PWM1_PHASE_A_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_PHASE_A_Slice1Output2_DefaultInterruptHandler(), NULL(), 

    PWM1_PHASE_A_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_PHASE_A_Slice1Output2_DefaultInterruptHandler(), 

    S1678$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), 

    S1678TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), TMR2_Initialize(), 

    S1678TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodCountSet(), TMR2_PeriodCountSet(), 

    S1678TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), TMR2_Start(), 

    S1678TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), TMR2_Stop(), 

    S1678TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1678TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), 

    S2222$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), 

    S2222$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), 

    S2222$22$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), 

    S2222$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S2222$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_AutoBaudQuery(), 

    S2222$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART1_AutoBaudSet(), 

    S2222$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2222$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2222$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2222$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2222$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Deinitialize(), 

    S2222$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART1_ErrorGet(), 

    S2222$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2222$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_FramingErrorCallbackRegister(), 

    S2222$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Initialize(), 

    S2222$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsRxReady(), 

    S2222$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxDone(), 

    S2222$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxReady(), 

    S2222$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_OverrunErrorCallbackRegister(), 

    S2222$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_ParityErrorCallbackRegister(), 

    S2222$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART1_Read(), 

    S2222$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2222$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitDisable(), 

    S2222$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitEnable(), 

    S2222$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2222$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2222$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> UART1_Write(), 

    SetGate@displayMsg	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), STR_11(CODE[5]), STR_12(CODE[5]), STR_8(CODE[5]), 
		 -> STR_9(CODE[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 5
		 -> Menu_PrintCurrentOption@shortLabel(COMRAM[5]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> Menu_PrintCurrentOption@shortLabel(COMRAM[5]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 5
		 -> Menu_PrintCurrentOption@shortLabel(COMRAM[5]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_26(CODE[5]), STR_27(CODE[5]), STR_28(CODE[5]), STR_29(CODE[5]), 
		 -> STR_30(CODE[5]), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), TMR2_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodCountSet(), TMR2_PeriodCountSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), TMR2_Start(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), TMR2_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), 

    Timer2$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), TMR2_Initialize(), 

    Timer2$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodCountSet(), TMR2_PeriodCountSet(), 

    Timer2$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), TMR2_Start(), 

    Timer2$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), TMR2_Stop(), 

    Timer2$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), TMR2_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), 

    TMR2_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), NULL(), 

    TMR2_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> i2_UART1_IsTxReady(), UART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_ParityErrorCallbackRegister(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_UART1_Write(), UART1_Write(), 

    UART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), NULL(), 

    UART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), NULL(), 

    UART1_ParityErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), 

    UART1_ParityErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), NULL(), 

    UART1_WriteString@str	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_1(CODE[10]), STR_2(CODE[5]), STR_3(CODE[42]), STR_4(CODE[10]), 
		 -> STR_5(CODE[5]), STR_6(CODE[28]), 

    UP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UP_DefaultInterruptHandler(), NULL(), 

    UP_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UP_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_ADCC_StartConversion
    _PIN_MANAGER_IOC->_BUTTON_ISR
    _PIN_MANAGER_IOC->_GATE_ISR
    _PIN_MANAGER_IOC->_PHOTOCELL_ISR
    _Menu_HandleUp->_Menu_AdjustSpeed
    _Menu_HandleUp->_Menu_PrintCurrentOption
    _ENTER_ISR->_Menu_HandleEnterPress
    _Menu_HandleEnterPress->_Menu_PrintCurrentOption
    _Menu_SaveSettings->_EEPROM_WriteUInt16
    _EEPROM_WriteUInt16->_EEPROM_Write
    _Menu_HandleDown->_Menu_AdjustSpeed
    _Menu_HandleDown->_Menu_PrintCurrentOption
    _Menu_AdjustTime->i2_displayString
    _Menu_AdjustSpeed->_Motor_UpdateSpeedLevel
    _Menu_AdjustOvercurrent->i2_displayString
    _HandleEmergency->_EmergencyOpen
    _EmergencyOpen->_HandleMotorState
    _HandleButtonMenuConfig->_HandleConfigMode
    _UART1_WriteUInt->___lwdiv
    _HandleConfigMode->_CloseGateSlow
    _configOpenGate->i2_displayString
    _configCloseGate->i2_displayString
    _Menu_HandleBack->_Menu_PrintCurrentOption
    _Menu_PrintCurrentOption->i2_displayString
    _ADCC_ISR->_CheckOverCurrent
    _CheckOverCurrent->___fltol
    i2_UART1_WriteString->i2_putch
    _printInt->___lwdiv
    i2_putch->i2_UART1_Write
    i2_UART1_Write->i2_UART1_IsTxReady
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___fladd
    _HandleMotorState->_OpenGate
    _StopGate->i2_displayString
    _OpenGateSlow->_SetGate
    _OpenGate->_SetGate
    _CloseGateSlow->_SetGate
    _CloseGate->_SetGate
    _SetGate->i2_displayString
    i2_displayString->i2_displayChar
    i2_displayChar->i2_findChar

Critical Paths under _main in BANK5

    _projectInitialize->_EEPROM_ReadUInt16
    _EEPROM_ReadUInt16->_EEPROM_Read
    _UART1_WriteString->_putch
    _putch->_UART1_Write
    _UART1_Write->_UART1_IsTxReady
    _UART1_Initialize->_UART1_FramingErrorCallbackRegister
    _UART1_Initialize->_UART1_OverrunErrorCallbackRegister
    _UART1_Initialize->_UART1_ParityErrorCallbackRegister
    _TMR2_Initialize->_TMR2_OverflowCallbackRegister
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _TM1637_init->_displayString
    _setBrightness->_writeByte
    _displayString->_displayChar
    _displayChar->_findChar
    _PWM1_PHASE_A_Initialize->_PWM1_PHASE_A_Period_SetInterruptHandler
    _PWM1_PHASE_A_Initialize->_PWM1_PHASE_A_Slice1Output1_SetInterruptHandler
    _PWM1_PHASE_A_Initialize->_PWM1_PHASE_A_Slice1Output2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_BACK_SetInterruptHandler
    _PIN_MANAGER_Initialize->_BUTTON_SetInterruptHandler
    _PIN_MANAGER_Initialize->_DOWN_SetInterruptHandler
    _PIN_MANAGER_Initialize->_ENTER_SetInterruptHandler
    _PIN_MANAGER_Initialize->_GATE_SetInterruptHandler
    _PIN_MANAGER_Initialize->_PHOTOCELL_SetInterruptHandler
    _PIN_MANAGER_Initialize->_UP_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1537
                  _SYSTEM_Initialize
                  _UART1_WriteString
                  _projectInitialize
 ---------------------------------------------------------------------------------
 (1) _projectInitialize                                    0     0      0     124
        _DEBUG_PRINT_INT@debug$F2824
                  _EEPROM_ReadUInt16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadUInt16                                    7     4      3     119
                                              9 BANK5      7     4      3
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          3     0      3      24
                                              6 BANK5      3     0      3
                         _NVM_IsBusy
 ---------------------------------------------------------------------------------
 (4) _NVM_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DEBUG_PRINT_INT@debug$F2824                          2     0      2       5
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART1_WriteString                                    2     0      2     154
                                              9 BANK5      2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     106
                                              8 BANK5      1     1      0
                    _UART1_IsTxReady
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     1      0      53
                                              7 BANK5      1     1      0
                    _UART1_IsTxReady
 ---------------------------------------------------------------------------------
 (4) _UART1_IsTxReady                                      1     1      0      24
                                              6 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1259
                    _ADCC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
            _PWM1_PHASE_A_Initialize
                        _TM1637_init
                    _TMR0_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     135
 _UART1_FramingErrorCallbackRegister
 _UART1_OverrunErrorCallbackRegister
  _UART1_ParityErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _UART1_ParityErrorCallbackRegister                    2     0      2      45
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_OverrunErrorCallbackRegister                   2     0      2      45
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_FramingErrorCallbackRegister                   2     0      2      45
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      23
      _TMR2_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR2_OverflowCallbackRegister                        2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      23
                                              8 BANK5      2     2      0
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR0_OverflowCallbackRegister                        2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TM1637_init                                          0     0      0     756
                      _displayString
                      _setBrightness
 ---------------------------------------------------------------------------------
 (3) _setBrightness                                        1     1      0     164
                                              8 BANK5      1     1      0
                              _start
                               _stop
                          _writeByte
 ---------------------------------------------------------------------------------
 (3) _displayString                                        7     4      3     592
                                             16 BANK5      7     4      3
                        _displayChar
 ---------------------------------------------------------------------------------
 (4) _displayChar                                          6     4      2     405
                                             10 BANK5      6     4      2
                           _findChar
                              _start
                               _stop
                          _writeByte
 ---------------------------------------------------------------------------------
 (4) _writeByte                                            2     2      0      77
                                              6 BANK5      2     2      0
 ---------------------------------------------------------------------------------
 (4) _stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _findChar                                             4     4      0     206
                                              6 BANK5      4     4      0
 ---------------------------------------------------------------------------------
 (2) _PWM1_PHASE_A_Initialize                              0     0      0      69
_PWM1_PHASE_A_Period_SetInterruptHan
_PWM1_PHASE_A_Slice1Output1_SetInter
_PWM1_PHASE_A_Slice1Output2_SetInter
 ---------------------------------------------------------------------------------
 (3) _PWM1_PHASE_A_Slice1Output2_SetInterruptHandler       2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_PHASE_A_Slice1Output1_SetInterruptHandler       2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_PHASE_A_Period_SetInterruptHandler              2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     161
           _BACK_SetInterruptHandler
         _BUTTON_SetInterruptHandler
           _DOWN_SetInterruptHandler
          _ENTER_SetInterruptHandler
           _GATE_SetInterruptHandler
      _PHOTOCELL_SetInterruptHandler
             _UP_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UP_SetInterruptHandler                               2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PHOTOCELL_SetInterruptHandler                        2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _GATE_SetInterruptHandler                             2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ENTER_SetInterruptHandler                            2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DOWN_SetInterruptHandler                             2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _BUTTON_SetInterruptHandler                           2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _BACK_SetInterruptHandler                             2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      23
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          2     0      2      23
                                              6 BANK5      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           6     6      0   67807
                                              0 BANK5      6     6      0
                           _ADCC_ISR
                    _PIN_MANAGER_IOC
                   _TMR0_OverflowISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0      29
                                NULL *
               _ADCC_StartConversion
       _TMR0_DefaultOverflowCallback *
       _TMR2_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (8) _ADCC_StartConversion                                 1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR0_OverflowISR                                     0     0      0   16912
                                NULL *
             _HandleAutoCloseTimeout
         _HandleFullSpeedTransitions
       _TMR0_DefaultOverflowCallback *
                        _TMR0_Reload
       _TMR2_DefaultOverflowCallback *
                  _TrackConfigTiming
 ---------------------------------------------------------------------------------
 (8) _TrackConfigTiming                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _HandleFullSpeedTransitions                           0     0      0    8456
                       _MotorControl
 ---------------------------------------------------------------------------------
 (8) _HandleAutoCloseTimeout                               0     0      0    8456
                       _MotorControl
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0   40474
                           _BACK_ISR
                         _BUTTON_ISR
                           _DOWN_ISR
                          _ENTER_ISR
                           _GATE_ISR
                      _PHOTOCELL_ISR
                             _UP_ISR
 ---------------------------------------------------------------------------------
 (8) _UP_ISR                                               2     2      0    3499
                                             24 COMRAM     2     2      0
                                NULL *
                      _Menu_HandleUp
         _UP_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _UP_DefaultInterruptHandler                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Menu_HandleUp                                        0     0      0    3499
             _Menu_AdjustOvercurrent
                   _Menu_AdjustSpeed
                    _Menu_AdjustTime
            _Menu_PrintCurrentOption
 ---------------------------------------------------------------------------------
 (8) _PHOTOCELL_ISR                                        2     2      0    8456
                                             32 COMRAM     2     2      0
                       _MotorControl
 ---------------------------------------------------------------------------------
 (8) _GATE_ISR                                             2     2      0    8456
                                             32 COMRAM     2     2      0
                       _MotorControl
 ---------------------------------------------------------------------------------
 (8) _ENTER_ISR                                            2     2      0    1823
                                             26 COMRAM     2     2      0
                                NULL *
      _ENTER_DefaultInterruptHandler *
              _Menu_HandleEnterPress
 ---------------------------------------------------------------------------------
 (9) _Menu_HandleEnterPress                                2     2      0    1823
                                             24 COMRAM     2     2      0
            _Menu_PrintCurrentOption
                  _Menu_SaveSettings
                    i2_displayString
 ---------------------------------------------------------------------------------
 (10) _Menu_SaveSettings                                   0     0      0     327
                 _EEPROM_WriteUInt16
 ---------------------------------------------------------------------------------
 (11) _EEPROM_WriteUInt16                                 11     6      5     327
                                              5 COMRAM    11     6      5
         _DEBUG_PRINT_HEX@debug$F663
         _DEBUG_PRINT_INT@debug$F660
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (12) _EEPROM_Write                                        5     1      4      71
                                              0 COMRAM     5     1      4
                 _NVM_UnlockSequence
                       i2_NVM_IsBusy
 ---------------------------------------------------------------------------------
 (13) i2_NVM_IsBusy                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _NVM_UnlockSequence                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _DEBUG_PRINT_INT@debug$F660                          2     0      2       1
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _DEBUG_PRINT_HEX@debug$F663                          1     1      0       0
 ---------------------------------------------------------------------------------
 (9) _ENTER_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _DOWN_ISR                                             2     2      0    3666
                                             24 COMRAM     2     2      0
                                NULL *
       _DOWN_DefaultInterruptHandler *
                    _Menu_HandleDown
 ---------------------------------------------------------------------------------
 (9) _Menu_HandleDown                                      0     0      0    3666
             _Menu_AdjustOvercurrent
                   _Menu_AdjustSpeed
                    _Menu_AdjustTime
            _Menu_PrintCurrentOption
                            ___lwmod
 ---------------------------------------------------------------------------------
 (10) _Menu_AdjustTime                                     6     6      0     931
                                             17 COMRAM     6     6      0
        _DEBUG_PRINT_INT@debug$F3089
                            ___lwdiv
                    i2_displayString
 ---------------------------------------------------------------------------------
 (10) _Menu_AdjustSpeed                                    6     6      0     777
                                             18 COMRAM     6     6      0
        _DEBUG_PRINT_INT@debug$F3089
             _Motor_UpdateSpeedLevel
                    i2_displayString
 ---------------------------------------------------------------------------------
 (11) _Motor_UpdateSpeedLevel                             18    18      0      24
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 (10) _Menu_AdjustOvercurrent                              6     6      0     931
                                             17 COMRAM     6     6      0
        _DEBUG_PRINT_INT@debug$F3089
                            ___lwdiv
                    i2_displayString
 ---------------------------------------------------------------------------------
 (9) _DOWN_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _BUTTON_ISR                                           2     2      0   13078
                                             32 COMRAM     2     2      0
             _HandleButtonMenuConfig
                       _MotorControl
 ---------------------------------------------------------------------------------
 (9) _MotorControl                                         0     0      0    8456
                    _HandleEmergency
                   _HandleMotorState
            _HandleMotorWhileRunning
            _HandleMotorWhileStopped
 ---------------------------------------------------------------------------------
 (10) _HandleMotorWhileStopped                             0     0      0       0
                          _TMR0_Stop
 ---------------------------------------------------------------------------------
 (10) _HandleMotorWhileRunning                             0     0      0       0
                         _TMR0_Start
 ---------------------------------------------------------------------------------
 (10) _HandleEmergency                                     0     0      0    4228
                      _EmergencyOpen
 ---------------------------------------------------------------------------------
 (11) _EmergencyOpen                                       2     2      0    4228
                                             30 COMRAM     2     2      0
                   _HandleMotorState
 ---------------------------------------------------------------------------------
 (9) _HandleButtonMenuConfig                               2     2      0    4622
                                             28 COMRAM     2     2      0
        _DEBUG_PRINT_INT@debug$F3089
                   _HandleConfigMode
                    _UART1_WriteUInt
 ---------------------------------------------------------------------------------
 (10) _UART1_WriteUInt                                     9     7      2     626
                                              7 COMRAM     9     7      2
                            ___lwdiv
                            ___lwmod
                      i2_UART1_Write
 ---------------------------------------------------------------------------------
 (10) _HandleConfigMode                                    2     2      0    3990
                                             26 COMRAM     2     2      0
                      _CloseGateSlow
                       _OpenGateSlow
                           _StopGate
                    _configCloseGate
                     _configOpenGate
 ---------------------------------------------------------------------------------
 (11) _configOpenGate                                      2     2      0     684
                                             17 COMRAM     2     2      0
                _PWM1_PHASE_A_Enable
   _PWM1_PHASE_A_LoadBufferRegisters
_PWM1_PHASE_A_SetSlice1Output1DutyCy
                         _TMR0_Start
                    i2_displayString
 ---------------------------------------------------------------------------------
 (11) _configCloseGate                                     0     0      0     684
                _PWM1_PHASE_A_Enable
   _PWM1_PHASE_A_LoadBufferRegisters
_PWM1_PHASE_A_SetSlice1Output1DutyCy
                         _TMR0_Start
                    i2_displayString
 ---------------------------------------------------------------------------------
 (11) _DEBUG_PRINT_INT@debug$F3089                         2     0      2       6
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _BACK_ISR                                             2     2      0    1496
                                             24 COMRAM     2     2      0
                                NULL *
       _BACK_DefaultInterruptHandler *
                    _Menu_HandleBack
 ---------------------------------------------------------------------------------
 (9) _Menu_HandleBack                                      0     0      0    1496
            _Menu_PrintCurrentOption
                    i2_displayString
 ---------------------------------------------------------------------------------
 (10) _Menu_PrintCurrentOption                             7     7      0     860
                                             17 COMRAM     7     7      0
                             _strcpy
                    i2_displayString
 ---------------------------------------------------------------------------------
 (11) _strcpy                                              6     2      4      83
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) _BACK_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADCC_ISR                                             0     0      0   10392
                                NULL *
                _ADCC_DefaultADI_ISR *
                   _CheckOverCurrent
 ---------------------------------------------------------------------------------
 (8) _CheckOverCurrent                                    14    14      0   10392
                                             76 COMRAM    14    14      0
           _ADCC_GetConversionResult
                   _HandleMotorState
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                           _printInt
                i2_UART1_WriteString
 ---------------------------------------------------------------------------------
 (9) i2_UART1_WriteString                                  2     0      2     154
                                              3 COMRAM     2     0      2
                            i2_putch
 ---------------------------------------------------------------------------------
 (9) _printInt                                            14    12      2     658
                                              7 COMRAM    14    12      2
                            ___lwdiv
                            ___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0     106
                                              2 COMRAM     1     1      0
                  i2_UART1_IsTxReady
                      i2_UART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_UART1_Write                                       1     1      0      53
                                              1 COMRAM     1     1      0
                  i2_UART1_IsTxReady
 ---------------------------------------------------------------------------------
 (12) i2_UART1_IsTxReady                                   1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) ___lwmod                                             5     1      4     167
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2      67
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) ___xxtofl                                            14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (9) ___fltol                                             10     6      4     230
                                             66 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             25    17      8    1470
                                             41 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fldiv                                             25    17      8    1125
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    1986
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (10) _HandleMotorState                                    2     2      0    4228
                                             28 COMRAM     2     2      0
                          _CloseGate
                      _CloseGateSlow
                 _MotorStartSampling
                  _MotorStopSampling
                           _OpenGate
                       _OpenGateSlow
                           _StopGate
 ---------------------------------------------------------------------------------
 (11) _StopGate                                            0     0      0     684
               _PWM1_PHASE_A_Disable
   _PWM1_PHASE_A_LoadBufferRegisters
_PWM1_PHASE_A_SetSlice1Output1DutyCy
                    i2_displayString
 ---------------------------------------------------------------------------------
 (12) _PWM1_PHASE_A_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _OpenGateSlow                                        0     0      0     969
                            _SetGate
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (11) _OpenGate                                            4     4      0     815
                                             24 COMRAM     4     4      0
                            _SetGate
 ---------------------------------------------------------------------------------
 (11) _MotorStopSampling                                   0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (12) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MotorStartSampling                                  0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (12) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CloseGateSlow                                       2     2      0     969
                                             24 COMRAM     2     2      0
                            _SetGate
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (12) ___lwdiv                                             7     3      4     178
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) _CloseGate                                           0     0      0     791
                            _SetGate
 ---------------------------------------------------------------------------------
 (12) _SetGate                                             7     1      6     791
                                             17 COMRAM     7     1      6
                _PWM1_PHASE_A_Enable
   _PWM1_PHASE_A_LoadBufferRegisters
_PWM1_PHASE_A_SetSlice1Output1DutyCy
                         _TMR0_Start
                          _TMR0_Stop
                            ___lwdiv (ARG)
                    i2_displayString
 ---------------------------------------------------------------------------------
 (12) i2_displayString                                     7     4      3     636
                                             10 COMRAM     7     4      3
                      i2_displayChar
 ---------------------------------------------------------------------------------
 (13) i2_displayChar                                       6     4      2     405
                                              4 COMRAM     6     4      2
                         i2_findChar
                            i2_start
                             i2_stop
                        i2_writeByte
 ---------------------------------------------------------------------------------
 (14) i2_writeByte                                         2     2      0      77
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_stop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_start                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_findChar                                          4     4      0     206
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (11) _TMR0_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister      2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _PWM1_PHASE_A_LoadBufferRegisters                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _PWM1_PHASE_A_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADCC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _ADCC_DefaultADI_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
       _BACK_SetInterruptHandler
       _BUTTON_SetInterruptHandler
       _DOWN_SetInterruptHandler
       _ENTER_SetInterruptHandler
       _GATE_SetInterruptHandler
       _PHOTOCELL_SetInterruptHandler
       _UP_SetInterruptHandler
     _PWM1_PHASE_A_Initialize
       _PWM1_PHASE_A_Period_SetInterruptHandler
       _PWM1_PHASE_A_Slice1Output1_SetInterruptHandler
       _PWM1_PHASE_A_Slice1Output2_SetInterruptHandler
     _TM1637_init
       _displayString
         _displayChar
           _findChar
           _start
           _stop
           _writeByte
       _setBrightness
         _start
         _stop
         _writeByte
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
     _TMR2_Initialize
       _TMR2_OverflowCallbackRegister
     _UART1_Initialize
       _UART1_FramingErrorCallbackRegister
       _UART1_OverrunErrorCallbackRegister
       _UART1_ParityErrorCallbackRegister
   _UART1_WriteString
     _putch
       _UART1_IsTxReady
       _UART1_Write
         _UART1_IsTxReady
   _projectInitialize
     _DEBUG_PRINT_INT@debug$F2824
     _EEPROM_ReadUInt16
       _EEPROM_Read
         _NVM_IsBusy

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ISR
     NULL(Fake) *
     _ADCC_DefaultADI_ISR *
     _CheckOverCurrent *
       _ADCC_GetConversionResult
       _HandleMotorState
         _CloseGate
           _SetGate
             _PWM1_PHASE_A_Enable
             _PWM1_PHASE_A_LoadBufferRegisters
             _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
             _TMR0_Start
             _TMR0_Stop
             ___lwdiv (ARG)
             i2_displayString (ARG)
               i2_displayChar
                 i2_findChar
                 i2_start
                 i2_stop
                 i2_writeByte
         _CloseGateSlow
           _SetGate
           ___lwdiv
         _MotorStartSampling
           _TMR2_Start
         _MotorStopSampling
           _TMR2_Stop
         _OpenGate
           _SetGate
         _OpenGateSlow
           _SetGate
           ___lwdiv
         _StopGate
           _PWM1_PHASE_A_Disable
           _PWM1_PHASE_A_LoadBufferRegisters
           _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
           i2_displayString
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
       _abs
       _printInt
         ___lwdiv
         ___lwmod
         i2_putch
           i2_UART1_IsTxReady
           i2_UART1_Write
             i2_UART1_IsTxReady
       i2_UART1_WriteString
         i2_putch
   _PIN_MANAGER_IOC
     _BACK_ISR
       NULL(Fake) *
       _BACK_DefaultInterruptHandler *
       _Menu_HandleBack *
         _Menu_PrintCurrentOption
           _strcpy
           i2_displayString
         i2_displayString
     _BUTTON_ISR
       _HandleButtonMenuConfig
         _DEBUG_PRINT_INT@debug$F3089
         _HandleConfigMode
           _CloseGateSlow
           _OpenGateSlow
           _StopGate
           _configCloseGate
             _PWM1_PHASE_A_Enable
             _PWM1_PHASE_A_LoadBufferRegisters
             _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
             _TMR0_Start
             i2_displayString
           _configOpenGate
             _PWM1_PHASE_A_Enable
             _PWM1_PHASE_A_LoadBufferRegisters
             _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister
             _TMR0_Start
             i2_displayString
         _UART1_WriteUInt
           ___lwdiv
           ___lwmod
           i2_UART1_Write
       _MotorControl
         _HandleEmergency
           _EmergencyOpen
             _HandleMotorState
         _HandleMotorState
         _HandleMotorWhileRunning
           _TMR0_Start
         _HandleMotorWhileStopped
           _TMR0_Stop
     _DOWN_ISR
       NULL(Fake) *
       _DOWN_DefaultInterruptHandler *
       _Menu_HandleDown *
         _Menu_AdjustOvercurrent
           _DEBUG_PRINT_INT@debug$F3089
           ___lwdiv
           i2_displayString
         _Menu_AdjustSpeed
           _DEBUG_PRINT_INT@debug$F3089
           _Motor_UpdateSpeedLevel
           i2_displayString
         _Menu_AdjustTime
           _DEBUG_PRINT_INT@debug$F3089
           ___lwdiv
           i2_displayString
         _Menu_PrintCurrentOption
         ___lwmod
     _ENTER_ISR
       NULL(Fake) *
       _ENTER_DefaultInterruptHandler *
       _Menu_HandleEnterPress *
         _Menu_PrintCurrentOption
         _Menu_SaveSettings
           _EEPROM_WriteUInt16
             _DEBUG_PRINT_HEX@debug$F663
             _DEBUG_PRINT_INT@debug$F660
             _EEPROM_Write
               _NVM_UnlockSequence
               i2_NVM_IsBusy
         i2_displayString
     _GATE_ISR
       _MotorControl
     _PHOTOCELL_ISR
       _MotorControl
     _UP_ISR
       NULL(Fake) *
       _Menu_HandleUp *
         _Menu_AdjustOvercurrent
         _Menu_AdjustSpeed
         _Menu_AdjustTime
         _Menu_PrintCurrentOption
       _UP_DefaultInterruptHandler *
   _TMR0_OverflowISR
     NULL(Fake) *
     _HandleAutoCloseTimeout *
       _MotorControl
     _HandleFullSpeedTransitions *
       _MotorControl
     _TMR0_DefaultOverflowCallback *
     _TMR0_Reload *
     _TMR2_DefaultOverflowCallback *
     _TrackConfigTiming *
   _TMR2_ISR
     NULL(Fake) *
     _ADCC_StartConversion *
     _TMR0_DefaultOverflowCallback *
     _TMR2_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBIGSFRlllh      614      0       0      0.0%
BITBIGSFRh         478      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     23     151     94.4%
BITBIGSFRlllllh    105      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     90      93     97.9%
BITBIGSFRllllll     64      0       0      0.0%
BITBIGSFRllllh       5      0       0      0.0%
BITBIGSFRllh         3      0       0      0.0%
BITBIGSFRlh          2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     244      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jun 18 10:43:00 2025

                                ?_TMR2_OverflowCallbackRegister 05E6  
                                                  ___fldiv@aexp 0529  
                                                  ___fldiv@bexp 0528  
                                  ??_DEBUG_PRINT_INT@debug$F660 0503  
                                                  ?_displayChar 05EA  
                   _PWM1_PHASE_A_Period_DefaultInterruptHandler 0000  
                                                  ___fldiv@sign 0521  
                                     _UART1_IsTxReady$intlevel0 30D2  
                                                   ?_BUTTON_ISR 0501  
                                           EEPROM_WriteUInt16@i 0510  
                                 ??_DEBUG_PRINT_INT@debug$F3089 0503  
                                 ??_DEBUG_PRINT_INT@debug$F2824 05E8  
                                                  ?_TM1637_init 0501  
                                         _UART1_Write$intlevel0 335C  
                                         __end_ofi2_UART1_Write 34C0  
                                                           l115 2D0C  
                                                           l208 3610  
                                                           l241 34D4  
                                                           l250 3054  
                                                           l331 2B5A  
                                                           l244 3642  
                                                           l421 32FC  
                                                           l238 363C  
                                                           l255 2F2E  
                                                           l371 35A2  
                                                           l259 2F5A  
                                                           l612 1A16  
                                                           l365 3598  
                                                           l711 35DE  
                                                           l368 358E  
                                                           l633 35D4  
                                                           l803 3606  
                                                           l724 35CA  
                                                           l661 35AC  
                                                           l398 3514  
                                                           l647 35E8  
                                                           l903 31A4  
                                                           l816 35FC  
                                          UART1_WriteString@str 05E9  
                                                           l780 308E  
                                                           l829 35F2  
                                                           l677 35C0  
                                                           l695 35B6  
                                                           l943 3570  
                                                           l993 3326  
                                                           _RC3 2683  
                                                           _RC4 2684  
                                                           _PR2 031D  
                                    ??_INT0_SetInterruptHandler 05E8  
                                    ??_DOWN_SetInterruptHandler 05E8  
                                                           _abs 3212  
                                     ??_Menu_PrintCurrentOption 0512  
                                               _TMR2_Initialize 32FE  
                                                           prod 04F3  
                                                           tosl 04FD  
                                                           wreg 04E8  
                                                _UART1_IsTxDone 0000  
                                                  ___flmul@aexp 053B  
                                                  ___flmul@bexp 053C  
                                  ?_ADCC_SetADIInterruptHandler 05E6  
                                                  ___flmul@sign 0536  
                                                  ___flmul@temp 0541  
                                                  ___flmul@prod 053D  
                                                    i2_findChar 2812  
                                             _projectInitialize 1148  
                                                   _userRequest 058E  
                                      _UART1_ParityErrorHandler 0568  
                                                _UART1_ErrorGet 0000  
                                                 printInt@value 0508  
                                                  ___fltol@exp1 054C  
                                                ?_displayString 05F0  
                                                          l1024 3566  
                                                          l1203 30C6  
                                                          ?_abs 0501  
                                                          l1301 3668  
                                                          l1126 2960  
                                                          l1240 3484  
                                                          l1314 3404  
                                                          l1227 33EA  
                                                          l1315 3404  
                                                          l1244 3466  
                                                          l1309 1294  
                                                          l1248 3448  
                                                          l1177 30FA  
                                                          l1178 30FE  
                                                          l1196 3374  
                                                          l1197 3378  
                                                          l1543 33A0  
                                                          l1552 2C70  
                                                          l1553 2C9E  
                                                          l1546 3584  
                                                          l1554 2CB8  
                                                          l1555 2CBA  
                                                          l1549 357A  
                                                          l1583 182C  
                                                          l1559 32A6  
                                                          l1576 2640  
                                                          l1569 2556  
                                                          l1587 1872  
                                                          l5300 2C8C  
                                                          l5310 2508  
                                                          l5302 2C8E  
                                          _ADCC_StartConversion 3552  
                                                          l5320 2514  
                                                          l5304 2CB4  
                                                          l5330 2554  
                                                          l5322 253C  
                                                          l5314 2510  
                                                          l5306 24E6  
                                                          l5308 24F8  
                                                          l5326 2542  
                                                          l7110 33F2  
                                                          l5328 2544  
                                                          l5520 2606  
                                                          l5512 25D2  
                                                          l7112 33F6  
                                                          l5290 2C6C  
                                                          l5530 2626  
                                                          l5522 2616  
                                                          l5514 25D2  
                                                          l5362 30D2  
                                                          l7106 33EC  
                                                          l6500 2CF4  
                                                          l5700 35D6  
                                                          l5532 262A  
                                                          l5524 2618  
                                                          l5516 25F2  
                                                          l5364 30E6  
                                                          l7108 33F0  
                                                          l6502 2CF6  
                                                          l5702 35C2  
                                                          l5286 357C  
                                                          l5534 2634  
                                                          l5526 261C  
                                                          l5366 30F4  
                                                          l5358 34C0  
                                                          l6504 2D04  
                                                          l6600 3512  
                                                          l5288 3572  
                                                          l5296 2C84  
                                                          l5536 263C  
                                                          l5528 2622  
                                                          l6506 2D06  
                                                          l6610 196E  
                                                          l6602 1948  
                                                          l5298 2C8A  
                                                          l6508 2D08  
                                                          l6700 306C  
                                                          l6620 198A  
                                                          l6612 1970  
                                                          l6604 1956  
                                                          l5900 17E8  
                                                          l5638 3608  
                                                          l6702 307C  
                                                          l6630 19AA  
                                                          l6622 1998  
                                                          l6614 197A  
                                                          l6606 196A  
                                                          l5910 1842  
                                                          l5902 1814  
                                                          l6710 3394  
                                                          l5670 2F1A  
                                                          l6550 3048  
                                                          l6480 2CCE  
                                                          l6704 307E  
                                                          l6544 3638  
                                                          l6640 19DC  
                                                          l6632 19B0  
                                                          l6624 19A0  
                                                          l6616 1984  
                                                          l6608 196C  
                                                          l6560 2B0A  
                                                          l5904 1826  
                                                          l5920 32A2  
                                                          l5912 327E  
                                                          l6712 339A  
                                                          l5680 2F56  
                                                          l5672 2F1A  
                                                          l6490 2CDE  
                                                          l6482 2CD6  
                                                          l5690 35CC  
                                                          l6642 19EA  
                                                          l6634 19B2  
                                                          l6626 19A2  
                                                          l6618 1986  
                                                          l6570 2B20  
                                                          l6562 2B0C  
                                                          l6554 2AFA  
                                                          l5906 182A  
                                                          l5914 3290  
                                                          l6706 337A  
                                                          l6650 3170  
                                                          l5674 2F3A  
                                                          l6546 301A  
                                                          l6492 2CE4  
                                                          l6484 2CD8  
                                                          l5668 363E  
                                                          l5692 35E0  
                                                          l6644 19F8  
                                                          l6636 19C0  
                                                          l6628 19A8  
                                                          l5684 3590  
                                                          l6580 2B2A  
                                                          l6572 2B22  
                                                          l6564 2B0E  
                                                          l6556 2AFC  
                                                          l5908 1832  
                                                          l5916 3294  
                                                          l6708 3382  
                                                          l6660 319E  
                                                          l6652 3176  
                                                          l6900 32F4  
                                                          l5676 2F40  
                                                          l6548 302E  
                                                          l6494 2CE6  
                                                          l6486 2CDA  
                                                          l6478 2CBC  
                                                          l5870 35F4  
                                                          l5694 35A4  
                                                          l6646 1A06  
                                                          l6638 19CE  
                                                          l5686 3586  
                                                          l6590 2B58  
                                                          l6582 2B2C  
                                                          l6574 2B24  
                                                          l6566 2B10  
                                                          l6558 2B00  
                                                          l5918 3298  
                                                          l6654 318E  
                                                          l6670 330E  
                                                          l6662 32FE  
                                                          l6902 32F8  
                                                          l5678 2F42  
                                                          l6496 2CE8  
                                                          l6488 2CDC  
                                                          l6592 3502  
                                                          l5872 35EA  
                                                          l5696 35B8  
                                                          l6648 1A14  
                                                          l5688 359A  
                                                          l6584 2B2E  
                                                          l6576 2B26  
                                                          l6568 2B1E  
                                                          l6656 319A  
                                                          l6672 331C  
                                                          l6664 3304  
                                                          l5880 347C  
                                                          l6680 290C  
                                                          l6498 2CEA  
                                                          l6594 3508  
                                                          l5698 35AE  
                                                          l6586 2B3C  
                                                          l6578 2B28  
                                                          l5874 3568  
                                                          l6658 319C  
                                                          l6674 331E  
                                                          l6666 3306  
                                                          l5882 344A  
                                                          l6690 2948  
                                                          l6682 2924  
                                                          l5890 3360  
                                                          l6596 350A  
                                                          l5868 35FE  
                                                          l6588 2B4A  
                                                          l5876 355E  
                                                          l6676 3320  
                                                          l6668 330C  
                                                          l5884 345E  
                                                          l6692 2956  
                                                          l6684 292A  
                                                          l5892 3360  
                                                          l6860 33CE  
                                                          l6598 3510  
                                                          l6694 3056  
                                                          l5894 1798  
                                                          l5878 3468  
                                                          l5886 342C  
                                                          l6686 292C  
                                                          l6678 28F6  
                                                          l6862 33CE  
                                                          l6870 3094  
                                                          l6696 305C  
                                                          l5896 17A4  
                                                          l5888 3440  
                                                          l6688 293A  
                                                          l6864 33E2  
                                                          l6872 30A4  
                                                          l6698 306A  
                                                          l5898 17E2  
                                                          l6890 32E0  
                                                          l6874 30AA  
                                                          l6970 11DE  
                                                          l6892 32E4  
                                                          l6884 32D4  
                                                          l6868 3090  
                                                          l6980 123C  
                                                          l6972 11EA  
                                                          l6964 1148  
                                                          l6894 32E8  
                                                          l6886 32D8  
                                                          l6982 1250  
                                                          l6974 11F6  
                                                          l6966 11C6  
                                                          l6896 32EC  
                                                          l6888 32DC  
                                                          l6984 1264  
                                                          l6976 1218  
                                                          l6968 11D2  
                                                          l6898 32F0  
                                                          l6978 122C  
                                                          l6986 126C  
                                                          STR_1 7F9D  
                                                          STR_2 7FED  
                                                          STR_3 7F1B  
                                                          STR_5 7FE8  
                                                          STR_6 7F45  
                                                          STR_7 7FC5  
                                                          STR_8 7FCA  
                                                          STR_9 7FD4  
                                                          _LATA 04BE  
                                                          _LATB 04BF  
                                                          _LATC 04C0  
                                                          _T2PR 031D  
                                                          u4300 2616  
                                                          u4301 2612  
                                                          u4520 2F2E  
                                                          u4521 2F2A  
                                                          u4290 2602  
                                                          u4530 2F56  
                                                          u4291 25FE  
                                                          u4531 2F52  
                                                          u3900 253C  
                                                          u3901 2538  
                                                          u3910 2554  
                                                          u3911 2550  
                                                          u3840 2C82  
                                                          u4800 1826  
                                                          u3841 2C7C  
                                                          u4801 1822  
                                                          u4810 1842  
                                                          u4730 347C  
                                                          u4811 183E  
                                                          u4731 3478  
                                                          u3860 2C9E  
                                                          u4820 1862  
                                                          u4740 345E  
                                                          u6500 1250  
                                                          u3861 2C9A  
                                                          u4741 345A  
                                                          u6501 124C  
                                                          u3870 2CB4  
                                                          u4830 1872  
                                                          u4750 3440  
                                                          u6510 1264  
                                                          u3871 2CB0  
                                                          u3855 2C84  
                                                          u4831 186E  
                                                          u4751 343C  
                                                          u6511 1260  
                                                          u3880 24F8  
                                                          u4840 3290  
                                                          u4760 3374  
                                                          u6280 33E2  
                                                          u3881 24F4  
                                                          u4841 328C  
                                                          u4761 3370  
                                                          u6281 33DE  
                                                          u3890 2508  
                                                          u4770 17D2  
                                                          u6290 30C6  
                                                          u3970 34D2  
                                                          u3891 2504  
                                                          u4827 1858  
                                                          u6291 30C2  
                                                          u3971 34CC  
                                                          u4780 17E2  
                                                          u3980 30E6  
                                                          u4781 17DE  
                                                          u3981 30E2  
                                                          u4790 1810  
                                                          u3990 30F4  
                                                          u6470 1218  
                                                          u3991 30F0  
                                                          u6471 1214  
                                                          u3976 34D4  
                                                          u6480 122C  
                                                          u4777 17C8  
                                                          u6481 1228  
                                                          u6490 123C  
                                                          u6491 1238  
                                                          u4797 1806  
                                            ?_projectInitialize 0501  
                                                          _TMR2 031C  
                                                          _WPUA 0401  
                                                          _WPUB 0409  
                                                          _WPUC 0411  
                                              __end_of_ADCC_ISR 31DC  
                                              __end_of_BACK_ISR 279E  
                                         __end_of_setBrightness 32A8  
                                       __end_of_NVM_StatusClear 3644  
                                                          abs@a 0501  
                                                          _main 33EC  
                                                          fsr0h 04EA  
                                                          indf0 04EF  
                                                          fsr2h 04DA  
                                                          fsr0l 04E9  
                                                          indf2 04DF  
                                                          fsr1l 04E1  
                                                          fsr2l 04D9  
                                      ??_Menu_AdjustOvercurrent 0512  
                                                          _stop 3572  
                                  ??_UP_DefaultInterruptHandler 0501  
                                           __end_ofi2_writeByte 2DF8  
                                      __end_of_HandleMotorState 13B0  
                                         ??_ADCC_DefaultADI_ISR 0501  
                               ??_ENTER_DefaultInterruptHandler 0501  
                                     ?_INT2_SetInterruptHandler 05E6  
                                                          prodh 04F4  
                                                          prodl 04F3  
                                                          start 001A  
                                               ___fldiv@new_exp 0522  
                                           ??_projectInitialize 05F0  
                                               _UART1_IsRxReady 0000  
                                               __end_ofi2_putch 34A4  
                                               __end_ofi2_start 3626  
                                     _ENTER_SetInterruptHandler 35C2  
                                               _UART1_IsTxReady 30C8  
                                              __end_of_GATE_ISR 1798  
                                                  ___param_bank 0000  
                              Motor_UpdateSpeedLevel@speedTable 0501  
                                              _TMR0_OverflowISR 2558  
                                                         ??_abs 0503  
                                               __end_of_SetGate 28F6  
                                          __end_of_EEPROM_Write 2D5C  
   PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister@registerValue 0501  
                                 __end_of_Menu_HandleEnterPress 1148  
                                       __end_of_TMR0_Initialize 31A6  
                                              __end_of_DOWN_ISR 272A  
                                       _HandleMotorWhileRunning 13B0  
                                             ?_CheckOverCurrent 0501  
                                       _HandleMotorWhileStopped 1D2A  
                                                 ___fltol@sign1 054B  
                                                         _ADCAP 03F0  
                                                         _ADACT 03F9  
                                               __end_of___fladd 04D4  
                                                         ?_main 0501  
                                                         _ADCLK 03FA  
                                                         _ADCNT 03E6  
                                                         _ADPCH 03EC  
                                               __end_of___fldiv 0C8A  
                                                         _ADREF 03F8  
                                                         STR_10 7FDE  
                                                         STR_11 7FCF  
                                                         STR_20 7FC5  
                                                         STR_12 7FD9  
                                                         STR_13 7FC5  
                                                         STR_21 7F93  
                                                         STR_14 7FE3  
                                                         STR_30 7FB6  
                                                         STR_22 7F6F  
                                                         STR_31 7FC5  
                                                         STR_15 7FC5  
                                                         STR_23 7F87  
                                                         STR_32 7FBB  
                                                         STR_16 7FD4  
                                                         STR_40 7FF6  
                                                         STR_24 7F7B  
                                                         STR_41 7FC5  
                                                         STR_33 7FC5  
                                                         STR_17 7FC5  
                                                         STR_25 7F61  
                                      _GATE_SetInterruptHandler 35B8  
                                                         STR_42 7FC5  
                                                         STR_18 7FCF  
                                                         STR_34 7FF2  
                                                         STR_26 7FAC  
                                                         STR_35 7FC5  
                                                         STR_27 7FBB  
                                                         STR_19 7EF0  
                                                         STR_36 7FC0  
                                                         STR_28 7FA7  
                                                         STR_37 7FC5  
                                                         STR_29 7FB1  
                                                         STR_38 7FFA  
                                                         STR_39 7FC5  
                                                         _ADRPT 03E7  
                                               __end_of___flmul 08FA  
                                               __end_of___fltol 15C6  
                                                         ?_stop 0501  
                                                         _U1P1H 02A6  
                                                         _U1P2H 02A8  
                                                         _U1P1L 02A5  
                                                         _U1P3H 02AA  
                                                         _T2CON 031E  
                                                         _U1P2L 02A7  
                                                         _U1P3L 02A9  
                                                         _IOCAF 0407  
                                                         _T2HLT 031F  
                                                         _IOCBF 040F  
                                                         _IOCCF 0417  
                                                         _IOCAN 0406  
                                                         _IOCAP 0405  
                                                         _IOCBN 040E  
                                                         _IOCBP 040D  
                                                         _IOCCN 0416  
                                                         _IOCCP 0415  
                                               __end_of___lwdiv 2812  
                                                         _T2TMR 031C  
                                                         _U1UIR 02B1  
                                                         _T2RST 0321  
                                                         _U1RXB 02A1  
                                               __end_of___lwmod 2AFA  
                                                         i2l201 0FEA  
                                                         _U1TXB 02A3  
                                                         i2l211 367C  
                                                         i2l124 3500  
                                                         i2l205 31DA  
                                                         i2l118 355C  
                                                         i2l232 3670  
                                                         i2l241 34EA  
                                                         i2l235 3672  
                                                         i2l334 3666  
                                                         i2l270 2D5A  
                                                         i2l343 362E  
                                                         i2l247 3550  
                                                         i2l264 2462  
                                                         i2l337 365E  
                                                         i2l349 3662  
                                                         i2l701 29E4  
                                                         i2l622 23D8  
                                                         i2l703 29F2  
                                                         i2l641 2750  
                                                         i2l625 26CE  
                                                         i2l721 2A94  
                                                         i2l650 367A  
                                                         i2l643 279C  
                                                         i2l707 2A30  
                                                         i2l627 26DC  
                                                         i2l636 3676  
                                                         i2l629 2728  
                                                         i2l717 2A4A  
                                                         i2l653 265A  
                                                         i2l639 2742  
                                                         i2l727 3674  
                                                         i2l719 2A58  
                                                         i2l671 1796  
                                                         i2l655 2668  
                                                         i2l664 366E  
                                                         i2l657 26B4  
                                                         i2l906 365A  
                                                         i2l930 22B6  
                                                         i2l667 16CA  
                                                         i2l683 1EBC  
                                                         i2l940 25CC  
                                                         i2l909 3654  
                                                         i2l669 16D8  
                                                         i2l685 1ECA  
                                                         i2l925 2F9A  
                                                         i2l933 3636  
                                                         i2l686 1EE4  
                                                         i2l918 3542  
                                                         i2l687 1F58  
                                                         i2l793 1D10  
                                                         i2l785 1CA4  
                                                         i2l946 366A  
                                                         i2l787 1CC8  
                                                         i2l788 1D10  
                                                         i2l789 1CEC  
                                            ??_CheckOverCurrent 054D  
                                                         _OSCEN 00B3  
                                                         _UART1 7E5B  
                                        EEPROM_WriteUInt16@addr 0506  
                                                         _TMR0H 0319  
                                                         _TMR0L 0318  
                                          _UART1_IsTxReady$2738 05E6  
                                                         _TRISA 04C6  
                                                         _TRISB 04C7  
                                                         _TRISC 04C8  
                                        EEPROM_WriteUInt16@byte 050F  
                                     __end_of_projectInitialize 1296  
                    __end_of_UART1_FramingErrorCallbackRegister 3486  
                          ??_UART1_FramingErrorCallbackRegister 05E8  
                           ?_UART1_FramingErrorCallbackRegister 05E6  
                            _UART1_FramingErrorCallbackRegister 3468  
                                              __end_of_TMR2_ISR 2BB8  
            _PWM1_PHASE_A_Slice1Output1_DefaultInterruptHandler 0000  
                                                   ?_TMR0_Start 0501  
                                       __end_of_PIN_MANAGER_IOC 23DA  
                                                   ?_TMR2_Start 0501  
                                         ?_ADCC_StartConversion 0501  
                                      Menu_AdjustSpeed@increase 0518  
                                                         _putch 33CA  
                                                         _start 357C  
                                      _INT1_SetInterruptHandler 35F4  
                                                         pclath 04FA  
                                             ??_HandleEmergency 0521  
                                                         pclatu 04FB  
                                                         tablat 04F5  
                                                         plusw1 04E3  
                                                         plusw2 04DB  
                                      ??_Motor_UpdateSpeedLevel 0501  
                                                 _Menu_HandleUp 1AE0  
                                                         status 04D8  
                                                   ?_NVM_IsBusy 0501  
                                                 _lastGateState 05C1  
                                              EEPROM_Write@data 0504  
                                      __end_of_Menu_AdjustSpeed 234C  
                                               __initialization 2BB8  
                                             _MotorStopSampling 3516  
                                                   _systemState 055B  
                             __end_ofUART1_WriteHexDigit@F14450 7ED8  
                                                   i2findChar@i 0504  
                               DEBUG_PRINT_HEX@debug$F663@digit 0501  
                                          _UART1_TransmitEnable 0000  
                                                  __end_of_main 340C  
                               DEBUG_PRINT_INT@debug$F660@value 0501  
                                                  __end_of_stop 357C  
                                            ?_MotorStopSampling 0501  
                                         _BACK_InterruptHandler 05D4  
                                               _UART1_WriteUInt 20BA  
                                            _MotorStartSampling 3526  
                                       __end_of_TMR2_Initialize 3328  
                                   ?_INTERRUPT_InterruptManager 0501  
                                                  ?_UART1_Write 0501  
                                             __end_of_ENTER_ISR 2A96  
                                                        ??_main 05F7  
                                              __end_of_OpenGate 2DAA  
                                             ??i2_displayString 050E  
                                                        ??_stop 05E6  
                                        _ENTER_InterruptHandler 05CA  
                                                 __activetblptr 0002  
                                           ??_MotorStopSampling 0501  
                                           ?_MotorStartSampling 0501  
                                              _UART1_Initialize 28F6  
              UART1_ParityErrorCallbackRegister@callbackHandler 05E6  
             UART1_OverrunErrorCallbackRegister@callbackHandler 05E6  
             UART1_FramingErrorCallbackRegister@callbackHandler 05E6  
                                               ??_displayString 05F3  
                                                   ?i2_findChar 0501  
                                                        _ADACCH 03E4  
                                                        _ADACCL 03E3  
                                                        _ADACCU 03E5  
                                                        _ADACQH 03EF  
                                                        _ADACQL 03EE  
                                              __end_of_StopGate 3170  
                                                        _ADCON0 03F3  
                                                        _ADCON1 03F4  
                                                        _ADCON2 03F5  
                                                        _ADCON3 03F6  
                                                        _ADERRH 03DE  
                                                        _ADERRL 03DD  
                                                   i2_writeByte 2DAA  
                                                        _ADLTHH 03DA  
                                                        _ACTCON 00AC  
                                                        _ADLTHL 03D9  
                                                        _ADRESH 03EB  
                                                        _ADRESL 03EA  
                                                        _ADPREH 03F2  
                                                        _ADPREL 03F1  
                                             _closeFullDuration 0582  
                                                        _ADSTAT 03F7  
                                                        _ADUTHH 03DC  
                                                        _ADUTHL 03DB  
                                            i2displayString@pos 0510  
                                            i2displayString@str 050B  
                                                        _ANSELA 0400  
                                                        ?_putch 0501  
                                                        _ANSELB 0408  
                                                        _ANSELC 0410  
                                                        ?_start 0501  
                                                        _T0CON0 031A  
                                                        _T0CON1 031B  
                                                        _RB4I2C 0287  
                                                        _U1CON0 02AB  
                                                        _U1CON1 02AC  
                                                        _U1CON2 02AD  
                                                        _RB6I2C 0286  
                                                        _U1BRGH 02AF  
                                                        _U1FIFO 02B0  
                                                        _U1BRGL 02AE  
                                           i2UART1_Write@txData 0502  
                                                        _RB6PPS 020F  
                                                        _RB7PPS 0210  
                                                        _ODCONA 0402  
                                                        _ODCONB 040A  
                                                        _ODCONC 0412  
                                                        i2l1002 364E  
                                                        i2l1005 3648  
                                                        i2l1021 2BB6  
                                                        i2l1203 3210  
                                                        i2l1027 366C  
                                                        i2l1207 2166  
                                                        i2l1401 2898  
                                                        i2l1410 28F4  
                                                        i2l2043 15C4  
                                                        i2l1227 34A2  
                                                        i2l1404 289E  
                                                        i2l1420 3278  
                                                        i2l2300 03EE  
                                                        i2l2301 03DC  
                                                        i2l1510 13AE  
                                                        i2l1423 342A  
                                                        i2l1264 2214  
                                                        i2l1440 2ED4  
                                                        i2l1432 2C66  
                                                        i2l1417 2DA8  
                                                        i2l2401 0CE0  
                                                        i2l1177 33C6  
                                                        i2l1426 2ED2  
                                                        i2l2330 0AEC  
                                                        i2l1178 33C8  
                                                        i2l1522 1EA2  
                                                        i2l2307 0496  
                                                        i2l1451 3018  
                                                        i2l2244 2810  
                                                        i2l2340 0B50  
                                                        i2l2404 0E3C  
                                                        i2l1196 34BA  
                                                        i2l1444 2F18  
                                                        i2l1700 1C10  
                                                        i2l2237 2808  
                                                        i2l1437 316E  
                                                        i2l2341 0BA8  
                                                        i2l2333 0AB0  
                                                        i2l2421 322C  
                                                        i2l1197 34BE  
                                                        i2l1701 1C66  
                                                        i2l1461 32D2  
                                                        i2l1454 3534  
                                                        i2l2342 0B96  
                                                        i2l2254 2AF8  
                                                        i2l2430 3136  
                                                        i2l2415 0DD4  
                                                        i2l2247 2AF0  
                                                        i2l1447 2FDC  
                                                        i2l1552 2DAE  
                                                        i2l5000 29B4  
                                                        i2l2328 0C88  
                                                        i2l2360 0598  
                                                        i2l2408 0D78  
                                                        i2l2424 3244  
                                                        i2l1624 3678  
                                                        i2l1553 2DDA  
                                                        i2l1457 3524  
                                                        i2l5010 3626  
                                                        i2l1546 3624  
                                                        i2l1554 2DF4  
                                                        i2l5002 29B8  
                                                        i2l2274 0206  
                                                        i2l2370 07F2  
                                                        i2l1466 13DA  
                                                        i2l1555 2DF6  
                                                        i2l2291 0320  
                                                        i2l2283 04D2  
                                                        i2l2275 01F4  
                                                        i2l2339 0B32  
                                                        i2l1467 14BE  
                                                        i2l1483 1DE8  
                                                        i2l1715 1146  
                                                        i2l1723 1BA2  
                                                        i2l5012 362A  
                                                        i2l5004 29C0  
                                                        i2l5020 1874  
                                                        i2l5100 340C  
                                                        i2l2276 01BA  
                                                        i2l2364 08F8  
                                                        i2l1549 361A  
                                                        i2l1661 16B0  
                                                        i2l1493 2FDA  
                                                        i2l1397 2E8A  
                                                        i2l1733 1ADE  
                                                        i2l5014 3660  
                                                        i2l5006 29C6  
                                                        i2l5030 18FA  
                                                        i2l5022 187E  
                                                        i2l5102 2E8C  
                                                        i2l5110 314C  
                                                        i2l1583 1900  
                                                        i2l2367 078E  
                                                        i2l1743 2E42  
                                                        i2l1671 234A  
                                                        i2l1727 1BA2  
                                                        i2l5008 3664  
                                                        i2l5016 3656  
                                                        i2l1576 29CA  
                                                        i2l5032 18FE  
                                                        i2l5024 18BA  
                                                        i2l5040 364A  
                                                        i2l5120 3516  
                                                        i2l5112 314E  
                                                        i2l5104 3138  
                                                        i2l2288 03AE  
                                                        i2l6000 015A  
                                                        i2l2368 07AC  
                                                        i2l1680 20B8  
                                                        i2l5200 2D40  
                                                        i2l1664 24E0  
                                                        i2l1569 2884  
                                                        i2l2377 08BA  
                                                        i2l2369 0804  
                                                        i2l1737 1ADE  
                                                        i2l5018 3650  
                                                        i2l5026 18BE  
                                                        i2l5034 1906  
                                                        i2l5050 28B0  
                                                        i2l5042 3644  
                                                        i2l5122 3520  
                                                        i2l5114 315E  
                                                        i2l5106 3144  
                                                        i2l1498 13A4  
                                                        i2l5130 12A8  
                                                        i2l6010 01D4  
                                                        i2l6002 0186  
                                                        i2l5202 2D54  
                                                        i2l1587 1946  
                                                        i2l5036 1916  
                                                        i2l5028 18EA  
                                                        i2l5060 28D4  
                                                        i2l5052 28B4  
                                                        i2l5044 2888  
                                                        i2l5116 3526  
                                                        i2l5108 3148  
                                                        i2l5140 12E6  
                                                        i2l5132 12C6  
                                                        i2l6100 0494  
                                                        i2l6020 0214  
                                                        i2l6012 01D8  
                                                        i2l6004 01A2  
                                                        i2l5204 33A2  
                                                        i2l5124 34D6  
                                                        i2l5220 240C  
                                                        i2l5212 23DA  
                                                        i2l5062 28E4  
                                                        i2l5054 28B6  
                                                        i2l5046 28A0  
                                                        i2l5070 27C0  
                                                        i2l5118 3530  
                                                        i2l5038 365C  
                                                        i2l5150 130A  
                                                        i2l5142 12EA  
                                                        i2l5134 12D0  
                                                        i2l6110 04C0  
                                                        i2l6102 04A4  
                                                        i2l6030 0256  
                                                        i2l6022 0224  
                                                        i2l6014 01E6  
                                                        i2l6006 01B2  
                                                        i2l5206 33B4  
                                                        i2l5230 2456  
                                                        i2l5222 2436  
                                                        i2l5214 23EE  
                                                        i2l5056 28C8  
                                                        i2l5048 28AC  
                                                        i2l5080 27FA  
                                                        i2l5072 27C8  
                                                        i2l5064 279E  
                                                        i2l5152 130E  
                                                        i2l5136 12D4  
                                                        i2l5128 1296  
                                                        i2l6112 04C2  
                                                        i2l6104 04AA  
                                                        i2l6040 0284  
                                                        i2l6032 0264  
                                                        i2l6016 01E8  
                                                        i2l6008 01C8  
                                                        i2l6200 0AFC  
                                                        i2l6120 0914  
                                                        i2l5208 33C2  
                                                        i2l5240 2C12  
                                                        i2l5400 13C4  
                                                        i2l5232 2E44  
                                                        i2l5224 243E  
                                                        i2l5216 2408  
                                                        i2l1689 2008  
                                                        i2l5058 28D0  
                                                        i2l5082 27FC  
                                                        i2l5074 27D6  
                                                        i2l5066 27A6  
                                                        i2l5090 2D5C  
                                                        i2l5170 1342  
                                                        i2l5162 1328  
                                                        i2l5154 1318  
                                                        i2l5146 12F8  
                                                        i2l5138 12DE  
                                                        i2l6106 04AC  
                                                        i2l6050 02F0  
                                                        i2l6042 028E  
                                                        i2l6034 0270  
                                                        i2l6026 0238  
                                                        i2l6018 01F2  
                                                        i2l6202 0B12  
                                                        i2l6210 0B42  
                                                        i2l6130 0948  
                                                        i2l6122 0916  
                                                        i2l5250 2C46  
                                                        i2l5242 2C14  
                                                        i2l5410 1412  
                                                        i2l5402 13DE  
                                                        i2l5234 2E5C  
                                                        i2l5226 2446  
                                                        i2l5084 2802  
                                                        i2l5076 27DC  
                                                        i2l5068 27B8  
                                                        i2l5092 2D70  
                                                        i2l5164 132C  
                                                        i2l5156 1320  
                                                        i2l5148 12FC  
                                                        i2l6108 04B2  
                                                        i2l6052 0300  
                                                        i2l6036 0274  
                                                        i2l6028 0248  
                                                        i2l6044 0294  
                                                        i2l6220 0BC4  
                                                        i2l6212 0B60  
                                                        i2l6204 0B18  
                                                        i2l6140 0978  
                                                        i2l6124 0926  
                                                        i2l6132 094E  
                                                        i2l6116 08FA  
                                                        i2l6300 0604  
                                                        i2l5340 2AA8  
                                                        i2l5260 2EEA  
                                                        i2l5252 2C4A  
                                                        i2l5244 2C26  
                                                        i2l5420 144E  
                                                        i2l5404 13F0  
                                                        i2l5412 141A  
                                                        i2l5236 2E6E  
                                                        i2l5228 2448  
                                                        i2l7020 1CC0  
                                                        i2l7012 1C80  
                                                        i2l5078 27F2  
                                                        i2l5094 2D7C  
                                                        i2l5166 133A  
                                                        i2l6070 0382  
                                                        i2l6062 035A  
                                                        i2l6046 02BA  
                                                        i2l6054 0310  
                                                        i2l6038 0282  
                                                        i2l6230 0C30  
                                                        i2l6222 0BD2  
                                                        i2l6214 0B8E  
                                                        i2l6206 0B22  
                                                        i2l6150 09AC  
                                                        i2l6142 097A  
                                                        i2l6134 095E  
                                                        i2l6126 0936  
                                                        i2l6118 0906  
                                                        i2l6310 064E  
                                                        i2l6302 061C  
                                                        i2l5350 2AE4  
                                                        i2l5342 2AB0  
                                                        i2l5334 3100  
                                                        i2l5270 2F08  
                                                        i2l5262 2EEE  
                                                        i2l5254 2C4C  
                                                        i2l5246 2C2A  
                                                        i2l5430 148A  
                                                        i2l5414 142C  
                                                        i2l5422 1456  
                                                        i2l5406 1400  
                                                        i2l5238 2E72  
                                                        i2l5086 3544  
                                                        i2l5190 2D22  
                                                        i2l7022 1CD6  
                                                        i2l7014 1C8E  
                                                        i2l5096 2D84  
                                                        i2l5176 134A  
                                                        i2l6080 03BE  
                                                        i2l6072 038A  
                                                        i2l6064 0364  
                                                        i2l6056 0336  
                                                        i2l6048 02EE  
                                                        i2l6240 0C76  
                                                        i2l6232 0C4A  
                                                        i2l6224 0BFC  
                                                        i2l6208 0B30  
                                                        i2l6160 09F0  
                                                        i2l6144 098A  
                                                        i2l6152 09B2  
                                                        i2l6136 0964  
                                                        i2l6128 0946  
                                                        i2l6320 06A4  
                                                        i2l6312 065E  
                                                        i2l6304 0628  
                                                        i2l5352 2AEA  
                                                        i2l5344 2AB8  
                                                        i2l5336 3108  
                                                        i2l5280 2FF4  
                                                        i2l5272 2FDE  
                                                        i2l5264 2EF2  
                                                        i2l5504 1E60  
                                                        i2l5256 2C5C  
                                                        i2l5248 2C42  
                                                        i2l5440 14BC  
                                                        i2l5432 149A  
                                                        i2l5424 1466  
                                                        i2l5416 143C  
                                                        i2l5408 1410  
                                                        i2l5600 2068  
                                                        i2l5088 354E  
                                                        i2l5192 2D26  
                                                        i2l7024 1CE4  
                                                        i2l7016 1C9C  
                                                        _INLVLA 0404  
                                                        i2l5098 3246  
                                                        i2l5178 13A4  
                                                        i2l6090 0418  
                                                        i2l6082 03D4  
                                                        i2l6074 038E  
                                                        i2l6066 0372  
                                                        i2l6058 0346  
                                                        i2l6242 0C7C  
                                                        i2l6234 0C62  
                                                        i2l6218 0BB8  
                                                        i2l6226 0C00  
                                                        i2l6170 0A18  
                                                        i2l6162 09F4  
                                                        i2l6154 09C2  
                                                        i2l6146 099A  
                                                        i2l6138 096A  
                                                        i2l6330 0748  
                                                        i2l6322 06C0  
                                                        i2l6314 066A  
                                                        i2l6306 0634  
                                                        i2l6402 1550  
                                                        i2l5346 2AC6  
                                                        i2l5338 2A96  
                                                        i2l5354 34A6  
                                                        i2l5282 2FF8  
                                                        i2l5274 2FEA  
                                                        i2l5266 2EF4  
                                                        i2l5258 2ED6  
                                                        i2l5370 20BA  
                                                        i2l5434 149C  
                                                        i2l5426 1476  
                                                        i2l5418 144C  
                                                        i2l5450 1D76  
                                                        i2l5442 1D2A  
                                                        i2l5602 2070  
                                                        i2l5610 1F5C  
                                                        i2l5194 2D30  
                                                        i2l5186 2D0E  
                                                        i2l7026 1CFA  
                                                        i2l7018 1CB2  
                                                        _INLVLB 040C  
                                          Menu_AdjustTime@label 0512  
                                                        _INLVLC 0414  
                                                        i2l6092 0452  
                                                        i2l6076 039E  
                                                        i2l6068 0374  
                                                        i2l6244 0C7E  
                                                        i2l6236 0C64  
                                                        i2l6228 0C1A  
                                                        i2l6180 0A66  
                                                        i2l6156 09D8  
                                                        i2l6148 09AA  
                                                        i2l6340 079E  
                                                        i2l6332 0756  
                                                        i2l6324 06CC  
                                                        i2l6316 067A  
                                                        i2l6308 0642  
                                                        i2l6260 0500  
                                                        i2l6252 04D4  
                                                        i2l6420 15B4  
                                                        i2l6412 1578  
                                                        i2l6404 155A  
                                                        i2l5348 2ADC  
                                                        i2l5356 34A6  
                                                        i2l5540 15DC  
                                                        i2l5284 3008  
                                                        i2l5276 2FEE  
                                                        i2l5268 2EF8  
                                                        i2l5380 20FE  
                                                        i2l5372 20BC  
                                                        i2l5436 14A4  
                                                        i2l5428 1482  
                                                        i2l5452 1D88  
                                                        i2l5444 1D3E  
                                                        i2l5604 2082  
                                                        i2l5620 1FB8  
                                                        i2l5612 1F6C  
                                                        i2l5196 2D32  
                                                        i2l5188 2D16  
                                                        i2l7028 1D08  
                                                        i2l6086 03FE  
                                                        i2l6094 0454  
                                                        i2l6078 03A0  
                                                        i2l6238 0C68  
                                                        i2l6190 0AAE  
                                                        i2l6182 0A76  
                                                        i2l6174 0A2C  
                                                        i2l6158 09E8  
                                                        i2l6166 0A08  
                                                        i2l6350 0820  
                                                        i2l6342 07BC  
                                                        i2l6334 0774  
                                                        i2l6326 06E8  
                                                        i2l6318 0694  
                                                        i2l6270 053C  
                                                        i2l6262 0510  
                                                        i2l6254 04E0  
                                                        i2l6414 1584  
                                                        i2l6406 1564  
                                                        i2l6430 0CF0  
                                                        i2l5630 3488  
                                                        i2l5542 15F4  
                                                        i2l5278 2FF2  
                                                        i2l5390 2156  
                                                        i2l5382 2100  
                                                        i2l5374 20CE  
                                                        i2l5438 14AA  
                                                        i2l5470 1DDE  
                                                        i2l5454 1D8C  
                                                        i2l5462 1DAA  
                                                        i2l5446 1D54  
                                                        i2l5606 209C  
                                                        i2l5622 1FC0  
                                                        i2l5614 1F84  
                                                        i2l5710 1A50  
                                                        i2l5198 2D36  
                                                        i2l6510 3554  
                                                        i2l5640 34EC  
                                                        i2l6096 0464  
                                                        i2l6088 040A  
                                                        i2l6192 0ABA  
                                                        i2l6184 0A7C  
                                                        i2l6176 0A46  
                                                        i2l6168 0A18  
                                                        i2l6360 088A  
                                                        i2l6352 082E  
                                                        i2l6344 07EA  
                                                        i2l6336 077E  
                                                        i2l6328 0712  
                                                        i2l6280 0572  
                                                        i2l6272 0542  
                                                        i2l6264 0520  
                                                        i2l6256 04EE  
                                                        i2l6416 1594  
                                                        i2l6440 0D2E  
                                                        i2l6432 0D06  
                                                        i2l6424 0C8C  
                                                        i2l5632 3488  
                                                        i2l6520 0F4C  
                                                        i2l5544 160C  
                                                        i2l5552 1654  
                                                        i2l5480 1E1A  
                                                        i2l5384 211C  
                                                        i2l5800 1BEC  
                                                        i2l5392 32A8  
                                                        i2l5472 1DE2  
                                                        i2l5464 1DBA  
                                                        i2l5456 1D92  
                                                        i2l5448 1D66  
                                                        i2l5608 20AC  
                                                        i2l5624 1FD2  
                                                        i2l5616 1F90  
                                                        i2l5720 1AA4  
                                                        i2l5712 1A62  
                                                        i2l5704 1A18  
                                                        i2l6512 3558  
                                                        i2l6098 0474  
                                                        i2l6194 0AD8  
                                                        i2l6186 0A8C  
                                                        i2l6178 0A56  
                                                        i2l6370 08DC  
                                                        i2l6362 08A4  
                                                        i2l6354 0858  
                                                        i2l6338 078C  
                                                        i2l6282 0582  
                                                        i2l6274 0550  
                                                        i2l6266 0526  
                                                        i2l6258 04F0  
                                                        i2l6418 15A4  
                                                        i2l6450 0DB6  
                                                        i2l6442 0D60  
                                                        i2l6426 0C9C  
                                                        i2l5634 349C  
                                                        i2l5650 2170  
                                                        i2l6530 0FA0  
                                                        i2l6522 0F60  
                                                        i2l6514 0E3E  
                                                        i2l5546 1624  
                                                        i2l5554 16A0  
                                                        i2l5538 15C6  
                                                        i2l5730 2E0A  
                                                        i2l5490 1E48  
                                                        i2l5482 1E24  
                                                        i2l5386 212E  
                                                        i2l5378 20D8  
                                                        i2l5802 1BF4  
                                                        i2l5810 1C1E  
                                                        i2l5394 32BC  
                                                        i2l5474 1DE4  
                                                        i2l5466 1DCC  
                                                        i2l5458 1DA2  
                                                        i2l5570 22DC  
                                                        i2l5626 1FEC  
                                                        i2l5618 1FA0  
                                                        i2l5722 1AAE  
                                                        i2l5714 1A76  
                                                        i2l5706 1A28  
                                                        i2l5562 2464  
                                                        i2l6196 0ADA  
                                                        i2l6188 0AA0  
                                                        i2l6372 08DE  
                                                        i2l6364 08B4  
                                                        i2l6348 0814  
                                                        i2l6356 085C  
                                                        i2l6292 05CC  
                                                        i2l6284 0588  
                                                        i2l6276 0552  
                                                        i2l6268 0536  
                                                        i2l6380 14C0  
                                                        i2l6460 0E0C  
                                                        i2l6452 0DC4  
                                                        i2l6444 0D62  
                                                        i2l6436 0D1A  
                                                        i2l6428 0CAA  
                                                        i2l5644 3212  
                                                        i2l5660 21B6  
                                                        i2l5652 2182  
                                                        i2l6540 0FE2  
                                                        i2l6532 0FAC  
                                                        i2l6524 0F66  
                                                        i2l6516 0E4A  
                                                        i2l5548 163C  
                                                        i2l5740 2E32  
                                                        i2l5732 2E0E  
                                                        i2l5484 1E28  
                                                        i2l5476 1DEA  
                                                        i2l5388 2142  
                                                        i2l7340 1C34  
                                                        i2l5804 1C00  
                                                        i2l5812 1C62  
                                                        i2l5396 32CE  
                                                        i2l5468 1DDC  
                                                        i2l5580 230A  
                                                        i2l5572 22E2  
                                                        i2l5628 1FFC  
                                                        i2l5724 1AC0  
                                                        i2l5716 1A80  
                                                        i2l5708 1A48  
                                                        i2l5564 24DA  
                                                        i2l5820 0FF6  
                                                        i2l4934 361C  
                                                        i2l4950 2DCA  
                                                        i2l6198 0AEA  
                                                        i2l6366 08BE  
                                                        i2l6374 08E4  
                                                        i2l6358 0876  
                                                        i2l6294 05D8  
                                                        i2l6286 05A8  
                                                        i2l6278 0562  
                                                        i2l6390 1516  
                                                        i2l6382 14D6  
                                                        i2l6462 0E1C  
                                                        i2l6454 0DE2  
                                                        i2l6446 0D6E  
                                                        i2l6438 0D22  
                                                        i2l5646 3220  
                                                        i2l5662 21D2  
                                                        i2l6470 31DC  
                                                        i2l6542 0FE6  
                                                        i2l6534 0FB8  
                                                        i2l6526 0F82  
                                                        i2l6518 0EB4  
                                                        i2l5734 2E16  
                                                        i2l7342 1E74  
                                                        i2l5494 1E50  
                                                        i2l5486 1E36  
                                                        i2l5478 1DFC  
                                                        i2l5806 1C12  
                                                        i2l5398 13B0  
                                                        i2l5590 200C  
                                                        i2l5582 231C  
                                                        i2l5574 22F2  
                                                        i2l5566 22BA  
                                                        i2l5726 1AD4  
                                                        i2l5718 1A92  
                                                        i2l5830 102A  
                                                        i2l5822 0FFA  
                                                        i2l5750 1B0C  
                                                        i2l5742 1AE0  
                                                        i2l4936 3612  
                                                        i2l4952 2DF0  
                                                        i2l4944 2DC2  
                                                        i2l6376 08E8  
                                                        i2l6368 08CE  
                                                        i2l6296 05E2  
                                                        i2l6288 05B8  
                                                        i2l6392 1526  
                                                        i2l6464 0E2A  
                                                        i2l6456 0DE4  
                                                        i2l6448 0DAA  
                                                        i2l5664 21E8  
                                                        i2l5656 218C  
                                                        i2l5648 2168  
                                                        i2l6472 31E0  
                                                        i2l6536 0FD0  
                                                        i2l6528 0F94  
                                                        i2l7344 166A  
                                                        i2l5736 2E26  
                                                        i2l5728 2DF8  
                                                        i2l5488 1E3A  
                                                        i2l6800 29CC  
                                                        i2l5592 201C  
                                                        i2l5584 2324  
                                                        i2l5576 2304  
                                                        i2l5568 22CA  
                                                        i2l6720 26F6  
                                                        i2l7336 10EE  
                                                        i2l5840 10BE  
                                                        i2l5832 104E  
                                                        i2l5824 100A  
                                                        i2l5760 1B56  
                                                        i2l5744 1AF0  
                                                        i2l5752 1B14  
                                                        i2l4970 286A  
                                                        i2l4962 283C  
                                                        i2l4954 2814  
                                                        i2l4946 2DC6  
                                                        i2l4938 2DAC  
                                                        i2l7346 135E  
                                                        i2l5930 004A  
                                                        i2l5922 001E  
                                                        i2l6298 05F8  
                                                        i2l6394 152A  
                                                        i2l6386 14EA  
                                                        i2l6466 0E2C  
                                                        i2l6458 0DE8  
                                                        i2l5666 21FA  
                                                        i2l5658 21B2  
                                                        i2l6474 31F0  
                                                        i2l6538 0FDC  
                                                        i2l5738 2E2E  
                                                        i2l5498 1E58  
                                                        i2l5770 2F9C  
                                                        i2l6802 29F6  
                                                        i2l5594 2034  
                                                        i2l5586 2334  
                                                        i2l5578 2306  
                                                        i2l6722 26FA  
                                                        i2l6714 26B6  
                                                        i2l7338 1130  
                                                        i2l5842 10C0  
                                                        i2l5834 1072  
                                                        i2l5850 10DA  
                                                        i2l5826 101A  
                                                        i2l5818 0FEC  
                                                        i2l5762 1B68  
                                                        i2l5754 1B26  
                                                        i2l5746 1B02  
                                                        i2l4956 2824  
                                                        i2l4948 2DC8  
                                                        i2l5940 0082  
                                                        i2l5932 005A  
                                                        i2l5924 002A  
                                                        i2l6396 1538  
                                                        i2l6388 1514  
                                                        i2l6476 31F4  
                                                        i2l6732 276A  
                                                        i2l5780 2FCE  
                                                        i2l6812 2A24  
                                                        i2l6804 2A08  
                                                        i2l5596 2040  
                                                        i2l5588 233E  
                                                        i2l6724 270E  
                                                        i2l6716 26E0  
                                                        i2l5844 10D0  
                                                        i2l5836 1096  
                                                        i2l5828 1022  
                                                        i2l6820 2A62  
                                                        i2l5764 1B72  
                                                        i2l5756 1B3A  
                                                        i2l5748 1B0A  
                                                        i2l6740 266C  
                                                        i2l4974 2870  
                                                        i2l4958 2834  
                                                        i2l4990 2994  
                                                        i2l4982 2964  
                                                        i2l5950 00B0  
                                                        i2l5942 0088  
                                                        i2l5934 006A  
                                                        i2l5926 0038  
                                                        i2l6734 276E  
                                                        i2l6726 272A  
                                                        i2l5790 1BB4  
                                                        i2l5782 2FD6  
                                                        i2l5774 2FB2  
                                                        i2l6814 2A2C  
                                                        i2l6806 2A10  
                                                        i2l5598 2050  
                                                        i2l5846 10D4  
                                                        i2l5838 10BA  
                                                        i2l5854 111C  
                                                        i2l6822 2A66  
                                                        i2l6750 16B2  
                                                        i2l5766 1B84  
                                                        i2l5758 1B44  
                                                        i2l6910 2370  
                                                        i2l6830 2F5C  
                                                        i2l4976 2872  
                                                        i2l4968 2840  
                                                        i2l4992 29A4  
                                                        i2l4984 2964  
                                                        i2l5960 00E4  
                                                        i2l5952 00B2  
                                                        i2l5944 009A  
                                                        i2l5936 006C  
                                                        i2l5928 003A  
                                                        i2l6736 2782  
                                                        i2l6728 2754  
                                                        i2l5792 1BBC  
                                                        i2l5784 1BA4  
                                                        i2l5776 2FB6  
                                                        i2l6824 2A7A  
                                                        i2l6816 2A32  
                                                        i2l6760 1716  
                                                        i2l6752 16DC  
                                                        i2l5768 1B98  
                                                        i2l6744 2682  
                                                        i2l6920 239C  
                                                        i2l6912 2374  
                                                        i2l6904 234C  
                                                        i2l6832 2F6E  
                                                        i2l6840 222A  
                                                 i2putch@txData 0503  
                                                        i2l4978 2882  
                                                        i2l4994 29A6  
                                                        i2l4986 2980  
                                                        i2l5970 011E  
                                                        i2l5954 00C2  
                                                        i2l5962 00EA  
                                                        i2l5946 009C  
                                                        i2l5938 0072  
                                                        i2l5794 1BC8  
                                                        i2l5786 1BA8  
                                                        i2l6818 2A5C  
                                                        i2l6770 1758  
                                                        i2l6762 1728  
                                                        i2l6754 16EE  
                                                        i2l6746 2686  
                                                        i2l6738 2642  
                                                        i2l6930 23D4  
                                                        i2l6922 23AC  
                                                        i2l6914 2384  
                                                        i2l6906 235C  
                                                        i2l6834 2F8A  
                                                        i2l6850 227A  
                                                        i2l6842 223C  
                                                        i2l6826 3536  
                                                        i2l4996 29AA  
                                                        i2l5980 0132  
                                                        i2l5972 0122  
                                                        i2l5964 00FA  
                                                        i2l5956 00D2  
                                                        i2l5948 00A2  
                                                        i2l5796 1BD8  
                                                        i2l5788 1BB0  
                                                        i2l6772 176A  
                                                        i2l6764 1730  
                                                        i2l6780 1EA4  
                                                        i2l6748 269A  
                                                        i2l6924 23B0  
                                                        i2l6916 2388  
                                                        i2l6908 2360  
                                                        i2l6836 2F96  
                                                        i2l6852 228C  
                                                        i2l6844 2256  
                                                        i2l6828 353E  
                                                        i2l6940 2BA6  
                                                        i2l6932 2B5C  
                                                        i2l4998 29B0  
                                                        i2l5990 0146  
                                                        i2l5982 0136  
                                                        i2l5974 0126  
                                                        i2l5966 010C  
                                                        i2l5958 00E2  
                                                        i2l5798 1BE8  
                                                        i2l6774 177C  
                                                        i2l6766 1742  
                                                        i2l6758 1704  
                                                        i2l6790 1F1C  
                                                        i2l6782 1ECE  
                                                        i2l6926 23C0  
                                                        i2l6918 2398  
                                                        i2l6854 22A6  
                                                        i2l6846 2262  
                                                        i2l6838 2216  
                                                        i2l6950 2562  
                                                        i2l6942 2BB0  
                                                        i2l6934 2B5E  
                                                        i2l5992 014A  
                                                        i2l5984 013A  
                                                        i2l5976 012A  
                                                        i2l5968 011A  
                                                        i2l6880 31AC  
                                                        i2l6776 178C  
                                                        i2l6768 1754  
                                                        i2l6792 1F2E  
                                                        i2l6928 23C4  
                                                        i2l6856 22B2  
                                                        i2l6848 2266  
                                                        i2l6960 259E  
                                                        i2l6952 2566  
                                                        i2l6944 2558  
                                                        i2l6936 2B7A  
                                                        i2l5994 014E  
                                                        i2l5986 013E  
                                                        i2l5978 012E  
                                                        i2l6882 31C0  
                                                        i2l6778 1792  
                                                        i2l6794 1F38  
                                                        i2l6786 1EF2  
                                                        i2l6858 3630  
                                                        i2l6962 25B2  
                                                        i2l6954 2578  
                                                        i2l6946 255A  
                                                        i2l6938 2B8C  
                                                        i2l5996 0152  
                                                        i2l5988 0142  
                                                        i2l6876 31A6  
                                                        i2l6796 1F4A  
                                                        i2l6788 1F0A  
                                                        i2l6956 2588  
                                                        i2l6948 255E  
                                                        i2l5998 0156  
                                                        i2l6878 31A8  
                                                        i2l6798 1F54  
                                                        i2l6958 259A  
                                                ?_Menu_HandleUp 0501  
                                       __end_of_UART1_IsTxReady 3100  
                                                        _OSCFRQ 00B1  
                                                        _NVMADR 0043  
                                                     ??i2_putch 0503  
                                                     ??i2_start 0501  
                                    __end_of_NVM_UnlockSequence 3552  
                                              ?_NVM_StatusClear 0501  
                                                        _TRISC3 2643  
                                                        _TRISC4 2644  
                                                   INTSTAT_ADDR 00D7  
                                              __end_of___xxtofl 0E3E  
                                                        _UP_ISR 2642  
                                       EEPROM_WriteUInt16@value 0509  
                                    ??_ADCC_GetConversionResult 0503  
                                                        i2_stop 3612  
                                     __end_of_MotorStopSampling 3526  
                                          ??_MotorStartSampling 0501  
                                                     ??_SetGate 0518  
                                      ??_UP_SetInterruptHandler 05E8  
                                              __end_of_findChar 2558  
                                              ??_configOpenGate 0512  
                                                 displayChar@ch 05EE  
                                                        _Timer0 7EE4  
                                                        _Timer2 7ED8  
                            __end_of_DEBUG_PRINT_INT@debug$F660 3672  
                                    _DEBUG_PRINT_INT@debug$F660 3670  
                                          displayString@dotFlag 05F6  
                                                  ?_TMR0_Reload 0501  
                                             ??_Menu_AdjustTime 0512  
                         __end_of_ENTER_DefaultInterruptHandler 3676  
                                 _ENTER_DefaultInterruptHandler 3674  
                          __end_of_TMR2_DefaultOverflowCallback 366E  
                                  _TMR2_DefaultOverflowCallback 366C  
                                                     ??___fladd 0509  
                                             __end_of_TMR0_Stop 3656  
                                     ??_HandleMotorWhileRunning 0501  
                                                     ??___fldiv 0519  
                                             __end_of_TMR2_Stop 364A  
                                                     ??___flmul 0532  
                                     ??_HandleMotorWhileStopped 0501  
                                                     ??___fltol 0547  
                                                     ??___lwdiv 0505  
                                                     ??___lwmod 0505  
                                              ?_TMR0_Initialize 0501  
                                               _currentReadings 0590  
                                             ?_HandleConfigMode 0501  
                                                        clear_0 2BF0  
                                                        isa$std 0001  
                                             ?_CLOCK_Initialize 0501  
                                                        _strcpy 3100  
                                                     ?_ADCC_ISR 0501  
                                                 ?_OpenGateSlow 0501  
                                                     ?_BACK_ISR 0501  
                                            ??_HandleConfigMode 051B  
                                              __end_of_segments 7EB5  
                                               _ADCC_Initialize 2CBC  
                                  _INT2_DefaultInterruptHandler 0000  
                                                  __pdataCOMRAM 055D  
                                            ??_CLOCK_Initialize 05E6  
                                             ??_Menu_HandleBack 0519  
                                                  __mediumconst 7E5A  
                                             ??_Menu_HandleDown 0519  
                                              __end_of_printInt 2216  
                                                        tblptrh 04F7  
                                                        tblptrl 04F6  
                                                        tblptru 04F8  
                                         __end_of_CloseGateSlow 2ED4  
                    __end_of_UART1_OverrunErrorCallbackRegister 3468  
                          ??_UART1_OverrunErrorCallbackRegister 05E8  
                           ?_UART1_OverrunErrorCallbackRegister 05E6  
                            _UART1_OverrunErrorCallbackRegister 344A  
                                        ??_ADCC_StartConversion 0501  
                                  ??_BUTTON_SetInterruptHandler 05E8  
                                              i2displayChar@pos 0505  
                                Menu_AdjustOvercurrent@increase 0517  
                              __end_of_BACK_SetInterruptHandler 35EA  
                      INT2_SetInterruptHandler@InterruptHandler 05E6  
                      INT1_SetInterruptHandler@InterruptHandler 05E6  
                      INT0_SetInterruptHandler@InterruptHandler 05E6  
                     ENTER_SetInterruptHandler@InterruptHandler 05E6  
                    BUTTON_SetInterruptHandler@InterruptHandler 05E6  
                 PHOTOCELL_SetInterruptHandler@InterruptHandler 05E6  
                      GATE_SetInterruptHandler@InterruptHandler 05E6  
                        UP_SetInterruptHandler@InterruptHandler 05E6  
                      BACK_SetInterruptHandler@InterruptHandler 05E6  
                      DOWN_SetInterruptHandler@InterruptHandler 05E6  
       PWM1_PHASE_A_Period_SetInterruptHandler@InterruptHandler 05E6  
PWM1_PHASE_A_Slice1Output2_SetInterruptHandler@InterruptHandler 05E6  
PWM1_PHASE_A_Slice1Output1_SetInterruptHandler@InterruptHandler 05E6  
                   ADCC_SetADIInterruptHandler@InterruptHandler 05E6  
                                              ?_PIN_MANAGER_IOC 0501  
                                                     ?_GATE_ISR 0501  
                                     CheckOverCurrent@current_A 0551  
                                               setBrightness@br 05E8  
                                              ??_NVM_Initialize 05E6  
                                             _UART1_AutoBaudSet 0000  
                                                  ___xxtofl@arg 050B  
                                                  ___xxtofl@exp 050A  
                                             _SYSTEM_Initialize 32D4  
                                                  ___xxtofl@val 0501  
                            __end_of_UP_DefaultInterruptHandler 3670  
                                    _UP_DefaultInterruptHandler 366E  
                                                    __accesstop 0560  
                                       __end_of__initialization 2C08  
                                                     ?_DOWN_ISR 0501  
                                              _timeoutCloseFull 0594  
                      __end_of_PWM1_PHASE_A_LoadBufferRegisters 3664  
                            ??_PWM1_PHASE_A_LoadBufferRegisters 0501  
                             ?_PWM1_PHASE_A_LoadBufferRegisters 0501  
                              _PWM1_PHASE_A_LoadBufferRegisters 3660  
                                            ?_SYSTEM_Initialize 0501  
                                                 ___rparam_used 0001  
                                                    ___fltol@f1 0543  
                                                 __end_of_UART1 7E8B  
                                       __end_of_UART1_WriteUInt 2168  
                                                _lastConfigMode 05BD  
                                             __end_of_CloseGate 342C  
                                                __pcstackCOMRAM 0501  
                                                  __pidataBANK5 3328  
                                                  i2findChar@ch 0503  
                                           ??_SYSTEM_Initialize 05F7  
                                         _UART1_TransmitDisable 0000  
                                                     ?_TMR2_ISR 0501  
                                      ??_HandleAutoCloseTimeout 0521  
                                   __end_of_PWM1_PHASE_A_Enable 3668  
                                                  ??_BUTTON_ISR 0521  
                          __end_of_BACK_DefaultInterruptHandler 367C  
                                  _BACK_DefaultInterruptHandler 367A  
                                 ?_TMR2_DefaultOverflowCallback 0501  
                                                 __end_of_putch 33EC  
                                                 __end_of_start 3586  
                                              ?_TMR2_Initialize 0501  
                                              SetGate@direction 0518  
                                                ??_OpenGateSlow 0519  
                                                    ??_ADCC_ISR 055B  
                                                    ??_BACK_ISR 0519  
                                        _Menu_AdjustOvercurrent 200A  
                                               _menuOptionNames 059D  
                                           i2_UART1_WriteString 31DC  
                              __end_of_INT2_SetInterruptHandler 35F4  
                                     _UART1_FramingErrorHandler 056C  
                               ??_TMR2_OverflowCallbackRegister 05E8  
                                   ADCC_StartConversion@channel 0501  
                                         __end_of_EmergencyOpen 2C68  
                                      __end_of_TMR0_OverflowISR 25CE  
                                                    ??_GATE_ISR 0521  
                                     __end_of_SYSTEM_Initialize 32FE  
                                                 _currentOption 0592  
                                               ??_Menu_HandleUp 0519  
                                                       ??_putch 05E8  
                                                       ??_start 05E6  
                                                  _EEPROM_Write 2D0E  
                                                    __pbssBANK5 0560  
                                              SetGate@dutyCycle 0512  
                                         Menu_AdjustTime@F14581 05A7  
                                              ?_UART1_IsTxReady 0501  
                                             _Menu_SaveSettings 2464  
                                         _DOWN_InterruptHandler 05D6  
                                         _INT0_InterruptHandler 0580  
                                                    ??_DOWN_ISR 0519  
                                            __end_of_BUTTON_ISR 2A32  
                                         _TMR0_OverflowCallback 05C8  
                                                 ?i2_NVM_IsBusy 0501  
                                          ?i2_UART1_WriteString 0504  
                                                       ?_UP_ISR 0501  
                                             ?_HandleMotorState 0501  
                                                       ?i2_stop 0501  
                                            ?_Menu_SaveSettings 0501  
                                                     ?_OpenGate 0501  
                                                       IVTBASEH 045E  
                                                       IVTBASEL 045D  
                                                       IVTBASEU 045F  
                                            _UART1_Deinitialize 0000  
                                                 ?_MotorControl 0501  
                                            ??_HandleMotorState 051D  
                                    ??_GATE_SetInterruptHandler 05E8  
                                  ??_HandleFullSpeedTransitions 0521  
                                                    ??_TMR2_ISR 0502  
                                       __end_of_ADCC_Initialize 2D0E  
                                           ??_Menu_SaveSettings 0511  
                                                     ?_StopGate 0501  
                                                       _ADFLTRH 03E2  
                                                       _ADFLTRL 03E1  
                                                 i2_displayChar 2962  
                                                       _ADPREVH 03E9  
                                                       _ADPREVL 03E8  
                                                       _ADSTPTH 03E0  
                                                       _ADSTPTL 03DF  
                                 ?_BACK_DefaultInterruptHandler 0501  
                                             ??_configCloseGate 0512  
                                                 _OpenGate$2951 051B  
                                        _Motor_UpdateSpeedLevel 2E44  
                                                       ?_strcpy 0501  
                                                       _U1ERRIE 02B3  
                                                       _U1ERRIR 02B2  
                                               _HandleEmergency 32A8  
                                    ??_INT1_SetInterruptHandler 05E8  
                                                       _U1RXCHK 02A2  
                                                       _U1TXCHK 02A4  
                                                       _U1RXPPS 0272  
                                                     ?___xxtofl 0501  
                                                    _configFlag 059A  
                                                    _configDone 0599  
                                      ?_PWM1_PHASE_A_Initialize 0501  
                                                    _configMode 0597  
                                  Menu_AdjustOvercurrent@F14577 05AC  
                                                       _OSCCON1 00AD  
                                                       _OSCCON3 00AF  
                                      ??_HandleButtonMenuConfig 051D  
                                                       _OSCTUNE 00B0  
                                                       _PWM1CLK 0461  
                                                       _NVMDATL 0046  
                                                       _PWM1GIE 0468  
                                                       _PWM1CON 0469  
                                                       _PWM1GIR 0467  
                                                       _PWM1ERS 0460  
                                                       _PWM1LDS 0462  
                                                  ??_TMR0_Start 0501  
                                                     ?_findChar 0501  
                                                       _PWM1PRH 0464  
                                                       _PWM1PRL 0463  
                                                       _NVMLOCK 0042  
                                                       _SLRCONA 0403  
                                                       _SLRCONB 040B  
                                                       _SLRCONC 0413  
                                                  ??_TMR2_Start 0501  
                                            displayChar@dotFlag 05EB  
                                   __end_of_ADCC_DefaultADI_ISR 367E  
                                                _lastMotorState 0566  
                                     __end_of_Menu_SaveSettings 24E2  
                                               i2writeByte@data 0501  
                                                       i2_putch 3486  
                                                       i2_start 361C  
                          _PWM1_PHASE_A_Period_InterruptHandler 05D8  
                                                ??i2_NVM_IsBusy 0501  
                                      _BACK_SetInterruptHandler 35E0  
                                         ??i2_UART1_WriteString 0506  
                                                  ??_NVM_IsBusy 05E6  
                                         Menu_AdjustSpeed@label 0513  
                                              _buttonHoldTimeMs 0586  
                                     ?_INT0_SetInterruptHandler 05E6  
                                     ?_DOWN_SetInterruptHandler 05E6  
                                                    ??_OpenGate 0519  
                                                ??_MotorControl 0521  
                                                       _SetGate 2886  
                                                       __Hparam 0000  
                                              ?_UART1_WriteUInt 0508  
                                  ??_DEBUG_PRINT_HEX@debug$F663 0501  
                                               i2_displayString 1874  
                                                       __Lparam 0000  
                                      __end_of_UART1_Initialize 2962  
                                             ?_Menu_AdjustSpeed 0501  
                                                displayChar@pos 05EA  
                                                 _PHOTOCELL_ISR 1EA4  
                                                     ?_printInt 0508  
                                                       ___fladd 001E  
                                            ??_Menu_AdjustSpeed 0513  
                                                       ___fldiv 08FA  
                                                       ___flmul 04D4  
                                                       ___fltol 14C0  
                                                ?i2_displayChar 0505  
                                   Menu_AdjustOvercurrent@label 0512  
                                                       ___lwdiv 279E  
                                                       ___lwmod 2A96  
                                                    ??_StopGate 0512  
                                            __end_of_TMR0_Start 365C  
                                            __end_of_TMR2_Start 3650  
                                      ?_Menu_PrintCurrentOption 0501  
                                                       __pcinit 2BB8  
                                                       __ramtop 0E00  
                                                       __ptext0 33EC  
                                                       __ptext1 1148  
                                                       __ptext2 301A  
                                                       __ptext3 2F1A  
                                                       __ptext4 34C0  
                                                       __ptext5 3668  
                                                       __ptext6 3090  
                                                       __ptext7 33CA  
                                                       __ptext8 3352  
                                                       __ptext9 30C8  
                                         _Menu_HandleEnterPress 0FEC  
        __end_of_PWM1_PHASE_A_Slice1Output1_SetInterruptHandler 359A  
              ??_PWM1_PHASE_A_Slice1Output1_SetInterruptHandler 05E8  
               ?_PWM1_PHASE_A_Slice1Output1_SetInterruptHandler 05E6  
                _PWM1_PHASE_A_Slice1Output1_SetInterruptHandler 3590  
                                                     _T2CONbits 031E  
                                ??_TMR2_DefaultOverflowCallback 0501  
                                                    ??___xxtofl 0505  
                                        _UP_SetInterruptHandler 35A4  
                                            __end_of_NVM_IsBusy 34D6  
                                       _timerTMR0ReloadVal16bit 0576  
                            __end_of_BUTTON_SetInterruptHandler 35E0  
                                    _BUTTON_SetInterruptHandler 35D6  
                                     UART1_WriteHexDigit@F14450 7EC7  
                                      ??_PIN_MANAGER_Initialize 05E8  
                                                     _IOCAFbits 0407  
                                                     _T2HLTbits 031F  
                                                     _ENTER_ISR 2A32  
                                                     _IOCBFbits 040F  
                                                     _IOCCFbits 0417  
                                                  ??i2_findChar 0501  
                                                    ??_findChar 05E6  
                                                  ?i2_writeByte 0501  
                 TMR2_OverflowCallbackRegister@InterruptHandler 05E6  
                                          end_of_initialization 2C08  
                                         displayString@startPos 05F2  
            _PWM1_PHASE_A_Slice1Output2_DefaultInterruptHandler 0000  
                                                     _U1UIRbits 02B1  
                                                     _T2RSTbits 0321  
                                      _INT2_SetInterruptHandler 35EA  
                                               _Menu_AdjustTime 1F5A  
                                                     _PIR10bits 04BD  
                                                 ??_EEPROM_Read 05E9  
                                                _gateOpenFullMs 0574  
                                                 __Lmediumconst 7E5A  
                                          __end_of_OpenGateSlow 327A  
                                       Menu_AdjustTime@increase 0517  
                                             _TrackConfigTiming 3630  
                                                ?_PHOTOCELL_ISR 0501  
                                            ?_TrackConfigTiming 0501  
                                                    findChar@ch 05E8  
                                   ?_DEBUG_PRINT_INT@debug$F660 0501  
                                             i2displayChar@data 050A  
                                                    ??_printInt 050A  
                                                       postdec1 04E5  
                                                       postdec2 04DD  
                                                     _PWM1S1CFG 046A  
                                                     _PWM1S1P1H 046C  
                                                     _PWM1S1P2H 046E  
                                                     _PWM1S1P1L 046B  
                                                     _PWM1S1P2L 046D  
                                                       postinc0 04EE  
                                                       postinc2 04DE  
                                               _Menu_HandleBack 2DF8  
                                                    _motorState 055C  
                                       __end_of_HandleEmergency 32D4  
                                               _Menu_HandleDown 1A18  
                                                     _PWM1PIPOS 0466  
                                              ?_ADCC_Initialize 0501  
                                                    _speedLevel 05C5  
                                            __end_ofi2_findChar 2886  
                                            _NVM_UnlockSequence 3544  
                                             UART1_Write@txData 05E7  
                   _PWM1_PHASE_A_Slice1Output1_InterruptHandler 05DC  
                                                       strcpy@d 0505  
                                         _GATE_InterruptHandler 05D0  
                                           ??_TrackConfigTiming 0501  
                              _UART1_DefaultParityErrorCallback 0000  
                               __end_of_PWM1_PHASE_A_Initialize 2B5C  
                                                     _PORTAbits 04CE  
                                         _INT1_InterruptHandler 057E  
                                                     _TMR0_Stop 3650  
                                                     _PORTBbits 04CF  
                                                     _PORTCbits 04D0  
                                    CheckOverCurrent@current_mA 0557  
                                                     _TMR2_Stop 3644  
                                                 i2_UART1_Write 34A4  
                         __end_of_TMR0_OverflowCallbackRegister 3572  
                                 _TMR0_OverflowCallbackRegister 3568  
                                             __end_of_writeByte 2CBC  
                                                   ___fladd@grs 0510  
                                           ?_NVM_UnlockSequence 0501  
                                  _GATE_DefaultInterruptHandler 0000  
                               ??_PHOTOCELL_SetInterruptHandler 05E8  
                           __end_of_ADCC_SetADIInterruptHandler 3612  
                                   _ADCC_SetADIInterruptHandler 3608  
                                                 ___xxtofl@sign 0509  
                                                    ?_ENTER_ISR 0501  
                  TMR0_OverflowCallbackRegister@CallbackHandler 05E6  
                                       _BUTTON_InterruptHandler 05CC  
                                                   ___fldiv@grs 0524  
                                                   ___fldiv@rem 051D  
                                           _slowdownTimeOpen_ms 0564  
                                         __end_of_displayString 1874  
                                        _HandleAutoCloseTimeout 2F5C  
                                                   printInt@buf 050A  
                                       __end_ofi2_displayString 1948  
                                                   ___flmul@grs 0537  
                                     __end_of_TrackConfigTiming 3638  
                                 ??_ADCC_SetADIInterruptHandler 05E8  
                                   ?_UP_DefaultInterruptHandler 0501  
                                                 _setBrightness 327A  
                          __end_of_TMR0_DefaultOverflowCallback 366C  
                                  _TMR0_DefaultOverflowCallback 366A  
                                           _UP_InterruptHandler 05D2  
                                          ??_NVM_UnlockSequence 0501  
                                  ?_DEBUG_PRINT_INT@debug$F3089 0501  
                                  ?_DEBUG_PRINT_INT@debug$F2824 05E6  
                                                __end_of_UP_ISR 26B6  
                            __end_of_HandleFullSpeedTransitions 22B8  
                                    _HandleFullSpeedTransitions 2216  
                                                __end_ofi2_stop 361C  
                               __end_of_Menu_PrintCurrentOption 16B2  
                                               ??i2_displayChar 0507  
                                           __end_of_EEPROM_Read 2F5C  
                                                _motorIsRunning 058C  
                                                 ??_displayChar 05EC  
                                                __end_of_Timer0 7EF0  
                                                __end_of_Timer2 7EE4  
                                  __end_of_INTERRUPT_Initialize 3090  
                          __end_of_DOWN_DefaultInterruptHandler 3678  
                                  _DOWN_DefaultInterruptHandler 3676  
                                  _INT0_DefaultInterruptHandler 0000  
                                                     _CloseGate 340C  
                                       ?_Menu_AdjustOvercurrent 0501  
                                                 ??_TM1637_init 05F7  
                                             _TM1637_Brightness 0593  
                                        ?_Menu_HandleEnterPress 0501  
                                                 __pidataCOMRAM 367E  
                                                ?i2_UART1_Write 0501  
                                                    ?_TMR0_Stop 0501  
                                  __end_of_PWM1_PHASE_A_Disable 3660  
                                                    ?_TMR2_Stop 0501  
                                          __end_ofi2_NVM_IsBusy 34EC  
                                           CheckOverCurrent@adc 0555  
                                     ?_ADCC_GetConversionResult 0501  
                                                __end_of_strcpy 3138  
                                           start_initialization 2BB8  
                                          __end_of_MotorControl 2FDC  
                                       __end_of_Menu_AdjustTime 200A  
                                                   __end_of_abs 3246  
                          __end_ofMotor_UpdateSpeedLevel@F14403 7EC7  
                                  Motor_UpdateSpeedLevel@F14403 7EB5  
                                             ?_TMR0_OverflowISR 0501  
                                                   putch@txData 05E8  
                                                    ivt0x8_base 0008  
                                              _CheckOverCurrent 0E3E  
                                             SetGate@displayMsg 0516  
                                            ??_TMR0_OverflowISR 0521  
                                         EEPROM_ReadUInt16@addr 05E9  
                                                ?_setBrightness 0501  
                                         EEPROM_ReadUInt16@high 05EF  
                                               ??_PHOTOCELL_ISR 0521  
                                                      ??_UP_ISR 0519  
                                       __end_of_Menu_HandleBack 2E44  
                                             _UART1_WriteString 3090  
                            __end_of_DEBUG_PRINT_HEX@debug$F663 3674  
                                    _DEBUG_PRINT_HEX@debug$F663 3672  
                                       __end_of_Menu_HandleDown 1AE0  
                                                      ??i2_stop 0501  
                                      ?_HandleMotorWhileRunning 0501  
                                      ?_HandleMotorWhileStopped 0501  
                                               _configCloseGate 2FDC  
                                 ?_TMR0_DefaultOverflowCallback 0501  
                                            ?_UART1_WriteString 05E9  
                                        _HandleButtonMenuConfig 1BA4  
                                __end_of_Menu_AdjustOvercurrent 20BA  
                                       ?_Motor_UpdateSpeedLevel 0501  
                                              ?_HandleEmergency 0501  
                                                    ?_CloseGate 0501  
                                              _openFullDuration 0584  
                                                   __pdataBANK5 059D  
                                           ??_UART1_WriteString 05EB  
                                 ?_DOWN_DefaultInterruptHandler 0501  
                                               i2displayChar@ch 0509  
                                        i2UART1_WriteString@str 0504  
                                                      ??_strcpy 0505  
                                                     ___fladd@a 0505  
                                                     ___fladd@b 0501  
                                           __end_of_displayChar 2642  
                                                     ___fldiv@a 0515  
                                                     ___fldiv@b 0511  
                                                     ___flmul@a 052E  
                                                     ___flmul@b 052A  
                                                   __pbssCOMRAM 055B  
                                 Menu_PrintCurrentOption@F14568 05B6  
                                           __end_of_TM1637_init 33A2  
                              __end_of_INT0_SetInterruptHandler 3608  
                              __end_of_DOWN_SetInterruptHandler 35D6  
                                                   ??_ENTER_ISR 051B  
                                                 __pcstackBANK5 05E0  
                                    ??_BACK_SetInterruptHandler 05E8  
                                       i2displayString@startPos 050D  
                                    __end_of_EEPROM_WriteUInt16 2464  
                                ?_TMR0_OverflowCallbackRegister 05E6  
                         __end_of_PHOTOCELL_SetInterruptHandler 35B8  
                                 _PHOTOCELL_SetInterruptHandler 35AE  
                   _PWM1_PHASE_A_Slice1Output2_InterruptHandler 05DA  
                                         __end_of_Menu_HandleUp 1BA4  
                                               _timeoutOpenFull 0595  
                                     __end_of_UART1_WriteString 30C8  
                                              ?i2_displayString 050B  
                                                      ?i2_putch 0501  
                                                      ?i2_start 0501  
                                         _INT2_InterruptHandler 057C  
                                                   _EEPROM_Read 2F1A  
                                         _TMR2_OverflowCallback 05C6  
                                                     __pnvBANK5 05C6  
                                                      ?_SetGate 0512  
                                              ___lwdiv@dividend 0501  
                                        _PIN_MANAGER_Initialize 1948  
                                __end_of_Motor_UpdateSpeedLevel 2E8C  
                                             ?_UART1_Initialize 0501  
               __end_of_PWM1_PHASE_A_Period_SetInterruptHandler 35A4  
                     ??_PWM1_PHASE_A_Period_SetInterruptHandler 05E8  
                      ?_PWM1_PHASE_A_Period_SetInterruptHandler 05E6  
                       _PWM1_PHASE_A_Period_SetInterruptHandler 359A  
                                                 __pmediumconst 7E5A  
                                                     _gateState 055D  
                                                      ?___fladd 0501  
                                                  i2writeByte@i 0502  
                                                      ?___fldiv 0511  
                                                     __ptext100 31DC  
                                                     __ptext101 2168  
                                                     __ptext110 08FA  
                                                     __ptext102 3486  
                                                     __ptext111 001E  
                                                     __ptext103 34A4  
                                                     __ptext120 364A  
                                                     __ptext112 1296  
                                                     __ptext104 33A2  
                                                     __ptext121 2E8C  
                                                     __ptext113 3138  
                                                     __ptext105 2A96  
                                                     __ptext130 2812  
                                                     __ptext122 279E  
                                                     __ptext114 365C  
                                                     __ptext106 3212  
                                                     __ptext131 3650  
                                                     __ptext123 340C  
                                                     __ptext115 3246  
                                                     __ptext107 0C8A  
                                                     __ptext132 3656  
                                                     __ptext124 2886  
                                                     __ptext116 2D5C  
                                                     __ptext108 14C0  
                                                     __ptext133 3626  
                                                     __ptext125 1874  
                                                     __ptext117 3516  
                                                     __ptext109 04D4  
                                                     __ptext134 3660  
                                                     __ptext126 2962  
                                                     __ptext118 3644  
                                                     __ptext135 3664  
                                                     __ptext127 2DAA  
                                                     __ptext119 3526  
                                                     __ptext136 34EC  
                                                     __ptext128 3612  
                                                     __ptext137 367C  
                                                     __ptext129 361C  
                                                      ?___flmul 052A  
                                                      ?___fltol 0543  
                                                      ?___lwdiv 0501  
                                            ??_UART1_Initialize 05E8  
                                                      ?___lwmod 0501  
                                               ??i2_UART1_Write 0502  
                                         UART1_WriteUInt@buffer 050A  
                                              _uart1RxLastError 056E  
                                                 ??_UART1_Write 05E7  
                                  ??_INTERRUPT_InterruptManager 05E0  
                                                   ??_TMR0_Stop 0501  
                                       ?_UP_SetInterruptHandler 05E6  
                                                   ??_TMR2_Stop 0501  
                                                      _ADCC_ISR 31A6  
                                                      _BACK_ISR 272A  
                                                  _OpenGateSlow 3246  
                                        i2_UART1_IsTxReady$2738 0501  
                                             ??_NVM_StatusClear 05E6  
                                             SetGate@timerStart 0514  
                                    ??_INT2_SetInterruptHandler 05E8  
                                   ?_BUTTON_SetInterruptHandler 05E6  
                                              ?_Menu_AdjustTime 0501  
                                     ?_GATE_SetInterruptHandler 05E6  
                                    ?_ENTER_SetInterruptHandler 05E6  
                                                 _CloseGateSlow 2E8C  
                                              ___lwdiv@quotient 0505  
                                   __end_ofi2_UART1_WriteString 3212  
                                                      _GATE_ISR 16B2  
                                                      _T2CLKCON 0320  
                                                   _U1ERRIRbits 02B2  
                                               ??_setBrightness 05E8  
                                              _HandleConfigMode 1DEA  
                                          _INTERRUPT_Initialize 3056  
                                       __end_of_configCloseGate 301A  
                               __end_of_HandleMotorWhileRunning 14C0  
                               __end_of_HandleMotorWhileStopped 1DEA  
                                              _CLOCK_Initialize 3502  
                                             ??_TMR0_Initialize 05E8  
                                                      _DOWN_ISR 26B6  
                                                      _LATCbits 04C0  
                                          _PWM1_PHASE_A_Disable 365C  
                                     ?_INT1_SetInterruptHandler 05E6  
                                                      _PIE0bits 04A8  
                                                      _PIE1bits 04A9  
                                              ?_Menu_HandleBack 0501  
                                                      _PIE3bits 04AB  
                                                      _PIE4bits 04AC  
                                              ?_Menu_HandleDown 0501  
                                               _gateCloseFullMs 0572  
                                        Menu_AdjustSpeed@F14573 05B1  
                                                      i2u400_40 20CE  
                                                      i2u400_41 20CA  
                                                      i2u401_40 212E  
                                                      i2u401_41 212A  
                                                      i2u402_40 213E  
                                                      i2u410_40 1410  
                                                      i2u402_41 213A  
                                                      i2u410_41 140C  
                                                      i2u403_40 2166  
                                                      i2u411_40 142C  
                                                      i2u403_41 2162  
                                                      i2u411_41 1428  
                                                      i2u500_40 0214  
                                                      i2u404_40 32BC  
                                                      i2u412_40 143C  
                                                      i2u420_40 1D66  
                                                      i2u500_41 0210  
                                                      i2u404_41 32B8  
                                                      i2u412_41 1438  
                                                      i2u420_41 1D62  
                                                      i2u501_40 0224  
                                                      i2u405_40 32CE  
                                                      i2u413_40 144C  
                                                      i2u421_40 1D76  
                                                      i2u501_41 0220  
                                                      i2u405_41 32CA  
                                                      i2u413_41 1448  
                                                      i2u421_41 1D72  
                                                      i2u510_40 0382  
                                                      i2u502_40 0256  
                                                      i2u414_40 1466  
                                                      i2u406_40 13C4  
                                                      i2u422_40 1D88  
                                                      i2u510_41 037E  
                                                      i2u502_41 0252  
                                                      i2u414_41 1462  
                                                      i2u406_41 13C0  
                                                      i2u422_41 1D84  
                                                      i2u350_45 2DC2  
                                                      i2u351_40 2DDA  
                                                      i2u511_40 039E  
                                                      i2u503_40 0264  
                                                      i2u415_40 1476  
                                                      i2u407_40 13D6  
                                                      i2u423_40 1DA2  
                                                      i2u351_41 2DD6  
                                                      i2u511_41 039A  
                                                      i2u503_41 0260  
                                                      i2u431_41 15D0  
                                                      i2u415_41 1472  
                                                      i2u407_41 13D2  
                                                      i2u423_41 1D9E  
                                                      _PIR0bits 04B3  
                                                      i2u352_40 2DF0  
                                                      i2u360_40 18BA  
                                                      i2u520_40 0474  
                                                      i2u512_40 03AE  
                                                      i2u504_40 0282  
                                                      i2u416_40 149A  
                                                      i2u408_40 13F0  
                                                      i2u424_40 1DBA  
                                                      i2u440_40 2068  
                                                      i2u432_40 22CA  
                                                      i2u600_40 16EE  
                                                      i2u352_41 2DEC  
                                                      i2u360_41 18B6  
                                                      i2u520_41 0470  
                                                      i2u512_41 03AA  
                                                      i2u504_41 027E  
                                                      i2u416_41 1496  
                                                      i2u408_41 13EC  
                                                      i2u424_41 1DB6  
                                                      i2u440_41 2064  
                                                      i2u432_41 22C6  
                                                      i2u600_41 16EA  
                                                      i2u353_40 2824  
                                                      i2u361_40 18E6  
                                                      i2u521_40 0494  
                                                      i2u513_40 03BE  
                                                      i2u505_40 02BA  
                                                      i2u417_40 14BC  
                                                      i2u409_40 1400  
                                                      i2u425_40 1DCC  
                                                      i2u433_40 22DC  
                                                      i2u601_40 1700  
                                                      i2u353_41 2820  
                                                      i2u521_41 0490  
                                                      i2u513_41 03BA  
                                                      i2u505_41 02B6  
                                                      i2u417_41 14B8  
                                                      i2u409_41 13FC  
                                                      i2u425_41 1DC8  
                                                      i2u441_41 207A  
                                                      i2u433_41 22D8  
                                                      i2u601_41 16FC  
                                                      _PIR1bits 04B4  
                                                      i2u361_47 18DC  
                                                      i2u354_40 2834  
                                                      i2u362_40 18FA  
                                                      i2u370_40 27F2  
                                                      i2u522_40 04A4  
                                                      i2u514_40 03D4  
                                                      i2u506_40 0300  
                                                      i2u530_40 09D8  
                                                      i2u450_40 21E4  
                                                      i2u426_40 1DDC  
                                                      i2u418_40 1D3E  
                                                      i2u434_40 22F2  
                                                      i2u442_40 1F6C  
                                                      i2u602_40 1716  
                                                      i2u610_40 1EF2  
                                                      i2u354_41 2830  
                                                      i2u362_41 18F6  
                                                      i2u370_41 27EE  
                                                      i2u522_41 04A0  
                                                      i2u514_41 03D0  
                                                      i2u506_41 02FC  
                                                      i2u530_41 09D4  
                                                      i2u450_41 21E0  
                                                      i2u426_41 1DD8  
                                                      i2u418_41 1D3A  
                                                      i2u434_41 22EE  
                                                      i2u442_41 1F68  
                                                      i2u602_41 1712  
                                                      i2u610_41 1EEE  
                                                      i2u355_40 286A  
                                                      i2u363_40 1916  
                                                      i2u371_40 2D70  
                                                      i2u523_40 04C0  
                                                      i2u515_40 03EA  
                                                      i2u507_40 0336  
                                                      i2u531_40 0A18  
                                                      i2u451_40 2214  
                                                      i2u427_40 1DFC  
                                                      i2u419_40 1D50  
                                                      i2u435_40 2304  
                                                      i2u443_40 1F84  
                                                      i2u603_40 1728  
                                                      i2u611_40 1F1C  
                                                      i2u355_41 2866  
                                                      i2u363_41 1912  
                                                      i2u371_41 2D6C  
                                                      i2u523_41 04BC  
                                                      i2u515_41 03E6  
                                                      i2u507_41 0332  
                                                      i2u531_41 0A14  
                                                      i2u451_41 2210  
                                                      i2u427_41 1DF8  
                                                      i2u419_41 1D4C  
                                                      i2u435_41 2300  
                                                      i2u443_41 1F80  
                                                      i2u603_41 1724  
                                                      i2u611_41 1F18  
                                                      _PIR2bits 04B5  
                                                      i2u356_40 2882  
                                                      i2u364_40 1936  
                                                      i2u516_40 03FE  
                                                      i2u508_40 0346  
                                                      i2u540_40 0B8E  
                                                      i2u532_40 0A8C  
                                                      i2u524_40 0914  
                                                      i2u428_40 1E1A  
                                                      i2u444_40 1FA0  
                                                      i2u460_40 1AD4  
                                                      i2u372_40 34E8  
                                                      i2u380_40 2456  
                                                      i2u604_40 1742  
                                                      i2u612_40 1F2E  
                                                      i2u620_40 2F6E  
                                                      i2u356_41 287E  
                                                      i2u516_41 03FA  
                                                      i2u508_41 0342  
                                                      i2u540_41 0B8A  
                                                      i2u532_41 0A88  
                                                      i2u524_41 0910  
                                                      i2u428_41 1E16  
                                                      i2u436_41 2314  
                                                      i2u444_41 1F9C  
                                                      i2u460_41 1AD0  
                                                      i2u372_41 34E2  
                                                      i2u380_41 2452  
                                                      i2u604_41 173E  
                                                      i2u612_41 1F2A  
                                                      i2u620_41 2F6A  
                                                      i2u372_46 34EA  
                                                      i2u364_47 192C  
                                                      i2u700_47 2734  
                                                      i2u349_40 2DC0  
                                                      i2u357_40 2990  
                                                      i2u365_40 1946  
                                                      i2u373_40 12A8  
                                                      i2u517_40 0418  
                                                      i2u509_40 0372  
                                                      i2u541_40 0BA4  
                                                      i2u533_40 0AAE  
                                                      i2u525_40 0926  
                                                      i2u461_40 2E0A  
                                                      i2u437_40 201C  
                                                      i2u381_40 2E52  
                                                      i2u445_40 1FB8  
                                                      i2u605_40 1754  
                                                      i2u613_40 1F4A  
                                                      i2u621_40 2F8A  
                                                      i2u349_41 2DBA  
                                                      i2u357_41 298C  
                                                      i2u365_41 1942  
                                                      i2u373_41 12A4  
                                                      i2u517_41 0414  
                                                      i2u509_41 036E  
                                                      i2u541_41 0BA0  
                                                      i2u533_41 0AAA  
                                                      i2u525_41 0922  
                                                      i2u461_41 2E06  
                                                      i2u437_41 2018  
                                                      i2u445_41 1FB4  
                                                      i2u605_41 1750  
                                                      i2u613_41 1F46  
                                                      i2u621_41 2F86  
                                                      _PIR3bits 04B6  
                                                      i2u358_40 29A4  
                                                      i2u366_40 2898  
                                                      i2u374_40 12C6  
                                                      i2u518_40 0452  
                                                      i2u542_40 0BB8  
                                                      i2u534_40 0AD8  
                                                      i2u526_40 0936  
                                                      i2u550_40 0550  
                                                      i2u630_40 31C0  
                                                      i2u462_40 2E26  
                                                      i2u614_40 29F2  
                                                      i2u438_40 2034  
                                                      i2u382_40 2E6E  
                                                      i2u454_40 1A28  
                                                      i2u606_40 176A  
                                                      i2u470_40 1B98  
                                                      i2u622_40 222A  
                                                      i2u358_41 29A0  
                                                      i2u366_41 2894  
                                                      i2u374_41 12C2  
                                                      i2u518_41 044E  
                                                      i2u542_41 0BB4  
                                                      i2u534_41 0AD4  
                                                      i2u526_41 0932  
                                                      i2u550_41 054C  
                                                      i2u630_41 31BC  
                                                      i2u462_41 2E22  
                                                      i2u614_41 29EE  
                                                      i2u438_41 2030  
                                                      i2u382_41 2E6A  
                                                      i2u446_41 1FCA  
                                                      i2u454_41 1A24  
                                                      i2u606_41 1766  
                                                      i2u470_41 1B94  
                                                      i2u622_41 2226  
                                                      i2u359_40 18AA  
                                                      i2u367_40 28C8  
                                                      i2u519_40 0464  
                                                      i2u543_40 0BD2  
                                                      i2u535_40 0AFC  
                                                      i2u527_40 0978  
                                                      i2u551_40 0562  
                                                      i2u447_40 349C  
                                                      i2u383_40 2C5C  
                                                      i2u471_40 2FAE  
                                                      i2u615_40 2A08  
                                                      i2u439_40 2050  
                                                      i2u455_40 1A62  
                                                      i2u607_40 177C  
                                                      i2u463_40 1AF0  
                                                      i2u623_40 223C  
                                                      i2u367_41 28C4  
                                                      i2u519_41 0460  
                                                      i2u543_41 0BCE  
                                                      i2u535_41 0AF8  
                                                      i2u527_41 0974  
                                                      i2u551_41 055E  
                                                      i2u447_41 3498  
                                                      i2u383_41 2C58  
                                                      i2u471_41 2FAA  
                                                      i2u615_41 2A04  
                                                      i2u439_41 204C  
                                                      i2u455_41 1A5E  
                                                      i2u607_41 1778  
                                                      i2u463_41 1AEC  
                                                      i2u623_41 2238  
                                                      _PIR4bits 04B7  
                                                      i2u375_45 2D3E  
                                                      i2u375_46 2D40  
                                                      i2u359_47 18A0  
                                                      i2u368_40 27B8  
                                                      i2u544_40 0C1A  
                                                      i2u536_40 0B12  
                                                      i2u528_40 098A  
                                                      i2u560_40 0800  
                                                      i2u552_40 0572  
                                                      i2u448_40 3220  
                                                      i2u631_48 31C6  
                                                      i2u392_40 3136  
                                                      i2u472_40 2FCA  
                                                      i2u616_40 2A20  
                                                      i2u456_40 1A76  
                                                      i2u376_40 2D54  
                                                      i2u608_40 1ECA  
                                                      i2u464_40 1B02  
                                                      i2u632_40 235C  
                                                      i2u624_40 2256  
                                                      i2u640_40 2B8C  
                                                      i2u368_41 27B4  
                                                      i2u544_41 0C16  
                                                      i2u536_41 0B0E  
                                                      i2u528_41 0986  
                                                      i2u560_41 07FC  
                                                      i2u552_41 056E  
                                                      i2u448_41 321C  
                                                      i2u631_49 31DA  
                                                      i2u392_41 3132  
                                                      i2u472_41 2FC6  
                                                      i2u616_41 2A1C  
                                                      i2u456_41 1A72  
                                                      i2u376_41 2D50  
                                                      i2u608_41 1EC6  
                                                      i2u464_41 1AFE  
                                                      i2u632_41 2358  
                                                      i2u624_41 2252  
                                                      i2u640_41 2B88  
                                                      i2u369_40 27D6  
                                                      i2u545_40 0C4A  
                                                      i2u537_40 0B30  
                                                      i2u529_40 099A  
                                                      i2u561_40 0814  
                                                      i2u553_40 05A8  
                                                      i2u393_40 2AA8  
                                                      i2u377_40 33B4  
                                                      i2u449_40 2182  
                                                      i2u457_40 1A92  
                                                      i2u617_40 2A58  
                                                      i2u609_40 1EE0  
                                                      i2u465_40 1B26  
                                                      i2u633_40 2370  
                                                      i2u625_40 227A  
                                                      i2u369_41 27D2  
                                                      i2u545_41 0C46  
                                                      i2u537_41 0B2C  
                                                      i2u529_41 0996  
                                                      i2u561_41 0810  
                                                      i2u553_41 05A4  
                                                      i2u393_41 2AA4  
                                                      i2u377_41 33B0  
                                                      i2u449_41 217E  
                                                      i2u457_41 1A8E  
                                                      i2u617_41 2A54  
                                                      i2u609_41 1EDC  
                                                      i2u465_41 1B22  
                                                      i2u633_41 236C  
                                                      i2u625_41 2276  
                                                      i2u490_40 00C2  
                                                      i2u546_40 0C76  
                                                      i2u538_40 0B50  
                                                      i2u562_40 082E  
                                                      i2u554_40 05B8  
                                                      i2u570_40 1574  
                                                      i2u394_40 2AC6  
                                                      i2u378_40 33C2  
                                                      i2u458_40 1AA4  
                                                      i2u618_40 2A7A  
                                                      i2u466_40 1B3A  
                                                      i2u634_40 2384  
                                                      i2u626_40 228C  
                                                      i2u642_40 2578  
                                                      i2u641_48 2B92  
                                                      i2u490_41 00BE  
                                                      i2u546_41 0C72  
                                                      i2u538_41 0B4C  
                                                      i2u562_41 082A  
                                                      i2u554_41 05B4  
                                                      i2u570_41 1570  
                                                      i2u394_41 2AC2  
                                                      i2u378_41 33BE  
                                                      i2u458_41 1AA0  
                                                      i2u618_41 2A76  
                                                      i2u466_41 1B36  
                                                      i2u634_41 2380  
                                                      i2u626_41 2288  
                                                      i2u642_41 2574  
                                                      i2u641_49 2BA6  
                                                      i2u491_40 00D2  
                                                      i2u539_40 0B60  
                                                      i2u563_40 0876  
                                                      i2u555_40 0732  
                                                      i2u547_40 04EE  
                                                      i2u571_40 1594  
                                                      i2u395_40 2ADC  
                                                      i2u459_40 1AC0  
                                                      i2u379_40 242C  
                                                      i2u467_40 1B56  
                                                      i2u635_40 2398  
                                                      i2u627_40 22A6  
                                                      i2u643_40 2588  
                                                      i2u491_41 00CE  
                                                      i2u539_41 0B5C  
                                                      i2u563_41 0872  
                                                      i2u547_41 04EA  
                                                      i2u571_41 1590  
                                                      i2u395_41 2AD8  
                                                      i2u459_41 1ABC  
                                                      i2u467_41 1B52  
                                                      i2u635_41 2394  
                                                      i2u627_41 22A2  
                                                      i2u643_41 2584  
                                                      _PIR6bits 04B9  
                                                      i2u555_45 0728  
                                                      i2u379_45 2424  
                                                      i2u492_40 010C  
                                                      i2u564_40 08A4  
                                                      i2u556_40 078C  
                                                      i2u548_40 0500  
                                                      i2u572_40 15A4  
                                                      i2u580_40 0DE2  
                                                      i2u396_40 34BA  
                                                      i2u619_48 2A80  
                                                      i2u468_40 1B68  
                                                      i2u636_40 23AC  
                                                      i2u644_40 259A  
                                                      i2u492_41 0108  
                                                      i2u564_41 08A0  
                                                      i2u556_41 0788  
                                                      i2u548_41 04FC  
                                                      i2u572_41 15A0  
                                                      i2u580_41 0DDE  
                                                      i2u396_41 34B6  
                                                      i2u619_49 2A94  
                                                      i2u468_41 1B64  
                                                      i2u636_41 23A8  
                                                      i2u644_41 2596  
                                                      i2u493_40 011A  
                                                      i2u485_40 0038  
                                                      i2u565_40 08DC  
                                                      i2u557_40 07AC  
                                                      i2u549_40 0510  
                                                      i2u581_40 0E1C  
                                                      i2u573_40 0C9C  
                                                      i2u469_40 1B84  
                                                      i2u637_40 23C0  
                                                      i2u645_40 25B2  
                                                      i2u493_41 0116  
                                                      i2u485_41 0034  
                                                      i2u565_41 08D8  
                                                      i2u557_41 07A8  
                                                      i2u549_41 050C  
                                                      i2u581_41 0E18  
                                                      i2u573_41 0C98  
                                                      i2u469_41 1B80  
                                                      i2u637_41 23BC  
                                                      i2u645_41 25AE  
                                                      i2u494_40 0186  
                                                      i2u486_40 004A  
                                                      i2u558_40 07BC  
                                                      i2u566_40 14D6  
                                                      i2u582_40 0E2A  
                                                      i2u574_40 0CAA  
                                                      i2u638_40 23D4  
                                                      i2u662_40 1C8E  
                                                      i2u494_41 0182  
                                                      i2u486_41 0046  
                                                      i2u558_41 07B8  
                                                      i2u566_41 14D2  
                                                      i2u582_41 0E26  
                                                      i2u574_41 0CA6  
                                                      i2u638_41 23D0  
                                                      i2u662_41 1C8A  
                                                      i2u495_40 019E  
                                                      i2u487_40 005A  
                                                      i2u559_40 07EA  
                                                      i2u567_40 150A  
                                                      i2u575_40 0D06  
                                                      i2u583_40 3210  
                                                      i2u591_40 2750  
                                                      i2u590_48 2714  
                                                      i2u646_48 25B8  
                                                      i2u639_40 2B7A  
                                                      i2u663_40 1C9C  
                                                      i2u495_41 0198  
                                                      i2u487_41 0056  
                                                      i2u559_41 07E6  
                                                      i2u575_41 0D02  
                                                      i2u583_41 320C  
                                                      i2u591_41 274C  
                                                      i2u590_49 2728  
                                                      i2u646_49 25CC  
                                                      i2u639_41 2B76  
                                                      i2u663_41 1C98  
                                                      i2u567_45 1500  
                                                      i2u496_40 01A0  
                                                      i2u488_40 009A  
                                                      i2u568_40 1538  
                                                      i2u576_40 0D5C  
                                                      i2u584_40 0F82  
                                                      i2u592_40 2766  
                                                      i2u664_40 1CB2  
                                                      i2u488_41 0096  
                                                      i2u568_41 1534  
                                                      i2u576_41 0D58  
                                                      i2u584_41 0F7E  
                                                      i2u592_41 2762  
                                                      i2u664_41 1CAE  
                                                      i2u497_40 01C8  
                                                      i2u489_40 00B0  
                                                      i2u569_40 154C  
                                                      i2u577_40 0DA6  
                                                      i2u585_40 0F94  
                                                      i2u593_40 2782  
                                                      i2u665_40 1CC0  
                                                      i2u497_41 01C4  
                                                      i2u489_41 00AC  
                                                      i2u569_41 1548  
                                                      i2u577_41 0DA2  
                                                      i2u585_41 0F90  
                                                      i2u593_41 277E  
                                                      i2u665_41 1CBC  
                                                      i2u498_40 01E6  
                                                      i2u578_40 0DC4  
                                                      i2u586_40 0FD0  
                                                      i2u666_40 1CD6  
                                                      i2u498_41 01E2  
                                                      i2u578_41 0DC0  
                                                      i2u586_41 0FCC  
                                                      i2u666_41 1CD2  
                                                 ??_TMR0_Reload 0501  
                                                      i2u499_40 0206  
                                                      i2u579_40 0DD4  
                                                      i2u594_48 2788  
                                                      i2u587_40 26DC  
                                                      i2u595_40 2668  
                                                      i2u667_40 1CE4  
                                                      i2u499_41 0202  
                                                      i2u579_41 0DD0  
                                                      i2u594_49 279C  
                                                      i2u587_41 26D8  
                                                      i2u595_41 2664  
                                                      i2u667_41 1CE0  
                                                      i2u588_40 26F2  
                                                      i2u596_40 267E  
                                                      i2u668_40 1CFA  
                                                      i2u588_41 26EE  
                                                      i2u596_41 267A  
                                                      i2u668_41 1CF6  
                                                      i2u692_47 264C  
                                                      i2u589_40 270E  
                                                      i2u597_40 269A  
                                                      i2u669_40 1D08  
                                                      i2u589_41 270A  
                                                      i2u597_41 2696  
                                                      i2u669_41 1D04  
                                                      i2u693_47 1EAE  
                                                      i2u694_47 1EFC  
                                                      i2u599_40 16D8  
                                                      i2u598_48 26A0  
                                                     findChar@i 05E9  
                                                      i2u599_41 16D4  
                                                      i2u598_49 26B4  
                                                      i2u695_47 16BC  
                                                      i2u696_47 2A3C  
                                                      i2u697_47 26C0  
                                                      i2u698_47 29D6  
                                                      i2u699_47 2C34  
                                                     _timer0_ms 057A  
                                                      _PWM1CPRE 0465  
        __end_of_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister 3630  
              ??_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister 0503  
               ?_PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister 0501  
                _PWM1_PHASE_A_SetSlice1Output1DutyCycleRegister 3626  
                                              UART1_WriteUInt@i 0510  
                                                      _TMR2_ISR 2B5C  
                                             i2_UART1_IsTxReady 33A2  
                                                   _displayChar 25CE  
                                                     _pwmPeriod 05BF  
                                                   ??_CloseGate 0519  
                                             ??_PIN_MANAGER_IOC 0523  
                                ??_TMR0_DefaultOverflowCallback 0501  
                                __end_of_UP_SetInterruptHandler 35AE  
                                           EEPROM_Read@DFM_ADDR 05E6  
                                                   _TM1637_init 337A  
                                            ?i2_UART1_IsTxReady 0501  
                                                    _ADCON0bits 03F3  
                                                    _ADCON1bits 03F4  
                                                    _ADCON2bits 03F5  
                                                    _ADCON3bits 03F6  
        __end_of_PWM1_PHASE_A_Slice1Output2_SetInterruptHandler 3590  
              ??_PWM1_PHASE_A_Slice1Output2_SetInterruptHandler 05E8  
               ?_PWM1_PHASE_A_Slice1Output2_SetInterruptHandler 05E6  
                _PWM1_PHASE_A_Slice1Output2_SetInterruptHandler 3586  
                                ?_ENTER_DefaultInterruptHandler 0501  
                                       ?_HandleAutoCloseTimeout 0501  
                                ??_DOWN_DefaultInterruptHandler 0501  
                                           ??i2_UART1_IsTxReady 0501  
                                           __end_of_UART1_Write 337A  
                                                ?_CloseGateSlow 0501  
                             __end_of_ENTER_SetInterruptHandler 35CC  
                                                     _writeByte 2C68  
                                          i2displayChar@dotFlag 0506  
                                                   _INTCON0bits 04D6  
                                                     copy_data0 2BCC  
                                         ?_INTERRUPT_Initialize 0501  
                                                 _EmergencyOpen 2C12  
                                      _INT0_SetInterruptHandler 35FE  
                                      _DOWN_SetInterruptHandler 35CC  
                                             ??_TMR2_Initialize 05E8  
                                         ?_PWM1_PHASE_A_Disable 0501  
                                                  i2_NVM_IsBusy 34D6  
                                ?_PHOTOCELL_SetInterruptHandler 05E6  
                                                      _OpenGate 2D5C  
                                          EEPROM_ReadUInt16@low 05EE  
                                                    _ADSTATbits 03F7  
                                               displayChar@data 05EF  
                                                      __Hrparam 0000  
                              __end_of_ADCC_GetConversionResult 3502  
                                        i2displayString@dotFlag 0511  
                                     __end_ofi2_UART1_IsTxReady 33CA  
                                                  _MotorControl 2F9C  
                                   ?_HandleFullSpeedTransitions 0501  
                                                      __Lrparam 0000  
                              DEBUG_PRINT_INT@debug$F3089@value 0501  
                                       ??_Menu_HandleEnterPress 0519  
                              DEBUG_PRINT_INT@debug$F2824@value 05E6  
                                               _overcurrentFlag 059C  
                                                      _StopGate 3138  
                             _PHOTOCELL_DefaultInterruptHandler 0000  
                                      __end_of_CheckOverCurrent 0FEC  
                             Menu_PrintCurrentOption@shortLabel 0514  
                                                _configOpenGate 2ED4  
                                           __end_of_TMR0_Reload 3544  
                                              _HandleMotorState 1296  
                                             ??_UART1_IsTxReady 05E6  
                                                _timeoutToClose 0596  
                                           _TMR0_PeriodCountSet 0000  
                                                      _allChars 05BB  
                                __end_of_HandleAutoCloseTimeout 2F9C  
                                              displayString@pos 05F5  
                                              displayString@str 05F0  
                                             _EEPROM_ReadUInt16 301A  
                             _UART1_DefaultFramingErrorCallback 0000  
                                                      ___xxtofl 0C8A  
                                                    _T0CON0bits 031A  
                                                      __pivt0x8 0008  
                                               ___lwdiv@divisor 0503  
                                            ?_EEPROM_ReadUInt16 05E9  
                                               ___lwdiv@counter 0507  
                                                      _findChar 24E2  
                                                      __ptext10 32D4  
                                                      __ptext11 28F6  
                                                      __ptext20 327A  
                                                      __ptext12 342C  
                                                      __ptext21 1798  
                                                      __ptext13 344A  
                                                      __ptext30 359A  
                                                      __ptext22 25CE  
                                                      __ptext14 3468  
                                                      __ptext31 1948  
                                                      __ptext23 2C68  
                                                      __ptext15 32FE  
                                                      __ptext40 363E  
                                                      __ptext32 35A4  
                                                      __ptext24 3572  
                                                      __ptext16 355E  
                                                      __ptext41 3056  
                                                      __ptext33 35AE  
                                                      __ptext25 357C  
                                                      __ptext17 3170  
                                                      __ptext50 3552  
                                                      __ptext42 35EA  
                                                      __ptext34 35B8  
                                                      __ptext26 24E2  
                                                      __ptext18 3568  
                                                      __ptext51 2558  
                                                      __ptext43 35F4  
                                                      __ptext35 35C2  
                                                      __ptext27 2AFA  
                                                      __ptext19 337A  
                                                      __ptext60 366E  
                                                      __ptext52 3630  
                                                      __ptext44 35FE  
                                                      __ptext36 35CC  
                                                      __ptext28 3586  
                                                      __ptext61 1AE0  
                                                      __ptext53 366A  
                                                      __ptext45 3502  
                                                      __ptext37 35D6  
                                                      __ptext29 3590  
                                                      __ptext70 3544  
                                                      __ptext62 1EA4  
                                                      __ptext54 366C  
                                                      __ptext46 2CBC  
                                                      __ptext38 35E0  
                                                      __ptext71 3670  
                                                      __ptext63 16B2  
                                                      __ptext55 3536  
                                                      __ptext47 3608  
                                                      __ptext39 3638  
                                                      __ptext80 3676  
                                                      __ptext72 3672  
                                                      __ptext64 2A32  
                                                      __ptext56 2216  
                                                      __ptext48 1C68  
                                                      __ptext81 29CC  
                                                      __ptext73 3674  
                                                      __ptext65 0FEC  
                                                      __ptext57 2F5C  
                                                      __ptext49 2B5C  
                                                      __ptext90 2ED4  
                                                      __ptext82 2F9C  
                                                      __ptext74 26B6  
                                                      __ptext66 2464  
                                                      __ptext58 234C  
                                                      __ptext91 2FDC  
                                                      __ptext83 1D2A  
                                                      __ptext75 1A18  
                                                      __ptext67 23DA  
                                                      __ptext59 2642  
                                                      __ptext92 3678  
                                                      __ptext84 13B0  
                                                      __ptext76 1F5A  
                                                      __ptext68 2D0E  
                                                      __ptext93 272A  
                                                      __ptext85 32A8  
                                                      __ptext77 22B8  
                                                      __ptext69 34D6  
                                                      __ptext94 2DF8  
                                                      __ptext86 2C12  
                                                      __ptext78 2E44  
                                                      __ptext95 15C6  
                                                      __ptext87 1BA4  
                                                      __ptext79 200A  
                                                      __ptext96 3100  
                                                      __ptext88 20BA  
                                                      __ptext97 367A  
                                                      __ptext89 1DEA  
                                                      __ptext98 31A6  
                                                      __ptext99 0E3E  
                                                    ?_writeByte 0501  
                                                ?_EmergencyOpen 0501  
                                                    _U1CON0bits 02AB  
                                                    _U1CON1bits 02AC  
                                                 ?_EEPROM_Write 0501  
                                          UART1_WriteUInt@value 0508  
                                                    _U1FIFObits 02B0  
                                                    strcpy@dest 0501  
                                              ?_configCloseGate 0501  
                                           ??_EEPROM_ReadUInt16 05EC  
                                       _PWM1_PHASE_A_Initialize 2AFA  
                                    __end_of_MotorStartSampling 3536  
                                                      _menuMode 059B  
                                       ?_HandleButtonMenuConfig 0501  
                         __end_of_TMR2_OverflowCallbackRegister 3568  
                                 _TMR2_OverflowCallbackRegister 355E  
                                   ?_DEBUG_PRINT_HEX@debug$F663 0501  
                                           _PWM1_PHASE_A_Enable 3664  
                                                      _segments 7E8B  
                                                      _timeAuto 0578  
                                     _UART1_OverrunErrorHandler 056A  
                                     _ADCC_ADI_InterruptHandler 05DE  
                                                _NVM_Initialize 3638  
                                                      isa$xinst 0000  
                                                    writeByte@i 05E7  
                                                      _printInt 2168  
                                  __end_of_ADCC_StartConversion 355E  
                                          EEPROM_Write@DFM_ADDR 0501  
                                         __end_ofi2_displayChar 29CC  
                                                     printInt@i 0514  
                                        __end_of_configOpenGate 2F1A  
                            __end_of_INTERRUPT_InterruptManager 1D2A  
                                    _INTERRUPT_InterruptManager 1C68  
                                                    _BUTTON_ISR 29CC  
                                                   _UART1_Write 3352  
                                  _INT1_DefaultInterruptHandler 0000  
                                     __end_of_EEPROM_ReadUInt16 3056  
                                               ??_CloseGateSlow 0519  
                                          ?_PWM1_PHASE_A_Enable 0501  
                                              _Menu_AdjustSpeed 22B8  
                                                   _PWM1GIEbits 0468  
                                                   _PWM1CONbits 0469  
                                                   _NVMCON0bits 0040  
                                                   _NVMCON1bits 0041  
                                                   _PWM1GIRbits 0467  
                                             ??_UART1_WriteUInt 050A  
                                        ??_INTERRUPT_Initialize 05E8  
                                       _Menu_PrintCurrentOption 15C6  
                                           _TMR2_PeriodCountSet 0000  
                                                ??_EEPROM_Write 0505  
                                ??_BACK_DefaultInterruptHandler 0501  
                                               _gateOpenTimerMs 0588  
                                                      intlevel2 0000  
                                       CheckOverCurrent@current 0559  
                                        ??_PWM1_PHASE_A_Disable 0501  
                                __end_of_HandleButtonMenuConfig 1C68  
                                              ___lwmod@dividend 0501  
                                                  ?_EEPROM_Read 05E6  
                                       ?_PIN_MANAGER_Initialize 0501  
                                                     strcpy@src 0503  
                                        __end_of_NVM_Initialize 363E  
                                       CheckOverCurrent@voltage 054D  
                                         __end_of_PHOTOCELL_ISR 1F5A  
                                            _EEPROM_WriteUInt16 23DA  
                                    _PHOTOCELL_InterruptHandler 05CE  
                                               _NVM_StatusClear 363E  
                               ??_TMR0_OverflowCallbackRegister 05E8  
                                                   _TMR0_Reload 3536  
                              __end_of_GATE_SetInterruptHandler 35C2  
                                                    _UART1_Read 0000  
                                                 _emergencyFlag 058A  
                                              _timer0Elapsed_ms 0560  
                                      _ADCC_GetConversionResult 34EC  
                                      __end_of_HandleConfigMode 1EA4  
                                               ?_configOpenGate 0501  
                                           ?_EEPROM_WriteUInt16 0506  
                                      __end_of_CLOCK_Initialize 3516  
                                         ??_PWM1_PHASE_A_Enable 0501  
                                           _ADCC_DefaultADI_ISR 367C  
                                               ___lwmod@divisor 0503  
                                         TMR2_ISR@CountCallBack 0570  
                                               _TMR0_Initialize 3170  
                                                 writeByte@data 05E6  
                                               ___lwmod@counter 0505  
                              __end_of_INT1_SetInterruptHandler 35FE  
                             _UART1_DefaultOverrunErrorCallback 0000  
                                               ??_EmergencyOpen 051F  
                                             _buttonPressedFlag 0598  
                                   ??_ENTER_SetInterruptHandler 05E8  
                                                 ??i2_writeByte 0501  
                                                    _TMR0_Start 3656  
                                                   ??_writeByte 05E6  
                                                    _TMR2_Start 364A  
                                                 ___fladd@signs 050D  
                                     ??_PWM1_PHASE_A_Initialize 05E8  
                                          _overcurrentThreshold 05C3  
                                                 _displayString 1798  
                                          ??_EEPROM_WriteUInt16 050B  
                           EEPROM_Write@globalInterruptBitValue 0505  
                                __end_of_PIN_MANAGER_Initialize 1A18  
                                             ??_ADCC_Initialize 05E8  
                                _BUTTON_DefaultInterruptHandler 0000  
                                                  ___fladd@aexp 050E  
                                                  ___fladd@bexp 050F  
                     __end_of_UART1_ParityErrorCallbackRegister 344A  
                           ??_UART1_ParityErrorCallbackRegister 05E8  
                            ?_UART1_ParityErrorCallbackRegister 05E6  
                             _UART1_ParityErrorCallbackRegister 342C  
                                               _PIN_MANAGER_IOC 234C  
                                                    _NVM_IsBusy 34C0  
                                          _slowdownTimeClose_ms 0562  
                                           _UART1_AutoBaudQuery 0000  
                           __end_of_DEBUG_PRINT_INT@debug$F3089 367A  
                                   _DEBUG_PRINT_INT@debug$F3089 3678  
                           __end_of_DEBUG_PRINT_INT@debug$F2824 366A  
                                   _DEBUG_PRINT_INT@debug$F2824 3668  
                                          ?_ADCC_DefaultADI_ISR 0501  
                                               ?_NVM_Initialize 0501  
                                     ?_BACK_SetInterruptHandler 05E6  
